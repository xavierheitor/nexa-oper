/// =========================
/// Enums
/// =========================
enum ModoRepeticao {
  CICLO_DIAS
  SEMANA_DEPENDENTE
}

enum DiaSemana {
  SEGUNDA
  TERCA
  QUARTA
  QUINTA
  SEXTA
  SABADO
  DOMINGO
}

// Mantém TRABALHO/FOLGA/FALTA para uso em máscaras/padrões se quiser
enum StatusTrabalho {
  TRABALHO
  FOLGA
  FALTA
}

enum StatusEscalaEquipePeriodo {
  RASCUNHO
  EM_APROVACAO
  PUBLICADA
  ARQUIVADA
}

// Estado efetivo do slot (histórico do eletricista)
enum EstadoSlot {
  TRABALHO
  FOLGA
  FALTA
  EXCECAO
}

enum OrigemAtribuicao {
  GERACAO
  MANUAL
  REMANEJAMENTO
}

// Pode permanecer mesmo não sendo usado diretamente agora
enum StatusAtribuicaoPlanejada {
  ATIVO
  REMOVIDO
}

enum TipoIndisponibilidade {
  FERIAS
  LICENCA
  SUSPENSAO
  MEDICO
  TREINAMENTO
  OUTRO
}

enum EventoCoberturaTipo {
  FALTA
  SUPRIMENTO
  TROCA
}

enum EventoCoberturaResultado {
  COBERTO
  VAGA_DESCOBERTA
}

/// =========================
/// Catálogos / Regras
/// =========================

/// =========================
/// Catálogo de Tipos de Escala (sem "papel")
/// =========================
model TipoEscala {
  id   Int    @id @default(autoincrement())
  nome String @db.VarChar(255)

  // Define padrão (sem horário)
  modoRepeticao        ModoRepeticao
  cicloDias            Int? // se CICLO_DIAS
  periodicidadeSemanas Int? // se SEMANA_DEPENDENTE

  // Regra simples de composição diária (ex.: 4x2 → 3; Espanhola → 2)
  eletricistasPorTurma Int?

  ativo       Boolean @default(true)
  observacoes String? @db.VarChar(1000)

  createdAt DateTime  @default(now())
  createdBy String    @db.VarChar(255)
  updatedAt DateTime? @updatedAt
  updatedBy String?   @db.VarChar(255)
  deletedAt DateTime?
  deletedBy String?   @db.VarChar(255)

  // Padrões de T/F
  CicloPosicoes  TipoEscalaCicloPosicao[]
  SemanaMascaras TipoEscalaSemanaMascara[]

  // Uso
  EscalasEquipePeriodo EscalaEquipePeriodo[]
}

model TipoEscalaCicloPosicao {
  id           Int        @id @default(autoincrement())
  tipoEscalaId Int
  tipoEscala   TipoEscala @relation(fields: [tipoEscalaId], references: [id])

  posicao Int
  status  StatusTrabalho

  createdAt DateTime  @default(now())
  createdBy String    @db.VarChar(255)
  updatedAt DateTime? @updatedAt
  updatedBy String?   @db.VarChar(255)
  deletedAt DateTime?
  deletedBy String?   @db.VarChar(255)

  @@unique([tipoEscalaId, posicao])
}

model TipoEscalaSemanaMascara {
  id           Int        @id @default(autoincrement())
  tipoEscalaId Int
  tipoEscala   TipoEscala @relation(fields: [tipoEscalaId], references: [id])

  semanaIndex Int // 0..(periodicidadeSemanas-1)
  dia         DiaSemana
  status      StatusTrabalho

  createdAt DateTime  @default(now())
  createdBy String    @db.VarChar(255)
  updatedAt DateTime? @updatedAt
  updatedBy String?   @db.VarChar(255)
  deletedAt DateTime?
  deletedBy String?   @db.VarChar(255)

  @@unique([tipoEscalaId, semanaIndex, dia])
}

/// =========================
/// Configuração da Equipe por Período
/// =========================
model EscalaEquipePeriodo {
  id Int @id @default(autoincrement())

  equipeId Int
  equipe   Equipe @relation(fields: [equipeId], references: [id])

  periodoInicio DateTime
  periodoFim    DateTime

  tipoEscalaId Int
  tipoEscala   TipoEscala @relation(fields: [tipoEscalaId], references: [id])

  status StatusEscalaEquipePeriodo @default(RASCUNHO)
  versao Int                       @default(1)

  observacoes String? @db.VarChar(1000)

  createdAt DateTime  @default(now())
  createdBy String    @db.VarChar(255)
  updatedAt DateTime? @updatedAt
  updatedBy String?   @db.VarChar(255)
  deletedAt DateTime?
  deletedBy String?   @db.VarChar(255)

  Slots SlotEscala[]

  @@index([equipeId, periodoInicio])
  @@index([tipoEscalaId])
}

/// =========================
/// Slot = (dia + eletricista) com estado
/// =========================
model SlotEscala {
  id Int @id @default(autoincrement())

  escalaEquipePeriodoId Int
  escalaEquipePeriodo   EscalaEquipePeriodo @relation(fields: [escalaEquipePeriodoId], references: [id])

  eletricistaId Int
  eletricista   Eletricista @relation(fields: [eletricistaId], references: [id])

  data   DateTime
  estado EstadoSlot

  // Horários previstos herdados da vigência da equipe (se TRABALHO)
  inicioPrevisto String? @db.VarChar(8) // "HH:MM:SS"
  fimPrevisto    String? @db.VarChar(8) // "HH:MM:SS"

  anotacoesDia String? @db.VarChar(1000)

  origem          OrigemAtribuicao @default(GERACAO)
  observacoes     String?          @db.VarChar(1000)

  createdAt DateTime  @default(now())
  createdBy String    @db.VarChar(255)
  updatedAt DateTime? @updatedAt
  updatedBy String?   @db.VarChar(255)
  deletedAt DateTime?
  deletedBy String?   @db.VarChar(255)

  Coberturas  EventoCobertura[]

  // Um slot por (período, dia, eletricista)
  @@unique([escalaEquipePeriodoId, data, eletricistaId])
  @@index([data])
  @@index([eletricistaId, data])
}

/// =========================
/// Evento de cobertura (liga-se ao slot planejado)
/// =========================
model EventoCobertura {
  id Int @id @default(autoincrement())

  slotEscalaId Int
  slotEscala   SlotEscala @relation(fields: [slotEscalaId], references: [id])

  // Quem cobriu (pode ser alguém da mesma equipe ou outra)
  eletricistaCobrindoId Int?
  eletricistaCobrindo   Eletricista? @relation(fields: [eletricistaCobrindoId], references: [id])

  tipo          EventoCoberturaTipo
  resultado     EventoCoberturaResultado
  justificativa String? @db.VarChar(1000)

  registradoEm DateTime @default(now())

  createdAt DateTime  @default(now())
  createdBy String    @db.VarChar(255)
  updatedAt DateTime? @updatedAt
  updatedBy String?   @db.VarChar(255)
  deletedAt DateTime?
  deletedBy String?   @db.VarChar(255)

  @@index([slotEscalaId])
  @@index([eletricistaCobrindoId])
}

/// =========================
/// Horários por vigência da equipe
/// =========================
model EquipeHorarioVigencia {
  id Int @id @default(autoincrement())

  equipeId Int
  equipe   Equipe @relation(fields: [equipeId], references: [id])

  inicioTurnoHora String  @db.VarChar(8) // "HH:MM:SS"
  duracaoHoras    Decimal @db.Decimal(5, 2) // ex.: 8.00, 12.00

  vigenciaInicio DateTime
  vigenciaFim    DateTime?

  createdAt DateTime  @default(now())
  createdBy String    @db.VarChar(255)
  updatedAt DateTime? @updatedAt
  updatedBy String?   @db.VarChar(255)
  deletedAt DateTime?
  deletedBy String?   @db.VarChar(255)

  @@index([equipeId, vigenciaInicio])
}
