
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AprScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.AprPerguntaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.AprPerguntaRelacaoScalarFieldEnum = {
  id: 'id',
  aprPerguntaId: 'aprPerguntaId',
  ordem: 'ordem',
  aprId: 'aprId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.AprOpcaoRespostaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.AprOpcaoRespostaRelacaoScalarFieldEnum = {
  id: 'id',
  aprOpcaoRespostaId: 'aprOpcaoRespostaId',
  aprId: 'aprId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.AprTipoAtividadeRelacaoScalarFieldEnum = {
  id: 'id',
  aprId: 'aprId',
  tipoAtividadeId: 'tipoAtividadeId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoAtividadeScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.MobileUserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.MobileSessionScalarFieldEnum = {
  id: 'id',
  deviceInfo: 'deviceInfo',
  lastActive: 'lastActive',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  ativa: 'ativa',
  mobileUserId: 'mobileUserId'
};

exports.Prisma.MobileTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  refreshToken: 'refreshToken',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  usuarioMobileId: 'usuarioMobileId',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  revoked: 'revoked',
  mobileUserId: 'mobileUserId'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  username: 'username',
  password: 'password',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state',
  userId: 'userId'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  expires: 'expires',
  userId: 'userId'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.RoleUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roleId: 'roleId'
};

exports.Prisma.BaseScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  contratoId: 'contratoId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistPreenchidoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  turnoId: 'turnoId',
  checklistId: 'checklistId',
  eletricistaId: 'eletricistaId',
  dataPreenchimento: 'dataPreenchimento',
  latitude: 'latitude',
  longitude: 'longitude',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistRespostaScalarFieldEnum = {
  id: 'id',
  checklistPreenchidoId: 'checklistPreenchidoId',
  perguntaId: 'perguntaId',
  opcaoRespostaId: 'opcaoRespostaId',
  dataResposta: 'dataResposta',
  aguardandoFoto: 'aguardandoFoto',
  fotosSincronizadas: 'fotosSincronizadas',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistPendenciaScalarFieldEnum = {
  id: 'id',
  checklistRespostaId: 'checklistRespostaId',
  checklistPreenchidoId: 'checklistPreenchidoId',
  turnoId: 'turnoId',
  status: 'status',
  observacaoProblema: 'observacaoProblema',
  observacaoTratamento: 'observacaoTratamento',
  tratadoPor: 'tratadoPor',
  tratadoEm: 'tratadoEm',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistRespostaFotoScalarFieldEnum = {
  id: 'id',
  checklistRespostaId: 'checklistRespostaId',
  checklistPendenciaId: 'checklistPendenciaId',
  caminhoArquivo: 'caminhoArquivo',
  urlPublica: 'urlPublica',
  tamanhoBytes: 'tamanhoBytes',
  mimeType: 'mimeType',
  sincronizadoEm: 'sincronizadoEm',
  metadados: 'metadados',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoChecklistScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipoChecklistId: 'tipoChecklistId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistPerguntaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistPerguntaRelacaoScalarFieldEnum = {
  id: 'id',
  checklistPerguntaId: 'checklistPerguntaId',
  checklistId: 'checklistId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistOpcaoRespostaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  geraPendencia: 'geraPendencia',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistOpcaoRespostaRelacaoScalarFieldEnum = {
  id: 'id',
  checklistOpcaoRespostaId: 'checklistOpcaoRespostaId',
  checklistId: 'checklistId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistTipoVeiculoRelacaoScalarFieldEnum = {
  id: 'id',
  checklistId: 'checklistId',
  tipoVeiculoId: 'tipoVeiculoId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistTipoEquipeRelacaoScalarFieldEnum = {
  id: 'id',
  checklistId: 'checklistId',
  tipoEquipeId: 'tipoEquipeId',
  tipoChecklistId: 'tipoChecklistId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.ContratoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  numero: 'numero',
  dataInicio: 'dataInicio',
  dataFim: 'dataFim',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.MobileContratoPermissaoScalarFieldEnum = {
  id: 'id',
  contratoId: 'contratoId',
  mobileUserId: 'mobileUserId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.EletricistaBaseHistoricoScalarFieldEnum = {
  id: 'id',
  eletricistaId: 'eletricistaId',
  baseId: 'baseId',
  dataInicio: 'dataInicio',
  dataFim: 'dataFim',
  motivo: 'motivo',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.EletricistaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  matricula: 'matricula',
  telefone: 'telefone',
  estado: 'estado',
  admissao: 'admissao',
  cargoId: 'cargoId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy',
  contratoId: 'contratoId'
};

exports.Prisma.CargoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  salarioBase: 'salarioBase',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.EquipeBaseHistoricoScalarFieldEnum = {
  id: 'id',
  equipeId: 'equipeId',
  baseId: 'baseId',
  dataInicio: 'dataInicio',
  dataFim: 'dataFim',
  motivo: 'motivo',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoEquipeScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.EquipeScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipoEquipeId: 'tipoEquipeId',
  contratoId: 'contratoId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.EquipeSupervisorScalarFieldEnum = {
  id: 'id',
  equipeId: 'equipeId',
  supervisorId: 'supervisorId',
  inicio: 'inicio',
  fim: 'fim',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoEscalaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  modoRepeticao: 'modoRepeticao',
  cicloDias: 'cicloDias',
  periodicidadeSemanas: 'periodicidadeSemanas',
  eletricistasPorTurma: 'eletricistasPorTurma',
  ativo: 'ativo',
  observacoes: 'observacoes',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoEscalaCicloPosicaoScalarFieldEnum = {
  id: 'id',
  tipoEscalaId: 'tipoEscalaId',
  posicao: 'posicao',
  status: 'status',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoEscalaSemanaMascaraScalarFieldEnum = {
  id: 'id',
  tipoEscalaId: 'tipoEscalaId',
  semanaIndex: 'semanaIndex',
  dia: 'dia',
  status: 'status',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.EscalaEquipePeriodoScalarFieldEnum = {
  id: 'id',
  equipeId: 'equipeId',
  periodoInicio: 'periodoInicio',
  periodoFim: 'periodoFim',
  tipoEscalaId: 'tipoEscalaId',
  status: 'status',
  versao: 'versao',
  observacoes: 'observacoes',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.SlotEscalaScalarFieldEnum = {
  id: 'id',
  escalaEquipePeriodoId: 'escalaEquipePeriodoId',
  eletricistaId: 'eletricistaId',
  data: 'data',
  estado: 'estado',
  inicioPrevisto: 'inicioPrevisto',
  fimPrevisto: 'fimPrevisto',
  anotacoesDia: 'anotacoesDia',
  origem: 'origem',
  observacoes: 'observacoes',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.EventoCoberturaScalarFieldEnum = {
  id: 'id',
  slotEscalaId: 'slotEscalaId',
  eletricistaCobrindoId: 'eletricistaCobrindoId',
  tipo: 'tipo',
  resultado: 'resultado',
  justificativa: 'justificativa',
  registradoEm: 'registradoEm',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.EquipeHorarioVigenciaScalarFieldEnum = {
  id: 'id',
  equipeId: 'equipeId',
  inicioTurnoHora: 'inicioTurnoHora',
  duracaoHoras: 'duracaoHoras',
  vigenciaInicio: 'vigenciaInicio',
  vigenciaFim: 'vigenciaFim',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.HorarioAberturaCatalogoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  inicioTurnoHora: 'inicioTurnoHora',
  duracaoHoras: 'duracaoHoras',
  duracaoIntervaloHoras: 'duracaoIntervaloHoras',
  ativo: 'ativo',
  observacoes: 'observacoes',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.EquipeTurnoHistoricoScalarFieldEnum = {
  id: 'id',
  equipeId: 'equipeId',
  horarioAberturaCatalogoId: 'horarioAberturaCatalogoId',
  dataInicio: 'dataInicio',
  dataFim: 'dataFim',
  inicioTurnoHora: 'inicioTurnoHora',
  duracaoHoras: 'duracaoHoras',
  duracaoIntervaloHoras: 'duracaoIntervaloHoras',
  fimTurnoHora: 'fimTurnoHora',
  motivo: 'motivo',
  observacoes: 'observacoes',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.TurnoRealizadoScalarFieldEnum = {
  id: 'id',
  dataReferencia: 'dataReferencia',
  equipeId: 'equipeId',
  origem: 'origem',
  abertoEm: 'abertoEm',
  abertoPor: 'abertoPor',
  fechadoEm: 'fechadoEm',
  fechadoPor: 'fechadoPor',
  createdAt: 'createdAt',
  createdBy: 'createdBy'
};

exports.Prisma.TurnoRealizadoEletricistaScalarFieldEnum = {
  id: 'id',
  turnoRealizadoId: 'turnoRealizadoId',
  eletricistaId: 'eletricistaId',
  status: 'status',
  abertoEm: 'abertoEm',
  fechadoEm: 'fechadoEm',
  deviceInfo: 'deviceInfo',
  createdAt: 'createdAt',
  createdBy: 'createdBy'
};

exports.Prisma.FaltaScalarFieldEnum = {
  id: 'id',
  dataReferencia: 'dataReferencia',
  equipeId: 'equipeId',
  eletricistaId: 'eletricistaId',
  escalaSlotId: 'escalaSlotId',
  motivoSistema: 'motivoSistema',
  status: 'status',
  createdAt: 'createdAt',
  createdBy: 'createdBy'
};

exports.Prisma.DivergenciaEscalaScalarFieldEnum = {
  id: 'id',
  dataReferencia: 'dataReferencia',
  equipePrevistaId: 'equipePrevistaId',
  equipeRealId: 'equipeRealId',
  eletricistaId: 'eletricistaId',
  tipo: 'tipo',
  detalhe: 'detalhe',
  createdAt: 'createdAt',
  createdBy: 'createdBy'
};

exports.Prisma.TipoJustificativaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao',
  ativo: 'ativo',
  createdAt: 'createdAt',
  createdBy: 'createdBy'
};

exports.Prisma.JustificativaScalarFieldEnum = {
  id: 'id',
  tipoId: 'tipoId',
  descricao: 'descricao',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  status: 'status',
  decidedBy: 'decidedBy',
  decidedAt: 'decidedAt'
};

exports.Prisma.JustificativaAnexoScalarFieldEnum = {
  id: 'id',
  justificativaId: 'justificativaId',
  filePath: 'filePath',
  mimeType: 'mimeType',
  uploadedBy: 'uploadedBy',
  uploadedAt: 'uploadedAt'
};

exports.Prisma.FaltaJustificativaScalarFieldEnum = {
  id: 'id',
  faltaId: 'faltaId',
  justificativaId: 'justificativaId',
  linkedAt: 'linkedAt'
};

exports.Prisma.MobilePhotoScalarFieldEnum = {
  id: 'id',
  turnoId: 'turnoId',
  tipo: 'tipo',
  checklistPreenchidoId: 'checklistPreenchidoId',
  checklistUuid: 'checklistUuid',
  checklistPerguntaId: 'checklistPerguntaId',
  sequenciaAssinatura: 'sequenciaAssinatura',
  servicoId: 'servicoId',
  fileName: 'fileName',
  mimeType: 'mimeType',
  fileSize: 'fileSize',
  checksum: 'checksum',
  storagePath: 'storagePath',
  url: 'url',
  capturedAt: 'capturedAt',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.MobileLocationScalarFieldEnum = {
  id: 'id',
  turnoId: 'turnoId',
  veiculoRemoteId: 'veiculoRemoteId',
  equipeRemoteId: 'equipeRemoteId',
  latitude: 'latitude',
  longitude: 'longitude',
  accuracy: 'accuracy',
  provider: 'provider',
  batteryLevel: 'batteryLevel',
  tagType: 'tagType',
  tagDetail: 'tagDetail',
  capturedAt: 'capturedAt',
  signature: 'signature',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.SupervisorScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  contratoId: 'contratoId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.TestScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.TurnoScalarFieldEnum = {
  id: 'id',
  dataSolicitacao: 'dataSolicitacao',
  dataInicio: 'dataInicio',
  dataFim: 'dataFim',
  veiculoId: 'veiculoId',
  equipeId: 'equipeId',
  dispositivo: 'dispositivo',
  kmInicio: 'kmInicio',
  KmFim: 'KmFim',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.TurnoEletricistaScalarFieldEnum = {
  id: 'id',
  turnoId: 'turnoId',
  eletricistaId: 'eletricistaId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.VeiculoBaseHistoricoScalarFieldEnum = {
  id: 'id',
  veiculoId: 'veiculoId',
  baseId: 'baseId',
  dataInicio: 'dataInicio',
  dataFim: 'dataFim',
  motivo: 'motivo',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoVeiculoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.VeiculoScalarFieldEnum = {
  id: 'id',
  placa: 'placa',
  modelo: 'modelo',
  ano: 'ano',
  tipoVeiculoId: 'tipoVeiculoId',
  contratoId: 'contratoId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.VeiculoOdometroScalarFieldEnum = {
  id: 'id',
  valor: 'valor',
  data: 'data',
  veiculoId: 'veiculoId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AprOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.AprPerguntaOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.AprPerguntaRelacaoOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.AprOpcaoRespostaOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.AprOpcaoRespostaRelacaoOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.AprTipoAtividadeRelacaoOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoAtividadeOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.MobileUserOrderByRelevanceFieldEnum = {
  username: 'username',
  password: 'password',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.MobileSessionOrderByRelevanceFieldEnum = {
  id: 'id',
  deviceInfo: 'deviceInfo'
};

exports.Prisma.MobileTokenOrderByRelevanceFieldEnum = {
  token: 'token',
  refreshToken: 'refreshToken',
  usuarioMobileId: 'usuarioMobileId'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  nome: 'nome',
  email: 'email',
  username: 'username',
  password: 'password',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.AccountOrderByRelevanceFieldEnum = {
  id: 'id',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.SessionOrderByRelevanceFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken'
};

exports.Prisma.VerificationTokenOrderByRelevanceFieldEnum = {
  identifier: 'identifier',
  token: 'token'
};

exports.Prisma.RoleOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.BaseOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistPreenchidoOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistRespostaOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistPendenciaOrderByRelevanceFieldEnum = {
  observacaoProblema: 'observacaoProblema',
  observacaoTratamento: 'observacaoTratamento',
  tratadoPor: 'tratadoPor',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.ChecklistRespostaFotoOrderByRelevanceFieldEnum = {
  caminhoArquivo: 'caminhoArquivo',
  urlPublica: 'urlPublica',
  mimeType: 'mimeType',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoChecklistOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistPerguntaOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistPerguntaRelacaoOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistOpcaoRespostaOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistOpcaoRespostaRelacaoOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistTipoVeiculoRelacaoOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ChecklistTipoEquipeRelacaoOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.ContratoOrderByRelevanceFieldEnum = {
  nome: 'nome',
  numero: 'numero',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.MobileContratoPermissaoOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.EletricistaBaseHistoricoOrderByRelevanceFieldEnum = {
  motivo: 'motivo',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.EletricistaOrderByRelevanceFieldEnum = {
  nome: 'nome',
  matricula: 'matricula',
  telefone: 'telefone',
  estado: 'estado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.CargoOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.EquipeBaseHistoricoOrderByRelevanceFieldEnum = {
  motivo: 'motivo',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoEquipeOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.EquipeOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.EquipeSupervisorOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoEscalaOrderByRelevanceFieldEnum = {
  nome: 'nome',
  observacoes: 'observacoes',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoEscalaCicloPosicaoOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoEscalaSemanaMascaraOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.EscalaEquipePeriodoOrderByRelevanceFieldEnum = {
  observacoes: 'observacoes',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.SlotEscalaOrderByRelevanceFieldEnum = {
  inicioPrevisto: 'inicioPrevisto',
  fimPrevisto: 'fimPrevisto',
  anotacoesDia: 'anotacoesDia',
  observacoes: 'observacoes',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.EventoCoberturaOrderByRelevanceFieldEnum = {
  justificativa: 'justificativa',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.EquipeHorarioVigenciaOrderByRelevanceFieldEnum = {
  inicioTurnoHora: 'inicioTurnoHora',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.HorarioAberturaCatalogoOrderByRelevanceFieldEnum = {
  nome: 'nome',
  inicioTurnoHora: 'inicioTurnoHora',
  observacoes: 'observacoes',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.EquipeTurnoHistoricoOrderByRelevanceFieldEnum = {
  inicioTurnoHora: 'inicioTurnoHora',
  fimTurnoHora: 'fimTurnoHora',
  motivo: 'motivo',
  observacoes: 'observacoes',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.TurnoRealizadoOrderByRelevanceFieldEnum = {
  origem: 'origem',
  abertoPor: 'abertoPor',
  fechadoPor: 'fechadoPor',
  createdBy: 'createdBy'
};

exports.Prisma.TurnoRealizadoEletricistaOrderByRelevanceFieldEnum = {
  status: 'status',
  deviceInfo: 'deviceInfo',
  createdBy: 'createdBy'
};

exports.Prisma.FaltaOrderByRelevanceFieldEnum = {
  motivoSistema: 'motivoSistema',
  status: 'status',
  createdBy: 'createdBy'
};

exports.Prisma.DivergenciaEscalaOrderByRelevanceFieldEnum = {
  tipo: 'tipo',
  detalhe: 'detalhe',
  createdBy: 'createdBy'
};

exports.Prisma.TipoJustificativaOrderByRelevanceFieldEnum = {
  nome: 'nome',
  descricao: 'descricao',
  createdBy: 'createdBy'
};

exports.Prisma.JustificativaOrderByRelevanceFieldEnum = {
  descricao: 'descricao',
  createdBy: 'createdBy',
  status: 'status',
  decidedBy: 'decidedBy'
};

exports.Prisma.JustificativaAnexoOrderByRelevanceFieldEnum = {
  filePath: 'filePath',
  mimeType: 'mimeType',
  uploadedBy: 'uploadedBy'
};

exports.Prisma.MobilePhotoOrderByRelevanceFieldEnum = {
  tipo: 'tipo',
  checklistUuid: 'checklistUuid',
  fileName: 'fileName',
  mimeType: 'mimeType',
  checksum: 'checksum',
  storagePath: 'storagePath',
  url: 'url',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.MobileLocationOrderByRelevanceFieldEnum = {
  provider: 'provider',
  tagType: 'tagType',
  tagDetail: 'tagDetail',
  signature: 'signature',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.SupervisorOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.TestOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.TurnoOrderByRelevanceFieldEnum = {
  dispositivo: 'dispositivo',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.TurnoEletricistaOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.VeiculoBaseHistoricoOrderByRelevanceFieldEnum = {
  motivo: 'motivo',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.TipoVeiculoOrderByRelevanceFieldEnum = {
  nome: 'nome',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.VeiculoOrderByRelevanceFieldEnum = {
  placa: 'placa',
  modelo: 'modelo',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};

exports.Prisma.VeiculoOdometroOrderByRelevanceFieldEnum = {
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy'
};
exports.StatusPendencia = exports.$Enums.StatusPendencia = {
  AGUARDANDO_TRATAMENTO: 'AGUARDANDO_TRATAMENTO',
  EM_TRATAMENTO: 'EM_TRATAMENTO',
  TRATADA: 'TRATADA',
  REGISTRO_INCORRETO: 'REGISTRO_INCORRETO'
};

exports.ModoRepeticao = exports.$Enums.ModoRepeticao = {
  CICLO_DIAS: 'CICLO_DIAS',
  SEMANA_DEPENDENTE: 'SEMANA_DEPENDENTE'
};

exports.StatusTrabalho = exports.$Enums.StatusTrabalho = {
  TRABALHO: 'TRABALHO',
  FOLGA: 'FOLGA',
  FALTA: 'FALTA'
};

exports.DiaSemana = exports.$Enums.DiaSemana = {
  SEGUNDA: 'SEGUNDA',
  TERCA: 'TERCA',
  QUARTA: 'QUARTA',
  QUINTA: 'QUINTA',
  SEXTA: 'SEXTA',
  SABADO: 'SABADO',
  DOMINGO: 'DOMINGO'
};

exports.StatusEscalaEquipePeriodo = exports.$Enums.StatusEscalaEquipePeriodo = {
  RASCUNHO: 'RASCUNHO',
  EM_APROVACAO: 'EM_APROVACAO',
  PUBLICADA: 'PUBLICADA',
  ARQUIVADA: 'ARQUIVADA'
};

exports.EstadoSlot = exports.$Enums.EstadoSlot = {
  TRABALHO: 'TRABALHO',
  FOLGA: 'FOLGA',
  FALTA: 'FALTA',
  EXCECAO: 'EXCECAO'
};

exports.OrigemAtribuicao = exports.$Enums.OrigemAtribuicao = {
  GERACAO: 'GERACAO',
  MANUAL: 'MANUAL',
  REMANEJAMENTO: 'REMANEJAMENTO'
};

exports.EventoCoberturaTipo = exports.$Enums.EventoCoberturaTipo = {
  FALTA: 'FALTA',
  SUPRIMENTO: 'SUPRIMENTO',
  TROCA: 'TROCA'
};

exports.EventoCoberturaResultado = exports.$Enums.EventoCoberturaResultado = {
  COBERTO: 'COBERTO',
  VAGA_DESCOBERTA: 'VAGA_DESCOBERTA'
};

exports.Prisma.ModelName = {
  Apr: 'Apr',
  AprPergunta: 'AprPergunta',
  AprPerguntaRelacao: 'AprPerguntaRelacao',
  AprOpcaoResposta: 'AprOpcaoResposta',
  AprOpcaoRespostaRelacao: 'AprOpcaoRespostaRelacao',
  AprTipoAtividadeRelacao: 'AprTipoAtividadeRelacao',
  TipoAtividade: 'TipoAtividade',
  MobileUser: 'MobileUser',
  MobileSession: 'MobileSession',
  MobileToken: 'MobileToken',
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  VerificationToken: 'VerificationToken',
  Role: 'Role',
  RoleUser: 'RoleUser',
  Base: 'Base',
  ChecklistPreenchido: 'ChecklistPreenchido',
  ChecklistResposta: 'ChecklistResposta',
  ChecklistPendencia: 'ChecklistPendencia',
  ChecklistRespostaFoto: 'ChecklistRespostaFoto',
  TipoChecklist: 'TipoChecklist',
  Checklist: 'Checklist',
  ChecklistPergunta: 'ChecklistPergunta',
  ChecklistPerguntaRelacao: 'ChecklistPerguntaRelacao',
  ChecklistOpcaoResposta: 'ChecklistOpcaoResposta',
  ChecklistOpcaoRespostaRelacao: 'ChecklistOpcaoRespostaRelacao',
  ChecklistTipoVeiculoRelacao: 'ChecklistTipoVeiculoRelacao',
  ChecklistTipoEquipeRelacao: 'ChecklistTipoEquipeRelacao',
  Contrato: 'Contrato',
  MobileContratoPermissao: 'MobileContratoPermissao',
  EletricistaBaseHistorico: 'EletricistaBaseHistorico',
  Eletricista: 'Eletricista',
  Cargo: 'Cargo',
  EquipeBaseHistorico: 'EquipeBaseHistorico',
  TipoEquipe: 'TipoEquipe',
  Equipe: 'Equipe',
  EquipeSupervisor: 'EquipeSupervisor',
  TipoEscala: 'TipoEscala',
  TipoEscalaCicloPosicao: 'TipoEscalaCicloPosicao',
  TipoEscalaSemanaMascara: 'TipoEscalaSemanaMascara',
  EscalaEquipePeriodo: 'EscalaEquipePeriodo',
  SlotEscala: 'SlotEscala',
  EventoCobertura: 'EventoCobertura',
  EquipeHorarioVigencia: 'EquipeHorarioVigencia',
  HorarioAberturaCatalogo: 'HorarioAberturaCatalogo',
  EquipeTurnoHistorico: 'EquipeTurnoHistorico',
  TurnoRealizado: 'TurnoRealizado',
  TurnoRealizadoEletricista: 'TurnoRealizadoEletricista',
  Falta: 'Falta',
  DivergenciaEscala: 'DivergenciaEscala',
  TipoJustificativa: 'TipoJustificativa',
  Justificativa: 'Justificativa',
  JustificativaAnexo: 'JustificativaAnexo',
  FaltaJustificativa: 'FaltaJustificativa',
  MobilePhoto: 'MobilePhoto',
  MobileLocation: 'MobileLocation',
  Supervisor: 'Supervisor',
  Test: 'Test',
  Turno: 'Turno',
  TurnoEletricista: 'TurnoEletricista',
  VeiculoBaseHistorico: 'VeiculoBaseHistorico',
  TipoVeiculo: 'TipoVeiculo',
  Veiculo: 'Veiculo',
  VeiculoOdometro: 'VeiculoOdometro'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
