
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Apr
 * 
 */
export type Apr = $Result.DefaultSelection<Prisma.$AprPayload>
/**
 * Model AprPergunta
 * 
 */
export type AprPergunta = $Result.DefaultSelection<Prisma.$AprPerguntaPayload>
/**
 * Model AprPerguntaRelacao
 * 
 */
export type AprPerguntaRelacao = $Result.DefaultSelection<Prisma.$AprPerguntaRelacaoPayload>
/**
 * Model AprOpcaoResposta
 * 
 */
export type AprOpcaoResposta = $Result.DefaultSelection<Prisma.$AprOpcaoRespostaPayload>
/**
 * Model AprOpcaoRespostaRelacao
 * 
 */
export type AprOpcaoRespostaRelacao = $Result.DefaultSelection<Prisma.$AprOpcaoRespostaRelacaoPayload>
/**
 * Model AprTipoAtividadeRelacao
 * 
 */
export type AprTipoAtividadeRelacao = $Result.DefaultSelection<Prisma.$AprTipoAtividadeRelacaoPayload>
/**
 * Model TipoAtividade
 * 
 */
export type TipoAtividade = $Result.DefaultSelection<Prisma.$TipoAtividadePayload>
/**
 * Model MobileUser
 * 
 */
export type MobileUser = $Result.DefaultSelection<Prisma.$MobileUserPayload>
/**
 * Model MobileSession
 * 
 */
export type MobileSession = $Result.DefaultSelection<Prisma.$MobileSessionPayload>
/**
 * Model MobileToken
 * 
 */
export type MobileToken = $Result.DefaultSelection<Prisma.$MobileTokenPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model VerificationToken
 * 
 */
export type VerificationToken = $Result.DefaultSelection<Prisma.$VerificationTokenPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model RoleUser
 * 
 */
export type RoleUser = $Result.DefaultSelection<Prisma.$RoleUserPayload>
/**
 * Model Base
 * 
 */
export type Base = $Result.DefaultSelection<Prisma.$BasePayload>
/**
 * Model TipoChecklist
 * 
 */
export type TipoChecklist = $Result.DefaultSelection<Prisma.$TipoChecklistPayload>
/**
 * Model Checklist
 * 
 */
export type Checklist = $Result.DefaultSelection<Prisma.$ChecklistPayload>
/**
 * Model ChecklistPergunta
 * 
 */
export type ChecklistPergunta = $Result.DefaultSelection<Prisma.$ChecklistPerguntaPayload>
/**
 * Model ChecklistPerguntaRelacao
 * 
 */
export type ChecklistPerguntaRelacao = $Result.DefaultSelection<Prisma.$ChecklistPerguntaRelacaoPayload>
/**
 * Model ChecklistOpcaoResposta
 * 
 */
export type ChecklistOpcaoResposta = $Result.DefaultSelection<Prisma.$ChecklistOpcaoRespostaPayload>
/**
 * Model ChecklistOpcaoRespostaRelacao
 * 
 */
export type ChecklistOpcaoRespostaRelacao = $Result.DefaultSelection<Prisma.$ChecklistOpcaoRespostaRelacaoPayload>
/**
 * Model ChecklistTipoVeiculoRelacao
 * 
 */
export type ChecklistTipoVeiculoRelacao = $Result.DefaultSelection<Prisma.$ChecklistTipoVeiculoRelacaoPayload>
/**
 * Model ChecklistTipoEquipeRelacao
 * 
 */
export type ChecklistTipoEquipeRelacao = $Result.DefaultSelection<Prisma.$ChecklistTipoEquipeRelacaoPayload>
/**
 * Model Contrato
 * 
 */
export type Contrato = $Result.DefaultSelection<Prisma.$ContratoPayload>
/**
 * Model MobileContratoPermissao
 * 
 */
export type MobileContratoPermissao = $Result.DefaultSelection<Prisma.$MobileContratoPermissaoPayload>
/**
 * Model EletricistaBaseHistorico
 * 
 */
export type EletricistaBaseHistorico = $Result.DefaultSelection<Prisma.$EletricistaBaseHistoricoPayload>
/**
 * Model Eletricista
 * 
 */
export type Eletricista = $Result.DefaultSelection<Prisma.$EletricistaPayload>
/**
 * Model Cargo
 * 
 */
export type Cargo = $Result.DefaultSelection<Prisma.$CargoPayload>
/**
 * Model EquipeBaseHistorico
 * 
 */
export type EquipeBaseHistorico = $Result.DefaultSelection<Prisma.$EquipeBaseHistoricoPayload>
/**
 * Model TipoEquipe
 * 
 */
export type TipoEquipe = $Result.DefaultSelection<Prisma.$TipoEquipePayload>
/**
 * Model Equipe
 * 
 */
export type Equipe = $Result.DefaultSelection<Prisma.$EquipePayload>
/**
 * Model EquipeSupervisor
 * 
 */
export type EquipeSupervisor = $Result.DefaultSelection<Prisma.$EquipeSupervisorPayload>
/**
 * Model TipoEscala
 * =========================
 * Catálogo de Tipos de Escala (sem "papel")
 * =========================
 */
export type TipoEscala = $Result.DefaultSelection<Prisma.$TipoEscalaPayload>
/**
 * Model TipoEscalaCicloPosicao
 * 
 */
export type TipoEscalaCicloPosicao = $Result.DefaultSelection<Prisma.$TipoEscalaCicloPosicaoPayload>
/**
 * Model TipoEscalaSemanaMascara
 * 
 */
export type TipoEscalaSemanaMascara = $Result.DefaultSelection<Prisma.$TipoEscalaSemanaMascaraPayload>
/**
 * Model EscalaEquipePeriodo
 * =========================
 * Configuração da Equipe por Período
 * =========================
 */
export type EscalaEquipePeriodo = $Result.DefaultSelection<Prisma.$EscalaEquipePeriodoPayload>
/**
 * Model SlotEscala
 * =========================
 * Slot = (dia + eletricista) com estado
 * =========================
 */
export type SlotEscala = $Result.DefaultSelection<Prisma.$SlotEscalaPayload>
/**
 * Model EventoCobertura
 * =========================
 * Evento de cobertura (liga-se ao slot planejado)
 * =========================
 */
export type EventoCobertura = $Result.DefaultSelection<Prisma.$EventoCoberturaPayload>
/**
 * Model EquipeHorarioVigencia
 * =========================
 * Horários por vigência da equipe
 * =========================
 */
export type EquipeHorarioVigencia = $Result.DefaultSelection<Prisma.$EquipeHorarioVigenciaPayload>
/**
 * Model HorarioAberturaCatalogo
 * ===============================================
 * Catálogo de Horários de Abertura (presets)
 * ===============================================
 */
export type HorarioAberturaCatalogo = $Result.DefaultSelection<Prisma.$HorarioAberturaCatalogoPayload>
/**
 * Model EquipeTurnoHistorico
 * ===================================================
 * Histórico de Horário de Turno por Equipe (snapshot)
 * ===================================================
 */
export type EquipeTurnoHistorico = $Result.DefaultSelection<Prisma.$EquipeTurnoHistoricoPayload>
/**
 * Model Supervisor
 * 
 */
export type Supervisor = $Result.DefaultSelection<Prisma.$SupervisorPayload>
/**
 * Model Test
 * 
 */
export type Test = $Result.DefaultSelection<Prisma.$TestPayload>
/**
 * Model Turno
 * 
 */
export type Turno = $Result.DefaultSelection<Prisma.$TurnoPayload>
/**
 * Model TurnoEletricista
 * 
 */
export type TurnoEletricista = $Result.DefaultSelection<Prisma.$TurnoEletricistaPayload>
/**
 * Model VeiculoBaseHistorico
 * 
 */
export type VeiculoBaseHistorico = $Result.DefaultSelection<Prisma.$VeiculoBaseHistoricoPayload>
/**
 * Model TipoVeiculo
 * 
 */
export type TipoVeiculo = $Result.DefaultSelection<Prisma.$TipoVeiculoPayload>
/**
 * Model Veiculo
 * 
 */
export type Veiculo = $Result.DefaultSelection<Prisma.$VeiculoPayload>
/**
 * Model VeiculoOdometro
 * 
 */
export type VeiculoOdometro = $Result.DefaultSelection<Prisma.$VeiculoOdometroPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const ModoRepeticao: {
  CICLO_DIAS: 'CICLO_DIAS',
  SEMANA_DEPENDENTE: 'SEMANA_DEPENDENTE'
};

export type ModoRepeticao = (typeof ModoRepeticao)[keyof typeof ModoRepeticao]


export const DiaSemana: {
  SEGUNDA: 'SEGUNDA',
  TERCA: 'TERCA',
  QUARTA: 'QUARTA',
  QUINTA: 'QUINTA',
  SEXTA: 'SEXTA',
  SABADO: 'SABADO',
  DOMINGO: 'DOMINGO'
};

export type DiaSemana = (typeof DiaSemana)[keyof typeof DiaSemana]


export const StatusTrabalho: {
  TRABALHO: 'TRABALHO',
  FOLGA: 'FOLGA',
  FALTA: 'FALTA'
};

export type StatusTrabalho = (typeof StatusTrabalho)[keyof typeof StatusTrabalho]


export const StatusEscalaEquipePeriodo: {
  RASCUNHO: 'RASCUNHO',
  EM_APROVACAO: 'EM_APROVACAO',
  PUBLICADA: 'PUBLICADA',
  ARQUIVADA: 'ARQUIVADA'
};

export type StatusEscalaEquipePeriodo = (typeof StatusEscalaEquipePeriodo)[keyof typeof StatusEscalaEquipePeriodo]


export const EstadoSlot: {
  TRABALHO: 'TRABALHO',
  FOLGA: 'FOLGA',
  FALTA: 'FALTA',
  EXCECAO: 'EXCECAO'
};

export type EstadoSlot = (typeof EstadoSlot)[keyof typeof EstadoSlot]


export const OrigemAtribuicao: {
  GERACAO: 'GERACAO',
  MANUAL: 'MANUAL',
  REMANEJAMENTO: 'REMANEJAMENTO'
};

export type OrigemAtribuicao = (typeof OrigemAtribuicao)[keyof typeof OrigemAtribuicao]


export const StatusAtribuicaoPlanejada: {
  ATIVO: 'ATIVO',
  REMOVIDO: 'REMOVIDO'
};

export type StatusAtribuicaoPlanejada = (typeof StatusAtribuicaoPlanejada)[keyof typeof StatusAtribuicaoPlanejada]


export const TipoIndisponibilidade: {
  FERIAS: 'FERIAS',
  LICENCA: 'LICENCA',
  SUSPENSAO: 'SUSPENSAO',
  MEDICO: 'MEDICO',
  TREINAMENTO: 'TREINAMENTO',
  OUTRO: 'OUTRO'
};

export type TipoIndisponibilidade = (typeof TipoIndisponibilidade)[keyof typeof TipoIndisponibilidade]


export const EventoCoberturaTipo: {
  FALTA: 'FALTA',
  SUPRIMENTO: 'SUPRIMENTO',
  TROCA: 'TROCA'
};

export type EventoCoberturaTipo = (typeof EventoCoberturaTipo)[keyof typeof EventoCoberturaTipo]


export const EventoCoberturaResultado: {
  COBERTO: 'COBERTO',
  VAGA_DESCOBERTA: 'VAGA_DESCOBERTA'
};

export type EventoCoberturaResultado = (typeof EventoCoberturaResultado)[keyof typeof EventoCoberturaResultado]

}

export type ModoRepeticao = $Enums.ModoRepeticao

export const ModoRepeticao: typeof $Enums.ModoRepeticao

export type DiaSemana = $Enums.DiaSemana

export const DiaSemana: typeof $Enums.DiaSemana

export type StatusTrabalho = $Enums.StatusTrabalho

export const StatusTrabalho: typeof $Enums.StatusTrabalho

export type StatusEscalaEquipePeriodo = $Enums.StatusEscalaEquipePeriodo

export const StatusEscalaEquipePeriodo: typeof $Enums.StatusEscalaEquipePeriodo

export type EstadoSlot = $Enums.EstadoSlot

export const EstadoSlot: typeof $Enums.EstadoSlot

export type OrigemAtribuicao = $Enums.OrigemAtribuicao

export const OrigemAtribuicao: typeof $Enums.OrigemAtribuicao

export type StatusAtribuicaoPlanejada = $Enums.StatusAtribuicaoPlanejada

export const StatusAtribuicaoPlanejada: typeof $Enums.StatusAtribuicaoPlanejada

export type TipoIndisponibilidade = $Enums.TipoIndisponibilidade

export const TipoIndisponibilidade: typeof $Enums.TipoIndisponibilidade

export type EventoCoberturaTipo = $Enums.EventoCoberturaTipo

export const EventoCoberturaTipo: typeof $Enums.EventoCoberturaTipo

export type EventoCoberturaResultado = $Enums.EventoCoberturaResultado

export const EventoCoberturaResultado: typeof $Enums.EventoCoberturaResultado

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Aprs
 * const aprs = await prisma.apr.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Aprs
   * const aprs = await prisma.apr.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.apr`: Exposes CRUD operations for the **Apr** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Aprs
    * const aprs = await prisma.apr.findMany()
    * ```
    */
  get apr(): Prisma.AprDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aprPergunta`: Exposes CRUD operations for the **AprPergunta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AprPerguntas
    * const aprPerguntas = await prisma.aprPergunta.findMany()
    * ```
    */
  get aprPergunta(): Prisma.AprPerguntaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aprPerguntaRelacao`: Exposes CRUD operations for the **AprPerguntaRelacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AprPerguntaRelacaos
    * const aprPerguntaRelacaos = await prisma.aprPerguntaRelacao.findMany()
    * ```
    */
  get aprPerguntaRelacao(): Prisma.AprPerguntaRelacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aprOpcaoResposta`: Exposes CRUD operations for the **AprOpcaoResposta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AprOpcaoRespostas
    * const aprOpcaoRespostas = await prisma.aprOpcaoResposta.findMany()
    * ```
    */
  get aprOpcaoResposta(): Prisma.AprOpcaoRespostaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aprOpcaoRespostaRelacao`: Exposes CRUD operations for the **AprOpcaoRespostaRelacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AprOpcaoRespostaRelacaos
    * const aprOpcaoRespostaRelacaos = await prisma.aprOpcaoRespostaRelacao.findMany()
    * ```
    */
  get aprOpcaoRespostaRelacao(): Prisma.AprOpcaoRespostaRelacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aprTipoAtividadeRelacao`: Exposes CRUD operations for the **AprTipoAtividadeRelacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AprTipoAtividadeRelacaos
    * const aprTipoAtividadeRelacaos = await prisma.aprTipoAtividadeRelacao.findMany()
    * ```
    */
  get aprTipoAtividadeRelacao(): Prisma.AprTipoAtividadeRelacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipoAtividade`: Exposes CRUD operations for the **TipoAtividade** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoAtividades
    * const tipoAtividades = await prisma.tipoAtividade.findMany()
    * ```
    */
  get tipoAtividade(): Prisma.TipoAtividadeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mobileUser`: Exposes CRUD operations for the **MobileUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MobileUsers
    * const mobileUsers = await prisma.mobileUser.findMany()
    * ```
    */
  get mobileUser(): Prisma.MobileUserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mobileSession`: Exposes CRUD operations for the **MobileSession** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MobileSessions
    * const mobileSessions = await prisma.mobileSession.findMany()
    * ```
    */
  get mobileSession(): Prisma.MobileSessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mobileToken`: Exposes CRUD operations for the **MobileToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MobileTokens
    * const mobileTokens = await prisma.mobileToken.findMany()
    * ```
    */
  get mobileToken(): Prisma.MobileTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verificationToken`: Exposes CRUD operations for the **VerificationToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationTokens
    * const verificationTokens = await prisma.verificationToken.findMany()
    * ```
    */
  get verificationToken(): Prisma.VerificationTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roleUser`: Exposes CRUD operations for the **RoleUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RoleUsers
    * const roleUsers = await prisma.roleUser.findMany()
    * ```
    */
  get roleUser(): Prisma.RoleUserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.base`: Exposes CRUD operations for the **Base** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bases
    * const bases = await prisma.base.findMany()
    * ```
    */
  get base(): Prisma.BaseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipoChecklist`: Exposes CRUD operations for the **TipoChecklist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoChecklists
    * const tipoChecklists = await prisma.tipoChecklist.findMany()
    * ```
    */
  get tipoChecklist(): Prisma.TipoChecklistDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.checklist`: Exposes CRUD operations for the **Checklist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Checklists
    * const checklists = await prisma.checklist.findMany()
    * ```
    */
  get checklist(): Prisma.ChecklistDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.checklistPergunta`: Exposes CRUD operations for the **ChecklistPergunta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChecklistPerguntas
    * const checklistPerguntas = await prisma.checklistPergunta.findMany()
    * ```
    */
  get checklistPergunta(): Prisma.ChecklistPerguntaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.checklistPerguntaRelacao`: Exposes CRUD operations for the **ChecklistPerguntaRelacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChecklistPerguntaRelacaos
    * const checklistPerguntaRelacaos = await prisma.checklistPerguntaRelacao.findMany()
    * ```
    */
  get checklistPerguntaRelacao(): Prisma.ChecklistPerguntaRelacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.checklistOpcaoResposta`: Exposes CRUD operations for the **ChecklistOpcaoResposta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChecklistOpcaoRespostas
    * const checklistOpcaoRespostas = await prisma.checklistOpcaoResposta.findMany()
    * ```
    */
  get checklistOpcaoResposta(): Prisma.ChecklistOpcaoRespostaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.checklistOpcaoRespostaRelacao`: Exposes CRUD operations for the **ChecklistOpcaoRespostaRelacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChecklistOpcaoRespostaRelacaos
    * const checklistOpcaoRespostaRelacaos = await prisma.checklistOpcaoRespostaRelacao.findMany()
    * ```
    */
  get checklistOpcaoRespostaRelacao(): Prisma.ChecklistOpcaoRespostaRelacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.checklistTipoVeiculoRelacao`: Exposes CRUD operations for the **ChecklistTipoVeiculoRelacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChecklistTipoVeiculoRelacaos
    * const checklistTipoVeiculoRelacaos = await prisma.checklistTipoVeiculoRelacao.findMany()
    * ```
    */
  get checklistTipoVeiculoRelacao(): Prisma.ChecklistTipoVeiculoRelacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.checklistTipoEquipeRelacao`: Exposes CRUD operations for the **ChecklistTipoEquipeRelacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChecklistTipoEquipeRelacaos
    * const checklistTipoEquipeRelacaos = await prisma.checklistTipoEquipeRelacao.findMany()
    * ```
    */
  get checklistTipoEquipeRelacao(): Prisma.ChecklistTipoEquipeRelacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.contrato`: Exposes CRUD operations for the **Contrato** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contratoes
    * const contratoes = await prisma.contrato.findMany()
    * ```
    */
  get contrato(): Prisma.ContratoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mobileContratoPermissao`: Exposes CRUD operations for the **MobileContratoPermissao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MobileContratoPermissaos
    * const mobileContratoPermissaos = await prisma.mobileContratoPermissao.findMany()
    * ```
    */
  get mobileContratoPermissao(): Prisma.MobileContratoPermissaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.eletricistaBaseHistorico`: Exposes CRUD operations for the **EletricistaBaseHistorico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EletricistaBaseHistoricos
    * const eletricistaBaseHistoricos = await prisma.eletricistaBaseHistorico.findMany()
    * ```
    */
  get eletricistaBaseHistorico(): Prisma.EletricistaBaseHistoricoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.eletricista`: Exposes CRUD operations for the **Eletricista** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Eletricistas
    * const eletricistas = await prisma.eletricista.findMany()
    * ```
    */
  get eletricista(): Prisma.EletricistaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cargo`: Exposes CRUD operations for the **Cargo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cargos
    * const cargos = await prisma.cargo.findMany()
    * ```
    */
  get cargo(): Prisma.CargoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.equipeBaseHistorico`: Exposes CRUD operations for the **EquipeBaseHistorico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EquipeBaseHistoricos
    * const equipeBaseHistoricos = await prisma.equipeBaseHistorico.findMany()
    * ```
    */
  get equipeBaseHistorico(): Prisma.EquipeBaseHistoricoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipoEquipe`: Exposes CRUD operations for the **TipoEquipe** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoEquipes
    * const tipoEquipes = await prisma.tipoEquipe.findMany()
    * ```
    */
  get tipoEquipe(): Prisma.TipoEquipeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.equipe`: Exposes CRUD operations for the **Equipe** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Equipes
    * const equipes = await prisma.equipe.findMany()
    * ```
    */
  get equipe(): Prisma.EquipeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.equipeSupervisor`: Exposes CRUD operations for the **EquipeSupervisor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EquipeSupervisors
    * const equipeSupervisors = await prisma.equipeSupervisor.findMany()
    * ```
    */
  get equipeSupervisor(): Prisma.EquipeSupervisorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipoEscala`: Exposes CRUD operations for the **TipoEscala** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoEscalas
    * const tipoEscalas = await prisma.tipoEscala.findMany()
    * ```
    */
  get tipoEscala(): Prisma.TipoEscalaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipoEscalaCicloPosicao`: Exposes CRUD operations for the **TipoEscalaCicloPosicao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoEscalaCicloPosicaos
    * const tipoEscalaCicloPosicaos = await prisma.tipoEscalaCicloPosicao.findMany()
    * ```
    */
  get tipoEscalaCicloPosicao(): Prisma.TipoEscalaCicloPosicaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipoEscalaSemanaMascara`: Exposes CRUD operations for the **TipoEscalaSemanaMascara** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoEscalaSemanaMascaras
    * const tipoEscalaSemanaMascaras = await prisma.tipoEscalaSemanaMascara.findMany()
    * ```
    */
  get tipoEscalaSemanaMascara(): Prisma.TipoEscalaSemanaMascaraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.escalaEquipePeriodo`: Exposes CRUD operations for the **EscalaEquipePeriodo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EscalaEquipePeriodos
    * const escalaEquipePeriodos = await prisma.escalaEquipePeriodo.findMany()
    * ```
    */
  get escalaEquipePeriodo(): Prisma.EscalaEquipePeriodoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.slotEscala`: Exposes CRUD operations for the **SlotEscala** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SlotEscalas
    * const slotEscalas = await prisma.slotEscala.findMany()
    * ```
    */
  get slotEscala(): Prisma.SlotEscalaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.eventoCobertura`: Exposes CRUD operations for the **EventoCobertura** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EventoCoberturas
    * const eventoCoberturas = await prisma.eventoCobertura.findMany()
    * ```
    */
  get eventoCobertura(): Prisma.EventoCoberturaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.equipeHorarioVigencia`: Exposes CRUD operations for the **EquipeHorarioVigencia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EquipeHorarioVigencias
    * const equipeHorarioVigencias = await prisma.equipeHorarioVigencia.findMany()
    * ```
    */
  get equipeHorarioVigencia(): Prisma.EquipeHorarioVigenciaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.horarioAberturaCatalogo`: Exposes CRUD operations for the **HorarioAberturaCatalogo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HorarioAberturaCatalogos
    * const horarioAberturaCatalogos = await prisma.horarioAberturaCatalogo.findMany()
    * ```
    */
  get horarioAberturaCatalogo(): Prisma.HorarioAberturaCatalogoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.equipeTurnoHistorico`: Exposes CRUD operations for the **EquipeTurnoHistorico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EquipeTurnoHistoricos
    * const equipeTurnoHistoricos = await prisma.equipeTurnoHistorico.findMany()
    * ```
    */
  get equipeTurnoHistorico(): Prisma.EquipeTurnoHistoricoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supervisor`: Exposes CRUD operations for the **Supervisor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Supervisors
    * const supervisors = await prisma.supervisor.findMany()
    * ```
    */
  get supervisor(): Prisma.SupervisorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.test`: Exposes CRUD operations for the **Test** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tests
    * const tests = await prisma.test.findMany()
    * ```
    */
  get test(): Prisma.TestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.turno`: Exposes CRUD operations for the **Turno** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Turnos
    * const turnos = await prisma.turno.findMany()
    * ```
    */
  get turno(): Prisma.TurnoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.turnoEletricista`: Exposes CRUD operations for the **TurnoEletricista** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TurnoEletricistas
    * const turnoEletricistas = await prisma.turnoEletricista.findMany()
    * ```
    */
  get turnoEletricista(): Prisma.TurnoEletricistaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.veiculoBaseHistorico`: Exposes CRUD operations for the **VeiculoBaseHistorico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VeiculoBaseHistoricos
    * const veiculoBaseHistoricos = await prisma.veiculoBaseHistorico.findMany()
    * ```
    */
  get veiculoBaseHistorico(): Prisma.VeiculoBaseHistoricoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipoVeiculo`: Exposes CRUD operations for the **TipoVeiculo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoVeiculos
    * const tipoVeiculos = await prisma.tipoVeiculo.findMany()
    * ```
    */
  get tipoVeiculo(): Prisma.TipoVeiculoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.veiculo`: Exposes CRUD operations for the **Veiculo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Veiculos
    * const veiculos = await prisma.veiculo.findMany()
    * ```
    */
  get veiculo(): Prisma.VeiculoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.veiculoOdometro`: Exposes CRUD operations for the **VeiculoOdometro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VeiculoOdometros
    * const veiculoOdometros = await prisma.veiculoOdometro.findMany()
    * ```
    */
  get veiculoOdometro(): Prisma.VeiculoOdometroDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.15.0
   * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Apr: 'Apr',
    AprPergunta: 'AprPergunta',
    AprPerguntaRelacao: 'AprPerguntaRelacao',
    AprOpcaoResposta: 'AprOpcaoResposta',
    AprOpcaoRespostaRelacao: 'AprOpcaoRespostaRelacao',
    AprTipoAtividadeRelacao: 'AprTipoAtividadeRelacao',
    TipoAtividade: 'TipoAtividade',
    MobileUser: 'MobileUser',
    MobileSession: 'MobileSession',
    MobileToken: 'MobileToken',
    User: 'User',
    Account: 'Account',
    Session: 'Session',
    VerificationToken: 'VerificationToken',
    Role: 'Role',
    RoleUser: 'RoleUser',
    Base: 'Base',
    TipoChecklist: 'TipoChecklist',
    Checklist: 'Checklist',
    ChecklistPergunta: 'ChecklistPergunta',
    ChecklistPerguntaRelacao: 'ChecklistPerguntaRelacao',
    ChecklistOpcaoResposta: 'ChecklistOpcaoResposta',
    ChecklistOpcaoRespostaRelacao: 'ChecklistOpcaoRespostaRelacao',
    ChecklistTipoVeiculoRelacao: 'ChecklistTipoVeiculoRelacao',
    ChecklistTipoEquipeRelacao: 'ChecklistTipoEquipeRelacao',
    Contrato: 'Contrato',
    MobileContratoPermissao: 'MobileContratoPermissao',
    EletricistaBaseHistorico: 'EletricistaBaseHistorico',
    Eletricista: 'Eletricista',
    Cargo: 'Cargo',
    EquipeBaseHistorico: 'EquipeBaseHistorico',
    TipoEquipe: 'TipoEquipe',
    Equipe: 'Equipe',
    EquipeSupervisor: 'EquipeSupervisor',
    TipoEscala: 'TipoEscala',
    TipoEscalaCicloPosicao: 'TipoEscalaCicloPosicao',
    TipoEscalaSemanaMascara: 'TipoEscalaSemanaMascara',
    EscalaEquipePeriodo: 'EscalaEquipePeriodo',
    SlotEscala: 'SlotEscala',
    EventoCobertura: 'EventoCobertura',
    EquipeHorarioVigencia: 'EquipeHorarioVigencia',
    HorarioAberturaCatalogo: 'HorarioAberturaCatalogo',
    EquipeTurnoHistorico: 'EquipeTurnoHistorico',
    Supervisor: 'Supervisor',
    Test: 'Test',
    Turno: 'Turno',
    TurnoEletricista: 'TurnoEletricista',
    VeiculoBaseHistorico: 'VeiculoBaseHistorico',
    TipoVeiculo: 'TipoVeiculo',
    Veiculo: 'Veiculo',
    VeiculoOdometro: 'VeiculoOdometro'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "apr" | "aprPergunta" | "aprPerguntaRelacao" | "aprOpcaoResposta" | "aprOpcaoRespostaRelacao" | "aprTipoAtividadeRelacao" | "tipoAtividade" | "mobileUser" | "mobileSession" | "mobileToken" | "user" | "account" | "session" | "verificationToken" | "role" | "roleUser" | "base" | "tipoChecklist" | "checklist" | "checklistPergunta" | "checklistPerguntaRelacao" | "checklistOpcaoResposta" | "checklistOpcaoRespostaRelacao" | "checklistTipoVeiculoRelacao" | "checklistTipoEquipeRelacao" | "contrato" | "mobileContratoPermissao" | "eletricistaBaseHistorico" | "eletricista" | "cargo" | "equipeBaseHistorico" | "tipoEquipe" | "equipe" | "equipeSupervisor" | "tipoEscala" | "tipoEscalaCicloPosicao" | "tipoEscalaSemanaMascara" | "escalaEquipePeriodo" | "slotEscala" | "eventoCobertura" | "equipeHorarioVigencia" | "horarioAberturaCatalogo" | "equipeTurnoHistorico" | "supervisor" | "test" | "turno" | "turnoEletricista" | "veiculoBaseHistorico" | "tipoVeiculo" | "veiculo" | "veiculoOdometro"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Apr: {
        payload: Prisma.$AprPayload<ExtArgs>
        fields: Prisma.AprFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AprFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AprFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPayload>
          }
          findFirst: {
            args: Prisma.AprFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AprFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPayload>
          }
          findMany: {
            args: Prisma.AprFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPayload>[]
          }
          create: {
            args: Prisma.AprCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPayload>
          }
          createMany: {
            args: Prisma.AprCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AprDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPayload>
          }
          update: {
            args: Prisma.AprUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPayload>
          }
          deleteMany: {
            args: Prisma.AprDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AprUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AprUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPayload>
          }
          aggregate: {
            args: Prisma.AprAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApr>
          }
          groupBy: {
            args: Prisma.AprGroupByArgs<ExtArgs>
            result: $Utils.Optional<AprGroupByOutputType>[]
          }
          count: {
            args: Prisma.AprCountArgs<ExtArgs>
            result: $Utils.Optional<AprCountAggregateOutputType> | number
          }
        }
      }
      AprPergunta: {
        payload: Prisma.$AprPerguntaPayload<ExtArgs>
        fields: Prisma.AprPerguntaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AprPerguntaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AprPerguntaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaPayload>
          }
          findFirst: {
            args: Prisma.AprPerguntaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AprPerguntaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaPayload>
          }
          findMany: {
            args: Prisma.AprPerguntaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaPayload>[]
          }
          create: {
            args: Prisma.AprPerguntaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaPayload>
          }
          createMany: {
            args: Prisma.AprPerguntaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AprPerguntaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaPayload>
          }
          update: {
            args: Prisma.AprPerguntaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaPayload>
          }
          deleteMany: {
            args: Prisma.AprPerguntaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AprPerguntaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AprPerguntaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaPayload>
          }
          aggregate: {
            args: Prisma.AprPerguntaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAprPergunta>
          }
          groupBy: {
            args: Prisma.AprPerguntaGroupByArgs<ExtArgs>
            result: $Utils.Optional<AprPerguntaGroupByOutputType>[]
          }
          count: {
            args: Prisma.AprPerguntaCountArgs<ExtArgs>
            result: $Utils.Optional<AprPerguntaCountAggregateOutputType> | number
          }
        }
      }
      AprPerguntaRelacao: {
        payload: Prisma.$AprPerguntaRelacaoPayload<ExtArgs>
        fields: Prisma.AprPerguntaRelacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AprPerguntaRelacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaRelacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AprPerguntaRelacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaRelacaoPayload>
          }
          findFirst: {
            args: Prisma.AprPerguntaRelacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaRelacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AprPerguntaRelacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaRelacaoPayload>
          }
          findMany: {
            args: Prisma.AprPerguntaRelacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaRelacaoPayload>[]
          }
          create: {
            args: Prisma.AprPerguntaRelacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaRelacaoPayload>
          }
          createMany: {
            args: Prisma.AprPerguntaRelacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AprPerguntaRelacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaRelacaoPayload>
          }
          update: {
            args: Prisma.AprPerguntaRelacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaRelacaoPayload>
          }
          deleteMany: {
            args: Prisma.AprPerguntaRelacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AprPerguntaRelacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AprPerguntaRelacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprPerguntaRelacaoPayload>
          }
          aggregate: {
            args: Prisma.AprPerguntaRelacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAprPerguntaRelacao>
          }
          groupBy: {
            args: Prisma.AprPerguntaRelacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AprPerguntaRelacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AprPerguntaRelacaoCountArgs<ExtArgs>
            result: $Utils.Optional<AprPerguntaRelacaoCountAggregateOutputType> | number
          }
        }
      }
      AprOpcaoResposta: {
        payload: Prisma.$AprOpcaoRespostaPayload<ExtArgs>
        fields: Prisma.AprOpcaoRespostaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AprOpcaoRespostaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AprOpcaoRespostaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaPayload>
          }
          findFirst: {
            args: Prisma.AprOpcaoRespostaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AprOpcaoRespostaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaPayload>
          }
          findMany: {
            args: Prisma.AprOpcaoRespostaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaPayload>[]
          }
          create: {
            args: Prisma.AprOpcaoRespostaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaPayload>
          }
          createMany: {
            args: Prisma.AprOpcaoRespostaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AprOpcaoRespostaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaPayload>
          }
          update: {
            args: Prisma.AprOpcaoRespostaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaPayload>
          }
          deleteMany: {
            args: Prisma.AprOpcaoRespostaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AprOpcaoRespostaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AprOpcaoRespostaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaPayload>
          }
          aggregate: {
            args: Prisma.AprOpcaoRespostaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAprOpcaoResposta>
          }
          groupBy: {
            args: Prisma.AprOpcaoRespostaGroupByArgs<ExtArgs>
            result: $Utils.Optional<AprOpcaoRespostaGroupByOutputType>[]
          }
          count: {
            args: Prisma.AprOpcaoRespostaCountArgs<ExtArgs>
            result: $Utils.Optional<AprOpcaoRespostaCountAggregateOutputType> | number
          }
        }
      }
      AprOpcaoRespostaRelacao: {
        payload: Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>
        fields: Prisma.AprOpcaoRespostaRelacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AprOpcaoRespostaRelacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaRelacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AprOpcaoRespostaRelacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaRelacaoPayload>
          }
          findFirst: {
            args: Prisma.AprOpcaoRespostaRelacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaRelacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AprOpcaoRespostaRelacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaRelacaoPayload>
          }
          findMany: {
            args: Prisma.AprOpcaoRespostaRelacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaRelacaoPayload>[]
          }
          create: {
            args: Prisma.AprOpcaoRespostaRelacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaRelacaoPayload>
          }
          createMany: {
            args: Prisma.AprOpcaoRespostaRelacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AprOpcaoRespostaRelacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaRelacaoPayload>
          }
          update: {
            args: Prisma.AprOpcaoRespostaRelacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaRelacaoPayload>
          }
          deleteMany: {
            args: Prisma.AprOpcaoRespostaRelacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AprOpcaoRespostaRelacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AprOpcaoRespostaRelacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprOpcaoRespostaRelacaoPayload>
          }
          aggregate: {
            args: Prisma.AprOpcaoRespostaRelacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAprOpcaoRespostaRelacao>
          }
          groupBy: {
            args: Prisma.AprOpcaoRespostaRelacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AprOpcaoRespostaRelacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AprOpcaoRespostaRelacaoCountArgs<ExtArgs>
            result: $Utils.Optional<AprOpcaoRespostaRelacaoCountAggregateOutputType> | number
          }
        }
      }
      AprTipoAtividadeRelacao: {
        payload: Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>
        fields: Prisma.AprTipoAtividadeRelacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AprTipoAtividadeRelacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprTipoAtividadeRelacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AprTipoAtividadeRelacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprTipoAtividadeRelacaoPayload>
          }
          findFirst: {
            args: Prisma.AprTipoAtividadeRelacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprTipoAtividadeRelacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AprTipoAtividadeRelacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprTipoAtividadeRelacaoPayload>
          }
          findMany: {
            args: Prisma.AprTipoAtividadeRelacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprTipoAtividadeRelacaoPayload>[]
          }
          create: {
            args: Prisma.AprTipoAtividadeRelacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprTipoAtividadeRelacaoPayload>
          }
          createMany: {
            args: Prisma.AprTipoAtividadeRelacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AprTipoAtividadeRelacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprTipoAtividadeRelacaoPayload>
          }
          update: {
            args: Prisma.AprTipoAtividadeRelacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprTipoAtividadeRelacaoPayload>
          }
          deleteMany: {
            args: Prisma.AprTipoAtividadeRelacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AprTipoAtividadeRelacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AprTipoAtividadeRelacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AprTipoAtividadeRelacaoPayload>
          }
          aggregate: {
            args: Prisma.AprTipoAtividadeRelacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAprTipoAtividadeRelacao>
          }
          groupBy: {
            args: Prisma.AprTipoAtividadeRelacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AprTipoAtividadeRelacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AprTipoAtividadeRelacaoCountArgs<ExtArgs>
            result: $Utils.Optional<AprTipoAtividadeRelacaoCountAggregateOutputType> | number
          }
        }
      }
      TipoAtividade: {
        payload: Prisma.$TipoAtividadePayload<ExtArgs>
        fields: Prisma.TipoAtividadeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoAtividadeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAtividadePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoAtividadeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAtividadePayload>
          }
          findFirst: {
            args: Prisma.TipoAtividadeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAtividadePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoAtividadeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAtividadePayload>
          }
          findMany: {
            args: Prisma.TipoAtividadeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAtividadePayload>[]
          }
          create: {
            args: Prisma.TipoAtividadeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAtividadePayload>
          }
          createMany: {
            args: Prisma.TipoAtividadeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TipoAtividadeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAtividadePayload>
          }
          update: {
            args: Prisma.TipoAtividadeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAtividadePayload>
          }
          deleteMany: {
            args: Prisma.TipoAtividadeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoAtividadeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoAtividadeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAtividadePayload>
          }
          aggregate: {
            args: Prisma.TipoAtividadeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoAtividade>
          }
          groupBy: {
            args: Prisma.TipoAtividadeGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoAtividadeGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoAtividadeCountArgs<ExtArgs>
            result: $Utils.Optional<TipoAtividadeCountAggregateOutputType> | number
          }
        }
      }
      MobileUser: {
        payload: Prisma.$MobileUserPayload<ExtArgs>
        fields: Prisma.MobileUserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MobileUserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileUserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MobileUserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileUserPayload>
          }
          findFirst: {
            args: Prisma.MobileUserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileUserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MobileUserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileUserPayload>
          }
          findMany: {
            args: Prisma.MobileUserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileUserPayload>[]
          }
          create: {
            args: Prisma.MobileUserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileUserPayload>
          }
          createMany: {
            args: Prisma.MobileUserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MobileUserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileUserPayload>
          }
          update: {
            args: Prisma.MobileUserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileUserPayload>
          }
          deleteMany: {
            args: Prisma.MobileUserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MobileUserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MobileUserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileUserPayload>
          }
          aggregate: {
            args: Prisma.MobileUserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMobileUser>
          }
          groupBy: {
            args: Prisma.MobileUserGroupByArgs<ExtArgs>
            result: $Utils.Optional<MobileUserGroupByOutputType>[]
          }
          count: {
            args: Prisma.MobileUserCountArgs<ExtArgs>
            result: $Utils.Optional<MobileUserCountAggregateOutputType> | number
          }
        }
      }
      MobileSession: {
        payload: Prisma.$MobileSessionPayload<ExtArgs>
        fields: Prisma.MobileSessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MobileSessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileSessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MobileSessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileSessionPayload>
          }
          findFirst: {
            args: Prisma.MobileSessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileSessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MobileSessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileSessionPayload>
          }
          findMany: {
            args: Prisma.MobileSessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileSessionPayload>[]
          }
          create: {
            args: Prisma.MobileSessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileSessionPayload>
          }
          createMany: {
            args: Prisma.MobileSessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MobileSessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileSessionPayload>
          }
          update: {
            args: Prisma.MobileSessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileSessionPayload>
          }
          deleteMany: {
            args: Prisma.MobileSessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MobileSessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MobileSessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileSessionPayload>
          }
          aggregate: {
            args: Prisma.MobileSessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMobileSession>
          }
          groupBy: {
            args: Prisma.MobileSessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<MobileSessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.MobileSessionCountArgs<ExtArgs>
            result: $Utils.Optional<MobileSessionCountAggregateOutputType> | number
          }
        }
      }
      MobileToken: {
        payload: Prisma.$MobileTokenPayload<ExtArgs>
        fields: Prisma.MobileTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MobileTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MobileTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileTokenPayload>
          }
          findFirst: {
            args: Prisma.MobileTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MobileTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileTokenPayload>
          }
          findMany: {
            args: Prisma.MobileTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileTokenPayload>[]
          }
          create: {
            args: Prisma.MobileTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileTokenPayload>
          }
          createMany: {
            args: Prisma.MobileTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MobileTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileTokenPayload>
          }
          update: {
            args: Prisma.MobileTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileTokenPayload>
          }
          deleteMany: {
            args: Prisma.MobileTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MobileTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MobileTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileTokenPayload>
          }
          aggregate: {
            args: Prisma.MobileTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMobileToken>
          }
          groupBy: {
            args: Prisma.MobileTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<MobileTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.MobileTokenCountArgs<ExtArgs>
            result: $Utils.Optional<MobileTokenCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      VerificationToken: {
        payload: Prisma.$VerificationTokenPayload<ExtArgs>
        fields: Prisma.VerificationTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findFirst: {
            args: Prisma.VerificationTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findMany: {
            args: Prisma.VerificationTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          create: {
            args: Prisma.VerificationTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          createMany: {
            args: Prisma.VerificationTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.VerificationTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          update: {
            args: Prisma.VerificationTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          deleteMany: {
            args: Prisma.VerificationTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VerificationTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          aggregate: {
            args: Prisma.VerificationTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationToken>
          }
          groupBy: {
            args: Prisma.VerificationTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationTokenCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      RoleUser: {
        payload: Prisma.$RoleUserPayload<ExtArgs>
        fields: Prisma.RoleUserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleUserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleUserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleUserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleUserPayload>
          }
          findFirst: {
            args: Prisma.RoleUserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleUserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleUserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleUserPayload>
          }
          findMany: {
            args: Prisma.RoleUserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleUserPayload>[]
          }
          create: {
            args: Prisma.RoleUserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleUserPayload>
          }
          createMany: {
            args: Prisma.RoleUserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RoleUserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleUserPayload>
          }
          update: {
            args: Prisma.RoleUserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleUserPayload>
          }
          deleteMany: {
            args: Prisma.RoleUserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RoleUserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleUserPayload>
          }
          aggregate: {
            args: Prisma.RoleUserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoleUser>
          }
          groupBy: {
            args: Prisma.RoleUserGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleUserGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleUserCountArgs<ExtArgs>
            result: $Utils.Optional<RoleUserCountAggregateOutputType> | number
          }
        }
      }
      Base: {
        payload: Prisma.$BasePayload<ExtArgs>
        fields: Prisma.BaseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BaseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BasePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BaseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BasePayload>
          }
          findFirst: {
            args: Prisma.BaseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BasePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BaseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BasePayload>
          }
          findMany: {
            args: Prisma.BaseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BasePayload>[]
          }
          create: {
            args: Prisma.BaseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BasePayload>
          }
          createMany: {
            args: Prisma.BaseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.BaseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BasePayload>
          }
          update: {
            args: Prisma.BaseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BasePayload>
          }
          deleteMany: {
            args: Prisma.BaseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BaseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BaseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BasePayload>
          }
          aggregate: {
            args: Prisma.BaseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBase>
          }
          groupBy: {
            args: Prisma.BaseGroupByArgs<ExtArgs>
            result: $Utils.Optional<BaseGroupByOutputType>[]
          }
          count: {
            args: Prisma.BaseCountArgs<ExtArgs>
            result: $Utils.Optional<BaseCountAggregateOutputType> | number
          }
        }
      }
      TipoChecklist: {
        payload: Prisma.$TipoChecklistPayload<ExtArgs>
        fields: Prisma.TipoChecklistFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoChecklistFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoChecklistPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoChecklistFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoChecklistPayload>
          }
          findFirst: {
            args: Prisma.TipoChecklistFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoChecklistPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoChecklistFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoChecklistPayload>
          }
          findMany: {
            args: Prisma.TipoChecklistFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoChecklistPayload>[]
          }
          create: {
            args: Prisma.TipoChecklistCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoChecklistPayload>
          }
          createMany: {
            args: Prisma.TipoChecklistCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TipoChecklistDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoChecklistPayload>
          }
          update: {
            args: Prisma.TipoChecklistUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoChecklistPayload>
          }
          deleteMany: {
            args: Prisma.TipoChecklistDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoChecklistUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoChecklistUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoChecklistPayload>
          }
          aggregate: {
            args: Prisma.TipoChecklistAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoChecklist>
          }
          groupBy: {
            args: Prisma.TipoChecklistGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoChecklistGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoChecklistCountArgs<ExtArgs>
            result: $Utils.Optional<TipoChecklistCountAggregateOutputType> | number
          }
        }
      }
      Checklist: {
        payload: Prisma.$ChecklistPayload<ExtArgs>
        fields: Prisma.ChecklistFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChecklistFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChecklistFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPayload>
          }
          findFirst: {
            args: Prisma.ChecklistFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChecklistFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPayload>
          }
          findMany: {
            args: Prisma.ChecklistFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPayload>[]
          }
          create: {
            args: Prisma.ChecklistCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPayload>
          }
          createMany: {
            args: Prisma.ChecklistCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ChecklistDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPayload>
          }
          update: {
            args: Prisma.ChecklistUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPayload>
          }
          deleteMany: {
            args: Prisma.ChecklistDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChecklistUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChecklistUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPayload>
          }
          aggregate: {
            args: Prisma.ChecklistAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChecklist>
          }
          groupBy: {
            args: Prisma.ChecklistGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChecklistGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChecklistCountArgs<ExtArgs>
            result: $Utils.Optional<ChecklistCountAggregateOutputType> | number
          }
        }
      }
      ChecklistPergunta: {
        payload: Prisma.$ChecklistPerguntaPayload<ExtArgs>
        fields: Prisma.ChecklistPerguntaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChecklistPerguntaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChecklistPerguntaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaPayload>
          }
          findFirst: {
            args: Prisma.ChecklistPerguntaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChecklistPerguntaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaPayload>
          }
          findMany: {
            args: Prisma.ChecklistPerguntaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaPayload>[]
          }
          create: {
            args: Prisma.ChecklistPerguntaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaPayload>
          }
          createMany: {
            args: Prisma.ChecklistPerguntaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ChecklistPerguntaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaPayload>
          }
          update: {
            args: Prisma.ChecklistPerguntaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaPayload>
          }
          deleteMany: {
            args: Prisma.ChecklistPerguntaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChecklistPerguntaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChecklistPerguntaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaPayload>
          }
          aggregate: {
            args: Prisma.ChecklistPerguntaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChecklistPergunta>
          }
          groupBy: {
            args: Prisma.ChecklistPerguntaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChecklistPerguntaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChecklistPerguntaCountArgs<ExtArgs>
            result: $Utils.Optional<ChecklistPerguntaCountAggregateOutputType> | number
          }
        }
      }
      ChecklistPerguntaRelacao: {
        payload: Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>
        fields: Prisma.ChecklistPerguntaRelacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChecklistPerguntaRelacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaRelacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChecklistPerguntaRelacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaRelacaoPayload>
          }
          findFirst: {
            args: Prisma.ChecklistPerguntaRelacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaRelacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChecklistPerguntaRelacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaRelacaoPayload>
          }
          findMany: {
            args: Prisma.ChecklistPerguntaRelacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaRelacaoPayload>[]
          }
          create: {
            args: Prisma.ChecklistPerguntaRelacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaRelacaoPayload>
          }
          createMany: {
            args: Prisma.ChecklistPerguntaRelacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ChecklistPerguntaRelacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaRelacaoPayload>
          }
          update: {
            args: Prisma.ChecklistPerguntaRelacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaRelacaoPayload>
          }
          deleteMany: {
            args: Prisma.ChecklistPerguntaRelacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChecklistPerguntaRelacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChecklistPerguntaRelacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistPerguntaRelacaoPayload>
          }
          aggregate: {
            args: Prisma.ChecklistPerguntaRelacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChecklistPerguntaRelacao>
          }
          groupBy: {
            args: Prisma.ChecklistPerguntaRelacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChecklistPerguntaRelacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChecklistPerguntaRelacaoCountArgs<ExtArgs>
            result: $Utils.Optional<ChecklistPerguntaRelacaoCountAggregateOutputType> | number
          }
        }
      }
      ChecklistOpcaoResposta: {
        payload: Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>
        fields: Prisma.ChecklistOpcaoRespostaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChecklistOpcaoRespostaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChecklistOpcaoRespostaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaPayload>
          }
          findFirst: {
            args: Prisma.ChecklistOpcaoRespostaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChecklistOpcaoRespostaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaPayload>
          }
          findMany: {
            args: Prisma.ChecklistOpcaoRespostaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaPayload>[]
          }
          create: {
            args: Prisma.ChecklistOpcaoRespostaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaPayload>
          }
          createMany: {
            args: Prisma.ChecklistOpcaoRespostaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ChecklistOpcaoRespostaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaPayload>
          }
          update: {
            args: Prisma.ChecklistOpcaoRespostaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaPayload>
          }
          deleteMany: {
            args: Prisma.ChecklistOpcaoRespostaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChecklistOpcaoRespostaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChecklistOpcaoRespostaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaPayload>
          }
          aggregate: {
            args: Prisma.ChecklistOpcaoRespostaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChecklistOpcaoResposta>
          }
          groupBy: {
            args: Prisma.ChecklistOpcaoRespostaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChecklistOpcaoRespostaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChecklistOpcaoRespostaCountArgs<ExtArgs>
            result: $Utils.Optional<ChecklistOpcaoRespostaCountAggregateOutputType> | number
          }
        }
      }
      ChecklistOpcaoRespostaRelacao: {
        payload: Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>
        fields: Prisma.ChecklistOpcaoRespostaRelacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload>
          }
          findFirst: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload>
          }
          findMany: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload>[]
          }
          create: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload>
          }
          createMany: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload>
          }
          update: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload>
          }
          deleteMany: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload>
          }
          aggregate: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChecklistOpcaoRespostaRelacao>
          }
          groupBy: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChecklistOpcaoRespostaRelacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChecklistOpcaoRespostaRelacaoCountArgs<ExtArgs>
            result: $Utils.Optional<ChecklistOpcaoRespostaRelacaoCountAggregateOutputType> | number
          }
        }
      }
      ChecklistTipoVeiculoRelacao: {
        payload: Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>
        fields: Prisma.ChecklistTipoVeiculoRelacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChecklistTipoVeiculoRelacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChecklistTipoVeiculoRelacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload>
          }
          findFirst: {
            args: Prisma.ChecklistTipoVeiculoRelacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChecklistTipoVeiculoRelacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload>
          }
          findMany: {
            args: Prisma.ChecklistTipoVeiculoRelacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload>[]
          }
          create: {
            args: Prisma.ChecklistTipoVeiculoRelacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload>
          }
          createMany: {
            args: Prisma.ChecklistTipoVeiculoRelacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ChecklistTipoVeiculoRelacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload>
          }
          update: {
            args: Prisma.ChecklistTipoVeiculoRelacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload>
          }
          deleteMany: {
            args: Prisma.ChecklistTipoVeiculoRelacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChecklistTipoVeiculoRelacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChecklistTipoVeiculoRelacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload>
          }
          aggregate: {
            args: Prisma.ChecklistTipoVeiculoRelacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChecklistTipoVeiculoRelacao>
          }
          groupBy: {
            args: Prisma.ChecklistTipoVeiculoRelacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChecklistTipoVeiculoRelacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChecklistTipoVeiculoRelacaoCountArgs<ExtArgs>
            result: $Utils.Optional<ChecklistTipoVeiculoRelacaoCountAggregateOutputType> | number
          }
        }
      }
      ChecklistTipoEquipeRelacao: {
        payload: Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>
        fields: Prisma.ChecklistTipoEquipeRelacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChecklistTipoEquipeRelacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoEquipeRelacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChecklistTipoEquipeRelacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoEquipeRelacaoPayload>
          }
          findFirst: {
            args: Prisma.ChecklistTipoEquipeRelacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoEquipeRelacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChecklistTipoEquipeRelacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoEquipeRelacaoPayload>
          }
          findMany: {
            args: Prisma.ChecklistTipoEquipeRelacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoEquipeRelacaoPayload>[]
          }
          create: {
            args: Prisma.ChecklistTipoEquipeRelacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoEquipeRelacaoPayload>
          }
          createMany: {
            args: Prisma.ChecklistTipoEquipeRelacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ChecklistTipoEquipeRelacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoEquipeRelacaoPayload>
          }
          update: {
            args: Prisma.ChecklistTipoEquipeRelacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoEquipeRelacaoPayload>
          }
          deleteMany: {
            args: Prisma.ChecklistTipoEquipeRelacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChecklistTipoEquipeRelacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChecklistTipoEquipeRelacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChecklistTipoEquipeRelacaoPayload>
          }
          aggregate: {
            args: Prisma.ChecklistTipoEquipeRelacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChecklistTipoEquipeRelacao>
          }
          groupBy: {
            args: Prisma.ChecklistTipoEquipeRelacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChecklistTipoEquipeRelacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChecklistTipoEquipeRelacaoCountArgs<ExtArgs>
            result: $Utils.Optional<ChecklistTipoEquipeRelacaoCountAggregateOutputType> | number
          }
        }
      }
      Contrato: {
        payload: Prisma.$ContratoPayload<ExtArgs>
        fields: Prisma.ContratoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContratoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContratoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContratoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContratoPayload>
          }
          findFirst: {
            args: Prisma.ContratoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContratoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContratoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContratoPayload>
          }
          findMany: {
            args: Prisma.ContratoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContratoPayload>[]
          }
          create: {
            args: Prisma.ContratoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContratoPayload>
          }
          createMany: {
            args: Prisma.ContratoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ContratoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContratoPayload>
          }
          update: {
            args: Prisma.ContratoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContratoPayload>
          }
          deleteMany: {
            args: Prisma.ContratoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContratoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ContratoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContratoPayload>
          }
          aggregate: {
            args: Prisma.ContratoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContrato>
          }
          groupBy: {
            args: Prisma.ContratoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContratoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContratoCountArgs<ExtArgs>
            result: $Utils.Optional<ContratoCountAggregateOutputType> | number
          }
        }
      }
      MobileContratoPermissao: {
        payload: Prisma.$MobileContratoPermissaoPayload<ExtArgs>
        fields: Prisma.MobileContratoPermissaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MobileContratoPermissaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileContratoPermissaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MobileContratoPermissaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileContratoPermissaoPayload>
          }
          findFirst: {
            args: Prisma.MobileContratoPermissaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileContratoPermissaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MobileContratoPermissaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileContratoPermissaoPayload>
          }
          findMany: {
            args: Prisma.MobileContratoPermissaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileContratoPermissaoPayload>[]
          }
          create: {
            args: Prisma.MobileContratoPermissaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileContratoPermissaoPayload>
          }
          createMany: {
            args: Prisma.MobileContratoPermissaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MobileContratoPermissaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileContratoPermissaoPayload>
          }
          update: {
            args: Prisma.MobileContratoPermissaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileContratoPermissaoPayload>
          }
          deleteMany: {
            args: Prisma.MobileContratoPermissaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MobileContratoPermissaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MobileContratoPermissaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MobileContratoPermissaoPayload>
          }
          aggregate: {
            args: Prisma.MobileContratoPermissaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMobileContratoPermissao>
          }
          groupBy: {
            args: Prisma.MobileContratoPermissaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<MobileContratoPermissaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.MobileContratoPermissaoCountArgs<ExtArgs>
            result: $Utils.Optional<MobileContratoPermissaoCountAggregateOutputType> | number
          }
        }
      }
      EletricistaBaseHistorico: {
        payload: Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>
        fields: Prisma.EletricistaBaseHistoricoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EletricistaBaseHistoricoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaBaseHistoricoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EletricistaBaseHistoricoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaBaseHistoricoPayload>
          }
          findFirst: {
            args: Prisma.EletricistaBaseHistoricoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaBaseHistoricoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EletricistaBaseHistoricoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaBaseHistoricoPayload>
          }
          findMany: {
            args: Prisma.EletricistaBaseHistoricoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaBaseHistoricoPayload>[]
          }
          create: {
            args: Prisma.EletricistaBaseHistoricoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaBaseHistoricoPayload>
          }
          createMany: {
            args: Prisma.EletricistaBaseHistoricoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EletricistaBaseHistoricoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaBaseHistoricoPayload>
          }
          update: {
            args: Prisma.EletricistaBaseHistoricoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaBaseHistoricoPayload>
          }
          deleteMany: {
            args: Prisma.EletricistaBaseHistoricoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EletricistaBaseHistoricoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EletricistaBaseHistoricoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaBaseHistoricoPayload>
          }
          aggregate: {
            args: Prisma.EletricistaBaseHistoricoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEletricistaBaseHistorico>
          }
          groupBy: {
            args: Prisma.EletricistaBaseHistoricoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EletricistaBaseHistoricoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EletricistaBaseHistoricoCountArgs<ExtArgs>
            result: $Utils.Optional<EletricistaBaseHistoricoCountAggregateOutputType> | number
          }
        }
      }
      Eletricista: {
        payload: Prisma.$EletricistaPayload<ExtArgs>
        fields: Prisma.EletricistaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EletricistaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EletricistaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaPayload>
          }
          findFirst: {
            args: Prisma.EletricistaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EletricistaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaPayload>
          }
          findMany: {
            args: Prisma.EletricistaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaPayload>[]
          }
          create: {
            args: Prisma.EletricistaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaPayload>
          }
          createMany: {
            args: Prisma.EletricistaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EletricistaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaPayload>
          }
          update: {
            args: Prisma.EletricistaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaPayload>
          }
          deleteMany: {
            args: Prisma.EletricistaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EletricistaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EletricistaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EletricistaPayload>
          }
          aggregate: {
            args: Prisma.EletricistaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEletricista>
          }
          groupBy: {
            args: Prisma.EletricistaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EletricistaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EletricistaCountArgs<ExtArgs>
            result: $Utils.Optional<EletricistaCountAggregateOutputType> | number
          }
        }
      }
      Cargo: {
        payload: Prisma.$CargoPayload<ExtArgs>
        fields: Prisma.CargoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CargoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CargoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          findFirst: {
            args: Prisma.CargoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CargoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          findMany: {
            args: Prisma.CargoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>[]
          }
          create: {
            args: Prisma.CargoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          createMany: {
            args: Prisma.CargoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CargoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          update: {
            args: Prisma.CargoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          deleteMany: {
            args: Prisma.CargoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CargoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CargoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          aggregate: {
            args: Prisma.CargoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCargo>
          }
          groupBy: {
            args: Prisma.CargoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CargoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CargoCountArgs<ExtArgs>
            result: $Utils.Optional<CargoCountAggregateOutputType> | number
          }
        }
      }
      EquipeBaseHistorico: {
        payload: Prisma.$EquipeBaseHistoricoPayload<ExtArgs>
        fields: Prisma.EquipeBaseHistoricoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipeBaseHistoricoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeBaseHistoricoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipeBaseHistoricoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeBaseHistoricoPayload>
          }
          findFirst: {
            args: Prisma.EquipeBaseHistoricoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeBaseHistoricoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipeBaseHistoricoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeBaseHistoricoPayload>
          }
          findMany: {
            args: Prisma.EquipeBaseHistoricoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeBaseHistoricoPayload>[]
          }
          create: {
            args: Prisma.EquipeBaseHistoricoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeBaseHistoricoPayload>
          }
          createMany: {
            args: Prisma.EquipeBaseHistoricoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EquipeBaseHistoricoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeBaseHistoricoPayload>
          }
          update: {
            args: Prisma.EquipeBaseHistoricoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeBaseHistoricoPayload>
          }
          deleteMany: {
            args: Prisma.EquipeBaseHistoricoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipeBaseHistoricoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EquipeBaseHistoricoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeBaseHistoricoPayload>
          }
          aggregate: {
            args: Prisma.EquipeBaseHistoricoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipeBaseHistorico>
          }
          groupBy: {
            args: Prisma.EquipeBaseHistoricoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipeBaseHistoricoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipeBaseHistoricoCountArgs<ExtArgs>
            result: $Utils.Optional<EquipeBaseHistoricoCountAggregateOutputType> | number
          }
        }
      }
      TipoEquipe: {
        payload: Prisma.$TipoEquipePayload<ExtArgs>
        fields: Prisma.TipoEquipeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoEquipeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEquipePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoEquipeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEquipePayload>
          }
          findFirst: {
            args: Prisma.TipoEquipeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEquipePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoEquipeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEquipePayload>
          }
          findMany: {
            args: Prisma.TipoEquipeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEquipePayload>[]
          }
          create: {
            args: Prisma.TipoEquipeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEquipePayload>
          }
          createMany: {
            args: Prisma.TipoEquipeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TipoEquipeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEquipePayload>
          }
          update: {
            args: Prisma.TipoEquipeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEquipePayload>
          }
          deleteMany: {
            args: Prisma.TipoEquipeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoEquipeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoEquipeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEquipePayload>
          }
          aggregate: {
            args: Prisma.TipoEquipeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoEquipe>
          }
          groupBy: {
            args: Prisma.TipoEquipeGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoEquipeGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoEquipeCountArgs<ExtArgs>
            result: $Utils.Optional<TipoEquipeCountAggregateOutputType> | number
          }
        }
      }
      Equipe: {
        payload: Prisma.$EquipePayload<ExtArgs>
        fields: Prisma.EquipeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipePayload>
          }
          findFirst: {
            args: Prisma.EquipeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipePayload>
          }
          findMany: {
            args: Prisma.EquipeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipePayload>[]
          }
          create: {
            args: Prisma.EquipeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipePayload>
          }
          createMany: {
            args: Prisma.EquipeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EquipeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipePayload>
          }
          update: {
            args: Prisma.EquipeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipePayload>
          }
          deleteMany: {
            args: Prisma.EquipeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EquipeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipePayload>
          }
          aggregate: {
            args: Prisma.EquipeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipe>
          }
          groupBy: {
            args: Prisma.EquipeGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipeGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipeCountArgs<ExtArgs>
            result: $Utils.Optional<EquipeCountAggregateOutputType> | number
          }
        }
      }
      EquipeSupervisor: {
        payload: Prisma.$EquipeSupervisorPayload<ExtArgs>
        fields: Prisma.EquipeSupervisorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipeSupervisorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeSupervisorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipeSupervisorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeSupervisorPayload>
          }
          findFirst: {
            args: Prisma.EquipeSupervisorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeSupervisorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipeSupervisorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeSupervisorPayload>
          }
          findMany: {
            args: Prisma.EquipeSupervisorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeSupervisorPayload>[]
          }
          create: {
            args: Prisma.EquipeSupervisorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeSupervisorPayload>
          }
          createMany: {
            args: Prisma.EquipeSupervisorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EquipeSupervisorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeSupervisorPayload>
          }
          update: {
            args: Prisma.EquipeSupervisorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeSupervisorPayload>
          }
          deleteMany: {
            args: Prisma.EquipeSupervisorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipeSupervisorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EquipeSupervisorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeSupervisorPayload>
          }
          aggregate: {
            args: Prisma.EquipeSupervisorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipeSupervisor>
          }
          groupBy: {
            args: Prisma.EquipeSupervisorGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipeSupervisorGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipeSupervisorCountArgs<ExtArgs>
            result: $Utils.Optional<EquipeSupervisorCountAggregateOutputType> | number
          }
        }
      }
      TipoEscala: {
        payload: Prisma.$TipoEscalaPayload<ExtArgs>
        fields: Prisma.TipoEscalaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoEscalaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoEscalaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaPayload>
          }
          findFirst: {
            args: Prisma.TipoEscalaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoEscalaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaPayload>
          }
          findMany: {
            args: Prisma.TipoEscalaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaPayload>[]
          }
          create: {
            args: Prisma.TipoEscalaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaPayload>
          }
          createMany: {
            args: Prisma.TipoEscalaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TipoEscalaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaPayload>
          }
          update: {
            args: Prisma.TipoEscalaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaPayload>
          }
          deleteMany: {
            args: Prisma.TipoEscalaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoEscalaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoEscalaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaPayload>
          }
          aggregate: {
            args: Prisma.TipoEscalaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoEscala>
          }
          groupBy: {
            args: Prisma.TipoEscalaGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoEscalaGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoEscalaCountArgs<ExtArgs>
            result: $Utils.Optional<TipoEscalaCountAggregateOutputType> | number
          }
        }
      }
      TipoEscalaCicloPosicao: {
        payload: Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>
        fields: Prisma.TipoEscalaCicloPosicaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoEscalaCicloPosicaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaCicloPosicaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoEscalaCicloPosicaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaCicloPosicaoPayload>
          }
          findFirst: {
            args: Prisma.TipoEscalaCicloPosicaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaCicloPosicaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoEscalaCicloPosicaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaCicloPosicaoPayload>
          }
          findMany: {
            args: Prisma.TipoEscalaCicloPosicaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaCicloPosicaoPayload>[]
          }
          create: {
            args: Prisma.TipoEscalaCicloPosicaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaCicloPosicaoPayload>
          }
          createMany: {
            args: Prisma.TipoEscalaCicloPosicaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TipoEscalaCicloPosicaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaCicloPosicaoPayload>
          }
          update: {
            args: Prisma.TipoEscalaCicloPosicaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaCicloPosicaoPayload>
          }
          deleteMany: {
            args: Prisma.TipoEscalaCicloPosicaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoEscalaCicloPosicaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoEscalaCicloPosicaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaCicloPosicaoPayload>
          }
          aggregate: {
            args: Prisma.TipoEscalaCicloPosicaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoEscalaCicloPosicao>
          }
          groupBy: {
            args: Prisma.TipoEscalaCicloPosicaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoEscalaCicloPosicaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoEscalaCicloPosicaoCountArgs<ExtArgs>
            result: $Utils.Optional<TipoEscalaCicloPosicaoCountAggregateOutputType> | number
          }
        }
      }
      TipoEscalaSemanaMascara: {
        payload: Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>
        fields: Prisma.TipoEscalaSemanaMascaraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoEscalaSemanaMascaraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaSemanaMascaraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoEscalaSemanaMascaraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaSemanaMascaraPayload>
          }
          findFirst: {
            args: Prisma.TipoEscalaSemanaMascaraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaSemanaMascaraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoEscalaSemanaMascaraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaSemanaMascaraPayload>
          }
          findMany: {
            args: Prisma.TipoEscalaSemanaMascaraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaSemanaMascaraPayload>[]
          }
          create: {
            args: Prisma.TipoEscalaSemanaMascaraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaSemanaMascaraPayload>
          }
          createMany: {
            args: Prisma.TipoEscalaSemanaMascaraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TipoEscalaSemanaMascaraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaSemanaMascaraPayload>
          }
          update: {
            args: Prisma.TipoEscalaSemanaMascaraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaSemanaMascaraPayload>
          }
          deleteMany: {
            args: Prisma.TipoEscalaSemanaMascaraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoEscalaSemanaMascaraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoEscalaSemanaMascaraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoEscalaSemanaMascaraPayload>
          }
          aggregate: {
            args: Prisma.TipoEscalaSemanaMascaraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoEscalaSemanaMascara>
          }
          groupBy: {
            args: Prisma.TipoEscalaSemanaMascaraGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoEscalaSemanaMascaraGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoEscalaSemanaMascaraCountArgs<ExtArgs>
            result: $Utils.Optional<TipoEscalaSemanaMascaraCountAggregateOutputType> | number
          }
        }
      }
      EscalaEquipePeriodo: {
        payload: Prisma.$EscalaEquipePeriodoPayload<ExtArgs>
        fields: Prisma.EscalaEquipePeriodoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EscalaEquipePeriodoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscalaEquipePeriodoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EscalaEquipePeriodoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscalaEquipePeriodoPayload>
          }
          findFirst: {
            args: Prisma.EscalaEquipePeriodoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscalaEquipePeriodoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EscalaEquipePeriodoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscalaEquipePeriodoPayload>
          }
          findMany: {
            args: Prisma.EscalaEquipePeriodoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscalaEquipePeriodoPayload>[]
          }
          create: {
            args: Prisma.EscalaEquipePeriodoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscalaEquipePeriodoPayload>
          }
          createMany: {
            args: Prisma.EscalaEquipePeriodoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EscalaEquipePeriodoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscalaEquipePeriodoPayload>
          }
          update: {
            args: Prisma.EscalaEquipePeriodoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscalaEquipePeriodoPayload>
          }
          deleteMany: {
            args: Prisma.EscalaEquipePeriodoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EscalaEquipePeriodoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EscalaEquipePeriodoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscalaEquipePeriodoPayload>
          }
          aggregate: {
            args: Prisma.EscalaEquipePeriodoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEscalaEquipePeriodo>
          }
          groupBy: {
            args: Prisma.EscalaEquipePeriodoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EscalaEquipePeriodoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EscalaEquipePeriodoCountArgs<ExtArgs>
            result: $Utils.Optional<EscalaEquipePeriodoCountAggregateOutputType> | number
          }
        }
      }
      SlotEscala: {
        payload: Prisma.$SlotEscalaPayload<ExtArgs>
        fields: Prisma.SlotEscalaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SlotEscalaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlotEscalaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SlotEscalaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlotEscalaPayload>
          }
          findFirst: {
            args: Prisma.SlotEscalaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlotEscalaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SlotEscalaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlotEscalaPayload>
          }
          findMany: {
            args: Prisma.SlotEscalaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlotEscalaPayload>[]
          }
          create: {
            args: Prisma.SlotEscalaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlotEscalaPayload>
          }
          createMany: {
            args: Prisma.SlotEscalaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SlotEscalaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlotEscalaPayload>
          }
          update: {
            args: Prisma.SlotEscalaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlotEscalaPayload>
          }
          deleteMany: {
            args: Prisma.SlotEscalaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SlotEscalaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SlotEscalaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SlotEscalaPayload>
          }
          aggregate: {
            args: Prisma.SlotEscalaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSlotEscala>
          }
          groupBy: {
            args: Prisma.SlotEscalaGroupByArgs<ExtArgs>
            result: $Utils.Optional<SlotEscalaGroupByOutputType>[]
          }
          count: {
            args: Prisma.SlotEscalaCountArgs<ExtArgs>
            result: $Utils.Optional<SlotEscalaCountAggregateOutputType> | number
          }
        }
      }
      EventoCobertura: {
        payload: Prisma.$EventoCoberturaPayload<ExtArgs>
        fields: Prisma.EventoCoberturaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventoCoberturaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventoCoberturaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventoCoberturaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventoCoberturaPayload>
          }
          findFirst: {
            args: Prisma.EventoCoberturaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventoCoberturaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventoCoberturaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventoCoberturaPayload>
          }
          findMany: {
            args: Prisma.EventoCoberturaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventoCoberturaPayload>[]
          }
          create: {
            args: Prisma.EventoCoberturaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventoCoberturaPayload>
          }
          createMany: {
            args: Prisma.EventoCoberturaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EventoCoberturaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventoCoberturaPayload>
          }
          update: {
            args: Prisma.EventoCoberturaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventoCoberturaPayload>
          }
          deleteMany: {
            args: Prisma.EventoCoberturaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventoCoberturaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EventoCoberturaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventoCoberturaPayload>
          }
          aggregate: {
            args: Prisma.EventoCoberturaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEventoCobertura>
          }
          groupBy: {
            args: Prisma.EventoCoberturaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventoCoberturaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventoCoberturaCountArgs<ExtArgs>
            result: $Utils.Optional<EventoCoberturaCountAggregateOutputType> | number
          }
        }
      }
      EquipeHorarioVigencia: {
        payload: Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>
        fields: Prisma.EquipeHorarioVigenciaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipeHorarioVigenciaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeHorarioVigenciaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipeHorarioVigenciaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeHorarioVigenciaPayload>
          }
          findFirst: {
            args: Prisma.EquipeHorarioVigenciaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeHorarioVigenciaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipeHorarioVigenciaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeHorarioVigenciaPayload>
          }
          findMany: {
            args: Prisma.EquipeHorarioVigenciaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeHorarioVigenciaPayload>[]
          }
          create: {
            args: Prisma.EquipeHorarioVigenciaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeHorarioVigenciaPayload>
          }
          createMany: {
            args: Prisma.EquipeHorarioVigenciaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EquipeHorarioVigenciaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeHorarioVigenciaPayload>
          }
          update: {
            args: Prisma.EquipeHorarioVigenciaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeHorarioVigenciaPayload>
          }
          deleteMany: {
            args: Prisma.EquipeHorarioVigenciaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipeHorarioVigenciaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EquipeHorarioVigenciaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeHorarioVigenciaPayload>
          }
          aggregate: {
            args: Prisma.EquipeHorarioVigenciaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipeHorarioVigencia>
          }
          groupBy: {
            args: Prisma.EquipeHorarioVigenciaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipeHorarioVigenciaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipeHorarioVigenciaCountArgs<ExtArgs>
            result: $Utils.Optional<EquipeHorarioVigenciaCountAggregateOutputType> | number
          }
        }
      }
      HorarioAberturaCatalogo: {
        payload: Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>
        fields: Prisma.HorarioAberturaCatalogoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HorarioAberturaCatalogoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioAberturaCatalogoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HorarioAberturaCatalogoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioAberturaCatalogoPayload>
          }
          findFirst: {
            args: Prisma.HorarioAberturaCatalogoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioAberturaCatalogoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HorarioAberturaCatalogoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioAberturaCatalogoPayload>
          }
          findMany: {
            args: Prisma.HorarioAberturaCatalogoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioAberturaCatalogoPayload>[]
          }
          create: {
            args: Prisma.HorarioAberturaCatalogoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioAberturaCatalogoPayload>
          }
          createMany: {
            args: Prisma.HorarioAberturaCatalogoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.HorarioAberturaCatalogoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioAberturaCatalogoPayload>
          }
          update: {
            args: Prisma.HorarioAberturaCatalogoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioAberturaCatalogoPayload>
          }
          deleteMany: {
            args: Prisma.HorarioAberturaCatalogoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HorarioAberturaCatalogoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HorarioAberturaCatalogoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioAberturaCatalogoPayload>
          }
          aggregate: {
            args: Prisma.HorarioAberturaCatalogoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHorarioAberturaCatalogo>
          }
          groupBy: {
            args: Prisma.HorarioAberturaCatalogoGroupByArgs<ExtArgs>
            result: $Utils.Optional<HorarioAberturaCatalogoGroupByOutputType>[]
          }
          count: {
            args: Prisma.HorarioAberturaCatalogoCountArgs<ExtArgs>
            result: $Utils.Optional<HorarioAberturaCatalogoCountAggregateOutputType> | number
          }
        }
      }
      EquipeTurnoHistorico: {
        payload: Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>
        fields: Prisma.EquipeTurnoHistoricoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipeTurnoHistoricoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeTurnoHistoricoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipeTurnoHistoricoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeTurnoHistoricoPayload>
          }
          findFirst: {
            args: Prisma.EquipeTurnoHistoricoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeTurnoHistoricoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipeTurnoHistoricoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeTurnoHistoricoPayload>
          }
          findMany: {
            args: Prisma.EquipeTurnoHistoricoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeTurnoHistoricoPayload>[]
          }
          create: {
            args: Prisma.EquipeTurnoHistoricoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeTurnoHistoricoPayload>
          }
          createMany: {
            args: Prisma.EquipeTurnoHistoricoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EquipeTurnoHistoricoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeTurnoHistoricoPayload>
          }
          update: {
            args: Prisma.EquipeTurnoHistoricoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeTurnoHistoricoPayload>
          }
          deleteMany: {
            args: Prisma.EquipeTurnoHistoricoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipeTurnoHistoricoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EquipeTurnoHistoricoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipeTurnoHistoricoPayload>
          }
          aggregate: {
            args: Prisma.EquipeTurnoHistoricoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipeTurnoHistorico>
          }
          groupBy: {
            args: Prisma.EquipeTurnoHistoricoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipeTurnoHistoricoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipeTurnoHistoricoCountArgs<ExtArgs>
            result: $Utils.Optional<EquipeTurnoHistoricoCountAggregateOutputType> | number
          }
        }
      }
      Supervisor: {
        payload: Prisma.$SupervisorPayload<ExtArgs>
        fields: Prisma.SupervisorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupervisorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupervisorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupervisorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupervisorPayload>
          }
          findFirst: {
            args: Prisma.SupervisorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupervisorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupervisorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupervisorPayload>
          }
          findMany: {
            args: Prisma.SupervisorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupervisorPayload>[]
          }
          create: {
            args: Prisma.SupervisorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupervisorPayload>
          }
          createMany: {
            args: Prisma.SupervisorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SupervisorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupervisorPayload>
          }
          update: {
            args: Prisma.SupervisorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupervisorPayload>
          }
          deleteMany: {
            args: Prisma.SupervisorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupervisorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SupervisorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupervisorPayload>
          }
          aggregate: {
            args: Prisma.SupervisorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupervisor>
          }
          groupBy: {
            args: Prisma.SupervisorGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupervisorGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupervisorCountArgs<ExtArgs>
            result: $Utils.Optional<SupervisorCountAggregateOutputType> | number
          }
        }
      }
      Test: {
        payload: Prisma.$TestPayload<ExtArgs>
        fields: Prisma.TestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestPayload>
          }
          findFirst: {
            args: Prisma.TestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestPayload>
          }
          findMany: {
            args: Prisma.TestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestPayload>[]
          }
          create: {
            args: Prisma.TestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestPayload>
          }
          createMany: {
            args: Prisma.TestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestPayload>
          }
          update: {
            args: Prisma.TestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestPayload>
          }
          deleteMany: {
            args: Prisma.TestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestPayload>
          }
          aggregate: {
            args: Prisma.TestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTest>
          }
          groupBy: {
            args: Prisma.TestGroupByArgs<ExtArgs>
            result: $Utils.Optional<TestGroupByOutputType>[]
          }
          count: {
            args: Prisma.TestCountArgs<ExtArgs>
            result: $Utils.Optional<TestCountAggregateOutputType> | number
          }
        }
      }
      Turno: {
        payload: Prisma.$TurnoPayload<ExtArgs>
        fields: Prisma.TurnoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TurnoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TurnoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoPayload>
          }
          findFirst: {
            args: Prisma.TurnoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TurnoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoPayload>
          }
          findMany: {
            args: Prisma.TurnoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoPayload>[]
          }
          create: {
            args: Prisma.TurnoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoPayload>
          }
          createMany: {
            args: Prisma.TurnoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TurnoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoPayload>
          }
          update: {
            args: Prisma.TurnoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoPayload>
          }
          deleteMany: {
            args: Prisma.TurnoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TurnoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TurnoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoPayload>
          }
          aggregate: {
            args: Prisma.TurnoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTurno>
          }
          groupBy: {
            args: Prisma.TurnoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TurnoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TurnoCountArgs<ExtArgs>
            result: $Utils.Optional<TurnoCountAggregateOutputType> | number
          }
        }
      }
      TurnoEletricista: {
        payload: Prisma.$TurnoEletricistaPayload<ExtArgs>
        fields: Prisma.TurnoEletricistaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TurnoEletricistaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoEletricistaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TurnoEletricistaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoEletricistaPayload>
          }
          findFirst: {
            args: Prisma.TurnoEletricistaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoEletricistaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TurnoEletricistaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoEletricistaPayload>
          }
          findMany: {
            args: Prisma.TurnoEletricistaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoEletricistaPayload>[]
          }
          create: {
            args: Prisma.TurnoEletricistaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoEletricistaPayload>
          }
          createMany: {
            args: Prisma.TurnoEletricistaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TurnoEletricistaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoEletricistaPayload>
          }
          update: {
            args: Prisma.TurnoEletricistaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoEletricistaPayload>
          }
          deleteMany: {
            args: Prisma.TurnoEletricistaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TurnoEletricistaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TurnoEletricistaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TurnoEletricistaPayload>
          }
          aggregate: {
            args: Prisma.TurnoEletricistaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTurnoEletricista>
          }
          groupBy: {
            args: Prisma.TurnoEletricistaGroupByArgs<ExtArgs>
            result: $Utils.Optional<TurnoEletricistaGroupByOutputType>[]
          }
          count: {
            args: Prisma.TurnoEletricistaCountArgs<ExtArgs>
            result: $Utils.Optional<TurnoEletricistaCountAggregateOutputType> | number
          }
        }
      }
      VeiculoBaseHistorico: {
        payload: Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>
        fields: Prisma.VeiculoBaseHistoricoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VeiculoBaseHistoricoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoBaseHistoricoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VeiculoBaseHistoricoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoBaseHistoricoPayload>
          }
          findFirst: {
            args: Prisma.VeiculoBaseHistoricoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoBaseHistoricoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VeiculoBaseHistoricoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoBaseHistoricoPayload>
          }
          findMany: {
            args: Prisma.VeiculoBaseHistoricoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoBaseHistoricoPayload>[]
          }
          create: {
            args: Prisma.VeiculoBaseHistoricoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoBaseHistoricoPayload>
          }
          createMany: {
            args: Prisma.VeiculoBaseHistoricoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.VeiculoBaseHistoricoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoBaseHistoricoPayload>
          }
          update: {
            args: Prisma.VeiculoBaseHistoricoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoBaseHistoricoPayload>
          }
          deleteMany: {
            args: Prisma.VeiculoBaseHistoricoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VeiculoBaseHistoricoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VeiculoBaseHistoricoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoBaseHistoricoPayload>
          }
          aggregate: {
            args: Prisma.VeiculoBaseHistoricoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVeiculoBaseHistorico>
          }
          groupBy: {
            args: Prisma.VeiculoBaseHistoricoGroupByArgs<ExtArgs>
            result: $Utils.Optional<VeiculoBaseHistoricoGroupByOutputType>[]
          }
          count: {
            args: Prisma.VeiculoBaseHistoricoCountArgs<ExtArgs>
            result: $Utils.Optional<VeiculoBaseHistoricoCountAggregateOutputType> | number
          }
        }
      }
      TipoVeiculo: {
        payload: Prisma.$TipoVeiculoPayload<ExtArgs>
        fields: Prisma.TipoVeiculoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoVeiculoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoVeiculoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoVeiculoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoVeiculoPayload>
          }
          findFirst: {
            args: Prisma.TipoVeiculoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoVeiculoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoVeiculoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoVeiculoPayload>
          }
          findMany: {
            args: Prisma.TipoVeiculoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoVeiculoPayload>[]
          }
          create: {
            args: Prisma.TipoVeiculoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoVeiculoPayload>
          }
          createMany: {
            args: Prisma.TipoVeiculoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TipoVeiculoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoVeiculoPayload>
          }
          update: {
            args: Prisma.TipoVeiculoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoVeiculoPayload>
          }
          deleteMany: {
            args: Prisma.TipoVeiculoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoVeiculoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoVeiculoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoVeiculoPayload>
          }
          aggregate: {
            args: Prisma.TipoVeiculoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoVeiculo>
          }
          groupBy: {
            args: Prisma.TipoVeiculoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoVeiculoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoVeiculoCountArgs<ExtArgs>
            result: $Utils.Optional<TipoVeiculoCountAggregateOutputType> | number
          }
        }
      }
      Veiculo: {
        payload: Prisma.$VeiculoPayload<ExtArgs>
        fields: Prisma.VeiculoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VeiculoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VeiculoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoPayload>
          }
          findFirst: {
            args: Prisma.VeiculoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VeiculoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoPayload>
          }
          findMany: {
            args: Prisma.VeiculoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoPayload>[]
          }
          create: {
            args: Prisma.VeiculoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoPayload>
          }
          createMany: {
            args: Prisma.VeiculoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.VeiculoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoPayload>
          }
          update: {
            args: Prisma.VeiculoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoPayload>
          }
          deleteMany: {
            args: Prisma.VeiculoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VeiculoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VeiculoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoPayload>
          }
          aggregate: {
            args: Prisma.VeiculoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVeiculo>
          }
          groupBy: {
            args: Prisma.VeiculoGroupByArgs<ExtArgs>
            result: $Utils.Optional<VeiculoGroupByOutputType>[]
          }
          count: {
            args: Prisma.VeiculoCountArgs<ExtArgs>
            result: $Utils.Optional<VeiculoCountAggregateOutputType> | number
          }
        }
      }
      VeiculoOdometro: {
        payload: Prisma.$VeiculoOdometroPayload<ExtArgs>
        fields: Prisma.VeiculoOdometroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VeiculoOdometroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoOdometroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VeiculoOdometroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoOdometroPayload>
          }
          findFirst: {
            args: Prisma.VeiculoOdometroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoOdometroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VeiculoOdometroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoOdometroPayload>
          }
          findMany: {
            args: Prisma.VeiculoOdometroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoOdometroPayload>[]
          }
          create: {
            args: Prisma.VeiculoOdometroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoOdometroPayload>
          }
          createMany: {
            args: Prisma.VeiculoOdometroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.VeiculoOdometroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoOdometroPayload>
          }
          update: {
            args: Prisma.VeiculoOdometroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoOdometroPayload>
          }
          deleteMany: {
            args: Prisma.VeiculoOdometroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VeiculoOdometroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VeiculoOdometroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VeiculoOdometroPayload>
          }
          aggregate: {
            args: Prisma.VeiculoOdometroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVeiculoOdometro>
          }
          groupBy: {
            args: Prisma.VeiculoOdometroGroupByArgs<ExtArgs>
            result: $Utils.Optional<VeiculoOdometroGroupByOutputType>[]
          }
          count: {
            args: Prisma.VeiculoOdometroCountArgs<ExtArgs>
            result: $Utils.Optional<VeiculoOdometroCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    apr?: AprOmit
    aprPergunta?: AprPerguntaOmit
    aprPerguntaRelacao?: AprPerguntaRelacaoOmit
    aprOpcaoResposta?: AprOpcaoRespostaOmit
    aprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoOmit
    aprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoOmit
    tipoAtividade?: TipoAtividadeOmit
    mobileUser?: MobileUserOmit
    mobileSession?: MobileSessionOmit
    mobileToken?: MobileTokenOmit
    user?: UserOmit
    account?: AccountOmit
    session?: SessionOmit
    verificationToken?: VerificationTokenOmit
    role?: RoleOmit
    roleUser?: RoleUserOmit
    base?: BaseOmit
    tipoChecklist?: TipoChecklistOmit
    checklist?: ChecklistOmit
    checklistPergunta?: ChecklistPerguntaOmit
    checklistPerguntaRelacao?: ChecklistPerguntaRelacaoOmit
    checklistOpcaoResposta?: ChecklistOpcaoRespostaOmit
    checklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoOmit
    checklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoOmit
    checklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoOmit
    contrato?: ContratoOmit
    mobileContratoPermissao?: MobileContratoPermissaoOmit
    eletricistaBaseHistorico?: EletricistaBaseHistoricoOmit
    eletricista?: EletricistaOmit
    cargo?: CargoOmit
    equipeBaseHistorico?: EquipeBaseHistoricoOmit
    tipoEquipe?: TipoEquipeOmit
    equipe?: EquipeOmit
    equipeSupervisor?: EquipeSupervisorOmit
    tipoEscala?: TipoEscalaOmit
    tipoEscalaCicloPosicao?: TipoEscalaCicloPosicaoOmit
    tipoEscalaSemanaMascara?: TipoEscalaSemanaMascaraOmit
    escalaEquipePeriodo?: EscalaEquipePeriodoOmit
    slotEscala?: SlotEscalaOmit
    eventoCobertura?: EventoCoberturaOmit
    equipeHorarioVigencia?: EquipeHorarioVigenciaOmit
    horarioAberturaCatalogo?: HorarioAberturaCatalogoOmit
    equipeTurnoHistorico?: EquipeTurnoHistoricoOmit
    supervisor?: SupervisorOmit
    test?: TestOmit
    turno?: TurnoOmit
    turnoEletricista?: TurnoEletricistaOmit
    veiculoBaseHistorico?: VeiculoBaseHistoricoOmit
    tipoVeiculo?: TipoVeiculoOmit
    veiculo?: VeiculoOmit
    veiculoOdometro?: VeiculoOdometroOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AprCountOutputType
   */

  export type AprCountOutputType = {
    AprPerguntaRelacao: number
    AprOpcaoRespostaRelacao: number
    AprTipoAtividadeRelacao: number
  }

  export type AprCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AprPerguntaRelacao?: boolean | AprCountOutputTypeCountAprPerguntaRelacaoArgs
    AprOpcaoRespostaRelacao?: boolean | AprCountOutputTypeCountAprOpcaoRespostaRelacaoArgs
    AprTipoAtividadeRelacao?: boolean | AprCountOutputTypeCountAprTipoAtividadeRelacaoArgs
  }

  // Custom InputTypes
  /**
   * AprCountOutputType without action
   */
  export type AprCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprCountOutputType
     */
    select?: AprCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AprCountOutputType without action
   */
  export type AprCountOutputTypeCountAprPerguntaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprPerguntaRelacaoWhereInput
  }

  /**
   * AprCountOutputType without action
   */
  export type AprCountOutputTypeCountAprOpcaoRespostaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprOpcaoRespostaRelacaoWhereInput
  }

  /**
   * AprCountOutputType without action
   */
  export type AprCountOutputTypeCountAprTipoAtividadeRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprTipoAtividadeRelacaoWhereInput
  }


  /**
   * Count Type AprPerguntaCountOutputType
   */

  export type AprPerguntaCountOutputType = {
    AprPerguntaRelacao: number
  }

  export type AprPerguntaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AprPerguntaRelacao?: boolean | AprPerguntaCountOutputTypeCountAprPerguntaRelacaoArgs
  }

  // Custom InputTypes
  /**
   * AprPerguntaCountOutputType without action
   */
  export type AprPerguntaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaCountOutputType
     */
    select?: AprPerguntaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AprPerguntaCountOutputType without action
   */
  export type AprPerguntaCountOutputTypeCountAprPerguntaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprPerguntaRelacaoWhereInput
  }


  /**
   * Count Type AprOpcaoRespostaCountOutputType
   */

  export type AprOpcaoRespostaCountOutputType = {
    AprOpcaoRespostaRelacao: number
  }

  export type AprOpcaoRespostaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AprOpcaoRespostaRelacao?: boolean | AprOpcaoRespostaCountOutputTypeCountAprOpcaoRespostaRelacaoArgs
  }

  // Custom InputTypes
  /**
   * AprOpcaoRespostaCountOutputType without action
   */
  export type AprOpcaoRespostaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaCountOutputType
     */
    select?: AprOpcaoRespostaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AprOpcaoRespostaCountOutputType without action
   */
  export type AprOpcaoRespostaCountOutputTypeCountAprOpcaoRespostaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprOpcaoRespostaRelacaoWhereInput
  }


  /**
   * Count Type TipoAtividadeCountOutputType
   */

  export type TipoAtividadeCountOutputType = {
    AprTipoAtividadeRelacao: number
  }

  export type TipoAtividadeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AprTipoAtividadeRelacao?: boolean | TipoAtividadeCountOutputTypeCountAprTipoAtividadeRelacaoArgs
  }

  // Custom InputTypes
  /**
   * TipoAtividadeCountOutputType without action
   */
  export type TipoAtividadeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividadeCountOutputType
     */
    select?: TipoAtividadeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoAtividadeCountOutputType without action
   */
  export type TipoAtividadeCountOutputTypeCountAprTipoAtividadeRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprTipoAtividadeRelacaoWhereInput
  }


  /**
   * Count Type MobileUserCountOutputType
   */

  export type MobileUserCountOutputType = {
    mobileSession: number
    MobileToken: number
    MobileContratoPermissao: number
  }

  export type MobileUserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mobileSession?: boolean | MobileUserCountOutputTypeCountMobileSessionArgs
    MobileToken?: boolean | MobileUserCountOutputTypeCountMobileTokenArgs
    MobileContratoPermissao?: boolean | MobileUserCountOutputTypeCountMobileContratoPermissaoArgs
  }

  // Custom InputTypes
  /**
   * MobileUserCountOutputType without action
   */
  export type MobileUserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUserCountOutputType
     */
    select?: MobileUserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MobileUserCountOutputType without action
   */
  export type MobileUserCountOutputTypeCountMobileSessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MobileSessionWhereInput
  }

  /**
   * MobileUserCountOutputType without action
   */
  export type MobileUserCountOutputTypeCountMobileTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MobileTokenWhereInput
  }

  /**
   * MobileUserCountOutputType without action
   */
  export type MobileUserCountOutputTypeCountMobileContratoPermissaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MobileContratoPermissaoWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    Session: number
    Account: number
    RoleUser: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Session?: boolean | UserCountOutputTypeCountSessionArgs
    Account?: boolean | UserCountOutputTypeCountAccountArgs
    RoleUser?: boolean | UserCountOutputTypeCountRoleUserArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRoleUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleUserWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    RoleUser: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RoleUser?: boolean | RoleCountOutputTypeCountRoleUserArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountRoleUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleUserWhereInput
  }


  /**
   * Count Type BaseCountOutputType
   */

  export type BaseCountOutputType = {
    EletricistaBaseHistorico: number
    VeiculoBaseHistorico: number
    EquipeBaseHistorico: number
  }

  export type BaseCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EletricistaBaseHistorico?: boolean | BaseCountOutputTypeCountEletricistaBaseHistoricoArgs
    VeiculoBaseHistorico?: boolean | BaseCountOutputTypeCountVeiculoBaseHistoricoArgs
    EquipeBaseHistorico?: boolean | BaseCountOutputTypeCountEquipeBaseHistoricoArgs
  }

  // Custom InputTypes
  /**
   * BaseCountOutputType without action
   */
  export type BaseCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BaseCountOutputType
     */
    select?: BaseCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BaseCountOutputType without action
   */
  export type BaseCountOutputTypeCountEletricistaBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EletricistaBaseHistoricoWhereInput
  }

  /**
   * BaseCountOutputType without action
   */
  export type BaseCountOutputTypeCountVeiculoBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VeiculoBaseHistoricoWhereInput
  }

  /**
   * BaseCountOutputType without action
   */
  export type BaseCountOutputTypeCountEquipeBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeBaseHistoricoWhereInput
  }


  /**
   * Count Type TipoChecklistCountOutputType
   */

  export type TipoChecklistCountOutputType = {
    Checklist: number
    ChecklistTipoEquipeRelacao: number
  }

  export type TipoChecklistCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Checklist?: boolean | TipoChecklistCountOutputTypeCountChecklistArgs
    ChecklistTipoEquipeRelacao?: boolean | TipoChecklistCountOutputTypeCountChecklistTipoEquipeRelacaoArgs
  }

  // Custom InputTypes
  /**
   * TipoChecklistCountOutputType without action
   */
  export type TipoChecklistCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklistCountOutputType
     */
    select?: TipoChecklistCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoChecklistCountOutputType without action
   */
  export type TipoChecklistCountOutputTypeCountChecklistArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistWhereInput
  }

  /**
   * TipoChecklistCountOutputType without action
   */
  export type TipoChecklistCountOutputTypeCountChecklistTipoEquipeRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistTipoEquipeRelacaoWhereInput
  }


  /**
   * Count Type ChecklistCountOutputType
   */

  export type ChecklistCountOutputType = {
    ChecklistPerguntaRelacao: number
    ChecklistOpcaoRespostaRelacao: number
    ChecklistTipoVeiculoRelacao: number
    ChecklistTipoEquipeRelacao: number
  }

  export type ChecklistCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ChecklistPerguntaRelacao?: boolean | ChecklistCountOutputTypeCountChecklistPerguntaRelacaoArgs
    ChecklistOpcaoRespostaRelacao?: boolean | ChecklistCountOutputTypeCountChecklistOpcaoRespostaRelacaoArgs
    ChecklistTipoVeiculoRelacao?: boolean | ChecklistCountOutputTypeCountChecklistTipoVeiculoRelacaoArgs
    ChecklistTipoEquipeRelacao?: boolean | ChecklistCountOutputTypeCountChecklistTipoEquipeRelacaoArgs
  }

  // Custom InputTypes
  /**
   * ChecklistCountOutputType without action
   */
  export type ChecklistCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistCountOutputType
     */
    select?: ChecklistCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ChecklistCountOutputType without action
   */
  export type ChecklistCountOutputTypeCountChecklistPerguntaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistPerguntaRelacaoWhereInput
  }

  /**
   * ChecklistCountOutputType without action
   */
  export type ChecklistCountOutputTypeCountChecklistOpcaoRespostaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
  }

  /**
   * ChecklistCountOutputType without action
   */
  export type ChecklistCountOutputTypeCountChecklistTipoVeiculoRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistTipoVeiculoRelacaoWhereInput
  }

  /**
   * ChecklistCountOutputType without action
   */
  export type ChecklistCountOutputTypeCountChecklistTipoEquipeRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistTipoEquipeRelacaoWhereInput
  }


  /**
   * Count Type ChecklistPerguntaCountOutputType
   */

  export type ChecklistPerguntaCountOutputType = {
    ChecklistPerguntaRelacao: number
  }

  export type ChecklistPerguntaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ChecklistPerguntaRelacao?: boolean | ChecklistPerguntaCountOutputTypeCountChecklistPerguntaRelacaoArgs
  }

  // Custom InputTypes
  /**
   * ChecklistPerguntaCountOutputType without action
   */
  export type ChecklistPerguntaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaCountOutputType
     */
    select?: ChecklistPerguntaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ChecklistPerguntaCountOutputType without action
   */
  export type ChecklistPerguntaCountOutputTypeCountChecklistPerguntaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistPerguntaRelacaoWhereInput
  }


  /**
   * Count Type ChecklistOpcaoRespostaCountOutputType
   */

  export type ChecklistOpcaoRespostaCountOutputType = {
    checklistOpcaoRespostaRelacao: number
  }

  export type ChecklistOpcaoRespostaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    checklistOpcaoRespostaRelacao?: boolean | ChecklistOpcaoRespostaCountOutputTypeCountChecklistOpcaoRespostaRelacaoArgs
  }

  // Custom InputTypes
  /**
   * ChecklistOpcaoRespostaCountOutputType without action
   */
  export type ChecklistOpcaoRespostaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaCountOutputType
     */
    select?: ChecklistOpcaoRespostaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ChecklistOpcaoRespostaCountOutputType without action
   */
  export type ChecklistOpcaoRespostaCountOutputTypeCountChecklistOpcaoRespostaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
  }


  /**
   * Count Type ContratoCountOutputType
   */

  export type ContratoCountOutputType = {
    Veiculo: number
    Eletricista: number
    Equipe: number
    Supervisor: number
    MobileContratoPermissao: number
    Base: number
  }

  export type ContratoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Veiculo?: boolean | ContratoCountOutputTypeCountVeiculoArgs
    Eletricista?: boolean | ContratoCountOutputTypeCountEletricistaArgs
    Equipe?: boolean | ContratoCountOutputTypeCountEquipeArgs
    Supervisor?: boolean | ContratoCountOutputTypeCountSupervisorArgs
    MobileContratoPermissao?: boolean | ContratoCountOutputTypeCountMobileContratoPermissaoArgs
    Base?: boolean | ContratoCountOutputTypeCountBaseArgs
  }

  // Custom InputTypes
  /**
   * ContratoCountOutputType without action
   */
  export type ContratoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContratoCountOutputType
     */
    select?: ContratoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ContratoCountOutputType without action
   */
  export type ContratoCountOutputTypeCountVeiculoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VeiculoWhereInput
  }

  /**
   * ContratoCountOutputType without action
   */
  export type ContratoCountOutputTypeCountEletricistaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EletricistaWhereInput
  }

  /**
   * ContratoCountOutputType without action
   */
  export type ContratoCountOutputTypeCountEquipeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeWhereInput
  }

  /**
   * ContratoCountOutputType without action
   */
  export type ContratoCountOutputTypeCountSupervisorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupervisorWhereInput
  }

  /**
   * ContratoCountOutputType without action
   */
  export type ContratoCountOutputTypeCountMobileContratoPermissaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MobileContratoPermissaoWhereInput
  }

  /**
   * ContratoCountOutputType without action
   */
  export type ContratoCountOutputTypeCountBaseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BaseWhereInput
  }


  /**
   * Count Type EletricistaCountOutputType
   */

  export type EletricistaCountOutputType = {
    TurnoEletricistas: number
    EletricistaBaseHistorico: number
    EventoCobertura: number
    SlotEscala: number
  }

  export type EletricistaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    TurnoEletricistas?: boolean | EletricistaCountOutputTypeCountTurnoEletricistasArgs
    EletricistaBaseHistorico?: boolean | EletricistaCountOutputTypeCountEletricistaBaseHistoricoArgs
    EventoCobertura?: boolean | EletricistaCountOutputTypeCountEventoCoberturaArgs
    SlotEscala?: boolean | EletricistaCountOutputTypeCountSlotEscalaArgs
  }

  // Custom InputTypes
  /**
   * EletricistaCountOutputType without action
   */
  export type EletricistaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaCountOutputType
     */
    select?: EletricistaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EletricistaCountOutputType without action
   */
  export type EletricistaCountOutputTypeCountTurnoEletricistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TurnoEletricistaWhereInput
  }

  /**
   * EletricistaCountOutputType without action
   */
  export type EletricistaCountOutputTypeCountEletricistaBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EletricistaBaseHistoricoWhereInput
  }

  /**
   * EletricistaCountOutputType without action
   */
  export type EletricistaCountOutputTypeCountEventoCoberturaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventoCoberturaWhereInput
  }

  /**
   * EletricistaCountOutputType without action
   */
  export type EletricistaCountOutputTypeCountSlotEscalaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SlotEscalaWhereInput
  }


  /**
   * Count Type CargoCountOutputType
   */

  export type CargoCountOutputType = {
    Eletricista: number
  }

  export type CargoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Eletricista?: boolean | CargoCountOutputTypeCountEletricistaArgs
  }

  // Custom InputTypes
  /**
   * CargoCountOutputType without action
   */
  export type CargoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CargoCountOutputType
     */
    select?: CargoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CargoCountOutputType without action
   */
  export type CargoCountOutputTypeCountEletricistaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EletricistaWhereInput
  }


  /**
   * Count Type TipoEquipeCountOutputType
   */

  export type TipoEquipeCountOutputType = {
    Equipe: number
    ChecklistTipoEquipeRelacao: number
  }

  export type TipoEquipeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Equipe?: boolean | TipoEquipeCountOutputTypeCountEquipeArgs
    ChecklistTipoEquipeRelacao?: boolean | TipoEquipeCountOutputTypeCountChecklistTipoEquipeRelacaoArgs
  }

  // Custom InputTypes
  /**
   * TipoEquipeCountOutputType without action
   */
  export type TipoEquipeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipeCountOutputType
     */
    select?: TipoEquipeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoEquipeCountOutputType without action
   */
  export type TipoEquipeCountOutputTypeCountEquipeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeWhereInput
  }

  /**
   * TipoEquipeCountOutputType without action
   */
  export type TipoEquipeCountOutputTypeCountChecklistTipoEquipeRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistTipoEquipeRelacaoWhereInput
  }


  /**
   * Count Type EquipeCountOutputType
   */

  export type EquipeCountOutputType = {
    EquipeSupervisor: number
    Turno: number
    EscalaEquipePeriodo: number
    EquipeHorarioVigencia: number
    EquipeTurnoHistorico: number
    EquipeBaseHistorico: number
  }

  export type EquipeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EquipeSupervisor?: boolean | EquipeCountOutputTypeCountEquipeSupervisorArgs
    Turno?: boolean | EquipeCountOutputTypeCountTurnoArgs
    EscalaEquipePeriodo?: boolean | EquipeCountOutputTypeCountEscalaEquipePeriodoArgs
    EquipeHorarioVigencia?: boolean | EquipeCountOutputTypeCountEquipeHorarioVigenciaArgs
    EquipeTurnoHistorico?: boolean | EquipeCountOutputTypeCountEquipeTurnoHistoricoArgs
    EquipeBaseHistorico?: boolean | EquipeCountOutputTypeCountEquipeBaseHistoricoArgs
  }

  // Custom InputTypes
  /**
   * EquipeCountOutputType without action
   */
  export type EquipeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeCountOutputType
     */
    select?: EquipeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EquipeCountOutputType without action
   */
  export type EquipeCountOutputTypeCountEquipeSupervisorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeSupervisorWhereInput
  }

  /**
   * EquipeCountOutputType without action
   */
  export type EquipeCountOutputTypeCountTurnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TurnoWhereInput
  }

  /**
   * EquipeCountOutputType without action
   */
  export type EquipeCountOutputTypeCountEscalaEquipePeriodoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EscalaEquipePeriodoWhereInput
  }

  /**
   * EquipeCountOutputType without action
   */
  export type EquipeCountOutputTypeCountEquipeHorarioVigenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeHorarioVigenciaWhereInput
  }

  /**
   * EquipeCountOutputType without action
   */
  export type EquipeCountOutputTypeCountEquipeTurnoHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeTurnoHistoricoWhereInput
  }

  /**
   * EquipeCountOutputType without action
   */
  export type EquipeCountOutputTypeCountEquipeBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeBaseHistoricoWhereInput
  }


  /**
   * Count Type TipoEscalaCountOutputType
   */

  export type TipoEscalaCountOutputType = {
    CicloPosicoes: number
    SemanaMascaras: number
    EscalasEquipePeriodo: number
  }

  export type TipoEscalaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CicloPosicoes?: boolean | TipoEscalaCountOutputTypeCountCicloPosicoesArgs
    SemanaMascaras?: boolean | TipoEscalaCountOutputTypeCountSemanaMascarasArgs
    EscalasEquipePeriodo?: boolean | TipoEscalaCountOutputTypeCountEscalasEquipePeriodoArgs
  }

  // Custom InputTypes
  /**
   * TipoEscalaCountOutputType without action
   */
  export type TipoEscalaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCountOutputType
     */
    select?: TipoEscalaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoEscalaCountOutputType without action
   */
  export type TipoEscalaCountOutputTypeCountCicloPosicoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoEscalaCicloPosicaoWhereInput
  }

  /**
   * TipoEscalaCountOutputType without action
   */
  export type TipoEscalaCountOutputTypeCountSemanaMascarasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoEscalaSemanaMascaraWhereInput
  }

  /**
   * TipoEscalaCountOutputType without action
   */
  export type TipoEscalaCountOutputTypeCountEscalasEquipePeriodoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EscalaEquipePeriodoWhereInput
  }


  /**
   * Count Type EscalaEquipePeriodoCountOutputType
   */

  export type EscalaEquipePeriodoCountOutputType = {
    Slots: number
  }

  export type EscalaEquipePeriodoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Slots?: boolean | EscalaEquipePeriodoCountOutputTypeCountSlotsArgs
  }

  // Custom InputTypes
  /**
   * EscalaEquipePeriodoCountOutputType without action
   */
  export type EscalaEquipePeriodoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodoCountOutputType
     */
    select?: EscalaEquipePeriodoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EscalaEquipePeriodoCountOutputType without action
   */
  export type EscalaEquipePeriodoCountOutputTypeCountSlotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SlotEscalaWhereInput
  }


  /**
   * Count Type SlotEscalaCountOutputType
   */

  export type SlotEscalaCountOutputType = {
    Coberturas: number
  }

  export type SlotEscalaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Coberturas?: boolean | SlotEscalaCountOutputTypeCountCoberturasArgs
  }

  // Custom InputTypes
  /**
   * SlotEscalaCountOutputType without action
   */
  export type SlotEscalaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscalaCountOutputType
     */
    select?: SlotEscalaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SlotEscalaCountOutputType without action
   */
  export type SlotEscalaCountOutputTypeCountCoberturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventoCoberturaWhereInput
  }


  /**
   * Count Type HorarioAberturaCatalogoCountOutputType
   */

  export type HorarioAberturaCatalogoCountOutputType = {
    Historicos: number
  }

  export type HorarioAberturaCatalogoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Historicos?: boolean | HorarioAberturaCatalogoCountOutputTypeCountHistoricosArgs
  }

  // Custom InputTypes
  /**
   * HorarioAberturaCatalogoCountOutputType without action
   */
  export type HorarioAberturaCatalogoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogoCountOutputType
     */
    select?: HorarioAberturaCatalogoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HorarioAberturaCatalogoCountOutputType without action
   */
  export type HorarioAberturaCatalogoCountOutputTypeCountHistoricosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeTurnoHistoricoWhereInput
  }


  /**
   * Count Type SupervisorCountOutputType
   */

  export type SupervisorCountOutputType = {
    EquipeSupervisor: number
  }

  export type SupervisorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EquipeSupervisor?: boolean | SupervisorCountOutputTypeCountEquipeSupervisorArgs
  }

  // Custom InputTypes
  /**
   * SupervisorCountOutputType without action
   */
  export type SupervisorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupervisorCountOutputType
     */
    select?: SupervisorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SupervisorCountOutputType without action
   */
  export type SupervisorCountOutputTypeCountEquipeSupervisorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeSupervisorWhereInput
  }


  /**
   * Count Type TurnoCountOutputType
   */

  export type TurnoCountOutputType = {
    TurnoEletricistas: number
  }

  export type TurnoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    TurnoEletricistas?: boolean | TurnoCountOutputTypeCountTurnoEletricistasArgs
  }

  // Custom InputTypes
  /**
   * TurnoCountOutputType without action
   */
  export type TurnoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoCountOutputType
     */
    select?: TurnoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TurnoCountOutputType without action
   */
  export type TurnoCountOutputTypeCountTurnoEletricistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TurnoEletricistaWhereInput
  }


  /**
   * Count Type TipoVeiculoCountOutputType
   */

  export type TipoVeiculoCountOutputType = {
    Veiculo: number
    ChecklistTipoVeiculoRelacao: number
  }

  export type TipoVeiculoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Veiculo?: boolean | TipoVeiculoCountOutputTypeCountVeiculoArgs
    ChecklistTipoVeiculoRelacao?: boolean | TipoVeiculoCountOutputTypeCountChecklistTipoVeiculoRelacaoArgs
  }

  // Custom InputTypes
  /**
   * TipoVeiculoCountOutputType without action
   */
  export type TipoVeiculoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculoCountOutputType
     */
    select?: TipoVeiculoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoVeiculoCountOutputType without action
   */
  export type TipoVeiculoCountOutputTypeCountVeiculoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VeiculoWhereInput
  }

  /**
   * TipoVeiculoCountOutputType without action
   */
  export type TipoVeiculoCountOutputTypeCountChecklistTipoVeiculoRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistTipoVeiculoRelacaoWhereInput
  }


  /**
   * Count Type VeiculoCountOutputType
   */

  export type VeiculoCountOutputType = {
    VeiculoOdometro: number
    VeiculoBaseHistorico: number
    Turno: number
  }

  export type VeiculoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    VeiculoOdometro?: boolean | VeiculoCountOutputTypeCountVeiculoOdometroArgs
    VeiculoBaseHistorico?: boolean | VeiculoCountOutputTypeCountVeiculoBaseHistoricoArgs
    Turno?: boolean | VeiculoCountOutputTypeCountTurnoArgs
  }

  // Custom InputTypes
  /**
   * VeiculoCountOutputType without action
   */
  export type VeiculoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoCountOutputType
     */
    select?: VeiculoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VeiculoCountOutputType without action
   */
  export type VeiculoCountOutputTypeCountVeiculoOdometroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VeiculoOdometroWhereInput
  }

  /**
   * VeiculoCountOutputType without action
   */
  export type VeiculoCountOutputTypeCountVeiculoBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VeiculoBaseHistoricoWhereInput
  }

  /**
   * VeiculoCountOutputType without action
   */
  export type VeiculoCountOutputTypeCountTurnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TurnoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Apr
   */

  export type AggregateApr = {
    _count: AprCountAggregateOutputType | null
    _avg: AprAvgAggregateOutputType | null
    _sum: AprSumAggregateOutputType | null
    _min: AprMinAggregateOutputType | null
    _max: AprMaxAggregateOutputType | null
  }

  export type AprAvgAggregateOutputType = {
    id: number | null
  }

  export type AprSumAggregateOutputType = {
    id: number | null
  }

  export type AprMinAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprCountAggregateOutputType = {
    id: number
    nome: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type AprAvgAggregateInputType = {
    id?: true
  }

  export type AprSumAggregateInputType = {
    id?: true
  }

  export type AprMinAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprMaxAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprCountAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type AprAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Apr to aggregate.
     */
    where?: AprWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Aprs to fetch.
     */
    orderBy?: AprOrderByWithRelationInput | AprOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AprWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Aprs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Aprs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Aprs
    **/
    _count?: true | AprCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AprAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AprSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AprMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AprMaxAggregateInputType
  }

  export type GetAprAggregateType<T extends AprAggregateArgs> = {
        [P in keyof T & keyof AggregateApr]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApr[P]>
      : GetScalarType<T[P], AggregateApr[P]>
  }




  export type AprGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprWhereInput
    orderBy?: AprOrderByWithAggregationInput | AprOrderByWithAggregationInput[]
    by: AprScalarFieldEnum[] | AprScalarFieldEnum
    having?: AprScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AprCountAggregateInputType | true
    _avg?: AprAvgAggregateInputType
    _sum?: AprSumAggregateInputType
    _min?: AprMinAggregateInputType
    _max?: AprMaxAggregateInputType
  }

  export type AprGroupByOutputType = {
    id: number
    nome: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: AprCountAggregateOutputType | null
    _avg: AprAvgAggregateOutputType | null
    _sum: AprSumAggregateOutputType | null
    _min: AprMinAggregateOutputType | null
    _max: AprMaxAggregateOutputType | null
  }

  type GetAprGroupByPayload<T extends AprGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AprGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AprGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AprGroupByOutputType[P]>
            : GetScalarType<T[P], AprGroupByOutputType[P]>
        }
      >
    >


  export type AprSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    AprPerguntaRelacao?: boolean | Apr$AprPerguntaRelacaoArgs<ExtArgs>
    AprOpcaoRespostaRelacao?: boolean | Apr$AprOpcaoRespostaRelacaoArgs<ExtArgs>
    AprTipoAtividadeRelacao?: boolean | Apr$AprTipoAtividadeRelacaoArgs<ExtArgs>
    _count?: boolean | AprCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["apr"]>



  export type AprSelectScalar = {
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type AprOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["apr"]>
  export type AprInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AprPerguntaRelacao?: boolean | Apr$AprPerguntaRelacaoArgs<ExtArgs>
    AprOpcaoRespostaRelacao?: boolean | Apr$AprOpcaoRespostaRelacaoArgs<ExtArgs>
    AprTipoAtividadeRelacao?: boolean | Apr$AprTipoAtividadeRelacaoArgs<ExtArgs>
    _count?: boolean | AprCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $AprPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Apr"
    objects: {
      AprPerguntaRelacao: Prisma.$AprPerguntaRelacaoPayload<ExtArgs>[]
      AprOpcaoRespostaRelacao: Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>[]
      AprTipoAtividadeRelacao: Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["apr"]>
    composites: {}
  }

  type AprGetPayload<S extends boolean | null | undefined | AprDefaultArgs> = $Result.GetResult<Prisma.$AprPayload, S>

  type AprCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AprFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AprCountAggregateInputType | true
    }

  export interface AprDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Apr'], meta: { name: 'Apr' } }
    /**
     * Find zero or one Apr that matches the filter.
     * @param {AprFindUniqueArgs} args - Arguments to find a Apr
     * @example
     * // Get one Apr
     * const apr = await prisma.apr.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AprFindUniqueArgs>(args: SelectSubset<T, AprFindUniqueArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Apr that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AprFindUniqueOrThrowArgs} args - Arguments to find a Apr
     * @example
     * // Get one Apr
     * const apr = await prisma.apr.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AprFindUniqueOrThrowArgs>(args: SelectSubset<T, AprFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Apr that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprFindFirstArgs} args - Arguments to find a Apr
     * @example
     * // Get one Apr
     * const apr = await prisma.apr.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AprFindFirstArgs>(args?: SelectSubset<T, AprFindFirstArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Apr that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprFindFirstOrThrowArgs} args - Arguments to find a Apr
     * @example
     * // Get one Apr
     * const apr = await prisma.apr.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AprFindFirstOrThrowArgs>(args?: SelectSubset<T, AprFindFirstOrThrowArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Aprs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Aprs
     * const aprs = await prisma.apr.findMany()
     * 
     * // Get first 10 Aprs
     * const aprs = await prisma.apr.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aprWithIdOnly = await prisma.apr.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AprFindManyArgs>(args?: SelectSubset<T, AprFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Apr.
     * @param {AprCreateArgs} args - Arguments to create a Apr.
     * @example
     * // Create one Apr
     * const Apr = await prisma.apr.create({
     *   data: {
     *     // ... data to create a Apr
     *   }
     * })
     * 
     */
    create<T extends AprCreateArgs>(args: SelectSubset<T, AprCreateArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Aprs.
     * @param {AprCreateManyArgs} args - Arguments to create many Aprs.
     * @example
     * // Create many Aprs
     * const apr = await prisma.apr.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AprCreateManyArgs>(args?: SelectSubset<T, AprCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Apr.
     * @param {AprDeleteArgs} args - Arguments to delete one Apr.
     * @example
     * // Delete one Apr
     * const Apr = await prisma.apr.delete({
     *   where: {
     *     // ... filter to delete one Apr
     *   }
     * })
     * 
     */
    delete<T extends AprDeleteArgs>(args: SelectSubset<T, AprDeleteArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Apr.
     * @param {AprUpdateArgs} args - Arguments to update one Apr.
     * @example
     * // Update one Apr
     * const apr = await prisma.apr.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AprUpdateArgs>(args: SelectSubset<T, AprUpdateArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Aprs.
     * @param {AprDeleteManyArgs} args - Arguments to filter Aprs to delete.
     * @example
     * // Delete a few Aprs
     * const { count } = await prisma.apr.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AprDeleteManyArgs>(args?: SelectSubset<T, AprDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Aprs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Aprs
     * const apr = await prisma.apr.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AprUpdateManyArgs>(args: SelectSubset<T, AprUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Apr.
     * @param {AprUpsertArgs} args - Arguments to update or create a Apr.
     * @example
     * // Update or create a Apr
     * const apr = await prisma.apr.upsert({
     *   create: {
     *     // ... data to create a Apr
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Apr we want to update
     *   }
     * })
     */
    upsert<T extends AprUpsertArgs>(args: SelectSubset<T, AprUpsertArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Aprs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprCountArgs} args - Arguments to filter Aprs to count.
     * @example
     * // Count the number of Aprs
     * const count = await prisma.apr.count({
     *   where: {
     *     // ... the filter for the Aprs we want to count
     *   }
     * })
    **/
    count<T extends AprCountArgs>(
      args?: Subset<T, AprCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AprCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Apr.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AprAggregateArgs>(args: Subset<T, AprAggregateArgs>): Prisma.PrismaPromise<GetAprAggregateType<T>>

    /**
     * Group by Apr.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AprGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AprGroupByArgs['orderBy'] }
        : { orderBy?: AprGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AprGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAprGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Apr model
   */
  readonly fields: AprFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Apr.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AprClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    AprPerguntaRelacao<T extends Apr$AprPerguntaRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, Apr$AprPerguntaRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    AprOpcaoRespostaRelacao<T extends Apr$AprOpcaoRespostaRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, Apr$AprOpcaoRespostaRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    AprTipoAtividadeRelacao<T extends Apr$AprTipoAtividadeRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, Apr$AprTipoAtividadeRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Apr model
   */
  interface AprFieldRefs {
    readonly id: FieldRef<"Apr", 'Int'>
    readonly nome: FieldRef<"Apr", 'String'>
    readonly createdAt: FieldRef<"Apr", 'DateTime'>
    readonly createdBy: FieldRef<"Apr", 'String'>
    readonly updatedAt: FieldRef<"Apr", 'DateTime'>
    readonly updatedBy: FieldRef<"Apr", 'String'>
    readonly deletedAt: FieldRef<"Apr", 'DateTime'>
    readonly deletedBy: FieldRef<"Apr", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Apr findUnique
   */
  export type AprFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apr
     */
    select?: AprSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apr
     */
    omit?: AprOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprInclude<ExtArgs> | null
    /**
     * Filter, which Apr to fetch.
     */
    where: AprWhereUniqueInput
  }

  /**
   * Apr findUniqueOrThrow
   */
  export type AprFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apr
     */
    select?: AprSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apr
     */
    omit?: AprOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprInclude<ExtArgs> | null
    /**
     * Filter, which Apr to fetch.
     */
    where: AprWhereUniqueInput
  }

  /**
   * Apr findFirst
   */
  export type AprFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apr
     */
    select?: AprSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apr
     */
    omit?: AprOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprInclude<ExtArgs> | null
    /**
     * Filter, which Apr to fetch.
     */
    where?: AprWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Aprs to fetch.
     */
    orderBy?: AprOrderByWithRelationInput | AprOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Aprs.
     */
    cursor?: AprWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Aprs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Aprs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Aprs.
     */
    distinct?: AprScalarFieldEnum | AprScalarFieldEnum[]
  }

  /**
   * Apr findFirstOrThrow
   */
  export type AprFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apr
     */
    select?: AprSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apr
     */
    omit?: AprOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprInclude<ExtArgs> | null
    /**
     * Filter, which Apr to fetch.
     */
    where?: AprWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Aprs to fetch.
     */
    orderBy?: AprOrderByWithRelationInput | AprOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Aprs.
     */
    cursor?: AprWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Aprs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Aprs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Aprs.
     */
    distinct?: AprScalarFieldEnum | AprScalarFieldEnum[]
  }

  /**
   * Apr findMany
   */
  export type AprFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apr
     */
    select?: AprSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apr
     */
    omit?: AprOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprInclude<ExtArgs> | null
    /**
     * Filter, which Aprs to fetch.
     */
    where?: AprWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Aprs to fetch.
     */
    orderBy?: AprOrderByWithRelationInput | AprOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Aprs.
     */
    cursor?: AprWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Aprs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Aprs.
     */
    skip?: number
    distinct?: AprScalarFieldEnum | AprScalarFieldEnum[]
  }

  /**
   * Apr create
   */
  export type AprCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apr
     */
    select?: AprSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apr
     */
    omit?: AprOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprInclude<ExtArgs> | null
    /**
     * The data needed to create a Apr.
     */
    data: XOR<AprCreateInput, AprUncheckedCreateInput>
  }

  /**
   * Apr createMany
   */
  export type AprCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Aprs.
     */
    data: AprCreateManyInput | AprCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Apr update
   */
  export type AprUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apr
     */
    select?: AprSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apr
     */
    omit?: AprOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprInclude<ExtArgs> | null
    /**
     * The data needed to update a Apr.
     */
    data: XOR<AprUpdateInput, AprUncheckedUpdateInput>
    /**
     * Choose, which Apr to update.
     */
    where: AprWhereUniqueInput
  }

  /**
   * Apr updateMany
   */
  export type AprUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Aprs.
     */
    data: XOR<AprUpdateManyMutationInput, AprUncheckedUpdateManyInput>
    /**
     * Filter which Aprs to update
     */
    where?: AprWhereInput
    /**
     * Limit how many Aprs to update.
     */
    limit?: number
  }

  /**
   * Apr upsert
   */
  export type AprUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apr
     */
    select?: AprSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apr
     */
    omit?: AprOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprInclude<ExtArgs> | null
    /**
     * The filter to search for the Apr to update in case it exists.
     */
    where: AprWhereUniqueInput
    /**
     * In case the Apr found by the `where` argument doesn't exist, create a new Apr with this data.
     */
    create: XOR<AprCreateInput, AprUncheckedCreateInput>
    /**
     * In case the Apr was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AprUpdateInput, AprUncheckedUpdateInput>
  }

  /**
   * Apr delete
   */
  export type AprDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apr
     */
    select?: AprSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apr
     */
    omit?: AprOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprInclude<ExtArgs> | null
    /**
     * Filter which Apr to delete.
     */
    where: AprWhereUniqueInput
  }

  /**
   * Apr deleteMany
   */
  export type AprDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Aprs to delete
     */
    where?: AprWhereInput
    /**
     * Limit how many Aprs to delete.
     */
    limit?: number
  }

  /**
   * Apr.AprPerguntaRelacao
   */
  export type Apr$AprPerguntaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    where?: AprPerguntaRelacaoWhereInput
    orderBy?: AprPerguntaRelacaoOrderByWithRelationInput | AprPerguntaRelacaoOrderByWithRelationInput[]
    cursor?: AprPerguntaRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AprPerguntaRelacaoScalarFieldEnum | AprPerguntaRelacaoScalarFieldEnum[]
  }

  /**
   * Apr.AprOpcaoRespostaRelacao
   */
  export type Apr$AprOpcaoRespostaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    where?: AprOpcaoRespostaRelacaoWhereInput
    orderBy?: AprOpcaoRespostaRelacaoOrderByWithRelationInput | AprOpcaoRespostaRelacaoOrderByWithRelationInput[]
    cursor?: AprOpcaoRespostaRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AprOpcaoRespostaRelacaoScalarFieldEnum | AprOpcaoRespostaRelacaoScalarFieldEnum[]
  }

  /**
   * Apr.AprTipoAtividadeRelacao
   */
  export type Apr$AprTipoAtividadeRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    where?: AprTipoAtividadeRelacaoWhereInput
    orderBy?: AprTipoAtividadeRelacaoOrderByWithRelationInput | AprTipoAtividadeRelacaoOrderByWithRelationInput[]
    cursor?: AprTipoAtividadeRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AprTipoAtividadeRelacaoScalarFieldEnum | AprTipoAtividadeRelacaoScalarFieldEnum[]
  }

  /**
   * Apr without action
   */
  export type AprDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apr
     */
    select?: AprSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apr
     */
    omit?: AprOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprInclude<ExtArgs> | null
  }


  /**
   * Model AprPergunta
   */

  export type AggregateAprPergunta = {
    _count: AprPerguntaCountAggregateOutputType | null
    _avg: AprPerguntaAvgAggregateOutputType | null
    _sum: AprPerguntaSumAggregateOutputType | null
    _min: AprPerguntaMinAggregateOutputType | null
    _max: AprPerguntaMaxAggregateOutputType | null
  }

  export type AprPerguntaAvgAggregateOutputType = {
    id: number | null
  }

  export type AprPerguntaSumAggregateOutputType = {
    id: number | null
  }

  export type AprPerguntaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprPerguntaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprPerguntaCountAggregateOutputType = {
    id: number
    nome: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type AprPerguntaAvgAggregateInputType = {
    id?: true
  }

  export type AprPerguntaSumAggregateInputType = {
    id?: true
  }

  export type AprPerguntaMinAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprPerguntaMaxAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprPerguntaCountAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type AprPerguntaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AprPergunta to aggregate.
     */
    where?: AprPerguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprPerguntas to fetch.
     */
    orderBy?: AprPerguntaOrderByWithRelationInput | AprPerguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AprPerguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprPerguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprPerguntas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AprPerguntas
    **/
    _count?: true | AprPerguntaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AprPerguntaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AprPerguntaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AprPerguntaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AprPerguntaMaxAggregateInputType
  }

  export type GetAprPerguntaAggregateType<T extends AprPerguntaAggregateArgs> = {
        [P in keyof T & keyof AggregateAprPergunta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAprPergunta[P]>
      : GetScalarType<T[P], AggregateAprPergunta[P]>
  }




  export type AprPerguntaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprPerguntaWhereInput
    orderBy?: AprPerguntaOrderByWithAggregationInput | AprPerguntaOrderByWithAggregationInput[]
    by: AprPerguntaScalarFieldEnum[] | AprPerguntaScalarFieldEnum
    having?: AprPerguntaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AprPerguntaCountAggregateInputType | true
    _avg?: AprPerguntaAvgAggregateInputType
    _sum?: AprPerguntaSumAggregateInputType
    _min?: AprPerguntaMinAggregateInputType
    _max?: AprPerguntaMaxAggregateInputType
  }

  export type AprPerguntaGroupByOutputType = {
    id: number
    nome: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: AprPerguntaCountAggregateOutputType | null
    _avg: AprPerguntaAvgAggregateOutputType | null
    _sum: AprPerguntaSumAggregateOutputType | null
    _min: AprPerguntaMinAggregateOutputType | null
    _max: AprPerguntaMaxAggregateOutputType | null
  }

  type GetAprPerguntaGroupByPayload<T extends AprPerguntaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AprPerguntaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AprPerguntaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AprPerguntaGroupByOutputType[P]>
            : GetScalarType<T[P], AprPerguntaGroupByOutputType[P]>
        }
      >
    >


  export type AprPerguntaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    AprPerguntaRelacao?: boolean | AprPergunta$AprPerguntaRelacaoArgs<ExtArgs>
    _count?: boolean | AprPerguntaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aprPergunta"]>



  export type AprPerguntaSelectScalar = {
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type AprPerguntaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["aprPergunta"]>
  export type AprPerguntaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AprPerguntaRelacao?: boolean | AprPergunta$AprPerguntaRelacaoArgs<ExtArgs>
    _count?: boolean | AprPerguntaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $AprPerguntaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AprPergunta"
    objects: {
      AprPerguntaRelacao: Prisma.$AprPerguntaRelacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["aprPergunta"]>
    composites: {}
  }

  type AprPerguntaGetPayload<S extends boolean | null | undefined | AprPerguntaDefaultArgs> = $Result.GetResult<Prisma.$AprPerguntaPayload, S>

  type AprPerguntaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AprPerguntaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AprPerguntaCountAggregateInputType | true
    }

  export interface AprPerguntaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AprPergunta'], meta: { name: 'AprPergunta' } }
    /**
     * Find zero or one AprPergunta that matches the filter.
     * @param {AprPerguntaFindUniqueArgs} args - Arguments to find a AprPergunta
     * @example
     * // Get one AprPergunta
     * const aprPergunta = await prisma.aprPergunta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AprPerguntaFindUniqueArgs>(args: SelectSubset<T, AprPerguntaFindUniqueArgs<ExtArgs>>): Prisma__AprPerguntaClient<$Result.GetResult<Prisma.$AprPerguntaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AprPergunta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AprPerguntaFindUniqueOrThrowArgs} args - Arguments to find a AprPergunta
     * @example
     * // Get one AprPergunta
     * const aprPergunta = await prisma.aprPergunta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AprPerguntaFindUniqueOrThrowArgs>(args: SelectSubset<T, AprPerguntaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AprPerguntaClient<$Result.GetResult<Prisma.$AprPerguntaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AprPergunta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaFindFirstArgs} args - Arguments to find a AprPergunta
     * @example
     * // Get one AprPergunta
     * const aprPergunta = await prisma.aprPergunta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AprPerguntaFindFirstArgs>(args?: SelectSubset<T, AprPerguntaFindFirstArgs<ExtArgs>>): Prisma__AprPerguntaClient<$Result.GetResult<Prisma.$AprPerguntaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AprPergunta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaFindFirstOrThrowArgs} args - Arguments to find a AprPergunta
     * @example
     * // Get one AprPergunta
     * const aprPergunta = await prisma.aprPergunta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AprPerguntaFindFirstOrThrowArgs>(args?: SelectSubset<T, AprPerguntaFindFirstOrThrowArgs<ExtArgs>>): Prisma__AprPerguntaClient<$Result.GetResult<Prisma.$AprPerguntaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AprPerguntas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AprPerguntas
     * const aprPerguntas = await prisma.aprPergunta.findMany()
     * 
     * // Get first 10 AprPerguntas
     * const aprPerguntas = await prisma.aprPergunta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aprPerguntaWithIdOnly = await prisma.aprPergunta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AprPerguntaFindManyArgs>(args?: SelectSubset<T, AprPerguntaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprPerguntaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AprPergunta.
     * @param {AprPerguntaCreateArgs} args - Arguments to create a AprPergunta.
     * @example
     * // Create one AprPergunta
     * const AprPergunta = await prisma.aprPergunta.create({
     *   data: {
     *     // ... data to create a AprPergunta
     *   }
     * })
     * 
     */
    create<T extends AprPerguntaCreateArgs>(args: SelectSubset<T, AprPerguntaCreateArgs<ExtArgs>>): Prisma__AprPerguntaClient<$Result.GetResult<Prisma.$AprPerguntaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AprPerguntas.
     * @param {AprPerguntaCreateManyArgs} args - Arguments to create many AprPerguntas.
     * @example
     * // Create many AprPerguntas
     * const aprPergunta = await prisma.aprPergunta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AprPerguntaCreateManyArgs>(args?: SelectSubset<T, AprPerguntaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AprPergunta.
     * @param {AprPerguntaDeleteArgs} args - Arguments to delete one AprPergunta.
     * @example
     * // Delete one AprPergunta
     * const AprPergunta = await prisma.aprPergunta.delete({
     *   where: {
     *     // ... filter to delete one AprPergunta
     *   }
     * })
     * 
     */
    delete<T extends AprPerguntaDeleteArgs>(args: SelectSubset<T, AprPerguntaDeleteArgs<ExtArgs>>): Prisma__AprPerguntaClient<$Result.GetResult<Prisma.$AprPerguntaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AprPergunta.
     * @param {AprPerguntaUpdateArgs} args - Arguments to update one AprPergunta.
     * @example
     * // Update one AprPergunta
     * const aprPergunta = await prisma.aprPergunta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AprPerguntaUpdateArgs>(args: SelectSubset<T, AprPerguntaUpdateArgs<ExtArgs>>): Prisma__AprPerguntaClient<$Result.GetResult<Prisma.$AprPerguntaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AprPerguntas.
     * @param {AprPerguntaDeleteManyArgs} args - Arguments to filter AprPerguntas to delete.
     * @example
     * // Delete a few AprPerguntas
     * const { count } = await prisma.aprPergunta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AprPerguntaDeleteManyArgs>(args?: SelectSubset<T, AprPerguntaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AprPerguntas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AprPerguntas
     * const aprPergunta = await prisma.aprPergunta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AprPerguntaUpdateManyArgs>(args: SelectSubset<T, AprPerguntaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AprPergunta.
     * @param {AprPerguntaUpsertArgs} args - Arguments to update or create a AprPergunta.
     * @example
     * // Update or create a AprPergunta
     * const aprPergunta = await prisma.aprPergunta.upsert({
     *   create: {
     *     // ... data to create a AprPergunta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AprPergunta we want to update
     *   }
     * })
     */
    upsert<T extends AprPerguntaUpsertArgs>(args: SelectSubset<T, AprPerguntaUpsertArgs<ExtArgs>>): Prisma__AprPerguntaClient<$Result.GetResult<Prisma.$AprPerguntaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AprPerguntas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaCountArgs} args - Arguments to filter AprPerguntas to count.
     * @example
     * // Count the number of AprPerguntas
     * const count = await prisma.aprPergunta.count({
     *   where: {
     *     // ... the filter for the AprPerguntas we want to count
     *   }
     * })
    **/
    count<T extends AprPerguntaCountArgs>(
      args?: Subset<T, AprPerguntaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AprPerguntaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AprPergunta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AprPerguntaAggregateArgs>(args: Subset<T, AprPerguntaAggregateArgs>): Prisma.PrismaPromise<GetAprPerguntaAggregateType<T>>

    /**
     * Group by AprPergunta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AprPerguntaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AprPerguntaGroupByArgs['orderBy'] }
        : { orderBy?: AprPerguntaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AprPerguntaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAprPerguntaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AprPergunta model
   */
  readonly fields: AprPerguntaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AprPergunta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AprPerguntaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    AprPerguntaRelacao<T extends AprPergunta$AprPerguntaRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, AprPergunta$AprPerguntaRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AprPergunta model
   */
  interface AprPerguntaFieldRefs {
    readonly id: FieldRef<"AprPergunta", 'Int'>
    readonly nome: FieldRef<"AprPergunta", 'String'>
    readonly createdAt: FieldRef<"AprPergunta", 'DateTime'>
    readonly createdBy: FieldRef<"AprPergunta", 'String'>
    readonly updatedAt: FieldRef<"AprPergunta", 'DateTime'>
    readonly updatedBy: FieldRef<"AprPergunta", 'String'>
    readonly deletedAt: FieldRef<"AprPergunta", 'DateTime'>
    readonly deletedBy: FieldRef<"AprPergunta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AprPergunta findUnique
   */
  export type AprPerguntaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPergunta
     */
    select?: AprPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPergunta
     */
    omit?: AprPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaInclude<ExtArgs> | null
    /**
     * Filter, which AprPergunta to fetch.
     */
    where: AprPerguntaWhereUniqueInput
  }

  /**
   * AprPergunta findUniqueOrThrow
   */
  export type AprPerguntaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPergunta
     */
    select?: AprPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPergunta
     */
    omit?: AprPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaInclude<ExtArgs> | null
    /**
     * Filter, which AprPergunta to fetch.
     */
    where: AprPerguntaWhereUniqueInput
  }

  /**
   * AprPergunta findFirst
   */
  export type AprPerguntaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPergunta
     */
    select?: AprPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPergunta
     */
    omit?: AprPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaInclude<ExtArgs> | null
    /**
     * Filter, which AprPergunta to fetch.
     */
    where?: AprPerguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprPerguntas to fetch.
     */
    orderBy?: AprPerguntaOrderByWithRelationInput | AprPerguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AprPerguntas.
     */
    cursor?: AprPerguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprPerguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprPerguntas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AprPerguntas.
     */
    distinct?: AprPerguntaScalarFieldEnum | AprPerguntaScalarFieldEnum[]
  }

  /**
   * AprPergunta findFirstOrThrow
   */
  export type AprPerguntaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPergunta
     */
    select?: AprPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPergunta
     */
    omit?: AprPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaInclude<ExtArgs> | null
    /**
     * Filter, which AprPergunta to fetch.
     */
    where?: AprPerguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprPerguntas to fetch.
     */
    orderBy?: AprPerguntaOrderByWithRelationInput | AprPerguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AprPerguntas.
     */
    cursor?: AprPerguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprPerguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprPerguntas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AprPerguntas.
     */
    distinct?: AprPerguntaScalarFieldEnum | AprPerguntaScalarFieldEnum[]
  }

  /**
   * AprPergunta findMany
   */
  export type AprPerguntaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPergunta
     */
    select?: AprPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPergunta
     */
    omit?: AprPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaInclude<ExtArgs> | null
    /**
     * Filter, which AprPerguntas to fetch.
     */
    where?: AprPerguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprPerguntas to fetch.
     */
    orderBy?: AprPerguntaOrderByWithRelationInput | AprPerguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AprPerguntas.
     */
    cursor?: AprPerguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprPerguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprPerguntas.
     */
    skip?: number
    distinct?: AprPerguntaScalarFieldEnum | AprPerguntaScalarFieldEnum[]
  }

  /**
   * AprPergunta create
   */
  export type AprPerguntaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPergunta
     */
    select?: AprPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPergunta
     */
    omit?: AprPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaInclude<ExtArgs> | null
    /**
     * The data needed to create a AprPergunta.
     */
    data: XOR<AprPerguntaCreateInput, AprPerguntaUncheckedCreateInput>
  }

  /**
   * AprPergunta createMany
   */
  export type AprPerguntaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AprPerguntas.
     */
    data: AprPerguntaCreateManyInput | AprPerguntaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AprPergunta update
   */
  export type AprPerguntaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPergunta
     */
    select?: AprPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPergunta
     */
    omit?: AprPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaInclude<ExtArgs> | null
    /**
     * The data needed to update a AprPergunta.
     */
    data: XOR<AprPerguntaUpdateInput, AprPerguntaUncheckedUpdateInput>
    /**
     * Choose, which AprPergunta to update.
     */
    where: AprPerguntaWhereUniqueInput
  }

  /**
   * AprPergunta updateMany
   */
  export type AprPerguntaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AprPerguntas.
     */
    data: XOR<AprPerguntaUpdateManyMutationInput, AprPerguntaUncheckedUpdateManyInput>
    /**
     * Filter which AprPerguntas to update
     */
    where?: AprPerguntaWhereInput
    /**
     * Limit how many AprPerguntas to update.
     */
    limit?: number
  }

  /**
   * AprPergunta upsert
   */
  export type AprPerguntaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPergunta
     */
    select?: AprPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPergunta
     */
    omit?: AprPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaInclude<ExtArgs> | null
    /**
     * The filter to search for the AprPergunta to update in case it exists.
     */
    where: AprPerguntaWhereUniqueInput
    /**
     * In case the AprPergunta found by the `where` argument doesn't exist, create a new AprPergunta with this data.
     */
    create: XOR<AprPerguntaCreateInput, AprPerguntaUncheckedCreateInput>
    /**
     * In case the AprPergunta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AprPerguntaUpdateInput, AprPerguntaUncheckedUpdateInput>
  }

  /**
   * AprPergunta delete
   */
  export type AprPerguntaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPergunta
     */
    select?: AprPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPergunta
     */
    omit?: AprPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaInclude<ExtArgs> | null
    /**
     * Filter which AprPergunta to delete.
     */
    where: AprPerguntaWhereUniqueInput
  }

  /**
   * AprPergunta deleteMany
   */
  export type AprPerguntaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AprPerguntas to delete
     */
    where?: AprPerguntaWhereInput
    /**
     * Limit how many AprPerguntas to delete.
     */
    limit?: number
  }

  /**
   * AprPergunta.AprPerguntaRelacao
   */
  export type AprPergunta$AprPerguntaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    where?: AprPerguntaRelacaoWhereInput
    orderBy?: AprPerguntaRelacaoOrderByWithRelationInput | AprPerguntaRelacaoOrderByWithRelationInput[]
    cursor?: AprPerguntaRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AprPerguntaRelacaoScalarFieldEnum | AprPerguntaRelacaoScalarFieldEnum[]
  }

  /**
   * AprPergunta without action
   */
  export type AprPerguntaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPergunta
     */
    select?: AprPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPergunta
     */
    omit?: AprPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaInclude<ExtArgs> | null
  }


  /**
   * Model AprPerguntaRelacao
   */

  export type AggregateAprPerguntaRelacao = {
    _count: AprPerguntaRelacaoCountAggregateOutputType | null
    _avg: AprPerguntaRelacaoAvgAggregateOutputType | null
    _sum: AprPerguntaRelacaoSumAggregateOutputType | null
    _min: AprPerguntaRelacaoMinAggregateOutputType | null
    _max: AprPerguntaRelacaoMaxAggregateOutputType | null
  }

  export type AprPerguntaRelacaoAvgAggregateOutputType = {
    id: number | null
    aprPerguntaId: number | null
    ordem: number | null
    aprId: number | null
  }

  export type AprPerguntaRelacaoSumAggregateOutputType = {
    id: number | null
    aprPerguntaId: number | null
    ordem: number | null
    aprId: number | null
  }

  export type AprPerguntaRelacaoMinAggregateOutputType = {
    id: number | null
    aprPerguntaId: number | null
    ordem: number | null
    aprId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprPerguntaRelacaoMaxAggregateOutputType = {
    id: number | null
    aprPerguntaId: number | null
    ordem: number | null
    aprId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprPerguntaRelacaoCountAggregateOutputType = {
    id: number
    aprPerguntaId: number
    ordem: number
    aprId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type AprPerguntaRelacaoAvgAggregateInputType = {
    id?: true
    aprPerguntaId?: true
    ordem?: true
    aprId?: true
  }

  export type AprPerguntaRelacaoSumAggregateInputType = {
    id?: true
    aprPerguntaId?: true
    ordem?: true
    aprId?: true
  }

  export type AprPerguntaRelacaoMinAggregateInputType = {
    id?: true
    aprPerguntaId?: true
    ordem?: true
    aprId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprPerguntaRelacaoMaxAggregateInputType = {
    id?: true
    aprPerguntaId?: true
    ordem?: true
    aprId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprPerguntaRelacaoCountAggregateInputType = {
    id?: true
    aprPerguntaId?: true
    ordem?: true
    aprId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type AprPerguntaRelacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AprPerguntaRelacao to aggregate.
     */
    where?: AprPerguntaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprPerguntaRelacaos to fetch.
     */
    orderBy?: AprPerguntaRelacaoOrderByWithRelationInput | AprPerguntaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AprPerguntaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprPerguntaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprPerguntaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AprPerguntaRelacaos
    **/
    _count?: true | AprPerguntaRelacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AprPerguntaRelacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AprPerguntaRelacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AprPerguntaRelacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AprPerguntaRelacaoMaxAggregateInputType
  }

  export type GetAprPerguntaRelacaoAggregateType<T extends AprPerguntaRelacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateAprPerguntaRelacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAprPerguntaRelacao[P]>
      : GetScalarType<T[P], AggregateAprPerguntaRelacao[P]>
  }




  export type AprPerguntaRelacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprPerguntaRelacaoWhereInput
    orderBy?: AprPerguntaRelacaoOrderByWithAggregationInput | AprPerguntaRelacaoOrderByWithAggregationInput[]
    by: AprPerguntaRelacaoScalarFieldEnum[] | AprPerguntaRelacaoScalarFieldEnum
    having?: AprPerguntaRelacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AprPerguntaRelacaoCountAggregateInputType | true
    _avg?: AprPerguntaRelacaoAvgAggregateInputType
    _sum?: AprPerguntaRelacaoSumAggregateInputType
    _min?: AprPerguntaRelacaoMinAggregateInputType
    _max?: AprPerguntaRelacaoMaxAggregateInputType
  }

  export type AprPerguntaRelacaoGroupByOutputType = {
    id: number
    aprPerguntaId: number
    ordem: number
    aprId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: AprPerguntaRelacaoCountAggregateOutputType | null
    _avg: AprPerguntaRelacaoAvgAggregateOutputType | null
    _sum: AprPerguntaRelacaoSumAggregateOutputType | null
    _min: AprPerguntaRelacaoMinAggregateOutputType | null
    _max: AprPerguntaRelacaoMaxAggregateOutputType | null
  }

  type GetAprPerguntaRelacaoGroupByPayload<T extends AprPerguntaRelacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AprPerguntaRelacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AprPerguntaRelacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AprPerguntaRelacaoGroupByOutputType[P]>
            : GetScalarType<T[P], AprPerguntaRelacaoGroupByOutputType[P]>
        }
      >
    >


  export type AprPerguntaRelacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    aprPerguntaId?: boolean
    ordem?: boolean
    aprId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    aprPergunta?: boolean | AprPerguntaDefaultArgs<ExtArgs>
    apr?: boolean | AprDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aprPerguntaRelacao"]>



  export type AprPerguntaRelacaoSelectScalar = {
    id?: boolean
    aprPerguntaId?: boolean
    ordem?: boolean
    aprId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type AprPerguntaRelacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "aprPerguntaId" | "ordem" | "aprId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["aprPerguntaRelacao"]>
  export type AprPerguntaRelacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    aprPergunta?: boolean | AprPerguntaDefaultArgs<ExtArgs>
    apr?: boolean | AprDefaultArgs<ExtArgs>
  }

  export type $AprPerguntaRelacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AprPerguntaRelacao"
    objects: {
      aprPergunta: Prisma.$AprPerguntaPayload<ExtArgs>
      apr: Prisma.$AprPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      aprPerguntaId: number
      ordem: number
      aprId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["aprPerguntaRelacao"]>
    composites: {}
  }

  type AprPerguntaRelacaoGetPayload<S extends boolean | null | undefined | AprPerguntaRelacaoDefaultArgs> = $Result.GetResult<Prisma.$AprPerguntaRelacaoPayload, S>

  type AprPerguntaRelacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AprPerguntaRelacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AprPerguntaRelacaoCountAggregateInputType | true
    }

  export interface AprPerguntaRelacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AprPerguntaRelacao'], meta: { name: 'AprPerguntaRelacao' } }
    /**
     * Find zero or one AprPerguntaRelacao that matches the filter.
     * @param {AprPerguntaRelacaoFindUniqueArgs} args - Arguments to find a AprPerguntaRelacao
     * @example
     * // Get one AprPerguntaRelacao
     * const aprPerguntaRelacao = await prisma.aprPerguntaRelacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AprPerguntaRelacaoFindUniqueArgs>(args: SelectSubset<T, AprPerguntaRelacaoFindUniqueArgs<ExtArgs>>): Prisma__AprPerguntaRelacaoClient<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AprPerguntaRelacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AprPerguntaRelacaoFindUniqueOrThrowArgs} args - Arguments to find a AprPerguntaRelacao
     * @example
     * // Get one AprPerguntaRelacao
     * const aprPerguntaRelacao = await prisma.aprPerguntaRelacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AprPerguntaRelacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, AprPerguntaRelacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AprPerguntaRelacaoClient<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AprPerguntaRelacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaRelacaoFindFirstArgs} args - Arguments to find a AprPerguntaRelacao
     * @example
     * // Get one AprPerguntaRelacao
     * const aprPerguntaRelacao = await prisma.aprPerguntaRelacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AprPerguntaRelacaoFindFirstArgs>(args?: SelectSubset<T, AprPerguntaRelacaoFindFirstArgs<ExtArgs>>): Prisma__AprPerguntaRelacaoClient<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AprPerguntaRelacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaRelacaoFindFirstOrThrowArgs} args - Arguments to find a AprPerguntaRelacao
     * @example
     * // Get one AprPerguntaRelacao
     * const aprPerguntaRelacao = await prisma.aprPerguntaRelacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AprPerguntaRelacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, AprPerguntaRelacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__AprPerguntaRelacaoClient<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AprPerguntaRelacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaRelacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AprPerguntaRelacaos
     * const aprPerguntaRelacaos = await prisma.aprPerguntaRelacao.findMany()
     * 
     * // Get first 10 AprPerguntaRelacaos
     * const aprPerguntaRelacaos = await prisma.aprPerguntaRelacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aprPerguntaRelacaoWithIdOnly = await prisma.aprPerguntaRelacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AprPerguntaRelacaoFindManyArgs>(args?: SelectSubset<T, AprPerguntaRelacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AprPerguntaRelacao.
     * @param {AprPerguntaRelacaoCreateArgs} args - Arguments to create a AprPerguntaRelacao.
     * @example
     * // Create one AprPerguntaRelacao
     * const AprPerguntaRelacao = await prisma.aprPerguntaRelacao.create({
     *   data: {
     *     // ... data to create a AprPerguntaRelacao
     *   }
     * })
     * 
     */
    create<T extends AprPerguntaRelacaoCreateArgs>(args: SelectSubset<T, AprPerguntaRelacaoCreateArgs<ExtArgs>>): Prisma__AprPerguntaRelacaoClient<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AprPerguntaRelacaos.
     * @param {AprPerguntaRelacaoCreateManyArgs} args - Arguments to create many AprPerguntaRelacaos.
     * @example
     * // Create many AprPerguntaRelacaos
     * const aprPerguntaRelacao = await prisma.aprPerguntaRelacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AprPerguntaRelacaoCreateManyArgs>(args?: SelectSubset<T, AprPerguntaRelacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AprPerguntaRelacao.
     * @param {AprPerguntaRelacaoDeleteArgs} args - Arguments to delete one AprPerguntaRelacao.
     * @example
     * // Delete one AprPerguntaRelacao
     * const AprPerguntaRelacao = await prisma.aprPerguntaRelacao.delete({
     *   where: {
     *     // ... filter to delete one AprPerguntaRelacao
     *   }
     * })
     * 
     */
    delete<T extends AprPerguntaRelacaoDeleteArgs>(args: SelectSubset<T, AprPerguntaRelacaoDeleteArgs<ExtArgs>>): Prisma__AprPerguntaRelacaoClient<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AprPerguntaRelacao.
     * @param {AprPerguntaRelacaoUpdateArgs} args - Arguments to update one AprPerguntaRelacao.
     * @example
     * // Update one AprPerguntaRelacao
     * const aprPerguntaRelacao = await prisma.aprPerguntaRelacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AprPerguntaRelacaoUpdateArgs>(args: SelectSubset<T, AprPerguntaRelacaoUpdateArgs<ExtArgs>>): Prisma__AprPerguntaRelacaoClient<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AprPerguntaRelacaos.
     * @param {AprPerguntaRelacaoDeleteManyArgs} args - Arguments to filter AprPerguntaRelacaos to delete.
     * @example
     * // Delete a few AprPerguntaRelacaos
     * const { count } = await prisma.aprPerguntaRelacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AprPerguntaRelacaoDeleteManyArgs>(args?: SelectSubset<T, AprPerguntaRelacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AprPerguntaRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaRelacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AprPerguntaRelacaos
     * const aprPerguntaRelacao = await prisma.aprPerguntaRelacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AprPerguntaRelacaoUpdateManyArgs>(args: SelectSubset<T, AprPerguntaRelacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AprPerguntaRelacao.
     * @param {AprPerguntaRelacaoUpsertArgs} args - Arguments to update or create a AprPerguntaRelacao.
     * @example
     * // Update or create a AprPerguntaRelacao
     * const aprPerguntaRelacao = await prisma.aprPerguntaRelacao.upsert({
     *   create: {
     *     // ... data to create a AprPerguntaRelacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AprPerguntaRelacao we want to update
     *   }
     * })
     */
    upsert<T extends AprPerguntaRelacaoUpsertArgs>(args: SelectSubset<T, AprPerguntaRelacaoUpsertArgs<ExtArgs>>): Prisma__AprPerguntaRelacaoClient<$Result.GetResult<Prisma.$AprPerguntaRelacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AprPerguntaRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaRelacaoCountArgs} args - Arguments to filter AprPerguntaRelacaos to count.
     * @example
     * // Count the number of AprPerguntaRelacaos
     * const count = await prisma.aprPerguntaRelacao.count({
     *   where: {
     *     // ... the filter for the AprPerguntaRelacaos we want to count
     *   }
     * })
    **/
    count<T extends AprPerguntaRelacaoCountArgs>(
      args?: Subset<T, AprPerguntaRelacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AprPerguntaRelacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AprPerguntaRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaRelacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AprPerguntaRelacaoAggregateArgs>(args: Subset<T, AprPerguntaRelacaoAggregateArgs>): Prisma.PrismaPromise<GetAprPerguntaRelacaoAggregateType<T>>

    /**
     * Group by AprPerguntaRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprPerguntaRelacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AprPerguntaRelacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AprPerguntaRelacaoGroupByArgs['orderBy'] }
        : { orderBy?: AprPerguntaRelacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AprPerguntaRelacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAprPerguntaRelacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AprPerguntaRelacao model
   */
  readonly fields: AprPerguntaRelacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AprPerguntaRelacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AprPerguntaRelacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    aprPergunta<T extends AprPerguntaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AprPerguntaDefaultArgs<ExtArgs>>): Prisma__AprPerguntaClient<$Result.GetResult<Prisma.$AprPerguntaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    apr<T extends AprDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AprDefaultArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AprPerguntaRelacao model
   */
  interface AprPerguntaRelacaoFieldRefs {
    readonly id: FieldRef<"AprPerguntaRelacao", 'Int'>
    readonly aprPerguntaId: FieldRef<"AprPerguntaRelacao", 'Int'>
    readonly ordem: FieldRef<"AprPerguntaRelacao", 'Int'>
    readonly aprId: FieldRef<"AprPerguntaRelacao", 'Int'>
    readonly createdAt: FieldRef<"AprPerguntaRelacao", 'DateTime'>
    readonly createdBy: FieldRef<"AprPerguntaRelacao", 'String'>
    readonly updatedAt: FieldRef<"AprPerguntaRelacao", 'DateTime'>
    readonly updatedBy: FieldRef<"AprPerguntaRelacao", 'String'>
    readonly deletedAt: FieldRef<"AprPerguntaRelacao", 'DateTime'>
    readonly deletedBy: FieldRef<"AprPerguntaRelacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AprPerguntaRelacao findUnique
   */
  export type AprPerguntaRelacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprPerguntaRelacao to fetch.
     */
    where: AprPerguntaRelacaoWhereUniqueInput
  }

  /**
   * AprPerguntaRelacao findUniqueOrThrow
   */
  export type AprPerguntaRelacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprPerguntaRelacao to fetch.
     */
    where: AprPerguntaRelacaoWhereUniqueInput
  }

  /**
   * AprPerguntaRelacao findFirst
   */
  export type AprPerguntaRelacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprPerguntaRelacao to fetch.
     */
    where?: AprPerguntaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprPerguntaRelacaos to fetch.
     */
    orderBy?: AprPerguntaRelacaoOrderByWithRelationInput | AprPerguntaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AprPerguntaRelacaos.
     */
    cursor?: AprPerguntaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprPerguntaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprPerguntaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AprPerguntaRelacaos.
     */
    distinct?: AprPerguntaRelacaoScalarFieldEnum | AprPerguntaRelacaoScalarFieldEnum[]
  }

  /**
   * AprPerguntaRelacao findFirstOrThrow
   */
  export type AprPerguntaRelacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprPerguntaRelacao to fetch.
     */
    where?: AprPerguntaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprPerguntaRelacaos to fetch.
     */
    orderBy?: AprPerguntaRelacaoOrderByWithRelationInput | AprPerguntaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AprPerguntaRelacaos.
     */
    cursor?: AprPerguntaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprPerguntaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprPerguntaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AprPerguntaRelacaos.
     */
    distinct?: AprPerguntaRelacaoScalarFieldEnum | AprPerguntaRelacaoScalarFieldEnum[]
  }

  /**
   * AprPerguntaRelacao findMany
   */
  export type AprPerguntaRelacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprPerguntaRelacaos to fetch.
     */
    where?: AprPerguntaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprPerguntaRelacaos to fetch.
     */
    orderBy?: AprPerguntaRelacaoOrderByWithRelationInput | AprPerguntaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AprPerguntaRelacaos.
     */
    cursor?: AprPerguntaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprPerguntaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprPerguntaRelacaos.
     */
    skip?: number
    distinct?: AprPerguntaRelacaoScalarFieldEnum | AprPerguntaRelacaoScalarFieldEnum[]
  }

  /**
   * AprPerguntaRelacao create
   */
  export type AprPerguntaRelacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a AprPerguntaRelacao.
     */
    data: XOR<AprPerguntaRelacaoCreateInput, AprPerguntaRelacaoUncheckedCreateInput>
  }

  /**
   * AprPerguntaRelacao createMany
   */
  export type AprPerguntaRelacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AprPerguntaRelacaos.
     */
    data: AprPerguntaRelacaoCreateManyInput | AprPerguntaRelacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AprPerguntaRelacao update
   */
  export type AprPerguntaRelacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a AprPerguntaRelacao.
     */
    data: XOR<AprPerguntaRelacaoUpdateInput, AprPerguntaRelacaoUncheckedUpdateInput>
    /**
     * Choose, which AprPerguntaRelacao to update.
     */
    where: AprPerguntaRelacaoWhereUniqueInput
  }

  /**
   * AprPerguntaRelacao updateMany
   */
  export type AprPerguntaRelacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AprPerguntaRelacaos.
     */
    data: XOR<AprPerguntaRelacaoUpdateManyMutationInput, AprPerguntaRelacaoUncheckedUpdateManyInput>
    /**
     * Filter which AprPerguntaRelacaos to update
     */
    where?: AprPerguntaRelacaoWhereInput
    /**
     * Limit how many AprPerguntaRelacaos to update.
     */
    limit?: number
  }

  /**
   * AprPerguntaRelacao upsert
   */
  export type AprPerguntaRelacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the AprPerguntaRelacao to update in case it exists.
     */
    where: AprPerguntaRelacaoWhereUniqueInput
    /**
     * In case the AprPerguntaRelacao found by the `where` argument doesn't exist, create a new AprPerguntaRelacao with this data.
     */
    create: XOR<AprPerguntaRelacaoCreateInput, AprPerguntaRelacaoUncheckedCreateInput>
    /**
     * In case the AprPerguntaRelacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AprPerguntaRelacaoUpdateInput, AprPerguntaRelacaoUncheckedUpdateInput>
  }

  /**
   * AprPerguntaRelacao delete
   */
  export type AprPerguntaRelacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter which AprPerguntaRelacao to delete.
     */
    where: AprPerguntaRelacaoWhereUniqueInput
  }

  /**
   * AprPerguntaRelacao deleteMany
   */
  export type AprPerguntaRelacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AprPerguntaRelacaos to delete
     */
    where?: AprPerguntaRelacaoWhereInput
    /**
     * Limit how many AprPerguntaRelacaos to delete.
     */
    limit?: number
  }

  /**
   * AprPerguntaRelacao without action
   */
  export type AprPerguntaRelacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprPerguntaRelacao
     */
    select?: AprPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprPerguntaRelacao
     */
    omit?: AprPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprPerguntaRelacaoInclude<ExtArgs> | null
  }


  /**
   * Model AprOpcaoResposta
   */

  export type AggregateAprOpcaoResposta = {
    _count: AprOpcaoRespostaCountAggregateOutputType | null
    _avg: AprOpcaoRespostaAvgAggregateOutputType | null
    _sum: AprOpcaoRespostaSumAggregateOutputType | null
    _min: AprOpcaoRespostaMinAggregateOutputType | null
    _max: AprOpcaoRespostaMaxAggregateOutputType | null
  }

  export type AprOpcaoRespostaAvgAggregateOutputType = {
    id: number | null
  }

  export type AprOpcaoRespostaSumAggregateOutputType = {
    id: number | null
  }

  export type AprOpcaoRespostaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprOpcaoRespostaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprOpcaoRespostaCountAggregateOutputType = {
    id: number
    nome: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type AprOpcaoRespostaAvgAggregateInputType = {
    id?: true
  }

  export type AprOpcaoRespostaSumAggregateInputType = {
    id?: true
  }

  export type AprOpcaoRespostaMinAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprOpcaoRespostaMaxAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprOpcaoRespostaCountAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type AprOpcaoRespostaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AprOpcaoResposta to aggregate.
     */
    where?: AprOpcaoRespostaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprOpcaoRespostas to fetch.
     */
    orderBy?: AprOpcaoRespostaOrderByWithRelationInput | AprOpcaoRespostaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AprOpcaoRespostaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprOpcaoRespostas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprOpcaoRespostas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AprOpcaoRespostas
    **/
    _count?: true | AprOpcaoRespostaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AprOpcaoRespostaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AprOpcaoRespostaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AprOpcaoRespostaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AprOpcaoRespostaMaxAggregateInputType
  }

  export type GetAprOpcaoRespostaAggregateType<T extends AprOpcaoRespostaAggregateArgs> = {
        [P in keyof T & keyof AggregateAprOpcaoResposta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAprOpcaoResposta[P]>
      : GetScalarType<T[P], AggregateAprOpcaoResposta[P]>
  }




  export type AprOpcaoRespostaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprOpcaoRespostaWhereInput
    orderBy?: AprOpcaoRespostaOrderByWithAggregationInput | AprOpcaoRespostaOrderByWithAggregationInput[]
    by: AprOpcaoRespostaScalarFieldEnum[] | AprOpcaoRespostaScalarFieldEnum
    having?: AprOpcaoRespostaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AprOpcaoRespostaCountAggregateInputType | true
    _avg?: AprOpcaoRespostaAvgAggregateInputType
    _sum?: AprOpcaoRespostaSumAggregateInputType
    _min?: AprOpcaoRespostaMinAggregateInputType
    _max?: AprOpcaoRespostaMaxAggregateInputType
  }

  export type AprOpcaoRespostaGroupByOutputType = {
    id: number
    nome: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: AprOpcaoRespostaCountAggregateOutputType | null
    _avg: AprOpcaoRespostaAvgAggregateOutputType | null
    _sum: AprOpcaoRespostaSumAggregateOutputType | null
    _min: AprOpcaoRespostaMinAggregateOutputType | null
    _max: AprOpcaoRespostaMaxAggregateOutputType | null
  }

  type GetAprOpcaoRespostaGroupByPayload<T extends AprOpcaoRespostaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AprOpcaoRespostaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AprOpcaoRespostaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AprOpcaoRespostaGroupByOutputType[P]>
            : GetScalarType<T[P], AprOpcaoRespostaGroupByOutputType[P]>
        }
      >
    >


  export type AprOpcaoRespostaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    AprOpcaoRespostaRelacao?: boolean | AprOpcaoResposta$AprOpcaoRespostaRelacaoArgs<ExtArgs>
    _count?: boolean | AprOpcaoRespostaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aprOpcaoResposta"]>



  export type AprOpcaoRespostaSelectScalar = {
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type AprOpcaoRespostaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["aprOpcaoResposta"]>
  export type AprOpcaoRespostaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AprOpcaoRespostaRelacao?: boolean | AprOpcaoResposta$AprOpcaoRespostaRelacaoArgs<ExtArgs>
    _count?: boolean | AprOpcaoRespostaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $AprOpcaoRespostaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AprOpcaoResposta"
    objects: {
      AprOpcaoRespostaRelacao: Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["aprOpcaoResposta"]>
    composites: {}
  }

  type AprOpcaoRespostaGetPayload<S extends boolean | null | undefined | AprOpcaoRespostaDefaultArgs> = $Result.GetResult<Prisma.$AprOpcaoRespostaPayload, S>

  type AprOpcaoRespostaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AprOpcaoRespostaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AprOpcaoRespostaCountAggregateInputType | true
    }

  export interface AprOpcaoRespostaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AprOpcaoResposta'], meta: { name: 'AprOpcaoResposta' } }
    /**
     * Find zero or one AprOpcaoResposta that matches the filter.
     * @param {AprOpcaoRespostaFindUniqueArgs} args - Arguments to find a AprOpcaoResposta
     * @example
     * // Get one AprOpcaoResposta
     * const aprOpcaoResposta = await prisma.aprOpcaoResposta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AprOpcaoRespostaFindUniqueArgs>(args: SelectSubset<T, AprOpcaoRespostaFindUniqueArgs<ExtArgs>>): Prisma__AprOpcaoRespostaClient<$Result.GetResult<Prisma.$AprOpcaoRespostaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AprOpcaoResposta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AprOpcaoRespostaFindUniqueOrThrowArgs} args - Arguments to find a AprOpcaoResposta
     * @example
     * // Get one AprOpcaoResposta
     * const aprOpcaoResposta = await prisma.aprOpcaoResposta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AprOpcaoRespostaFindUniqueOrThrowArgs>(args: SelectSubset<T, AprOpcaoRespostaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AprOpcaoRespostaClient<$Result.GetResult<Prisma.$AprOpcaoRespostaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AprOpcaoResposta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaFindFirstArgs} args - Arguments to find a AprOpcaoResposta
     * @example
     * // Get one AprOpcaoResposta
     * const aprOpcaoResposta = await prisma.aprOpcaoResposta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AprOpcaoRespostaFindFirstArgs>(args?: SelectSubset<T, AprOpcaoRespostaFindFirstArgs<ExtArgs>>): Prisma__AprOpcaoRespostaClient<$Result.GetResult<Prisma.$AprOpcaoRespostaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AprOpcaoResposta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaFindFirstOrThrowArgs} args - Arguments to find a AprOpcaoResposta
     * @example
     * // Get one AprOpcaoResposta
     * const aprOpcaoResposta = await prisma.aprOpcaoResposta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AprOpcaoRespostaFindFirstOrThrowArgs>(args?: SelectSubset<T, AprOpcaoRespostaFindFirstOrThrowArgs<ExtArgs>>): Prisma__AprOpcaoRespostaClient<$Result.GetResult<Prisma.$AprOpcaoRespostaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AprOpcaoRespostas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AprOpcaoRespostas
     * const aprOpcaoRespostas = await prisma.aprOpcaoResposta.findMany()
     * 
     * // Get first 10 AprOpcaoRespostas
     * const aprOpcaoRespostas = await prisma.aprOpcaoResposta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aprOpcaoRespostaWithIdOnly = await prisma.aprOpcaoResposta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AprOpcaoRespostaFindManyArgs>(args?: SelectSubset<T, AprOpcaoRespostaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprOpcaoRespostaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AprOpcaoResposta.
     * @param {AprOpcaoRespostaCreateArgs} args - Arguments to create a AprOpcaoResposta.
     * @example
     * // Create one AprOpcaoResposta
     * const AprOpcaoResposta = await prisma.aprOpcaoResposta.create({
     *   data: {
     *     // ... data to create a AprOpcaoResposta
     *   }
     * })
     * 
     */
    create<T extends AprOpcaoRespostaCreateArgs>(args: SelectSubset<T, AprOpcaoRespostaCreateArgs<ExtArgs>>): Prisma__AprOpcaoRespostaClient<$Result.GetResult<Prisma.$AprOpcaoRespostaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AprOpcaoRespostas.
     * @param {AprOpcaoRespostaCreateManyArgs} args - Arguments to create many AprOpcaoRespostas.
     * @example
     * // Create many AprOpcaoRespostas
     * const aprOpcaoResposta = await prisma.aprOpcaoResposta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AprOpcaoRespostaCreateManyArgs>(args?: SelectSubset<T, AprOpcaoRespostaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AprOpcaoResposta.
     * @param {AprOpcaoRespostaDeleteArgs} args - Arguments to delete one AprOpcaoResposta.
     * @example
     * // Delete one AprOpcaoResposta
     * const AprOpcaoResposta = await prisma.aprOpcaoResposta.delete({
     *   where: {
     *     // ... filter to delete one AprOpcaoResposta
     *   }
     * })
     * 
     */
    delete<T extends AprOpcaoRespostaDeleteArgs>(args: SelectSubset<T, AprOpcaoRespostaDeleteArgs<ExtArgs>>): Prisma__AprOpcaoRespostaClient<$Result.GetResult<Prisma.$AprOpcaoRespostaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AprOpcaoResposta.
     * @param {AprOpcaoRespostaUpdateArgs} args - Arguments to update one AprOpcaoResposta.
     * @example
     * // Update one AprOpcaoResposta
     * const aprOpcaoResposta = await prisma.aprOpcaoResposta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AprOpcaoRespostaUpdateArgs>(args: SelectSubset<T, AprOpcaoRespostaUpdateArgs<ExtArgs>>): Prisma__AprOpcaoRespostaClient<$Result.GetResult<Prisma.$AprOpcaoRespostaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AprOpcaoRespostas.
     * @param {AprOpcaoRespostaDeleteManyArgs} args - Arguments to filter AprOpcaoRespostas to delete.
     * @example
     * // Delete a few AprOpcaoRespostas
     * const { count } = await prisma.aprOpcaoResposta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AprOpcaoRespostaDeleteManyArgs>(args?: SelectSubset<T, AprOpcaoRespostaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AprOpcaoRespostas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AprOpcaoRespostas
     * const aprOpcaoResposta = await prisma.aprOpcaoResposta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AprOpcaoRespostaUpdateManyArgs>(args: SelectSubset<T, AprOpcaoRespostaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AprOpcaoResposta.
     * @param {AprOpcaoRespostaUpsertArgs} args - Arguments to update or create a AprOpcaoResposta.
     * @example
     * // Update or create a AprOpcaoResposta
     * const aprOpcaoResposta = await prisma.aprOpcaoResposta.upsert({
     *   create: {
     *     // ... data to create a AprOpcaoResposta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AprOpcaoResposta we want to update
     *   }
     * })
     */
    upsert<T extends AprOpcaoRespostaUpsertArgs>(args: SelectSubset<T, AprOpcaoRespostaUpsertArgs<ExtArgs>>): Prisma__AprOpcaoRespostaClient<$Result.GetResult<Prisma.$AprOpcaoRespostaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AprOpcaoRespostas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaCountArgs} args - Arguments to filter AprOpcaoRespostas to count.
     * @example
     * // Count the number of AprOpcaoRespostas
     * const count = await prisma.aprOpcaoResposta.count({
     *   where: {
     *     // ... the filter for the AprOpcaoRespostas we want to count
     *   }
     * })
    **/
    count<T extends AprOpcaoRespostaCountArgs>(
      args?: Subset<T, AprOpcaoRespostaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AprOpcaoRespostaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AprOpcaoResposta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AprOpcaoRespostaAggregateArgs>(args: Subset<T, AprOpcaoRespostaAggregateArgs>): Prisma.PrismaPromise<GetAprOpcaoRespostaAggregateType<T>>

    /**
     * Group by AprOpcaoResposta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AprOpcaoRespostaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AprOpcaoRespostaGroupByArgs['orderBy'] }
        : { orderBy?: AprOpcaoRespostaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AprOpcaoRespostaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAprOpcaoRespostaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AprOpcaoResposta model
   */
  readonly fields: AprOpcaoRespostaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AprOpcaoResposta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AprOpcaoRespostaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    AprOpcaoRespostaRelacao<T extends AprOpcaoResposta$AprOpcaoRespostaRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, AprOpcaoResposta$AprOpcaoRespostaRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AprOpcaoResposta model
   */
  interface AprOpcaoRespostaFieldRefs {
    readonly id: FieldRef<"AprOpcaoResposta", 'Int'>
    readonly nome: FieldRef<"AprOpcaoResposta", 'String'>
    readonly createdAt: FieldRef<"AprOpcaoResposta", 'DateTime'>
    readonly createdBy: FieldRef<"AprOpcaoResposta", 'String'>
    readonly updatedAt: FieldRef<"AprOpcaoResposta", 'DateTime'>
    readonly updatedBy: FieldRef<"AprOpcaoResposta", 'String'>
    readonly deletedAt: FieldRef<"AprOpcaoResposta", 'DateTime'>
    readonly deletedBy: FieldRef<"AprOpcaoResposta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AprOpcaoResposta findUnique
   */
  export type AprOpcaoRespostaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoResposta
     */
    select?: AprOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoResposta
     */
    omit?: AprOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter, which AprOpcaoResposta to fetch.
     */
    where: AprOpcaoRespostaWhereUniqueInput
  }

  /**
   * AprOpcaoResposta findUniqueOrThrow
   */
  export type AprOpcaoRespostaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoResposta
     */
    select?: AprOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoResposta
     */
    omit?: AprOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter, which AprOpcaoResposta to fetch.
     */
    where: AprOpcaoRespostaWhereUniqueInput
  }

  /**
   * AprOpcaoResposta findFirst
   */
  export type AprOpcaoRespostaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoResposta
     */
    select?: AprOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoResposta
     */
    omit?: AprOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter, which AprOpcaoResposta to fetch.
     */
    where?: AprOpcaoRespostaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprOpcaoRespostas to fetch.
     */
    orderBy?: AprOpcaoRespostaOrderByWithRelationInput | AprOpcaoRespostaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AprOpcaoRespostas.
     */
    cursor?: AprOpcaoRespostaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprOpcaoRespostas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprOpcaoRespostas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AprOpcaoRespostas.
     */
    distinct?: AprOpcaoRespostaScalarFieldEnum | AprOpcaoRespostaScalarFieldEnum[]
  }

  /**
   * AprOpcaoResposta findFirstOrThrow
   */
  export type AprOpcaoRespostaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoResposta
     */
    select?: AprOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoResposta
     */
    omit?: AprOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter, which AprOpcaoResposta to fetch.
     */
    where?: AprOpcaoRespostaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprOpcaoRespostas to fetch.
     */
    orderBy?: AprOpcaoRespostaOrderByWithRelationInput | AprOpcaoRespostaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AprOpcaoRespostas.
     */
    cursor?: AprOpcaoRespostaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprOpcaoRespostas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprOpcaoRespostas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AprOpcaoRespostas.
     */
    distinct?: AprOpcaoRespostaScalarFieldEnum | AprOpcaoRespostaScalarFieldEnum[]
  }

  /**
   * AprOpcaoResposta findMany
   */
  export type AprOpcaoRespostaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoResposta
     */
    select?: AprOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoResposta
     */
    omit?: AprOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter, which AprOpcaoRespostas to fetch.
     */
    where?: AprOpcaoRespostaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprOpcaoRespostas to fetch.
     */
    orderBy?: AprOpcaoRespostaOrderByWithRelationInput | AprOpcaoRespostaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AprOpcaoRespostas.
     */
    cursor?: AprOpcaoRespostaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprOpcaoRespostas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprOpcaoRespostas.
     */
    skip?: number
    distinct?: AprOpcaoRespostaScalarFieldEnum | AprOpcaoRespostaScalarFieldEnum[]
  }

  /**
   * AprOpcaoResposta create
   */
  export type AprOpcaoRespostaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoResposta
     */
    select?: AprOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoResposta
     */
    omit?: AprOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaInclude<ExtArgs> | null
    /**
     * The data needed to create a AprOpcaoResposta.
     */
    data: XOR<AprOpcaoRespostaCreateInput, AprOpcaoRespostaUncheckedCreateInput>
  }

  /**
   * AprOpcaoResposta createMany
   */
  export type AprOpcaoRespostaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AprOpcaoRespostas.
     */
    data: AprOpcaoRespostaCreateManyInput | AprOpcaoRespostaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AprOpcaoResposta update
   */
  export type AprOpcaoRespostaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoResposta
     */
    select?: AprOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoResposta
     */
    omit?: AprOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaInclude<ExtArgs> | null
    /**
     * The data needed to update a AprOpcaoResposta.
     */
    data: XOR<AprOpcaoRespostaUpdateInput, AprOpcaoRespostaUncheckedUpdateInput>
    /**
     * Choose, which AprOpcaoResposta to update.
     */
    where: AprOpcaoRespostaWhereUniqueInput
  }

  /**
   * AprOpcaoResposta updateMany
   */
  export type AprOpcaoRespostaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AprOpcaoRespostas.
     */
    data: XOR<AprOpcaoRespostaUpdateManyMutationInput, AprOpcaoRespostaUncheckedUpdateManyInput>
    /**
     * Filter which AprOpcaoRespostas to update
     */
    where?: AprOpcaoRespostaWhereInput
    /**
     * Limit how many AprOpcaoRespostas to update.
     */
    limit?: number
  }

  /**
   * AprOpcaoResposta upsert
   */
  export type AprOpcaoRespostaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoResposta
     */
    select?: AprOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoResposta
     */
    omit?: AprOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaInclude<ExtArgs> | null
    /**
     * The filter to search for the AprOpcaoResposta to update in case it exists.
     */
    where: AprOpcaoRespostaWhereUniqueInput
    /**
     * In case the AprOpcaoResposta found by the `where` argument doesn't exist, create a new AprOpcaoResposta with this data.
     */
    create: XOR<AprOpcaoRespostaCreateInput, AprOpcaoRespostaUncheckedCreateInput>
    /**
     * In case the AprOpcaoResposta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AprOpcaoRespostaUpdateInput, AprOpcaoRespostaUncheckedUpdateInput>
  }

  /**
   * AprOpcaoResposta delete
   */
  export type AprOpcaoRespostaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoResposta
     */
    select?: AprOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoResposta
     */
    omit?: AprOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter which AprOpcaoResposta to delete.
     */
    where: AprOpcaoRespostaWhereUniqueInput
  }

  /**
   * AprOpcaoResposta deleteMany
   */
  export type AprOpcaoRespostaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AprOpcaoRespostas to delete
     */
    where?: AprOpcaoRespostaWhereInput
    /**
     * Limit how many AprOpcaoRespostas to delete.
     */
    limit?: number
  }

  /**
   * AprOpcaoResposta.AprOpcaoRespostaRelacao
   */
  export type AprOpcaoResposta$AprOpcaoRespostaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    where?: AprOpcaoRespostaRelacaoWhereInput
    orderBy?: AprOpcaoRespostaRelacaoOrderByWithRelationInput | AprOpcaoRespostaRelacaoOrderByWithRelationInput[]
    cursor?: AprOpcaoRespostaRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AprOpcaoRespostaRelacaoScalarFieldEnum | AprOpcaoRespostaRelacaoScalarFieldEnum[]
  }

  /**
   * AprOpcaoResposta without action
   */
  export type AprOpcaoRespostaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoResposta
     */
    select?: AprOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoResposta
     */
    omit?: AprOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaInclude<ExtArgs> | null
  }


  /**
   * Model AprOpcaoRespostaRelacao
   */

  export type AggregateAprOpcaoRespostaRelacao = {
    _count: AprOpcaoRespostaRelacaoCountAggregateOutputType | null
    _avg: AprOpcaoRespostaRelacaoAvgAggregateOutputType | null
    _sum: AprOpcaoRespostaRelacaoSumAggregateOutputType | null
    _min: AprOpcaoRespostaRelacaoMinAggregateOutputType | null
    _max: AprOpcaoRespostaRelacaoMaxAggregateOutputType | null
  }

  export type AprOpcaoRespostaRelacaoAvgAggregateOutputType = {
    id: number | null
    aprOpcaoRespostaId: number | null
    aprId: number | null
  }

  export type AprOpcaoRespostaRelacaoSumAggregateOutputType = {
    id: number | null
    aprOpcaoRespostaId: number | null
    aprId: number | null
  }

  export type AprOpcaoRespostaRelacaoMinAggregateOutputType = {
    id: number | null
    aprOpcaoRespostaId: number | null
    aprId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprOpcaoRespostaRelacaoMaxAggregateOutputType = {
    id: number | null
    aprOpcaoRespostaId: number | null
    aprId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprOpcaoRespostaRelacaoCountAggregateOutputType = {
    id: number
    aprOpcaoRespostaId: number
    aprId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type AprOpcaoRespostaRelacaoAvgAggregateInputType = {
    id?: true
    aprOpcaoRespostaId?: true
    aprId?: true
  }

  export type AprOpcaoRespostaRelacaoSumAggregateInputType = {
    id?: true
    aprOpcaoRespostaId?: true
    aprId?: true
  }

  export type AprOpcaoRespostaRelacaoMinAggregateInputType = {
    id?: true
    aprOpcaoRespostaId?: true
    aprId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprOpcaoRespostaRelacaoMaxAggregateInputType = {
    id?: true
    aprOpcaoRespostaId?: true
    aprId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprOpcaoRespostaRelacaoCountAggregateInputType = {
    id?: true
    aprOpcaoRespostaId?: true
    aprId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type AprOpcaoRespostaRelacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AprOpcaoRespostaRelacao to aggregate.
     */
    where?: AprOpcaoRespostaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprOpcaoRespostaRelacaos to fetch.
     */
    orderBy?: AprOpcaoRespostaRelacaoOrderByWithRelationInput | AprOpcaoRespostaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AprOpcaoRespostaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprOpcaoRespostaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprOpcaoRespostaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AprOpcaoRespostaRelacaos
    **/
    _count?: true | AprOpcaoRespostaRelacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AprOpcaoRespostaRelacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AprOpcaoRespostaRelacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AprOpcaoRespostaRelacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AprOpcaoRespostaRelacaoMaxAggregateInputType
  }

  export type GetAprOpcaoRespostaRelacaoAggregateType<T extends AprOpcaoRespostaRelacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateAprOpcaoRespostaRelacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAprOpcaoRespostaRelacao[P]>
      : GetScalarType<T[P], AggregateAprOpcaoRespostaRelacao[P]>
  }




  export type AprOpcaoRespostaRelacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprOpcaoRespostaRelacaoWhereInput
    orderBy?: AprOpcaoRespostaRelacaoOrderByWithAggregationInput | AprOpcaoRespostaRelacaoOrderByWithAggregationInput[]
    by: AprOpcaoRespostaRelacaoScalarFieldEnum[] | AprOpcaoRespostaRelacaoScalarFieldEnum
    having?: AprOpcaoRespostaRelacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AprOpcaoRespostaRelacaoCountAggregateInputType | true
    _avg?: AprOpcaoRespostaRelacaoAvgAggregateInputType
    _sum?: AprOpcaoRespostaRelacaoSumAggregateInputType
    _min?: AprOpcaoRespostaRelacaoMinAggregateInputType
    _max?: AprOpcaoRespostaRelacaoMaxAggregateInputType
  }

  export type AprOpcaoRespostaRelacaoGroupByOutputType = {
    id: number
    aprOpcaoRespostaId: number
    aprId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: AprOpcaoRespostaRelacaoCountAggregateOutputType | null
    _avg: AprOpcaoRespostaRelacaoAvgAggregateOutputType | null
    _sum: AprOpcaoRespostaRelacaoSumAggregateOutputType | null
    _min: AprOpcaoRespostaRelacaoMinAggregateOutputType | null
    _max: AprOpcaoRespostaRelacaoMaxAggregateOutputType | null
  }

  type GetAprOpcaoRespostaRelacaoGroupByPayload<T extends AprOpcaoRespostaRelacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AprOpcaoRespostaRelacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AprOpcaoRespostaRelacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AprOpcaoRespostaRelacaoGroupByOutputType[P]>
            : GetScalarType<T[P], AprOpcaoRespostaRelacaoGroupByOutputType[P]>
        }
      >
    >


  export type AprOpcaoRespostaRelacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    aprOpcaoRespostaId?: boolean
    aprId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    aprOpcaoResposta?: boolean | AprOpcaoRespostaDefaultArgs<ExtArgs>
    apr?: boolean | AprDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aprOpcaoRespostaRelacao"]>



  export type AprOpcaoRespostaRelacaoSelectScalar = {
    id?: boolean
    aprOpcaoRespostaId?: boolean
    aprId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type AprOpcaoRespostaRelacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "aprOpcaoRespostaId" | "aprId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["aprOpcaoRespostaRelacao"]>
  export type AprOpcaoRespostaRelacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    aprOpcaoResposta?: boolean | AprOpcaoRespostaDefaultArgs<ExtArgs>
    apr?: boolean | AprDefaultArgs<ExtArgs>
  }

  export type $AprOpcaoRespostaRelacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AprOpcaoRespostaRelacao"
    objects: {
      aprOpcaoResposta: Prisma.$AprOpcaoRespostaPayload<ExtArgs>
      apr: Prisma.$AprPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      aprOpcaoRespostaId: number
      aprId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["aprOpcaoRespostaRelacao"]>
    composites: {}
  }

  type AprOpcaoRespostaRelacaoGetPayload<S extends boolean | null | undefined | AprOpcaoRespostaRelacaoDefaultArgs> = $Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload, S>

  type AprOpcaoRespostaRelacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AprOpcaoRespostaRelacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AprOpcaoRespostaRelacaoCountAggregateInputType | true
    }

  export interface AprOpcaoRespostaRelacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AprOpcaoRespostaRelacao'], meta: { name: 'AprOpcaoRespostaRelacao' } }
    /**
     * Find zero or one AprOpcaoRespostaRelacao that matches the filter.
     * @param {AprOpcaoRespostaRelacaoFindUniqueArgs} args - Arguments to find a AprOpcaoRespostaRelacao
     * @example
     * // Get one AprOpcaoRespostaRelacao
     * const aprOpcaoRespostaRelacao = await prisma.aprOpcaoRespostaRelacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AprOpcaoRespostaRelacaoFindUniqueArgs>(args: SelectSubset<T, AprOpcaoRespostaRelacaoFindUniqueArgs<ExtArgs>>): Prisma__AprOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AprOpcaoRespostaRelacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AprOpcaoRespostaRelacaoFindUniqueOrThrowArgs} args - Arguments to find a AprOpcaoRespostaRelacao
     * @example
     * // Get one AprOpcaoRespostaRelacao
     * const aprOpcaoRespostaRelacao = await prisma.aprOpcaoRespostaRelacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AprOpcaoRespostaRelacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, AprOpcaoRespostaRelacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AprOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AprOpcaoRespostaRelacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaRelacaoFindFirstArgs} args - Arguments to find a AprOpcaoRespostaRelacao
     * @example
     * // Get one AprOpcaoRespostaRelacao
     * const aprOpcaoRespostaRelacao = await prisma.aprOpcaoRespostaRelacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AprOpcaoRespostaRelacaoFindFirstArgs>(args?: SelectSubset<T, AprOpcaoRespostaRelacaoFindFirstArgs<ExtArgs>>): Prisma__AprOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AprOpcaoRespostaRelacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaRelacaoFindFirstOrThrowArgs} args - Arguments to find a AprOpcaoRespostaRelacao
     * @example
     * // Get one AprOpcaoRespostaRelacao
     * const aprOpcaoRespostaRelacao = await prisma.aprOpcaoRespostaRelacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AprOpcaoRespostaRelacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, AprOpcaoRespostaRelacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__AprOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AprOpcaoRespostaRelacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaRelacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AprOpcaoRespostaRelacaos
     * const aprOpcaoRespostaRelacaos = await prisma.aprOpcaoRespostaRelacao.findMany()
     * 
     * // Get first 10 AprOpcaoRespostaRelacaos
     * const aprOpcaoRespostaRelacaos = await prisma.aprOpcaoRespostaRelacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aprOpcaoRespostaRelacaoWithIdOnly = await prisma.aprOpcaoRespostaRelacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AprOpcaoRespostaRelacaoFindManyArgs>(args?: SelectSubset<T, AprOpcaoRespostaRelacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AprOpcaoRespostaRelacao.
     * @param {AprOpcaoRespostaRelacaoCreateArgs} args - Arguments to create a AprOpcaoRespostaRelacao.
     * @example
     * // Create one AprOpcaoRespostaRelacao
     * const AprOpcaoRespostaRelacao = await prisma.aprOpcaoRespostaRelacao.create({
     *   data: {
     *     // ... data to create a AprOpcaoRespostaRelacao
     *   }
     * })
     * 
     */
    create<T extends AprOpcaoRespostaRelacaoCreateArgs>(args: SelectSubset<T, AprOpcaoRespostaRelacaoCreateArgs<ExtArgs>>): Prisma__AprOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AprOpcaoRespostaRelacaos.
     * @param {AprOpcaoRespostaRelacaoCreateManyArgs} args - Arguments to create many AprOpcaoRespostaRelacaos.
     * @example
     * // Create many AprOpcaoRespostaRelacaos
     * const aprOpcaoRespostaRelacao = await prisma.aprOpcaoRespostaRelacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AprOpcaoRespostaRelacaoCreateManyArgs>(args?: SelectSubset<T, AprOpcaoRespostaRelacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AprOpcaoRespostaRelacao.
     * @param {AprOpcaoRespostaRelacaoDeleteArgs} args - Arguments to delete one AprOpcaoRespostaRelacao.
     * @example
     * // Delete one AprOpcaoRespostaRelacao
     * const AprOpcaoRespostaRelacao = await prisma.aprOpcaoRespostaRelacao.delete({
     *   where: {
     *     // ... filter to delete one AprOpcaoRespostaRelacao
     *   }
     * })
     * 
     */
    delete<T extends AprOpcaoRespostaRelacaoDeleteArgs>(args: SelectSubset<T, AprOpcaoRespostaRelacaoDeleteArgs<ExtArgs>>): Prisma__AprOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AprOpcaoRespostaRelacao.
     * @param {AprOpcaoRespostaRelacaoUpdateArgs} args - Arguments to update one AprOpcaoRespostaRelacao.
     * @example
     * // Update one AprOpcaoRespostaRelacao
     * const aprOpcaoRespostaRelacao = await prisma.aprOpcaoRespostaRelacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AprOpcaoRespostaRelacaoUpdateArgs>(args: SelectSubset<T, AprOpcaoRespostaRelacaoUpdateArgs<ExtArgs>>): Prisma__AprOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AprOpcaoRespostaRelacaos.
     * @param {AprOpcaoRespostaRelacaoDeleteManyArgs} args - Arguments to filter AprOpcaoRespostaRelacaos to delete.
     * @example
     * // Delete a few AprOpcaoRespostaRelacaos
     * const { count } = await prisma.aprOpcaoRespostaRelacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AprOpcaoRespostaRelacaoDeleteManyArgs>(args?: SelectSubset<T, AprOpcaoRespostaRelacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AprOpcaoRespostaRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaRelacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AprOpcaoRespostaRelacaos
     * const aprOpcaoRespostaRelacao = await prisma.aprOpcaoRespostaRelacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AprOpcaoRespostaRelacaoUpdateManyArgs>(args: SelectSubset<T, AprOpcaoRespostaRelacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AprOpcaoRespostaRelacao.
     * @param {AprOpcaoRespostaRelacaoUpsertArgs} args - Arguments to update or create a AprOpcaoRespostaRelacao.
     * @example
     * // Update or create a AprOpcaoRespostaRelacao
     * const aprOpcaoRespostaRelacao = await prisma.aprOpcaoRespostaRelacao.upsert({
     *   create: {
     *     // ... data to create a AprOpcaoRespostaRelacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AprOpcaoRespostaRelacao we want to update
     *   }
     * })
     */
    upsert<T extends AprOpcaoRespostaRelacaoUpsertArgs>(args: SelectSubset<T, AprOpcaoRespostaRelacaoUpsertArgs<ExtArgs>>): Prisma__AprOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$AprOpcaoRespostaRelacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AprOpcaoRespostaRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaRelacaoCountArgs} args - Arguments to filter AprOpcaoRespostaRelacaos to count.
     * @example
     * // Count the number of AprOpcaoRespostaRelacaos
     * const count = await prisma.aprOpcaoRespostaRelacao.count({
     *   where: {
     *     // ... the filter for the AprOpcaoRespostaRelacaos we want to count
     *   }
     * })
    **/
    count<T extends AprOpcaoRespostaRelacaoCountArgs>(
      args?: Subset<T, AprOpcaoRespostaRelacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AprOpcaoRespostaRelacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AprOpcaoRespostaRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaRelacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AprOpcaoRespostaRelacaoAggregateArgs>(args: Subset<T, AprOpcaoRespostaRelacaoAggregateArgs>): Prisma.PrismaPromise<GetAprOpcaoRespostaRelacaoAggregateType<T>>

    /**
     * Group by AprOpcaoRespostaRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprOpcaoRespostaRelacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AprOpcaoRespostaRelacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AprOpcaoRespostaRelacaoGroupByArgs['orderBy'] }
        : { orderBy?: AprOpcaoRespostaRelacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AprOpcaoRespostaRelacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAprOpcaoRespostaRelacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AprOpcaoRespostaRelacao model
   */
  readonly fields: AprOpcaoRespostaRelacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AprOpcaoRespostaRelacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AprOpcaoRespostaRelacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    aprOpcaoResposta<T extends AprOpcaoRespostaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AprOpcaoRespostaDefaultArgs<ExtArgs>>): Prisma__AprOpcaoRespostaClient<$Result.GetResult<Prisma.$AprOpcaoRespostaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    apr<T extends AprDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AprDefaultArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AprOpcaoRespostaRelacao model
   */
  interface AprOpcaoRespostaRelacaoFieldRefs {
    readonly id: FieldRef<"AprOpcaoRespostaRelacao", 'Int'>
    readonly aprOpcaoRespostaId: FieldRef<"AprOpcaoRespostaRelacao", 'Int'>
    readonly aprId: FieldRef<"AprOpcaoRespostaRelacao", 'Int'>
    readonly createdAt: FieldRef<"AprOpcaoRespostaRelacao", 'DateTime'>
    readonly createdBy: FieldRef<"AprOpcaoRespostaRelacao", 'String'>
    readonly updatedAt: FieldRef<"AprOpcaoRespostaRelacao", 'DateTime'>
    readonly updatedBy: FieldRef<"AprOpcaoRespostaRelacao", 'String'>
    readonly deletedAt: FieldRef<"AprOpcaoRespostaRelacao", 'DateTime'>
    readonly deletedBy: FieldRef<"AprOpcaoRespostaRelacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AprOpcaoRespostaRelacao findUnique
   */
  export type AprOpcaoRespostaRelacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprOpcaoRespostaRelacao to fetch.
     */
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
  }

  /**
   * AprOpcaoRespostaRelacao findUniqueOrThrow
   */
  export type AprOpcaoRespostaRelacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprOpcaoRespostaRelacao to fetch.
     */
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
  }

  /**
   * AprOpcaoRespostaRelacao findFirst
   */
  export type AprOpcaoRespostaRelacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprOpcaoRespostaRelacao to fetch.
     */
    where?: AprOpcaoRespostaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprOpcaoRespostaRelacaos to fetch.
     */
    orderBy?: AprOpcaoRespostaRelacaoOrderByWithRelationInput | AprOpcaoRespostaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AprOpcaoRespostaRelacaos.
     */
    cursor?: AprOpcaoRespostaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprOpcaoRespostaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprOpcaoRespostaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AprOpcaoRespostaRelacaos.
     */
    distinct?: AprOpcaoRespostaRelacaoScalarFieldEnum | AprOpcaoRespostaRelacaoScalarFieldEnum[]
  }

  /**
   * AprOpcaoRespostaRelacao findFirstOrThrow
   */
  export type AprOpcaoRespostaRelacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprOpcaoRespostaRelacao to fetch.
     */
    where?: AprOpcaoRespostaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprOpcaoRespostaRelacaos to fetch.
     */
    orderBy?: AprOpcaoRespostaRelacaoOrderByWithRelationInput | AprOpcaoRespostaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AprOpcaoRespostaRelacaos.
     */
    cursor?: AprOpcaoRespostaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprOpcaoRespostaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprOpcaoRespostaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AprOpcaoRespostaRelacaos.
     */
    distinct?: AprOpcaoRespostaRelacaoScalarFieldEnum | AprOpcaoRespostaRelacaoScalarFieldEnum[]
  }

  /**
   * AprOpcaoRespostaRelacao findMany
   */
  export type AprOpcaoRespostaRelacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprOpcaoRespostaRelacaos to fetch.
     */
    where?: AprOpcaoRespostaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprOpcaoRespostaRelacaos to fetch.
     */
    orderBy?: AprOpcaoRespostaRelacaoOrderByWithRelationInput | AprOpcaoRespostaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AprOpcaoRespostaRelacaos.
     */
    cursor?: AprOpcaoRespostaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprOpcaoRespostaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprOpcaoRespostaRelacaos.
     */
    skip?: number
    distinct?: AprOpcaoRespostaRelacaoScalarFieldEnum | AprOpcaoRespostaRelacaoScalarFieldEnum[]
  }

  /**
   * AprOpcaoRespostaRelacao create
   */
  export type AprOpcaoRespostaRelacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a AprOpcaoRespostaRelacao.
     */
    data: XOR<AprOpcaoRespostaRelacaoCreateInput, AprOpcaoRespostaRelacaoUncheckedCreateInput>
  }

  /**
   * AprOpcaoRespostaRelacao createMany
   */
  export type AprOpcaoRespostaRelacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AprOpcaoRespostaRelacaos.
     */
    data: AprOpcaoRespostaRelacaoCreateManyInput | AprOpcaoRespostaRelacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AprOpcaoRespostaRelacao update
   */
  export type AprOpcaoRespostaRelacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a AprOpcaoRespostaRelacao.
     */
    data: XOR<AprOpcaoRespostaRelacaoUpdateInput, AprOpcaoRespostaRelacaoUncheckedUpdateInput>
    /**
     * Choose, which AprOpcaoRespostaRelacao to update.
     */
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
  }

  /**
   * AprOpcaoRespostaRelacao updateMany
   */
  export type AprOpcaoRespostaRelacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AprOpcaoRespostaRelacaos.
     */
    data: XOR<AprOpcaoRespostaRelacaoUpdateManyMutationInput, AprOpcaoRespostaRelacaoUncheckedUpdateManyInput>
    /**
     * Filter which AprOpcaoRespostaRelacaos to update
     */
    where?: AprOpcaoRespostaRelacaoWhereInput
    /**
     * Limit how many AprOpcaoRespostaRelacaos to update.
     */
    limit?: number
  }

  /**
   * AprOpcaoRespostaRelacao upsert
   */
  export type AprOpcaoRespostaRelacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the AprOpcaoRespostaRelacao to update in case it exists.
     */
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
    /**
     * In case the AprOpcaoRespostaRelacao found by the `where` argument doesn't exist, create a new AprOpcaoRespostaRelacao with this data.
     */
    create: XOR<AprOpcaoRespostaRelacaoCreateInput, AprOpcaoRespostaRelacaoUncheckedCreateInput>
    /**
     * In case the AprOpcaoRespostaRelacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AprOpcaoRespostaRelacaoUpdateInput, AprOpcaoRespostaRelacaoUncheckedUpdateInput>
  }

  /**
   * AprOpcaoRespostaRelacao delete
   */
  export type AprOpcaoRespostaRelacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter which AprOpcaoRespostaRelacao to delete.
     */
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
  }

  /**
   * AprOpcaoRespostaRelacao deleteMany
   */
  export type AprOpcaoRespostaRelacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AprOpcaoRespostaRelacaos to delete
     */
    where?: AprOpcaoRespostaRelacaoWhereInput
    /**
     * Limit how many AprOpcaoRespostaRelacaos to delete.
     */
    limit?: number
  }

  /**
   * AprOpcaoRespostaRelacao without action
   */
  export type AprOpcaoRespostaRelacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprOpcaoRespostaRelacao
     */
    select?: AprOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprOpcaoRespostaRelacao
     */
    omit?: AprOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprOpcaoRespostaRelacaoInclude<ExtArgs> | null
  }


  /**
   * Model AprTipoAtividadeRelacao
   */

  export type AggregateAprTipoAtividadeRelacao = {
    _count: AprTipoAtividadeRelacaoCountAggregateOutputType | null
    _avg: AprTipoAtividadeRelacaoAvgAggregateOutputType | null
    _sum: AprTipoAtividadeRelacaoSumAggregateOutputType | null
    _min: AprTipoAtividadeRelacaoMinAggregateOutputType | null
    _max: AprTipoAtividadeRelacaoMaxAggregateOutputType | null
  }

  export type AprTipoAtividadeRelacaoAvgAggregateOutputType = {
    id: number | null
    aprId: number | null
    tipoAtividadeId: number | null
  }

  export type AprTipoAtividadeRelacaoSumAggregateOutputType = {
    id: number | null
    aprId: number | null
    tipoAtividadeId: number | null
  }

  export type AprTipoAtividadeRelacaoMinAggregateOutputType = {
    id: number | null
    aprId: number | null
    tipoAtividadeId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprTipoAtividadeRelacaoMaxAggregateOutputType = {
    id: number | null
    aprId: number | null
    tipoAtividadeId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AprTipoAtividadeRelacaoCountAggregateOutputType = {
    id: number
    aprId: number
    tipoAtividadeId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type AprTipoAtividadeRelacaoAvgAggregateInputType = {
    id?: true
    aprId?: true
    tipoAtividadeId?: true
  }

  export type AprTipoAtividadeRelacaoSumAggregateInputType = {
    id?: true
    aprId?: true
    tipoAtividadeId?: true
  }

  export type AprTipoAtividadeRelacaoMinAggregateInputType = {
    id?: true
    aprId?: true
    tipoAtividadeId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprTipoAtividadeRelacaoMaxAggregateInputType = {
    id?: true
    aprId?: true
    tipoAtividadeId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AprTipoAtividadeRelacaoCountAggregateInputType = {
    id?: true
    aprId?: true
    tipoAtividadeId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type AprTipoAtividadeRelacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AprTipoAtividadeRelacao to aggregate.
     */
    where?: AprTipoAtividadeRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprTipoAtividadeRelacaos to fetch.
     */
    orderBy?: AprTipoAtividadeRelacaoOrderByWithRelationInput | AprTipoAtividadeRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AprTipoAtividadeRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprTipoAtividadeRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprTipoAtividadeRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AprTipoAtividadeRelacaos
    **/
    _count?: true | AprTipoAtividadeRelacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AprTipoAtividadeRelacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AprTipoAtividadeRelacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AprTipoAtividadeRelacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AprTipoAtividadeRelacaoMaxAggregateInputType
  }

  export type GetAprTipoAtividadeRelacaoAggregateType<T extends AprTipoAtividadeRelacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateAprTipoAtividadeRelacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAprTipoAtividadeRelacao[P]>
      : GetScalarType<T[P], AggregateAprTipoAtividadeRelacao[P]>
  }




  export type AprTipoAtividadeRelacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AprTipoAtividadeRelacaoWhereInput
    orderBy?: AprTipoAtividadeRelacaoOrderByWithAggregationInput | AprTipoAtividadeRelacaoOrderByWithAggregationInput[]
    by: AprTipoAtividadeRelacaoScalarFieldEnum[] | AprTipoAtividadeRelacaoScalarFieldEnum
    having?: AprTipoAtividadeRelacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AprTipoAtividadeRelacaoCountAggregateInputType | true
    _avg?: AprTipoAtividadeRelacaoAvgAggregateInputType
    _sum?: AprTipoAtividadeRelacaoSumAggregateInputType
    _min?: AprTipoAtividadeRelacaoMinAggregateInputType
    _max?: AprTipoAtividadeRelacaoMaxAggregateInputType
  }

  export type AprTipoAtividadeRelacaoGroupByOutputType = {
    id: number
    aprId: number
    tipoAtividadeId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: AprTipoAtividadeRelacaoCountAggregateOutputType | null
    _avg: AprTipoAtividadeRelacaoAvgAggregateOutputType | null
    _sum: AprTipoAtividadeRelacaoSumAggregateOutputType | null
    _min: AprTipoAtividadeRelacaoMinAggregateOutputType | null
    _max: AprTipoAtividadeRelacaoMaxAggregateOutputType | null
  }

  type GetAprTipoAtividadeRelacaoGroupByPayload<T extends AprTipoAtividadeRelacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AprTipoAtividadeRelacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AprTipoAtividadeRelacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AprTipoAtividadeRelacaoGroupByOutputType[P]>
            : GetScalarType<T[P], AprTipoAtividadeRelacaoGroupByOutputType[P]>
        }
      >
    >


  export type AprTipoAtividadeRelacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    aprId?: boolean
    tipoAtividadeId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    apr?: boolean | AprDefaultArgs<ExtArgs>
    tipoAtividade?: boolean | TipoAtividadeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aprTipoAtividadeRelacao"]>



  export type AprTipoAtividadeRelacaoSelectScalar = {
    id?: boolean
    aprId?: boolean
    tipoAtividadeId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type AprTipoAtividadeRelacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "aprId" | "tipoAtividadeId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["aprTipoAtividadeRelacao"]>
  export type AprTipoAtividadeRelacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    apr?: boolean | AprDefaultArgs<ExtArgs>
    tipoAtividade?: boolean | TipoAtividadeDefaultArgs<ExtArgs>
  }

  export type $AprTipoAtividadeRelacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AprTipoAtividadeRelacao"
    objects: {
      apr: Prisma.$AprPayload<ExtArgs>
      tipoAtividade: Prisma.$TipoAtividadePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      aprId: number
      tipoAtividadeId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["aprTipoAtividadeRelacao"]>
    composites: {}
  }

  type AprTipoAtividadeRelacaoGetPayload<S extends boolean | null | undefined | AprTipoAtividadeRelacaoDefaultArgs> = $Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload, S>

  type AprTipoAtividadeRelacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AprTipoAtividadeRelacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AprTipoAtividadeRelacaoCountAggregateInputType | true
    }

  export interface AprTipoAtividadeRelacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AprTipoAtividadeRelacao'], meta: { name: 'AprTipoAtividadeRelacao' } }
    /**
     * Find zero or one AprTipoAtividadeRelacao that matches the filter.
     * @param {AprTipoAtividadeRelacaoFindUniqueArgs} args - Arguments to find a AprTipoAtividadeRelacao
     * @example
     * // Get one AprTipoAtividadeRelacao
     * const aprTipoAtividadeRelacao = await prisma.aprTipoAtividadeRelacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AprTipoAtividadeRelacaoFindUniqueArgs>(args: SelectSubset<T, AprTipoAtividadeRelacaoFindUniqueArgs<ExtArgs>>): Prisma__AprTipoAtividadeRelacaoClient<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AprTipoAtividadeRelacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AprTipoAtividadeRelacaoFindUniqueOrThrowArgs} args - Arguments to find a AprTipoAtividadeRelacao
     * @example
     * // Get one AprTipoAtividadeRelacao
     * const aprTipoAtividadeRelacao = await prisma.aprTipoAtividadeRelacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AprTipoAtividadeRelacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, AprTipoAtividadeRelacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AprTipoAtividadeRelacaoClient<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AprTipoAtividadeRelacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprTipoAtividadeRelacaoFindFirstArgs} args - Arguments to find a AprTipoAtividadeRelacao
     * @example
     * // Get one AprTipoAtividadeRelacao
     * const aprTipoAtividadeRelacao = await prisma.aprTipoAtividadeRelacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AprTipoAtividadeRelacaoFindFirstArgs>(args?: SelectSubset<T, AprTipoAtividadeRelacaoFindFirstArgs<ExtArgs>>): Prisma__AprTipoAtividadeRelacaoClient<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AprTipoAtividadeRelacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprTipoAtividadeRelacaoFindFirstOrThrowArgs} args - Arguments to find a AprTipoAtividadeRelacao
     * @example
     * // Get one AprTipoAtividadeRelacao
     * const aprTipoAtividadeRelacao = await prisma.aprTipoAtividadeRelacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AprTipoAtividadeRelacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, AprTipoAtividadeRelacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__AprTipoAtividadeRelacaoClient<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AprTipoAtividadeRelacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprTipoAtividadeRelacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AprTipoAtividadeRelacaos
     * const aprTipoAtividadeRelacaos = await prisma.aprTipoAtividadeRelacao.findMany()
     * 
     * // Get first 10 AprTipoAtividadeRelacaos
     * const aprTipoAtividadeRelacaos = await prisma.aprTipoAtividadeRelacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aprTipoAtividadeRelacaoWithIdOnly = await prisma.aprTipoAtividadeRelacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AprTipoAtividadeRelacaoFindManyArgs>(args?: SelectSubset<T, AprTipoAtividadeRelacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AprTipoAtividadeRelacao.
     * @param {AprTipoAtividadeRelacaoCreateArgs} args - Arguments to create a AprTipoAtividadeRelacao.
     * @example
     * // Create one AprTipoAtividadeRelacao
     * const AprTipoAtividadeRelacao = await prisma.aprTipoAtividadeRelacao.create({
     *   data: {
     *     // ... data to create a AprTipoAtividadeRelacao
     *   }
     * })
     * 
     */
    create<T extends AprTipoAtividadeRelacaoCreateArgs>(args: SelectSubset<T, AprTipoAtividadeRelacaoCreateArgs<ExtArgs>>): Prisma__AprTipoAtividadeRelacaoClient<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AprTipoAtividadeRelacaos.
     * @param {AprTipoAtividadeRelacaoCreateManyArgs} args - Arguments to create many AprTipoAtividadeRelacaos.
     * @example
     * // Create many AprTipoAtividadeRelacaos
     * const aprTipoAtividadeRelacao = await prisma.aprTipoAtividadeRelacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AprTipoAtividadeRelacaoCreateManyArgs>(args?: SelectSubset<T, AprTipoAtividadeRelacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AprTipoAtividadeRelacao.
     * @param {AprTipoAtividadeRelacaoDeleteArgs} args - Arguments to delete one AprTipoAtividadeRelacao.
     * @example
     * // Delete one AprTipoAtividadeRelacao
     * const AprTipoAtividadeRelacao = await prisma.aprTipoAtividadeRelacao.delete({
     *   where: {
     *     // ... filter to delete one AprTipoAtividadeRelacao
     *   }
     * })
     * 
     */
    delete<T extends AprTipoAtividadeRelacaoDeleteArgs>(args: SelectSubset<T, AprTipoAtividadeRelacaoDeleteArgs<ExtArgs>>): Prisma__AprTipoAtividadeRelacaoClient<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AprTipoAtividadeRelacao.
     * @param {AprTipoAtividadeRelacaoUpdateArgs} args - Arguments to update one AprTipoAtividadeRelacao.
     * @example
     * // Update one AprTipoAtividadeRelacao
     * const aprTipoAtividadeRelacao = await prisma.aprTipoAtividadeRelacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AprTipoAtividadeRelacaoUpdateArgs>(args: SelectSubset<T, AprTipoAtividadeRelacaoUpdateArgs<ExtArgs>>): Prisma__AprTipoAtividadeRelacaoClient<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AprTipoAtividadeRelacaos.
     * @param {AprTipoAtividadeRelacaoDeleteManyArgs} args - Arguments to filter AprTipoAtividadeRelacaos to delete.
     * @example
     * // Delete a few AprTipoAtividadeRelacaos
     * const { count } = await prisma.aprTipoAtividadeRelacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AprTipoAtividadeRelacaoDeleteManyArgs>(args?: SelectSubset<T, AprTipoAtividadeRelacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AprTipoAtividadeRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprTipoAtividadeRelacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AprTipoAtividadeRelacaos
     * const aprTipoAtividadeRelacao = await prisma.aprTipoAtividadeRelacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AprTipoAtividadeRelacaoUpdateManyArgs>(args: SelectSubset<T, AprTipoAtividadeRelacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AprTipoAtividadeRelacao.
     * @param {AprTipoAtividadeRelacaoUpsertArgs} args - Arguments to update or create a AprTipoAtividadeRelacao.
     * @example
     * // Update or create a AprTipoAtividadeRelacao
     * const aprTipoAtividadeRelacao = await prisma.aprTipoAtividadeRelacao.upsert({
     *   create: {
     *     // ... data to create a AprTipoAtividadeRelacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AprTipoAtividadeRelacao we want to update
     *   }
     * })
     */
    upsert<T extends AprTipoAtividadeRelacaoUpsertArgs>(args: SelectSubset<T, AprTipoAtividadeRelacaoUpsertArgs<ExtArgs>>): Prisma__AprTipoAtividadeRelacaoClient<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AprTipoAtividadeRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprTipoAtividadeRelacaoCountArgs} args - Arguments to filter AprTipoAtividadeRelacaos to count.
     * @example
     * // Count the number of AprTipoAtividadeRelacaos
     * const count = await prisma.aprTipoAtividadeRelacao.count({
     *   where: {
     *     // ... the filter for the AprTipoAtividadeRelacaos we want to count
     *   }
     * })
    **/
    count<T extends AprTipoAtividadeRelacaoCountArgs>(
      args?: Subset<T, AprTipoAtividadeRelacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AprTipoAtividadeRelacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AprTipoAtividadeRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprTipoAtividadeRelacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AprTipoAtividadeRelacaoAggregateArgs>(args: Subset<T, AprTipoAtividadeRelacaoAggregateArgs>): Prisma.PrismaPromise<GetAprTipoAtividadeRelacaoAggregateType<T>>

    /**
     * Group by AprTipoAtividadeRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AprTipoAtividadeRelacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AprTipoAtividadeRelacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AprTipoAtividadeRelacaoGroupByArgs['orderBy'] }
        : { orderBy?: AprTipoAtividadeRelacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AprTipoAtividadeRelacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAprTipoAtividadeRelacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AprTipoAtividadeRelacao model
   */
  readonly fields: AprTipoAtividadeRelacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AprTipoAtividadeRelacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AprTipoAtividadeRelacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    apr<T extends AprDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AprDefaultArgs<ExtArgs>>): Prisma__AprClient<$Result.GetResult<Prisma.$AprPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tipoAtividade<T extends TipoAtividadeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoAtividadeDefaultArgs<ExtArgs>>): Prisma__TipoAtividadeClient<$Result.GetResult<Prisma.$TipoAtividadePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AprTipoAtividadeRelacao model
   */
  interface AprTipoAtividadeRelacaoFieldRefs {
    readonly id: FieldRef<"AprTipoAtividadeRelacao", 'Int'>
    readonly aprId: FieldRef<"AprTipoAtividadeRelacao", 'Int'>
    readonly tipoAtividadeId: FieldRef<"AprTipoAtividadeRelacao", 'Int'>
    readonly createdAt: FieldRef<"AprTipoAtividadeRelacao", 'DateTime'>
    readonly createdBy: FieldRef<"AprTipoAtividadeRelacao", 'String'>
    readonly updatedAt: FieldRef<"AprTipoAtividadeRelacao", 'DateTime'>
    readonly updatedBy: FieldRef<"AprTipoAtividadeRelacao", 'String'>
    readonly deletedAt: FieldRef<"AprTipoAtividadeRelacao", 'DateTime'>
    readonly deletedBy: FieldRef<"AprTipoAtividadeRelacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AprTipoAtividadeRelacao findUnique
   */
  export type AprTipoAtividadeRelacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprTipoAtividadeRelacao to fetch.
     */
    where: AprTipoAtividadeRelacaoWhereUniqueInput
  }

  /**
   * AprTipoAtividadeRelacao findUniqueOrThrow
   */
  export type AprTipoAtividadeRelacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprTipoAtividadeRelacao to fetch.
     */
    where: AprTipoAtividadeRelacaoWhereUniqueInput
  }

  /**
   * AprTipoAtividadeRelacao findFirst
   */
  export type AprTipoAtividadeRelacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprTipoAtividadeRelacao to fetch.
     */
    where?: AprTipoAtividadeRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprTipoAtividadeRelacaos to fetch.
     */
    orderBy?: AprTipoAtividadeRelacaoOrderByWithRelationInput | AprTipoAtividadeRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AprTipoAtividadeRelacaos.
     */
    cursor?: AprTipoAtividadeRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprTipoAtividadeRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprTipoAtividadeRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AprTipoAtividadeRelacaos.
     */
    distinct?: AprTipoAtividadeRelacaoScalarFieldEnum | AprTipoAtividadeRelacaoScalarFieldEnum[]
  }

  /**
   * AprTipoAtividadeRelacao findFirstOrThrow
   */
  export type AprTipoAtividadeRelacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprTipoAtividadeRelacao to fetch.
     */
    where?: AprTipoAtividadeRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprTipoAtividadeRelacaos to fetch.
     */
    orderBy?: AprTipoAtividadeRelacaoOrderByWithRelationInput | AprTipoAtividadeRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AprTipoAtividadeRelacaos.
     */
    cursor?: AprTipoAtividadeRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprTipoAtividadeRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprTipoAtividadeRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AprTipoAtividadeRelacaos.
     */
    distinct?: AprTipoAtividadeRelacaoScalarFieldEnum | AprTipoAtividadeRelacaoScalarFieldEnum[]
  }

  /**
   * AprTipoAtividadeRelacao findMany
   */
  export type AprTipoAtividadeRelacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which AprTipoAtividadeRelacaos to fetch.
     */
    where?: AprTipoAtividadeRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AprTipoAtividadeRelacaos to fetch.
     */
    orderBy?: AprTipoAtividadeRelacaoOrderByWithRelationInput | AprTipoAtividadeRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AprTipoAtividadeRelacaos.
     */
    cursor?: AprTipoAtividadeRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AprTipoAtividadeRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AprTipoAtividadeRelacaos.
     */
    skip?: number
    distinct?: AprTipoAtividadeRelacaoScalarFieldEnum | AprTipoAtividadeRelacaoScalarFieldEnum[]
  }

  /**
   * AprTipoAtividadeRelacao create
   */
  export type AprTipoAtividadeRelacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a AprTipoAtividadeRelacao.
     */
    data: XOR<AprTipoAtividadeRelacaoCreateInput, AprTipoAtividadeRelacaoUncheckedCreateInput>
  }

  /**
   * AprTipoAtividadeRelacao createMany
   */
  export type AprTipoAtividadeRelacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AprTipoAtividadeRelacaos.
     */
    data: AprTipoAtividadeRelacaoCreateManyInput | AprTipoAtividadeRelacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AprTipoAtividadeRelacao update
   */
  export type AprTipoAtividadeRelacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a AprTipoAtividadeRelacao.
     */
    data: XOR<AprTipoAtividadeRelacaoUpdateInput, AprTipoAtividadeRelacaoUncheckedUpdateInput>
    /**
     * Choose, which AprTipoAtividadeRelacao to update.
     */
    where: AprTipoAtividadeRelacaoWhereUniqueInput
  }

  /**
   * AprTipoAtividadeRelacao updateMany
   */
  export type AprTipoAtividadeRelacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AprTipoAtividadeRelacaos.
     */
    data: XOR<AprTipoAtividadeRelacaoUpdateManyMutationInput, AprTipoAtividadeRelacaoUncheckedUpdateManyInput>
    /**
     * Filter which AprTipoAtividadeRelacaos to update
     */
    where?: AprTipoAtividadeRelacaoWhereInput
    /**
     * Limit how many AprTipoAtividadeRelacaos to update.
     */
    limit?: number
  }

  /**
   * AprTipoAtividadeRelacao upsert
   */
  export type AprTipoAtividadeRelacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the AprTipoAtividadeRelacao to update in case it exists.
     */
    where: AprTipoAtividadeRelacaoWhereUniqueInput
    /**
     * In case the AprTipoAtividadeRelacao found by the `where` argument doesn't exist, create a new AprTipoAtividadeRelacao with this data.
     */
    create: XOR<AprTipoAtividadeRelacaoCreateInput, AprTipoAtividadeRelacaoUncheckedCreateInput>
    /**
     * In case the AprTipoAtividadeRelacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AprTipoAtividadeRelacaoUpdateInput, AprTipoAtividadeRelacaoUncheckedUpdateInput>
  }

  /**
   * AprTipoAtividadeRelacao delete
   */
  export type AprTipoAtividadeRelacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    /**
     * Filter which AprTipoAtividadeRelacao to delete.
     */
    where: AprTipoAtividadeRelacaoWhereUniqueInput
  }

  /**
   * AprTipoAtividadeRelacao deleteMany
   */
  export type AprTipoAtividadeRelacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AprTipoAtividadeRelacaos to delete
     */
    where?: AprTipoAtividadeRelacaoWhereInput
    /**
     * Limit how many AprTipoAtividadeRelacaos to delete.
     */
    limit?: number
  }

  /**
   * AprTipoAtividadeRelacao without action
   */
  export type AprTipoAtividadeRelacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
  }


  /**
   * Model TipoAtividade
   */

  export type AggregateTipoAtividade = {
    _count: TipoAtividadeCountAggregateOutputType | null
    _avg: TipoAtividadeAvgAggregateOutputType | null
    _sum: TipoAtividadeSumAggregateOutputType | null
    _min: TipoAtividadeMinAggregateOutputType | null
    _max: TipoAtividadeMaxAggregateOutputType | null
  }

  export type TipoAtividadeAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoAtividadeSumAggregateOutputType = {
    id: number | null
  }

  export type TipoAtividadeMinAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoAtividadeMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoAtividadeCountAggregateOutputType = {
    id: number
    nome: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type TipoAtividadeAvgAggregateInputType = {
    id?: true
  }

  export type TipoAtividadeSumAggregateInputType = {
    id?: true
  }

  export type TipoAtividadeMinAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoAtividadeMaxAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoAtividadeCountAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type TipoAtividadeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoAtividade to aggregate.
     */
    where?: TipoAtividadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAtividades to fetch.
     */
    orderBy?: TipoAtividadeOrderByWithRelationInput | TipoAtividadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoAtividadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAtividades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAtividades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoAtividades
    **/
    _count?: true | TipoAtividadeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoAtividadeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoAtividadeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoAtividadeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoAtividadeMaxAggregateInputType
  }

  export type GetTipoAtividadeAggregateType<T extends TipoAtividadeAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoAtividade]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoAtividade[P]>
      : GetScalarType<T[P], AggregateTipoAtividade[P]>
  }




  export type TipoAtividadeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoAtividadeWhereInput
    orderBy?: TipoAtividadeOrderByWithAggregationInput | TipoAtividadeOrderByWithAggregationInput[]
    by: TipoAtividadeScalarFieldEnum[] | TipoAtividadeScalarFieldEnum
    having?: TipoAtividadeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoAtividadeCountAggregateInputType | true
    _avg?: TipoAtividadeAvgAggregateInputType
    _sum?: TipoAtividadeSumAggregateInputType
    _min?: TipoAtividadeMinAggregateInputType
    _max?: TipoAtividadeMaxAggregateInputType
  }

  export type TipoAtividadeGroupByOutputType = {
    id: number
    nome: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: TipoAtividadeCountAggregateOutputType | null
    _avg: TipoAtividadeAvgAggregateOutputType | null
    _sum: TipoAtividadeSumAggregateOutputType | null
    _min: TipoAtividadeMinAggregateOutputType | null
    _max: TipoAtividadeMaxAggregateOutputType | null
  }

  type GetTipoAtividadeGroupByPayload<T extends TipoAtividadeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoAtividadeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoAtividadeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoAtividadeGroupByOutputType[P]>
            : GetScalarType<T[P], TipoAtividadeGroupByOutputType[P]>
        }
      >
    >


  export type TipoAtividadeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    AprTipoAtividadeRelacao?: boolean | TipoAtividade$AprTipoAtividadeRelacaoArgs<ExtArgs>
    _count?: boolean | TipoAtividadeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoAtividade"]>



  export type TipoAtividadeSelectScalar = {
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type TipoAtividadeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["tipoAtividade"]>
  export type TipoAtividadeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AprTipoAtividadeRelacao?: boolean | TipoAtividade$AprTipoAtividadeRelacaoArgs<ExtArgs>
    _count?: boolean | TipoAtividadeCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TipoAtividadePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoAtividade"
    objects: {
      AprTipoAtividadeRelacao: Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["tipoAtividade"]>
    composites: {}
  }

  type TipoAtividadeGetPayload<S extends boolean | null | undefined | TipoAtividadeDefaultArgs> = $Result.GetResult<Prisma.$TipoAtividadePayload, S>

  type TipoAtividadeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TipoAtividadeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipoAtividadeCountAggregateInputType | true
    }

  export interface TipoAtividadeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoAtividade'], meta: { name: 'TipoAtividade' } }
    /**
     * Find zero or one TipoAtividade that matches the filter.
     * @param {TipoAtividadeFindUniqueArgs} args - Arguments to find a TipoAtividade
     * @example
     * // Get one TipoAtividade
     * const tipoAtividade = await prisma.tipoAtividade.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoAtividadeFindUniqueArgs>(args: SelectSubset<T, TipoAtividadeFindUniqueArgs<ExtArgs>>): Prisma__TipoAtividadeClient<$Result.GetResult<Prisma.$TipoAtividadePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TipoAtividade that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TipoAtividadeFindUniqueOrThrowArgs} args - Arguments to find a TipoAtividade
     * @example
     * // Get one TipoAtividade
     * const tipoAtividade = await prisma.tipoAtividade.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoAtividadeFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoAtividadeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoAtividadeClient<$Result.GetResult<Prisma.$TipoAtividadePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoAtividade that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAtividadeFindFirstArgs} args - Arguments to find a TipoAtividade
     * @example
     * // Get one TipoAtividade
     * const tipoAtividade = await prisma.tipoAtividade.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoAtividadeFindFirstArgs>(args?: SelectSubset<T, TipoAtividadeFindFirstArgs<ExtArgs>>): Prisma__TipoAtividadeClient<$Result.GetResult<Prisma.$TipoAtividadePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoAtividade that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAtividadeFindFirstOrThrowArgs} args - Arguments to find a TipoAtividade
     * @example
     * // Get one TipoAtividade
     * const tipoAtividade = await prisma.tipoAtividade.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoAtividadeFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoAtividadeFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoAtividadeClient<$Result.GetResult<Prisma.$TipoAtividadePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TipoAtividades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAtividadeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoAtividades
     * const tipoAtividades = await prisma.tipoAtividade.findMany()
     * 
     * // Get first 10 TipoAtividades
     * const tipoAtividades = await prisma.tipoAtividade.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoAtividadeWithIdOnly = await prisma.tipoAtividade.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoAtividadeFindManyArgs>(args?: SelectSubset<T, TipoAtividadeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoAtividadePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TipoAtividade.
     * @param {TipoAtividadeCreateArgs} args - Arguments to create a TipoAtividade.
     * @example
     * // Create one TipoAtividade
     * const TipoAtividade = await prisma.tipoAtividade.create({
     *   data: {
     *     // ... data to create a TipoAtividade
     *   }
     * })
     * 
     */
    create<T extends TipoAtividadeCreateArgs>(args: SelectSubset<T, TipoAtividadeCreateArgs<ExtArgs>>): Prisma__TipoAtividadeClient<$Result.GetResult<Prisma.$TipoAtividadePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TipoAtividades.
     * @param {TipoAtividadeCreateManyArgs} args - Arguments to create many TipoAtividades.
     * @example
     * // Create many TipoAtividades
     * const tipoAtividade = await prisma.tipoAtividade.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoAtividadeCreateManyArgs>(args?: SelectSubset<T, TipoAtividadeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TipoAtividade.
     * @param {TipoAtividadeDeleteArgs} args - Arguments to delete one TipoAtividade.
     * @example
     * // Delete one TipoAtividade
     * const TipoAtividade = await prisma.tipoAtividade.delete({
     *   where: {
     *     // ... filter to delete one TipoAtividade
     *   }
     * })
     * 
     */
    delete<T extends TipoAtividadeDeleteArgs>(args: SelectSubset<T, TipoAtividadeDeleteArgs<ExtArgs>>): Prisma__TipoAtividadeClient<$Result.GetResult<Prisma.$TipoAtividadePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TipoAtividade.
     * @param {TipoAtividadeUpdateArgs} args - Arguments to update one TipoAtividade.
     * @example
     * // Update one TipoAtividade
     * const tipoAtividade = await prisma.tipoAtividade.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoAtividadeUpdateArgs>(args: SelectSubset<T, TipoAtividadeUpdateArgs<ExtArgs>>): Prisma__TipoAtividadeClient<$Result.GetResult<Prisma.$TipoAtividadePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TipoAtividades.
     * @param {TipoAtividadeDeleteManyArgs} args - Arguments to filter TipoAtividades to delete.
     * @example
     * // Delete a few TipoAtividades
     * const { count } = await prisma.tipoAtividade.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoAtividadeDeleteManyArgs>(args?: SelectSubset<T, TipoAtividadeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoAtividades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAtividadeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoAtividades
     * const tipoAtividade = await prisma.tipoAtividade.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoAtividadeUpdateManyArgs>(args: SelectSubset<T, TipoAtividadeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoAtividade.
     * @param {TipoAtividadeUpsertArgs} args - Arguments to update or create a TipoAtividade.
     * @example
     * // Update or create a TipoAtividade
     * const tipoAtividade = await prisma.tipoAtividade.upsert({
     *   create: {
     *     // ... data to create a TipoAtividade
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoAtividade we want to update
     *   }
     * })
     */
    upsert<T extends TipoAtividadeUpsertArgs>(args: SelectSubset<T, TipoAtividadeUpsertArgs<ExtArgs>>): Prisma__TipoAtividadeClient<$Result.GetResult<Prisma.$TipoAtividadePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TipoAtividades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAtividadeCountArgs} args - Arguments to filter TipoAtividades to count.
     * @example
     * // Count the number of TipoAtividades
     * const count = await prisma.tipoAtividade.count({
     *   where: {
     *     // ... the filter for the TipoAtividades we want to count
     *   }
     * })
    **/
    count<T extends TipoAtividadeCountArgs>(
      args?: Subset<T, TipoAtividadeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoAtividadeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoAtividade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAtividadeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoAtividadeAggregateArgs>(args: Subset<T, TipoAtividadeAggregateArgs>): Prisma.PrismaPromise<GetTipoAtividadeAggregateType<T>>

    /**
     * Group by TipoAtividade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAtividadeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoAtividadeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoAtividadeGroupByArgs['orderBy'] }
        : { orderBy?: TipoAtividadeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoAtividadeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoAtividadeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoAtividade model
   */
  readonly fields: TipoAtividadeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoAtividade.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoAtividadeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    AprTipoAtividadeRelacao<T extends TipoAtividade$AprTipoAtividadeRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, TipoAtividade$AprTipoAtividadeRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AprTipoAtividadeRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoAtividade model
   */
  interface TipoAtividadeFieldRefs {
    readonly id: FieldRef<"TipoAtividade", 'Int'>
    readonly nome: FieldRef<"TipoAtividade", 'String'>
    readonly createdAt: FieldRef<"TipoAtividade", 'DateTime'>
    readonly createdBy: FieldRef<"TipoAtividade", 'String'>
    readonly updatedAt: FieldRef<"TipoAtividade", 'DateTime'>
    readonly updatedBy: FieldRef<"TipoAtividade", 'String'>
    readonly deletedAt: FieldRef<"TipoAtividade", 'DateTime'>
    readonly deletedBy: FieldRef<"TipoAtividade", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoAtividade findUnique
   */
  export type TipoAtividadeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividade
     */
    select?: TipoAtividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoAtividade
     */
    omit?: TipoAtividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAtividadeInclude<ExtArgs> | null
    /**
     * Filter, which TipoAtividade to fetch.
     */
    where: TipoAtividadeWhereUniqueInput
  }

  /**
   * TipoAtividade findUniqueOrThrow
   */
  export type TipoAtividadeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividade
     */
    select?: TipoAtividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoAtividade
     */
    omit?: TipoAtividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAtividadeInclude<ExtArgs> | null
    /**
     * Filter, which TipoAtividade to fetch.
     */
    where: TipoAtividadeWhereUniqueInput
  }

  /**
   * TipoAtividade findFirst
   */
  export type TipoAtividadeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividade
     */
    select?: TipoAtividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoAtividade
     */
    omit?: TipoAtividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAtividadeInclude<ExtArgs> | null
    /**
     * Filter, which TipoAtividade to fetch.
     */
    where?: TipoAtividadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAtividades to fetch.
     */
    orderBy?: TipoAtividadeOrderByWithRelationInput | TipoAtividadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoAtividades.
     */
    cursor?: TipoAtividadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAtividades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAtividades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoAtividades.
     */
    distinct?: TipoAtividadeScalarFieldEnum | TipoAtividadeScalarFieldEnum[]
  }

  /**
   * TipoAtividade findFirstOrThrow
   */
  export type TipoAtividadeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividade
     */
    select?: TipoAtividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoAtividade
     */
    omit?: TipoAtividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAtividadeInclude<ExtArgs> | null
    /**
     * Filter, which TipoAtividade to fetch.
     */
    where?: TipoAtividadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAtividades to fetch.
     */
    orderBy?: TipoAtividadeOrderByWithRelationInput | TipoAtividadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoAtividades.
     */
    cursor?: TipoAtividadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAtividades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAtividades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoAtividades.
     */
    distinct?: TipoAtividadeScalarFieldEnum | TipoAtividadeScalarFieldEnum[]
  }

  /**
   * TipoAtividade findMany
   */
  export type TipoAtividadeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividade
     */
    select?: TipoAtividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoAtividade
     */
    omit?: TipoAtividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAtividadeInclude<ExtArgs> | null
    /**
     * Filter, which TipoAtividades to fetch.
     */
    where?: TipoAtividadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAtividades to fetch.
     */
    orderBy?: TipoAtividadeOrderByWithRelationInput | TipoAtividadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoAtividades.
     */
    cursor?: TipoAtividadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAtividades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAtividades.
     */
    skip?: number
    distinct?: TipoAtividadeScalarFieldEnum | TipoAtividadeScalarFieldEnum[]
  }

  /**
   * TipoAtividade create
   */
  export type TipoAtividadeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividade
     */
    select?: TipoAtividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoAtividade
     */
    omit?: TipoAtividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAtividadeInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoAtividade.
     */
    data: XOR<TipoAtividadeCreateInput, TipoAtividadeUncheckedCreateInput>
  }

  /**
   * TipoAtividade createMany
   */
  export type TipoAtividadeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoAtividades.
     */
    data: TipoAtividadeCreateManyInput | TipoAtividadeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoAtividade update
   */
  export type TipoAtividadeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividade
     */
    select?: TipoAtividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoAtividade
     */
    omit?: TipoAtividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAtividadeInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoAtividade.
     */
    data: XOR<TipoAtividadeUpdateInput, TipoAtividadeUncheckedUpdateInput>
    /**
     * Choose, which TipoAtividade to update.
     */
    where: TipoAtividadeWhereUniqueInput
  }

  /**
   * TipoAtividade updateMany
   */
  export type TipoAtividadeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoAtividades.
     */
    data: XOR<TipoAtividadeUpdateManyMutationInput, TipoAtividadeUncheckedUpdateManyInput>
    /**
     * Filter which TipoAtividades to update
     */
    where?: TipoAtividadeWhereInput
    /**
     * Limit how many TipoAtividades to update.
     */
    limit?: number
  }

  /**
   * TipoAtividade upsert
   */
  export type TipoAtividadeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividade
     */
    select?: TipoAtividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoAtividade
     */
    omit?: TipoAtividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAtividadeInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoAtividade to update in case it exists.
     */
    where: TipoAtividadeWhereUniqueInput
    /**
     * In case the TipoAtividade found by the `where` argument doesn't exist, create a new TipoAtividade with this data.
     */
    create: XOR<TipoAtividadeCreateInput, TipoAtividadeUncheckedCreateInput>
    /**
     * In case the TipoAtividade was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoAtividadeUpdateInput, TipoAtividadeUncheckedUpdateInput>
  }

  /**
   * TipoAtividade delete
   */
  export type TipoAtividadeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividade
     */
    select?: TipoAtividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoAtividade
     */
    omit?: TipoAtividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAtividadeInclude<ExtArgs> | null
    /**
     * Filter which TipoAtividade to delete.
     */
    where: TipoAtividadeWhereUniqueInput
  }

  /**
   * TipoAtividade deleteMany
   */
  export type TipoAtividadeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoAtividades to delete
     */
    where?: TipoAtividadeWhereInput
    /**
     * Limit how many TipoAtividades to delete.
     */
    limit?: number
  }

  /**
   * TipoAtividade.AprTipoAtividadeRelacao
   */
  export type TipoAtividade$AprTipoAtividadeRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AprTipoAtividadeRelacao
     */
    select?: AprTipoAtividadeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AprTipoAtividadeRelacao
     */
    omit?: AprTipoAtividadeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AprTipoAtividadeRelacaoInclude<ExtArgs> | null
    where?: AprTipoAtividadeRelacaoWhereInput
    orderBy?: AprTipoAtividadeRelacaoOrderByWithRelationInput | AprTipoAtividadeRelacaoOrderByWithRelationInput[]
    cursor?: AprTipoAtividadeRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AprTipoAtividadeRelacaoScalarFieldEnum | AprTipoAtividadeRelacaoScalarFieldEnum[]
  }

  /**
   * TipoAtividade without action
   */
  export type TipoAtividadeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtividade
     */
    select?: TipoAtividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoAtividade
     */
    omit?: TipoAtividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAtividadeInclude<ExtArgs> | null
  }


  /**
   * Model MobileUser
   */

  export type AggregateMobileUser = {
    _count: MobileUserCountAggregateOutputType | null
    _avg: MobileUserAvgAggregateOutputType | null
    _sum: MobileUserSumAggregateOutputType | null
    _min: MobileUserMinAggregateOutputType | null
    _max: MobileUserMaxAggregateOutputType | null
  }

  export type MobileUserAvgAggregateOutputType = {
    id: number | null
  }

  export type MobileUserSumAggregateOutputType = {
    id: number | null
  }

  export type MobileUserMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type MobileUserMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type MobileUserCountAggregateOutputType = {
    id: number
    username: number
    password: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type MobileUserAvgAggregateInputType = {
    id?: true
  }

  export type MobileUserSumAggregateInputType = {
    id?: true
  }

  export type MobileUserMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type MobileUserMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type MobileUserCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type MobileUserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MobileUser to aggregate.
     */
    where?: MobileUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileUsers to fetch.
     */
    orderBy?: MobileUserOrderByWithRelationInput | MobileUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MobileUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MobileUsers
    **/
    _count?: true | MobileUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MobileUserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MobileUserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MobileUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MobileUserMaxAggregateInputType
  }

  export type GetMobileUserAggregateType<T extends MobileUserAggregateArgs> = {
        [P in keyof T & keyof AggregateMobileUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMobileUser[P]>
      : GetScalarType<T[P], AggregateMobileUser[P]>
  }




  export type MobileUserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MobileUserWhereInput
    orderBy?: MobileUserOrderByWithAggregationInput | MobileUserOrderByWithAggregationInput[]
    by: MobileUserScalarFieldEnum[] | MobileUserScalarFieldEnum
    having?: MobileUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MobileUserCountAggregateInputType | true
    _avg?: MobileUserAvgAggregateInputType
    _sum?: MobileUserSumAggregateInputType
    _min?: MobileUserMinAggregateInputType
    _max?: MobileUserMaxAggregateInputType
  }

  export type MobileUserGroupByOutputType = {
    id: number
    username: string
    password: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: MobileUserCountAggregateOutputType | null
    _avg: MobileUserAvgAggregateOutputType | null
    _sum: MobileUserSumAggregateOutputType | null
    _min: MobileUserMinAggregateOutputType | null
    _max: MobileUserMaxAggregateOutputType | null
  }

  type GetMobileUserGroupByPayload<T extends MobileUserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MobileUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MobileUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MobileUserGroupByOutputType[P]>
            : GetScalarType<T[P], MobileUserGroupByOutputType[P]>
        }
      >
    >


  export type MobileUserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    mobileSession?: boolean | MobileUser$mobileSessionArgs<ExtArgs>
    MobileToken?: boolean | MobileUser$MobileTokenArgs<ExtArgs>
    MobileContratoPermissao?: boolean | MobileUser$MobileContratoPermissaoArgs<ExtArgs>
    _count?: boolean | MobileUserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mobileUser"]>



  export type MobileUserSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type MobileUserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["mobileUser"]>
  export type MobileUserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mobileSession?: boolean | MobileUser$mobileSessionArgs<ExtArgs>
    MobileToken?: boolean | MobileUser$MobileTokenArgs<ExtArgs>
    MobileContratoPermissao?: boolean | MobileUser$MobileContratoPermissaoArgs<ExtArgs>
    _count?: boolean | MobileUserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $MobileUserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MobileUser"
    objects: {
      mobileSession: Prisma.$MobileSessionPayload<ExtArgs>[]
      MobileToken: Prisma.$MobileTokenPayload<ExtArgs>[]
      MobileContratoPermissao: Prisma.$MobileContratoPermissaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["mobileUser"]>
    composites: {}
  }

  type MobileUserGetPayload<S extends boolean | null | undefined | MobileUserDefaultArgs> = $Result.GetResult<Prisma.$MobileUserPayload, S>

  type MobileUserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MobileUserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MobileUserCountAggregateInputType | true
    }

  export interface MobileUserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MobileUser'], meta: { name: 'MobileUser' } }
    /**
     * Find zero or one MobileUser that matches the filter.
     * @param {MobileUserFindUniqueArgs} args - Arguments to find a MobileUser
     * @example
     * // Get one MobileUser
     * const mobileUser = await prisma.mobileUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MobileUserFindUniqueArgs>(args: SelectSubset<T, MobileUserFindUniqueArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MobileUser that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MobileUserFindUniqueOrThrowArgs} args - Arguments to find a MobileUser
     * @example
     * // Get one MobileUser
     * const mobileUser = await prisma.mobileUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MobileUserFindUniqueOrThrowArgs>(args: SelectSubset<T, MobileUserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MobileUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileUserFindFirstArgs} args - Arguments to find a MobileUser
     * @example
     * // Get one MobileUser
     * const mobileUser = await prisma.mobileUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MobileUserFindFirstArgs>(args?: SelectSubset<T, MobileUserFindFirstArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MobileUser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileUserFindFirstOrThrowArgs} args - Arguments to find a MobileUser
     * @example
     * // Get one MobileUser
     * const mobileUser = await prisma.mobileUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MobileUserFindFirstOrThrowArgs>(args?: SelectSubset<T, MobileUserFindFirstOrThrowArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MobileUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileUserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MobileUsers
     * const mobileUsers = await prisma.mobileUser.findMany()
     * 
     * // Get first 10 MobileUsers
     * const mobileUsers = await prisma.mobileUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mobileUserWithIdOnly = await prisma.mobileUser.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MobileUserFindManyArgs>(args?: SelectSubset<T, MobileUserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MobileUser.
     * @param {MobileUserCreateArgs} args - Arguments to create a MobileUser.
     * @example
     * // Create one MobileUser
     * const MobileUser = await prisma.mobileUser.create({
     *   data: {
     *     // ... data to create a MobileUser
     *   }
     * })
     * 
     */
    create<T extends MobileUserCreateArgs>(args: SelectSubset<T, MobileUserCreateArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MobileUsers.
     * @param {MobileUserCreateManyArgs} args - Arguments to create many MobileUsers.
     * @example
     * // Create many MobileUsers
     * const mobileUser = await prisma.mobileUser.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MobileUserCreateManyArgs>(args?: SelectSubset<T, MobileUserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MobileUser.
     * @param {MobileUserDeleteArgs} args - Arguments to delete one MobileUser.
     * @example
     * // Delete one MobileUser
     * const MobileUser = await prisma.mobileUser.delete({
     *   where: {
     *     // ... filter to delete one MobileUser
     *   }
     * })
     * 
     */
    delete<T extends MobileUserDeleteArgs>(args: SelectSubset<T, MobileUserDeleteArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MobileUser.
     * @param {MobileUserUpdateArgs} args - Arguments to update one MobileUser.
     * @example
     * // Update one MobileUser
     * const mobileUser = await prisma.mobileUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MobileUserUpdateArgs>(args: SelectSubset<T, MobileUserUpdateArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MobileUsers.
     * @param {MobileUserDeleteManyArgs} args - Arguments to filter MobileUsers to delete.
     * @example
     * // Delete a few MobileUsers
     * const { count } = await prisma.mobileUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MobileUserDeleteManyArgs>(args?: SelectSubset<T, MobileUserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MobileUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MobileUsers
     * const mobileUser = await prisma.mobileUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MobileUserUpdateManyArgs>(args: SelectSubset<T, MobileUserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MobileUser.
     * @param {MobileUserUpsertArgs} args - Arguments to update or create a MobileUser.
     * @example
     * // Update or create a MobileUser
     * const mobileUser = await prisma.mobileUser.upsert({
     *   create: {
     *     // ... data to create a MobileUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MobileUser we want to update
     *   }
     * })
     */
    upsert<T extends MobileUserUpsertArgs>(args: SelectSubset<T, MobileUserUpsertArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MobileUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileUserCountArgs} args - Arguments to filter MobileUsers to count.
     * @example
     * // Count the number of MobileUsers
     * const count = await prisma.mobileUser.count({
     *   where: {
     *     // ... the filter for the MobileUsers we want to count
     *   }
     * })
    **/
    count<T extends MobileUserCountArgs>(
      args?: Subset<T, MobileUserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MobileUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MobileUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MobileUserAggregateArgs>(args: Subset<T, MobileUserAggregateArgs>): Prisma.PrismaPromise<GetMobileUserAggregateType<T>>

    /**
     * Group by MobileUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MobileUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MobileUserGroupByArgs['orderBy'] }
        : { orderBy?: MobileUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MobileUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMobileUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MobileUser model
   */
  readonly fields: MobileUserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MobileUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MobileUserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mobileSession<T extends MobileUser$mobileSessionArgs<ExtArgs> = {}>(args?: Subset<T, MobileUser$mobileSessionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MobileSessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MobileToken<T extends MobileUser$MobileTokenArgs<ExtArgs> = {}>(args?: Subset<T, MobileUser$MobileTokenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MobileTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MobileContratoPermissao<T extends MobileUser$MobileContratoPermissaoArgs<ExtArgs> = {}>(args?: Subset<T, MobileUser$MobileContratoPermissaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MobileUser model
   */
  interface MobileUserFieldRefs {
    readonly id: FieldRef<"MobileUser", 'Int'>
    readonly username: FieldRef<"MobileUser", 'String'>
    readonly password: FieldRef<"MobileUser", 'String'>
    readonly createdAt: FieldRef<"MobileUser", 'DateTime'>
    readonly createdBy: FieldRef<"MobileUser", 'String'>
    readonly updatedAt: FieldRef<"MobileUser", 'DateTime'>
    readonly updatedBy: FieldRef<"MobileUser", 'String'>
    readonly deletedAt: FieldRef<"MobileUser", 'DateTime'>
    readonly deletedBy: FieldRef<"MobileUser", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MobileUser findUnique
   */
  export type MobileUserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUser
     */
    select?: MobileUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileUser
     */
    omit?: MobileUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileUserInclude<ExtArgs> | null
    /**
     * Filter, which MobileUser to fetch.
     */
    where: MobileUserWhereUniqueInput
  }

  /**
   * MobileUser findUniqueOrThrow
   */
  export type MobileUserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUser
     */
    select?: MobileUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileUser
     */
    omit?: MobileUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileUserInclude<ExtArgs> | null
    /**
     * Filter, which MobileUser to fetch.
     */
    where: MobileUserWhereUniqueInput
  }

  /**
   * MobileUser findFirst
   */
  export type MobileUserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUser
     */
    select?: MobileUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileUser
     */
    omit?: MobileUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileUserInclude<ExtArgs> | null
    /**
     * Filter, which MobileUser to fetch.
     */
    where?: MobileUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileUsers to fetch.
     */
    orderBy?: MobileUserOrderByWithRelationInput | MobileUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MobileUsers.
     */
    cursor?: MobileUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MobileUsers.
     */
    distinct?: MobileUserScalarFieldEnum | MobileUserScalarFieldEnum[]
  }

  /**
   * MobileUser findFirstOrThrow
   */
  export type MobileUserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUser
     */
    select?: MobileUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileUser
     */
    omit?: MobileUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileUserInclude<ExtArgs> | null
    /**
     * Filter, which MobileUser to fetch.
     */
    where?: MobileUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileUsers to fetch.
     */
    orderBy?: MobileUserOrderByWithRelationInput | MobileUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MobileUsers.
     */
    cursor?: MobileUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MobileUsers.
     */
    distinct?: MobileUserScalarFieldEnum | MobileUserScalarFieldEnum[]
  }

  /**
   * MobileUser findMany
   */
  export type MobileUserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUser
     */
    select?: MobileUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileUser
     */
    omit?: MobileUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileUserInclude<ExtArgs> | null
    /**
     * Filter, which MobileUsers to fetch.
     */
    where?: MobileUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileUsers to fetch.
     */
    orderBy?: MobileUserOrderByWithRelationInput | MobileUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MobileUsers.
     */
    cursor?: MobileUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileUsers.
     */
    skip?: number
    distinct?: MobileUserScalarFieldEnum | MobileUserScalarFieldEnum[]
  }

  /**
   * MobileUser create
   */
  export type MobileUserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUser
     */
    select?: MobileUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileUser
     */
    omit?: MobileUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileUserInclude<ExtArgs> | null
    /**
     * The data needed to create a MobileUser.
     */
    data: XOR<MobileUserCreateInput, MobileUserUncheckedCreateInput>
  }

  /**
   * MobileUser createMany
   */
  export type MobileUserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MobileUsers.
     */
    data: MobileUserCreateManyInput | MobileUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MobileUser update
   */
  export type MobileUserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUser
     */
    select?: MobileUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileUser
     */
    omit?: MobileUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileUserInclude<ExtArgs> | null
    /**
     * The data needed to update a MobileUser.
     */
    data: XOR<MobileUserUpdateInput, MobileUserUncheckedUpdateInput>
    /**
     * Choose, which MobileUser to update.
     */
    where: MobileUserWhereUniqueInput
  }

  /**
   * MobileUser updateMany
   */
  export type MobileUserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MobileUsers.
     */
    data: XOR<MobileUserUpdateManyMutationInput, MobileUserUncheckedUpdateManyInput>
    /**
     * Filter which MobileUsers to update
     */
    where?: MobileUserWhereInput
    /**
     * Limit how many MobileUsers to update.
     */
    limit?: number
  }

  /**
   * MobileUser upsert
   */
  export type MobileUserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUser
     */
    select?: MobileUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileUser
     */
    omit?: MobileUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileUserInclude<ExtArgs> | null
    /**
     * The filter to search for the MobileUser to update in case it exists.
     */
    where: MobileUserWhereUniqueInput
    /**
     * In case the MobileUser found by the `where` argument doesn't exist, create a new MobileUser with this data.
     */
    create: XOR<MobileUserCreateInput, MobileUserUncheckedCreateInput>
    /**
     * In case the MobileUser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MobileUserUpdateInput, MobileUserUncheckedUpdateInput>
  }

  /**
   * MobileUser delete
   */
  export type MobileUserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUser
     */
    select?: MobileUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileUser
     */
    omit?: MobileUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileUserInclude<ExtArgs> | null
    /**
     * Filter which MobileUser to delete.
     */
    where: MobileUserWhereUniqueInput
  }

  /**
   * MobileUser deleteMany
   */
  export type MobileUserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MobileUsers to delete
     */
    where?: MobileUserWhereInput
    /**
     * Limit how many MobileUsers to delete.
     */
    limit?: number
  }

  /**
   * MobileUser.mobileSession
   */
  export type MobileUser$mobileSessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
    where?: MobileSessionWhereInput
    orderBy?: MobileSessionOrderByWithRelationInput | MobileSessionOrderByWithRelationInput[]
    cursor?: MobileSessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MobileSessionScalarFieldEnum | MobileSessionScalarFieldEnum[]
  }

  /**
   * MobileUser.MobileToken
   */
  export type MobileUser$MobileTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
    where?: MobileTokenWhereInput
    orderBy?: MobileTokenOrderByWithRelationInput | MobileTokenOrderByWithRelationInput[]
    cursor?: MobileTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MobileTokenScalarFieldEnum | MobileTokenScalarFieldEnum[]
  }

  /**
   * MobileUser.MobileContratoPermissao
   */
  export type MobileUser$MobileContratoPermissaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    where?: MobileContratoPermissaoWhereInput
    orderBy?: MobileContratoPermissaoOrderByWithRelationInput | MobileContratoPermissaoOrderByWithRelationInput[]
    cursor?: MobileContratoPermissaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MobileContratoPermissaoScalarFieldEnum | MobileContratoPermissaoScalarFieldEnum[]
  }

  /**
   * MobileUser without action
   */
  export type MobileUserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileUser
     */
    select?: MobileUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileUser
     */
    omit?: MobileUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileUserInclude<ExtArgs> | null
  }


  /**
   * Model MobileSession
   */

  export type AggregateMobileSession = {
    _count: MobileSessionCountAggregateOutputType | null
    _avg: MobileSessionAvgAggregateOutputType | null
    _sum: MobileSessionSumAggregateOutputType | null
    _min: MobileSessionMinAggregateOutputType | null
    _max: MobileSessionMaxAggregateOutputType | null
  }

  export type MobileSessionAvgAggregateOutputType = {
    mobileUserId: number | null
  }

  export type MobileSessionSumAggregateOutputType = {
    mobileUserId: number | null
  }

  export type MobileSessionMinAggregateOutputType = {
    id: string | null
    deviceInfo: string | null
    lastActive: Date | null
    createdAt: Date | null
    expiresAt: Date | null
    ativa: boolean | null
    mobileUserId: number | null
  }

  export type MobileSessionMaxAggregateOutputType = {
    id: string | null
    deviceInfo: string | null
    lastActive: Date | null
    createdAt: Date | null
    expiresAt: Date | null
    ativa: boolean | null
    mobileUserId: number | null
  }

  export type MobileSessionCountAggregateOutputType = {
    id: number
    deviceInfo: number
    lastActive: number
    createdAt: number
    expiresAt: number
    ativa: number
    mobileUserId: number
    _all: number
  }


  export type MobileSessionAvgAggregateInputType = {
    mobileUserId?: true
  }

  export type MobileSessionSumAggregateInputType = {
    mobileUserId?: true
  }

  export type MobileSessionMinAggregateInputType = {
    id?: true
    deviceInfo?: true
    lastActive?: true
    createdAt?: true
    expiresAt?: true
    ativa?: true
    mobileUserId?: true
  }

  export type MobileSessionMaxAggregateInputType = {
    id?: true
    deviceInfo?: true
    lastActive?: true
    createdAt?: true
    expiresAt?: true
    ativa?: true
    mobileUserId?: true
  }

  export type MobileSessionCountAggregateInputType = {
    id?: true
    deviceInfo?: true
    lastActive?: true
    createdAt?: true
    expiresAt?: true
    ativa?: true
    mobileUserId?: true
    _all?: true
  }

  export type MobileSessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MobileSession to aggregate.
     */
    where?: MobileSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileSessions to fetch.
     */
    orderBy?: MobileSessionOrderByWithRelationInput | MobileSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MobileSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MobileSessions
    **/
    _count?: true | MobileSessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MobileSessionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MobileSessionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MobileSessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MobileSessionMaxAggregateInputType
  }

  export type GetMobileSessionAggregateType<T extends MobileSessionAggregateArgs> = {
        [P in keyof T & keyof AggregateMobileSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMobileSession[P]>
      : GetScalarType<T[P], AggregateMobileSession[P]>
  }




  export type MobileSessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MobileSessionWhereInput
    orderBy?: MobileSessionOrderByWithAggregationInput | MobileSessionOrderByWithAggregationInput[]
    by: MobileSessionScalarFieldEnum[] | MobileSessionScalarFieldEnum
    having?: MobileSessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MobileSessionCountAggregateInputType | true
    _avg?: MobileSessionAvgAggregateInputType
    _sum?: MobileSessionSumAggregateInputType
    _min?: MobileSessionMinAggregateInputType
    _max?: MobileSessionMaxAggregateInputType
  }

  export type MobileSessionGroupByOutputType = {
    id: string
    deviceInfo: string | null
    lastActive: Date
    createdAt: Date
    expiresAt: Date
    ativa: boolean
    mobileUserId: number
    _count: MobileSessionCountAggregateOutputType | null
    _avg: MobileSessionAvgAggregateOutputType | null
    _sum: MobileSessionSumAggregateOutputType | null
    _min: MobileSessionMinAggregateOutputType | null
    _max: MobileSessionMaxAggregateOutputType | null
  }

  type GetMobileSessionGroupByPayload<T extends MobileSessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MobileSessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MobileSessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MobileSessionGroupByOutputType[P]>
            : GetScalarType<T[P], MobileSessionGroupByOutputType[P]>
        }
      >
    >


  export type MobileSessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    deviceInfo?: boolean
    lastActive?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    ativa?: boolean
    mobileUserId?: boolean
    mobileUser?: boolean | MobileUserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mobileSession"]>



  export type MobileSessionSelectScalar = {
    id?: boolean
    deviceInfo?: boolean
    lastActive?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    ativa?: boolean
    mobileUserId?: boolean
  }

  export type MobileSessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "deviceInfo" | "lastActive" | "createdAt" | "expiresAt" | "ativa" | "mobileUserId", ExtArgs["result"]["mobileSession"]>
  export type MobileSessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mobileUser?: boolean | MobileUserDefaultArgs<ExtArgs>
  }

  export type $MobileSessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MobileSession"
    objects: {
      mobileUser: Prisma.$MobileUserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      deviceInfo: string | null
      lastActive: Date
      createdAt: Date
      expiresAt: Date
      ativa: boolean
      mobileUserId: number
    }, ExtArgs["result"]["mobileSession"]>
    composites: {}
  }

  type MobileSessionGetPayload<S extends boolean | null | undefined | MobileSessionDefaultArgs> = $Result.GetResult<Prisma.$MobileSessionPayload, S>

  type MobileSessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MobileSessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MobileSessionCountAggregateInputType | true
    }

  export interface MobileSessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MobileSession'], meta: { name: 'MobileSession' } }
    /**
     * Find zero or one MobileSession that matches the filter.
     * @param {MobileSessionFindUniqueArgs} args - Arguments to find a MobileSession
     * @example
     * // Get one MobileSession
     * const mobileSession = await prisma.mobileSession.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MobileSessionFindUniqueArgs>(args: SelectSubset<T, MobileSessionFindUniqueArgs<ExtArgs>>): Prisma__MobileSessionClient<$Result.GetResult<Prisma.$MobileSessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MobileSession that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MobileSessionFindUniqueOrThrowArgs} args - Arguments to find a MobileSession
     * @example
     * // Get one MobileSession
     * const mobileSession = await prisma.mobileSession.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MobileSessionFindUniqueOrThrowArgs>(args: SelectSubset<T, MobileSessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MobileSessionClient<$Result.GetResult<Prisma.$MobileSessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MobileSession that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileSessionFindFirstArgs} args - Arguments to find a MobileSession
     * @example
     * // Get one MobileSession
     * const mobileSession = await prisma.mobileSession.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MobileSessionFindFirstArgs>(args?: SelectSubset<T, MobileSessionFindFirstArgs<ExtArgs>>): Prisma__MobileSessionClient<$Result.GetResult<Prisma.$MobileSessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MobileSession that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileSessionFindFirstOrThrowArgs} args - Arguments to find a MobileSession
     * @example
     * // Get one MobileSession
     * const mobileSession = await prisma.mobileSession.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MobileSessionFindFirstOrThrowArgs>(args?: SelectSubset<T, MobileSessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__MobileSessionClient<$Result.GetResult<Prisma.$MobileSessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MobileSessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileSessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MobileSessions
     * const mobileSessions = await prisma.mobileSession.findMany()
     * 
     * // Get first 10 MobileSessions
     * const mobileSessions = await prisma.mobileSession.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mobileSessionWithIdOnly = await prisma.mobileSession.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MobileSessionFindManyArgs>(args?: SelectSubset<T, MobileSessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MobileSessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MobileSession.
     * @param {MobileSessionCreateArgs} args - Arguments to create a MobileSession.
     * @example
     * // Create one MobileSession
     * const MobileSession = await prisma.mobileSession.create({
     *   data: {
     *     // ... data to create a MobileSession
     *   }
     * })
     * 
     */
    create<T extends MobileSessionCreateArgs>(args: SelectSubset<T, MobileSessionCreateArgs<ExtArgs>>): Prisma__MobileSessionClient<$Result.GetResult<Prisma.$MobileSessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MobileSessions.
     * @param {MobileSessionCreateManyArgs} args - Arguments to create many MobileSessions.
     * @example
     * // Create many MobileSessions
     * const mobileSession = await prisma.mobileSession.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MobileSessionCreateManyArgs>(args?: SelectSubset<T, MobileSessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MobileSession.
     * @param {MobileSessionDeleteArgs} args - Arguments to delete one MobileSession.
     * @example
     * // Delete one MobileSession
     * const MobileSession = await prisma.mobileSession.delete({
     *   where: {
     *     // ... filter to delete one MobileSession
     *   }
     * })
     * 
     */
    delete<T extends MobileSessionDeleteArgs>(args: SelectSubset<T, MobileSessionDeleteArgs<ExtArgs>>): Prisma__MobileSessionClient<$Result.GetResult<Prisma.$MobileSessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MobileSession.
     * @param {MobileSessionUpdateArgs} args - Arguments to update one MobileSession.
     * @example
     * // Update one MobileSession
     * const mobileSession = await prisma.mobileSession.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MobileSessionUpdateArgs>(args: SelectSubset<T, MobileSessionUpdateArgs<ExtArgs>>): Prisma__MobileSessionClient<$Result.GetResult<Prisma.$MobileSessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MobileSessions.
     * @param {MobileSessionDeleteManyArgs} args - Arguments to filter MobileSessions to delete.
     * @example
     * // Delete a few MobileSessions
     * const { count } = await prisma.mobileSession.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MobileSessionDeleteManyArgs>(args?: SelectSubset<T, MobileSessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MobileSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileSessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MobileSessions
     * const mobileSession = await prisma.mobileSession.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MobileSessionUpdateManyArgs>(args: SelectSubset<T, MobileSessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MobileSession.
     * @param {MobileSessionUpsertArgs} args - Arguments to update or create a MobileSession.
     * @example
     * // Update or create a MobileSession
     * const mobileSession = await prisma.mobileSession.upsert({
     *   create: {
     *     // ... data to create a MobileSession
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MobileSession we want to update
     *   }
     * })
     */
    upsert<T extends MobileSessionUpsertArgs>(args: SelectSubset<T, MobileSessionUpsertArgs<ExtArgs>>): Prisma__MobileSessionClient<$Result.GetResult<Prisma.$MobileSessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MobileSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileSessionCountArgs} args - Arguments to filter MobileSessions to count.
     * @example
     * // Count the number of MobileSessions
     * const count = await prisma.mobileSession.count({
     *   where: {
     *     // ... the filter for the MobileSessions we want to count
     *   }
     * })
    **/
    count<T extends MobileSessionCountArgs>(
      args?: Subset<T, MobileSessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MobileSessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MobileSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileSessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MobileSessionAggregateArgs>(args: Subset<T, MobileSessionAggregateArgs>): Prisma.PrismaPromise<GetMobileSessionAggregateType<T>>

    /**
     * Group by MobileSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileSessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MobileSessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MobileSessionGroupByArgs['orderBy'] }
        : { orderBy?: MobileSessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MobileSessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMobileSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MobileSession model
   */
  readonly fields: MobileSessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MobileSession.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MobileSessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mobileUser<T extends MobileUserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MobileUserDefaultArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MobileSession model
   */
  interface MobileSessionFieldRefs {
    readonly id: FieldRef<"MobileSession", 'String'>
    readonly deviceInfo: FieldRef<"MobileSession", 'String'>
    readonly lastActive: FieldRef<"MobileSession", 'DateTime'>
    readonly createdAt: FieldRef<"MobileSession", 'DateTime'>
    readonly expiresAt: FieldRef<"MobileSession", 'DateTime'>
    readonly ativa: FieldRef<"MobileSession", 'Boolean'>
    readonly mobileUserId: FieldRef<"MobileSession", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MobileSession findUnique
   */
  export type MobileSessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
    /**
     * Filter, which MobileSession to fetch.
     */
    where: MobileSessionWhereUniqueInput
  }

  /**
   * MobileSession findUniqueOrThrow
   */
  export type MobileSessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
    /**
     * Filter, which MobileSession to fetch.
     */
    where: MobileSessionWhereUniqueInput
  }

  /**
   * MobileSession findFirst
   */
  export type MobileSessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
    /**
     * Filter, which MobileSession to fetch.
     */
    where?: MobileSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileSessions to fetch.
     */
    orderBy?: MobileSessionOrderByWithRelationInput | MobileSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MobileSessions.
     */
    cursor?: MobileSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MobileSessions.
     */
    distinct?: MobileSessionScalarFieldEnum | MobileSessionScalarFieldEnum[]
  }

  /**
   * MobileSession findFirstOrThrow
   */
  export type MobileSessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
    /**
     * Filter, which MobileSession to fetch.
     */
    where?: MobileSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileSessions to fetch.
     */
    orderBy?: MobileSessionOrderByWithRelationInput | MobileSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MobileSessions.
     */
    cursor?: MobileSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MobileSessions.
     */
    distinct?: MobileSessionScalarFieldEnum | MobileSessionScalarFieldEnum[]
  }

  /**
   * MobileSession findMany
   */
  export type MobileSessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
    /**
     * Filter, which MobileSessions to fetch.
     */
    where?: MobileSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileSessions to fetch.
     */
    orderBy?: MobileSessionOrderByWithRelationInput | MobileSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MobileSessions.
     */
    cursor?: MobileSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileSessions.
     */
    skip?: number
    distinct?: MobileSessionScalarFieldEnum | MobileSessionScalarFieldEnum[]
  }

  /**
   * MobileSession create
   */
  export type MobileSessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
    /**
     * The data needed to create a MobileSession.
     */
    data: XOR<MobileSessionCreateInput, MobileSessionUncheckedCreateInput>
  }

  /**
   * MobileSession createMany
   */
  export type MobileSessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MobileSessions.
     */
    data: MobileSessionCreateManyInput | MobileSessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MobileSession update
   */
  export type MobileSessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
    /**
     * The data needed to update a MobileSession.
     */
    data: XOR<MobileSessionUpdateInput, MobileSessionUncheckedUpdateInput>
    /**
     * Choose, which MobileSession to update.
     */
    where: MobileSessionWhereUniqueInput
  }

  /**
   * MobileSession updateMany
   */
  export type MobileSessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MobileSessions.
     */
    data: XOR<MobileSessionUpdateManyMutationInput, MobileSessionUncheckedUpdateManyInput>
    /**
     * Filter which MobileSessions to update
     */
    where?: MobileSessionWhereInput
    /**
     * Limit how many MobileSessions to update.
     */
    limit?: number
  }

  /**
   * MobileSession upsert
   */
  export type MobileSessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
    /**
     * The filter to search for the MobileSession to update in case it exists.
     */
    where: MobileSessionWhereUniqueInput
    /**
     * In case the MobileSession found by the `where` argument doesn't exist, create a new MobileSession with this data.
     */
    create: XOR<MobileSessionCreateInput, MobileSessionUncheckedCreateInput>
    /**
     * In case the MobileSession was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MobileSessionUpdateInput, MobileSessionUncheckedUpdateInput>
  }

  /**
   * MobileSession delete
   */
  export type MobileSessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
    /**
     * Filter which MobileSession to delete.
     */
    where: MobileSessionWhereUniqueInput
  }

  /**
   * MobileSession deleteMany
   */
  export type MobileSessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MobileSessions to delete
     */
    where?: MobileSessionWhereInput
    /**
     * Limit how many MobileSessions to delete.
     */
    limit?: number
  }

  /**
   * MobileSession without action
   */
  export type MobileSessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileSession
     */
    select?: MobileSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileSession
     */
    omit?: MobileSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileSessionInclude<ExtArgs> | null
  }


  /**
   * Model MobileToken
   */

  export type AggregateMobileToken = {
    _count: MobileTokenCountAggregateOutputType | null
    _avg: MobileTokenAvgAggregateOutputType | null
    _sum: MobileTokenSumAggregateOutputType | null
    _min: MobileTokenMinAggregateOutputType | null
    _max: MobileTokenMaxAggregateOutputType | null
  }

  export type MobileTokenAvgAggregateOutputType = {
    id: number | null
    mobileUserId: number | null
  }

  export type MobileTokenSumAggregateOutputType = {
    id: number | null
    mobileUserId: number | null
  }

  export type MobileTokenMinAggregateOutputType = {
    id: number | null
    token: string | null
    refreshToken: string | null
    refreshTokenExpiresAt: Date | null
    usuarioMobileId: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    revoked: boolean | null
    mobileUserId: number | null
  }

  export type MobileTokenMaxAggregateOutputType = {
    id: number | null
    token: string | null
    refreshToken: string | null
    refreshTokenExpiresAt: Date | null
    usuarioMobileId: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    revoked: boolean | null
    mobileUserId: number | null
  }

  export type MobileTokenCountAggregateOutputType = {
    id: number
    token: number
    refreshToken: number
    refreshTokenExpiresAt: number
    usuarioMobileId: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    revoked: number
    mobileUserId: number
    _all: number
  }


  export type MobileTokenAvgAggregateInputType = {
    id?: true
    mobileUserId?: true
  }

  export type MobileTokenSumAggregateInputType = {
    id?: true
    mobileUserId?: true
  }

  export type MobileTokenMinAggregateInputType = {
    id?: true
    token?: true
    refreshToken?: true
    refreshTokenExpiresAt?: true
    usuarioMobileId?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    revoked?: true
    mobileUserId?: true
  }

  export type MobileTokenMaxAggregateInputType = {
    id?: true
    token?: true
    refreshToken?: true
    refreshTokenExpiresAt?: true
    usuarioMobileId?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    revoked?: true
    mobileUserId?: true
  }

  export type MobileTokenCountAggregateInputType = {
    id?: true
    token?: true
    refreshToken?: true
    refreshTokenExpiresAt?: true
    usuarioMobileId?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    revoked?: true
    mobileUserId?: true
    _all?: true
  }

  export type MobileTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MobileToken to aggregate.
     */
    where?: MobileTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileTokens to fetch.
     */
    orderBy?: MobileTokenOrderByWithRelationInput | MobileTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MobileTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MobileTokens
    **/
    _count?: true | MobileTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MobileTokenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MobileTokenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MobileTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MobileTokenMaxAggregateInputType
  }

  export type GetMobileTokenAggregateType<T extends MobileTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateMobileToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMobileToken[P]>
      : GetScalarType<T[P], AggregateMobileToken[P]>
  }




  export type MobileTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MobileTokenWhereInput
    orderBy?: MobileTokenOrderByWithAggregationInput | MobileTokenOrderByWithAggregationInput[]
    by: MobileTokenScalarFieldEnum[] | MobileTokenScalarFieldEnum
    having?: MobileTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MobileTokenCountAggregateInputType | true
    _avg?: MobileTokenAvgAggregateInputType
    _sum?: MobileTokenSumAggregateInputType
    _min?: MobileTokenMinAggregateInputType
    _max?: MobileTokenMaxAggregateInputType
  }

  export type MobileTokenGroupByOutputType = {
    id: number
    token: string
    refreshToken: string | null
    refreshTokenExpiresAt: Date | null
    usuarioMobileId: string
    expiresAt: Date
    createdAt: Date
    updatedAt: Date
    revoked: boolean
    mobileUserId: number
    _count: MobileTokenCountAggregateOutputType | null
    _avg: MobileTokenAvgAggregateOutputType | null
    _sum: MobileTokenSumAggregateOutputType | null
    _min: MobileTokenMinAggregateOutputType | null
    _max: MobileTokenMaxAggregateOutputType | null
  }

  type GetMobileTokenGroupByPayload<T extends MobileTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MobileTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MobileTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MobileTokenGroupByOutputType[P]>
            : GetScalarType<T[P], MobileTokenGroupByOutputType[P]>
        }
      >
    >


  export type MobileTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    refreshToken?: boolean
    refreshTokenExpiresAt?: boolean
    usuarioMobileId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    revoked?: boolean
    mobileUserId?: boolean
    mobileUser?: boolean | MobileUserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mobileToken"]>



  export type MobileTokenSelectScalar = {
    id?: boolean
    token?: boolean
    refreshToken?: boolean
    refreshTokenExpiresAt?: boolean
    usuarioMobileId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    revoked?: boolean
    mobileUserId?: boolean
  }

  export type MobileTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "refreshToken" | "refreshTokenExpiresAt" | "usuarioMobileId" | "expiresAt" | "createdAt" | "updatedAt" | "revoked" | "mobileUserId", ExtArgs["result"]["mobileToken"]>
  export type MobileTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mobileUser?: boolean | MobileUserDefaultArgs<ExtArgs>
  }

  export type $MobileTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MobileToken"
    objects: {
      mobileUser: Prisma.$MobileUserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      token: string
      refreshToken: string | null
      refreshTokenExpiresAt: Date | null
      usuarioMobileId: string
      expiresAt: Date
      createdAt: Date
      updatedAt: Date
      revoked: boolean
      mobileUserId: number
    }, ExtArgs["result"]["mobileToken"]>
    composites: {}
  }

  type MobileTokenGetPayload<S extends boolean | null | undefined | MobileTokenDefaultArgs> = $Result.GetResult<Prisma.$MobileTokenPayload, S>

  type MobileTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MobileTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MobileTokenCountAggregateInputType | true
    }

  export interface MobileTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MobileToken'], meta: { name: 'MobileToken' } }
    /**
     * Find zero or one MobileToken that matches the filter.
     * @param {MobileTokenFindUniqueArgs} args - Arguments to find a MobileToken
     * @example
     * // Get one MobileToken
     * const mobileToken = await prisma.mobileToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MobileTokenFindUniqueArgs>(args: SelectSubset<T, MobileTokenFindUniqueArgs<ExtArgs>>): Prisma__MobileTokenClient<$Result.GetResult<Prisma.$MobileTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MobileToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MobileTokenFindUniqueOrThrowArgs} args - Arguments to find a MobileToken
     * @example
     * // Get one MobileToken
     * const mobileToken = await prisma.mobileToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MobileTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, MobileTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MobileTokenClient<$Result.GetResult<Prisma.$MobileTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MobileToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileTokenFindFirstArgs} args - Arguments to find a MobileToken
     * @example
     * // Get one MobileToken
     * const mobileToken = await prisma.mobileToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MobileTokenFindFirstArgs>(args?: SelectSubset<T, MobileTokenFindFirstArgs<ExtArgs>>): Prisma__MobileTokenClient<$Result.GetResult<Prisma.$MobileTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MobileToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileTokenFindFirstOrThrowArgs} args - Arguments to find a MobileToken
     * @example
     * // Get one MobileToken
     * const mobileToken = await prisma.mobileToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MobileTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, MobileTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__MobileTokenClient<$Result.GetResult<Prisma.$MobileTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MobileTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MobileTokens
     * const mobileTokens = await prisma.mobileToken.findMany()
     * 
     * // Get first 10 MobileTokens
     * const mobileTokens = await prisma.mobileToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mobileTokenWithIdOnly = await prisma.mobileToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MobileTokenFindManyArgs>(args?: SelectSubset<T, MobileTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MobileTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MobileToken.
     * @param {MobileTokenCreateArgs} args - Arguments to create a MobileToken.
     * @example
     * // Create one MobileToken
     * const MobileToken = await prisma.mobileToken.create({
     *   data: {
     *     // ... data to create a MobileToken
     *   }
     * })
     * 
     */
    create<T extends MobileTokenCreateArgs>(args: SelectSubset<T, MobileTokenCreateArgs<ExtArgs>>): Prisma__MobileTokenClient<$Result.GetResult<Prisma.$MobileTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MobileTokens.
     * @param {MobileTokenCreateManyArgs} args - Arguments to create many MobileTokens.
     * @example
     * // Create many MobileTokens
     * const mobileToken = await prisma.mobileToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MobileTokenCreateManyArgs>(args?: SelectSubset<T, MobileTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MobileToken.
     * @param {MobileTokenDeleteArgs} args - Arguments to delete one MobileToken.
     * @example
     * // Delete one MobileToken
     * const MobileToken = await prisma.mobileToken.delete({
     *   where: {
     *     // ... filter to delete one MobileToken
     *   }
     * })
     * 
     */
    delete<T extends MobileTokenDeleteArgs>(args: SelectSubset<T, MobileTokenDeleteArgs<ExtArgs>>): Prisma__MobileTokenClient<$Result.GetResult<Prisma.$MobileTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MobileToken.
     * @param {MobileTokenUpdateArgs} args - Arguments to update one MobileToken.
     * @example
     * // Update one MobileToken
     * const mobileToken = await prisma.mobileToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MobileTokenUpdateArgs>(args: SelectSubset<T, MobileTokenUpdateArgs<ExtArgs>>): Prisma__MobileTokenClient<$Result.GetResult<Prisma.$MobileTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MobileTokens.
     * @param {MobileTokenDeleteManyArgs} args - Arguments to filter MobileTokens to delete.
     * @example
     * // Delete a few MobileTokens
     * const { count } = await prisma.mobileToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MobileTokenDeleteManyArgs>(args?: SelectSubset<T, MobileTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MobileTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MobileTokens
     * const mobileToken = await prisma.mobileToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MobileTokenUpdateManyArgs>(args: SelectSubset<T, MobileTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MobileToken.
     * @param {MobileTokenUpsertArgs} args - Arguments to update or create a MobileToken.
     * @example
     * // Update or create a MobileToken
     * const mobileToken = await prisma.mobileToken.upsert({
     *   create: {
     *     // ... data to create a MobileToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MobileToken we want to update
     *   }
     * })
     */
    upsert<T extends MobileTokenUpsertArgs>(args: SelectSubset<T, MobileTokenUpsertArgs<ExtArgs>>): Prisma__MobileTokenClient<$Result.GetResult<Prisma.$MobileTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MobileTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileTokenCountArgs} args - Arguments to filter MobileTokens to count.
     * @example
     * // Count the number of MobileTokens
     * const count = await prisma.mobileToken.count({
     *   where: {
     *     // ... the filter for the MobileTokens we want to count
     *   }
     * })
    **/
    count<T extends MobileTokenCountArgs>(
      args?: Subset<T, MobileTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MobileTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MobileToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MobileTokenAggregateArgs>(args: Subset<T, MobileTokenAggregateArgs>): Prisma.PrismaPromise<GetMobileTokenAggregateType<T>>

    /**
     * Group by MobileToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MobileTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MobileTokenGroupByArgs['orderBy'] }
        : { orderBy?: MobileTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MobileTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMobileTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MobileToken model
   */
  readonly fields: MobileTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MobileToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MobileTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mobileUser<T extends MobileUserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MobileUserDefaultArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MobileToken model
   */
  interface MobileTokenFieldRefs {
    readonly id: FieldRef<"MobileToken", 'Int'>
    readonly token: FieldRef<"MobileToken", 'String'>
    readonly refreshToken: FieldRef<"MobileToken", 'String'>
    readonly refreshTokenExpiresAt: FieldRef<"MobileToken", 'DateTime'>
    readonly usuarioMobileId: FieldRef<"MobileToken", 'String'>
    readonly expiresAt: FieldRef<"MobileToken", 'DateTime'>
    readonly createdAt: FieldRef<"MobileToken", 'DateTime'>
    readonly updatedAt: FieldRef<"MobileToken", 'DateTime'>
    readonly revoked: FieldRef<"MobileToken", 'Boolean'>
    readonly mobileUserId: FieldRef<"MobileToken", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MobileToken findUnique
   */
  export type MobileTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
    /**
     * Filter, which MobileToken to fetch.
     */
    where: MobileTokenWhereUniqueInput
  }

  /**
   * MobileToken findUniqueOrThrow
   */
  export type MobileTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
    /**
     * Filter, which MobileToken to fetch.
     */
    where: MobileTokenWhereUniqueInput
  }

  /**
   * MobileToken findFirst
   */
  export type MobileTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
    /**
     * Filter, which MobileToken to fetch.
     */
    where?: MobileTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileTokens to fetch.
     */
    orderBy?: MobileTokenOrderByWithRelationInput | MobileTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MobileTokens.
     */
    cursor?: MobileTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MobileTokens.
     */
    distinct?: MobileTokenScalarFieldEnum | MobileTokenScalarFieldEnum[]
  }

  /**
   * MobileToken findFirstOrThrow
   */
  export type MobileTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
    /**
     * Filter, which MobileToken to fetch.
     */
    where?: MobileTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileTokens to fetch.
     */
    orderBy?: MobileTokenOrderByWithRelationInput | MobileTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MobileTokens.
     */
    cursor?: MobileTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MobileTokens.
     */
    distinct?: MobileTokenScalarFieldEnum | MobileTokenScalarFieldEnum[]
  }

  /**
   * MobileToken findMany
   */
  export type MobileTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
    /**
     * Filter, which MobileTokens to fetch.
     */
    where?: MobileTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileTokens to fetch.
     */
    orderBy?: MobileTokenOrderByWithRelationInput | MobileTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MobileTokens.
     */
    cursor?: MobileTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileTokens.
     */
    skip?: number
    distinct?: MobileTokenScalarFieldEnum | MobileTokenScalarFieldEnum[]
  }

  /**
   * MobileToken create
   */
  export type MobileTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a MobileToken.
     */
    data: XOR<MobileTokenCreateInput, MobileTokenUncheckedCreateInput>
  }

  /**
   * MobileToken createMany
   */
  export type MobileTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MobileTokens.
     */
    data: MobileTokenCreateManyInput | MobileTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MobileToken update
   */
  export type MobileTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a MobileToken.
     */
    data: XOR<MobileTokenUpdateInput, MobileTokenUncheckedUpdateInput>
    /**
     * Choose, which MobileToken to update.
     */
    where: MobileTokenWhereUniqueInput
  }

  /**
   * MobileToken updateMany
   */
  export type MobileTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MobileTokens.
     */
    data: XOR<MobileTokenUpdateManyMutationInput, MobileTokenUncheckedUpdateManyInput>
    /**
     * Filter which MobileTokens to update
     */
    where?: MobileTokenWhereInput
    /**
     * Limit how many MobileTokens to update.
     */
    limit?: number
  }

  /**
   * MobileToken upsert
   */
  export type MobileTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the MobileToken to update in case it exists.
     */
    where: MobileTokenWhereUniqueInput
    /**
     * In case the MobileToken found by the `where` argument doesn't exist, create a new MobileToken with this data.
     */
    create: XOR<MobileTokenCreateInput, MobileTokenUncheckedCreateInput>
    /**
     * In case the MobileToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MobileTokenUpdateInput, MobileTokenUncheckedUpdateInput>
  }

  /**
   * MobileToken delete
   */
  export type MobileTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
    /**
     * Filter which MobileToken to delete.
     */
    where: MobileTokenWhereUniqueInput
  }

  /**
   * MobileToken deleteMany
   */
  export type MobileTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MobileTokens to delete
     */
    where?: MobileTokenWhereInput
    /**
     * Limit how many MobileTokens to delete.
     */
    limit?: number
  }

  /**
   * MobileToken without action
   */
  export type MobileTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileToken
     */
    select?: MobileTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileToken
     */
    omit?: MobileTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileTokenInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    username: string | null
    password: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    username: string | null
    password: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    username: number
    password: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    username?: true
    password?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    username?: true
    password?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    username?: true
    password?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    nome: string
    email: string
    username: string
    password: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    Session?: boolean | User$SessionArgs<ExtArgs>
    Account?: boolean | User$AccountArgs<ExtArgs>
    RoleUser?: boolean | User$RoleUserArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    username?: boolean
    password?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "email" | "username" | "password" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Session?: boolean | User$SessionArgs<ExtArgs>
    Account?: boolean | User$AccountArgs<ExtArgs>
    RoleUser?: boolean | User$RoleUserArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      Session: Prisma.$SessionPayload<ExtArgs>[]
      Account: Prisma.$AccountPayload<ExtArgs>[]
      RoleUser: Prisma.$RoleUserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string
      username: string
      password: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Session<T extends User$SessionArgs<ExtArgs> = {}>(args?: Subset<T, User$SessionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Account<T extends User$AccountArgs<ExtArgs> = {}>(args?: Subset<T, User$AccountArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RoleUser<T extends User$RoleUserArgs<ExtArgs> = {}>(args?: Subset<T, User$RoleUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly nome: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly createdBy: FieldRef<"User", 'String'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly updatedBy: FieldRef<"User", 'String'>
    readonly deletedAt: FieldRef<"User", 'DateTime'>
    readonly deletedBy: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.Session
   */
  export type User$SessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.Account
   */
  export type User$AccountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.RoleUser
   */
  export type User$RoleUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    where?: RoleUserWhereInput
    orderBy?: RoleUserOrderByWithRelationInput | RoleUserOrderByWithRelationInput[]
    cursor?: RoleUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleUserScalarFieldEnum | RoleUserScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    expires_at: number | null
    userId: number | null
  }

  export type AccountSumAggregateOutputType = {
    expires_at: number | null
    userId: number | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    userId: number | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    userId: number | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    type: number
    provider: number
    providerAccountId: number
    refresh_token: number
    access_token: number
    expires_at: number
    token_type: number
    scope: number
    id_token: number
    session_state: number
    userId: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    expires_at?: true
    userId?: true
  }

  export type AccountSumAggregateInputType = {
    expires_at?: true
    userId?: true
  }

  export type AccountMinAggregateInputType = {
    id?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    userId?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    userId?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    userId?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    userId: number
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>



  export type AccountSelectScalar = {
    id?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    userId?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "provider" | "providerAccountId" | "refresh_token" | "access_token" | "expires_at" | "token_type" | "scope" | "id_token" | "session_state" | "userId", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: string
      provider: string
      providerAccountId: string
      refresh_token: string | null
      access_token: string | null
      expires_at: number | null
      token_type: string | null
      scope: string | null
      id_token: string | null
      session_state: string | null
      userId: number
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly type: FieldRef<"Account", 'String'>
    readonly provider: FieldRef<"Account", 'String'>
    readonly providerAccountId: FieldRef<"Account", 'String'>
    readonly refresh_token: FieldRef<"Account", 'String'>
    readonly access_token: FieldRef<"Account", 'String'>
    readonly expires_at: FieldRef<"Account", 'Int'>
    readonly token_type: FieldRef<"Account", 'String'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly id_token: FieldRef<"Account", 'String'>
    readonly session_state: FieldRef<"Account", 'String'>
    readonly userId: FieldRef<"Account", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _avg: SessionAvgAggregateOutputType | null
    _sum: SessionSumAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionAvgAggregateOutputType = {
    userId: number | null
  }

  export type SessionSumAggregateOutputType = {
    userId: number | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    expires: Date | null
    userId: number | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    expires: Date | null
    userId: number | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    sessionToken: number
    expires: number
    userId: number
    _all: number
  }


  export type SessionAvgAggregateInputType = {
    userId?: true
  }

  export type SessionSumAggregateInputType = {
    userId?: true
  }

  export type SessionMinAggregateInputType = {
    id?: true
    sessionToken?: true
    expires?: true
    userId?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    sessionToken?: true
    expires?: true
    userId?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    sessionToken?: true
    expires?: true
    userId?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SessionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SessionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _avg?: SessionAvgAggregateInputType
    _sum?: SessionSumAggregateInputType
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    sessionToken: string
    expires: Date
    userId: number
    _count: SessionCountAggregateOutputType | null
    _avg: SessionAvgAggregateOutputType | null
    _sum: SessionSumAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    expires?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>



  export type SessionSelectScalar = {
    id?: boolean
    sessionToken?: boolean
    expires?: boolean
    userId?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sessionToken" | "expires" | "userId", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sessionToken: string
      expires: Date
      userId: number
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly sessionToken: FieldRef<"Session", 'String'>
    readonly expires: FieldRef<"Session", 'DateTime'>
    readonly userId: FieldRef<"Session", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model VerificationToken
   */

  export type AggregateVerificationToken = {
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  export type VerificationTokenMinAggregateOutputType = {
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenMaxAggregateOutputType = {
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenCountAggregateOutputType = {
    identifier: number
    token: number
    expires: number
    _all: number
  }


  export type VerificationTokenMinAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenMaxAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenCountAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
    _all?: true
  }

  export type VerificationTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationToken to aggregate.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationTokens
    **/
    _count?: true | VerificationTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type GetVerificationTokenAggregateType<T extends VerificationTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationToken[P]>
      : GetScalarType<T[P], AggregateVerificationToken[P]>
  }




  export type VerificationTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationTokenWhereInput
    orderBy?: VerificationTokenOrderByWithAggregationInput | VerificationTokenOrderByWithAggregationInput[]
    by: VerificationTokenScalarFieldEnum[] | VerificationTokenScalarFieldEnum
    having?: VerificationTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationTokenCountAggregateInputType | true
    _min?: VerificationTokenMinAggregateInputType
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type VerificationTokenGroupByOutputType = {
    identifier: string
    token: string
    expires: Date
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  type GetVerificationTokenGroupByPayload<T extends VerificationTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
        }
      >
    >


  export type VerificationTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>



  export type VerificationTokenSelectScalar = {
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }

  export type VerificationTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"identifier" | "token" | "expires", ExtArgs["result"]["verificationToken"]>

  export type $VerificationTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationToken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      identifier: string
      token: string
      expires: Date
    }, ExtArgs["result"]["verificationToken"]>
    composites: {}
  }

  type VerificationTokenGetPayload<S extends boolean | null | undefined | VerificationTokenDefaultArgs> = $Result.GetResult<Prisma.$VerificationTokenPayload, S>

  type VerificationTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationTokenCountAggregateInputType | true
    }

  export interface VerificationTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationToken'], meta: { name: 'VerificationToken' } }
    /**
     * Find zero or one VerificationToken that matches the filter.
     * @param {VerificationTokenFindUniqueArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationTokenFindUniqueArgs>(args: SelectSubset<T, VerificationTokenFindUniqueArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VerificationToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationTokenFindUniqueOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationTokenFindFirstArgs>(args?: SelectSubset<T, VerificationTokenFindFirstArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VerificationTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany()
     * 
     * // Get first 10 VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany({ take: 10 })
     * 
     * // Only select the `identifier`
     * const verificationTokenWithIdentifierOnly = await prisma.verificationToken.findMany({ select: { identifier: true } })
     * 
     */
    findMany<T extends VerificationTokenFindManyArgs>(args?: SelectSubset<T, VerificationTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VerificationToken.
     * @param {VerificationTokenCreateArgs} args - Arguments to create a VerificationToken.
     * @example
     * // Create one VerificationToken
     * const VerificationToken = await prisma.verificationToken.create({
     *   data: {
     *     // ... data to create a VerificationToken
     *   }
     * })
     * 
     */
    create<T extends VerificationTokenCreateArgs>(args: SelectSubset<T, VerificationTokenCreateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VerificationTokens.
     * @param {VerificationTokenCreateManyArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationTokenCreateManyArgs>(args?: SelectSubset<T, VerificationTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a VerificationToken.
     * @param {VerificationTokenDeleteArgs} args - Arguments to delete one VerificationToken.
     * @example
     * // Delete one VerificationToken
     * const VerificationToken = await prisma.verificationToken.delete({
     *   where: {
     *     // ... filter to delete one VerificationToken
     *   }
     * })
     * 
     */
    delete<T extends VerificationTokenDeleteArgs>(args: SelectSubset<T, VerificationTokenDeleteArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VerificationToken.
     * @param {VerificationTokenUpdateArgs} args - Arguments to update one VerificationToken.
     * @example
     * // Update one VerificationToken
     * const verificationToken = await prisma.verificationToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationTokenUpdateArgs>(args: SelectSubset<T, VerificationTokenUpdateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VerificationTokens.
     * @param {VerificationTokenDeleteManyArgs} args - Arguments to filter VerificationTokens to delete.
     * @example
     * // Delete a few VerificationTokens
     * const { count } = await prisma.verificationToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationTokenDeleteManyArgs>(args?: SelectSubset<T, VerificationTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationTokenUpdateManyArgs>(args: SelectSubset<T, VerificationTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VerificationToken.
     * @param {VerificationTokenUpsertArgs} args - Arguments to update or create a VerificationToken.
     * @example
     * // Update or create a VerificationToken
     * const verificationToken = await prisma.verificationToken.upsert({
     *   create: {
     *     // ... data to create a VerificationToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationToken we want to update
     *   }
     * })
     */
    upsert<T extends VerificationTokenUpsertArgs>(args: SelectSubset<T, VerificationTokenUpsertArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenCountArgs} args - Arguments to filter VerificationTokens to count.
     * @example
     * // Count the number of VerificationTokens
     * const count = await prisma.verificationToken.count({
     *   where: {
     *     // ... the filter for the VerificationTokens we want to count
     *   }
     * })
    **/
    count<T extends VerificationTokenCountArgs>(
      args?: Subset<T, VerificationTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationTokenAggregateArgs>(args: Subset<T, VerificationTokenAggregateArgs>): Prisma.PrismaPromise<GetVerificationTokenAggregateType<T>>

    /**
     * Group by VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationTokenGroupByArgs['orderBy'] }
        : { orderBy?: VerificationTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationToken model
   */
  readonly fields: VerificationTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationToken model
   */
  interface VerificationTokenFieldRefs {
    readonly identifier: FieldRef<"VerificationToken", 'String'>
    readonly token: FieldRef<"VerificationToken", 'String'>
    readonly expires: FieldRef<"VerificationToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VerificationToken findUnique
   */
  export type VerificationTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findUniqueOrThrow
   */
  export type VerificationTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findFirst
   */
  export type VerificationTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findFirstOrThrow
   */
  export type VerificationTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findMany
   */
  export type VerificationTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationTokens to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken create
   */
  export type VerificationTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to create a VerificationToken.
     */
    data: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
  }

  /**
   * VerificationToken createMany
   */
  export type VerificationTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken update
   */
  export type VerificationTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to update a VerificationToken.
     */
    data: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
    /**
     * Choose, which VerificationToken to update.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken updateMany
   */
  export type VerificationTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to update.
     */
    limit?: number
  }

  /**
   * VerificationToken upsert
   */
  export type VerificationTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The filter to search for the VerificationToken to update in case it exists.
     */
    where: VerificationTokenWhereUniqueInput
    /**
     * In case the VerificationToken found by the `where` argument doesn't exist, create a new VerificationToken with this data.
     */
    create: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
    /**
     * In case the VerificationToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
  }

  /**
   * VerificationToken delete
   */
  export type VerificationTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter which VerificationToken to delete.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken deleteMany
   */
  export type VerificationTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationTokens to delete
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to delete.
     */
    limit?: number
  }

  /**
   * VerificationToken without action
   */
  export type VerificationTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    nome: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    nome: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    RoleUser?: boolean | Role$RoleUserArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>



  export type RoleSelectScalar = {
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RoleUser?: boolean | Role$RoleUserArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      RoleUser: Prisma.$RoleUserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    RoleUser<T extends Role$RoleUserArgs<ExtArgs> = {}>(args?: Subset<T, Role$RoleUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'Int'>
    readonly nome: FieldRef<"Role", 'String'>
    readonly createdAt: FieldRef<"Role", 'DateTime'>
    readonly createdBy: FieldRef<"Role", 'String'>
    readonly updatedAt: FieldRef<"Role", 'DateTime'>
    readonly updatedBy: FieldRef<"Role", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.RoleUser
   */
  export type Role$RoleUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    where?: RoleUserWhereInput
    orderBy?: RoleUserOrderByWithRelationInput | RoleUserOrderByWithRelationInput[]
    cursor?: RoleUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleUserScalarFieldEnum | RoleUserScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model RoleUser
   */

  export type AggregateRoleUser = {
    _count: RoleUserCountAggregateOutputType | null
    _avg: RoleUserAvgAggregateOutputType | null
    _sum: RoleUserSumAggregateOutputType | null
    _min: RoleUserMinAggregateOutputType | null
    _max: RoleUserMaxAggregateOutputType | null
  }

  export type RoleUserAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    roleId: number | null
  }

  export type RoleUserSumAggregateOutputType = {
    id: number | null
    userId: number | null
    roleId: number | null
  }

  export type RoleUserMinAggregateOutputType = {
    id: number | null
    userId: number | null
    roleId: number | null
  }

  export type RoleUserMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    roleId: number | null
  }

  export type RoleUserCountAggregateOutputType = {
    id: number
    userId: number
    roleId: number
    _all: number
  }


  export type RoleUserAvgAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
  }

  export type RoleUserSumAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
  }

  export type RoleUserMinAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
  }

  export type RoleUserMaxAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
  }

  export type RoleUserCountAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
    _all?: true
  }

  export type RoleUserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoleUser to aggregate.
     */
    where?: RoleUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleUsers to fetch.
     */
    orderBy?: RoleUserOrderByWithRelationInput | RoleUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RoleUsers
    **/
    _count?: true | RoleUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleUserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleUserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleUserMaxAggregateInputType
  }

  export type GetRoleUserAggregateType<T extends RoleUserAggregateArgs> = {
        [P in keyof T & keyof AggregateRoleUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoleUser[P]>
      : GetScalarType<T[P], AggregateRoleUser[P]>
  }




  export type RoleUserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleUserWhereInput
    orderBy?: RoleUserOrderByWithAggregationInput | RoleUserOrderByWithAggregationInput[]
    by: RoleUserScalarFieldEnum[] | RoleUserScalarFieldEnum
    having?: RoleUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleUserCountAggregateInputType | true
    _avg?: RoleUserAvgAggregateInputType
    _sum?: RoleUserSumAggregateInputType
    _min?: RoleUserMinAggregateInputType
    _max?: RoleUserMaxAggregateInputType
  }

  export type RoleUserGroupByOutputType = {
    id: number
    userId: number
    roleId: number
    _count: RoleUserCountAggregateOutputType | null
    _avg: RoleUserAvgAggregateOutputType | null
    _sum: RoleUserSumAggregateOutputType | null
    _min: RoleUserMinAggregateOutputType | null
    _max: RoleUserMaxAggregateOutputType | null
  }

  type GetRoleUserGroupByPayload<T extends RoleUserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleUserGroupByOutputType[P]>
            : GetScalarType<T[P], RoleUserGroupByOutputType[P]>
        }
      >
    >


  export type RoleUserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    roleId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleUser"]>



  export type RoleUserSelectScalar = {
    id?: boolean
    userId?: boolean
    roleId?: boolean
  }

  export type RoleUserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "roleId", ExtArgs["result"]["roleUser"]>
  export type RoleUserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }

  export type $RoleUserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RoleUser"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      role: Prisma.$RolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      roleId: number
    }, ExtArgs["result"]["roleUser"]>
    composites: {}
  }

  type RoleUserGetPayload<S extends boolean | null | undefined | RoleUserDefaultArgs> = $Result.GetResult<Prisma.$RoleUserPayload, S>

  type RoleUserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleUserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleUserCountAggregateInputType | true
    }

  export interface RoleUserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RoleUser'], meta: { name: 'RoleUser' } }
    /**
     * Find zero or one RoleUser that matches the filter.
     * @param {RoleUserFindUniqueArgs} args - Arguments to find a RoleUser
     * @example
     * // Get one RoleUser
     * const roleUser = await prisma.roleUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleUserFindUniqueArgs>(args: SelectSubset<T, RoleUserFindUniqueArgs<ExtArgs>>): Prisma__RoleUserClient<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RoleUser that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleUserFindUniqueOrThrowArgs} args - Arguments to find a RoleUser
     * @example
     * // Get one RoleUser
     * const roleUser = await prisma.roleUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleUserFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleUserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleUserClient<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoleUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUserFindFirstArgs} args - Arguments to find a RoleUser
     * @example
     * // Get one RoleUser
     * const roleUser = await prisma.roleUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleUserFindFirstArgs>(args?: SelectSubset<T, RoleUserFindFirstArgs<ExtArgs>>): Prisma__RoleUserClient<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoleUser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUserFindFirstOrThrowArgs} args - Arguments to find a RoleUser
     * @example
     * // Get one RoleUser
     * const roleUser = await prisma.roleUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleUserFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleUserFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleUserClient<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RoleUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RoleUsers
     * const roleUsers = await prisma.roleUser.findMany()
     * 
     * // Get first 10 RoleUsers
     * const roleUsers = await prisma.roleUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleUserWithIdOnly = await prisma.roleUser.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleUserFindManyArgs>(args?: SelectSubset<T, RoleUserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RoleUser.
     * @param {RoleUserCreateArgs} args - Arguments to create a RoleUser.
     * @example
     * // Create one RoleUser
     * const RoleUser = await prisma.roleUser.create({
     *   data: {
     *     // ... data to create a RoleUser
     *   }
     * })
     * 
     */
    create<T extends RoleUserCreateArgs>(args: SelectSubset<T, RoleUserCreateArgs<ExtArgs>>): Prisma__RoleUserClient<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RoleUsers.
     * @param {RoleUserCreateManyArgs} args - Arguments to create many RoleUsers.
     * @example
     * // Create many RoleUsers
     * const roleUser = await prisma.roleUser.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleUserCreateManyArgs>(args?: SelectSubset<T, RoleUserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RoleUser.
     * @param {RoleUserDeleteArgs} args - Arguments to delete one RoleUser.
     * @example
     * // Delete one RoleUser
     * const RoleUser = await prisma.roleUser.delete({
     *   where: {
     *     // ... filter to delete one RoleUser
     *   }
     * })
     * 
     */
    delete<T extends RoleUserDeleteArgs>(args: SelectSubset<T, RoleUserDeleteArgs<ExtArgs>>): Prisma__RoleUserClient<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RoleUser.
     * @param {RoleUserUpdateArgs} args - Arguments to update one RoleUser.
     * @example
     * // Update one RoleUser
     * const roleUser = await prisma.roleUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUserUpdateArgs>(args: SelectSubset<T, RoleUserUpdateArgs<ExtArgs>>): Prisma__RoleUserClient<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RoleUsers.
     * @param {RoleUserDeleteManyArgs} args - Arguments to filter RoleUsers to delete.
     * @example
     * // Delete a few RoleUsers
     * const { count } = await prisma.roleUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleUserDeleteManyArgs>(args?: SelectSubset<T, RoleUserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RoleUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RoleUsers
     * const roleUser = await prisma.roleUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUserUpdateManyArgs>(args: SelectSubset<T, RoleUserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RoleUser.
     * @param {RoleUserUpsertArgs} args - Arguments to update or create a RoleUser.
     * @example
     * // Update or create a RoleUser
     * const roleUser = await prisma.roleUser.upsert({
     *   create: {
     *     // ... data to create a RoleUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RoleUser we want to update
     *   }
     * })
     */
    upsert<T extends RoleUserUpsertArgs>(args: SelectSubset<T, RoleUserUpsertArgs<ExtArgs>>): Prisma__RoleUserClient<$Result.GetResult<Prisma.$RoleUserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RoleUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUserCountArgs} args - Arguments to filter RoleUsers to count.
     * @example
     * // Count the number of RoleUsers
     * const count = await prisma.roleUser.count({
     *   where: {
     *     // ... the filter for the RoleUsers we want to count
     *   }
     * })
    **/
    count<T extends RoleUserCountArgs>(
      args?: Subset<T, RoleUserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RoleUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleUserAggregateArgs>(args: Subset<T, RoleUserAggregateArgs>): Prisma.PrismaPromise<GetRoleUserAggregateType<T>>

    /**
     * Group by RoleUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleUserGroupByArgs['orderBy'] }
        : { orderBy?: RoleUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RoleUser model
   */
  readonly fields: RoleUserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RoleUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleUserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RoleUser model
   */
  interface RoleUserFieldRefs {
    readonly id: FieldRef<"RoleUser", 'Int'>
    readonly userId: FieldRef<"RoleUser", 'Int'>
    readonly roleId: FieldRef<"RoleUser", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RoleUser findUnique
   */
  export type RoleUserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    /**
     * Filter, which RoleUser to fetch.
     */
    where: RoleUserWhereUniqueInput
  }

  /**
   * RoleUser findUniqueOrThrow
   */
  export type RoleUserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    /**
     * Filter, which RoleUser to fetch.
     */
    where: RoleUserWhereUniqueInput
  }

  /**
   * RoleUser findFirst
   */
  export type RoleUserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    /**
     * Filter, which RoleUser to fetch.
     */
    where?: RoleUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleUsers to fetch.
     */
    orderBy?: RoleUserOrderByWithRelationInput | RoleUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleUsers.
     */
    cursor?: RoleUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleUsers.
     */
    distinct?: RoleUserScalarFieldEnum | RoleUserScalarFieldEnum[]
  }

  /**
   * RoleUser findFirstOrThrow
   */
  export type RoleUserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    /**
     * Filter, which RoleUser to fetch.
     */
    where?: RoleUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleUsers to fetch.
     */
    orderBy?: RoleUserOrderByWithRelationInput | RoleUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleUsers.
     */
    cursor?: RoleUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleUsers.
     */
    distinct?: RoleUserScalarFieldEnum | RoleUserScalarFieldEnum[]
  }

  /**
   * RoleUser findMany
   */
  export type RoleUserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    /**
     * Filter, which RoleUsers to fetch.
     */
    where?: RoleUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleUsers to fetch.
     */
    orderBy?: RoleUserOrderByWithRelationInput | RoleUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RoleUsers.
     */
    cursor?: RoleUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleUsers.
     */
    skip?: number
    distinct?: RoleUserScalarFieldEnum | RoleUserScalarFieldEnum[]
  }

  /**
   * RoleUser create
   */
  export type RoleUserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    /**
     * The data needed to create a RoleUser.
     */
    data: XOR<RoleUserCreateInput, RoleUserUncheckedCreateInput>
  }

  /**
   * RoleUser createMany
   */
  export type RoleUserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RoleUsers.
     */
    data: RoleUserCreateManyInput | RoleUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RoleUser update
   */
  export type RoleUserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    /**
     * The data needed to update a RoleUser.
     */
    data: XOR<RoleUserUpdateInput, RoleUserUncheckedUpdateInput>
    /**
     * Choose, which RoleUser to update.
     */
    where: RoleUserWhereUniqueInput
  }

  /**
   * RoleUser updateMany
   */
  export type RoleUserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RoleUsers.
     */
    data: XOR<RoleUserUpdateManyMutationInput, RoleUserUncheckedUpdateManyInput>
    /**
     * Filter which RoleUsers to update
     */
    where?: RoleUserWhereInput
    /**
     * Limit how many RoleUsers to update.
     */
    limit?: number
  }

  /**
   * RoleUser upsert
   */
  export type RoleUserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    /**
     * The filter to search for the RoleUser to update in case it exists.
     */
    where: RoleUserWhereUniqueInput
    /**
     * In case the RoleUser found by the `where` argument doesn't exist, create a new RoleUser with this data.
     */
    create: XOR<RoleUserCreateInput, RoleUserUncheckedCreateInput>
    /**
     * In case the RoleUser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUserUpdateInput, RoleUserUncheckedUpdateInput>
  }

  /**
   * RoleUser delete
   */
  export type RoleUserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
    /**
     * Filter which RoleUser to delete.
     */
    where: RoleUserWhereUniqueInput
  }

  /**
   * RoleUser deleteMany
   */
  export type RoleUserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoleUsers to delete
     */
    where?: RoleUserWhereInput
    /**
     * Limit how many RoleUsers to delete.
     */
    limit?: number
  }

  /**
   * RoleUser without action
   */
  export type RoleUserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleUser
     */
    select?: RoleUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleUser
     */
    omit?: RoleUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleUserInclude<ExtArgs> | null
  }


  /**
   * Model Base
   */

  export type AggregateBase = {
    _count: BaseCountAggregateOutputType | null
    _avg: BaseAvgAggregateOutputType | null
    _sum: BaseSumAggregateOutputType | null
    _min: BaseMinAggregateOutputType | null
    _max: BaseMaxAggregateOutputType | null
  }

  export type BaseAvgAggregateOutputType = {
    id: number | null
    contratoId: number | null
  }

  export type BaseSumAggregateOutputType = {
    id: number | null
    contratoId: number | null
  }

  export type BaseMinAggregateOutputType = {
    id: number | null
    nome: string | null
    contratoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type BaseMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    contratoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type BaseCountAggregateOutputType = {
    id: number
    nome: number
    contratoId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type BaseAvgAggregateInputType = {
    id?: true
    contratoId?: true
  }

  export type BaseSumAggregateInputType = {
    id?: true
    contratoId?: true
  }

  export type BaseMinAggregateInputType = {
    id?: true
    nome?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type BaseMaxAggregateInputType = {
    id?: true
    nome?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type BaseCountAggregateInputType = {
    id?: true
    nome?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type BaseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Base to aggregate.
     */
    where?: BaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bases to fetch.
     */
    orderBy?: BaseOrderByWithRelationInput | BaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Bases
    **/
    _count?: true | BaseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BaseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BaseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BaseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BaseMaxAggregateInputType
  }

  export type GetBaseAggregateType<T extends BaseAggregateArgs> = {
        [P in keyof T & keyof AggregateBase]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBase[P]>
      : GetScalarType<T[P], AggregateBase[P]>
  }




  export type BaseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BaseWhereInput
    orderBy?: BaseOrderByWithAggregationInput | BaseOrderByWithAggregationInput[]
    by: BaseScalarFieldEnum[] | BaseScalarFieldEnum
    having?: BaseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BaseCountAggregateInputType | true
    _avg?: BaseAvgAggregateInputType
    _sum?: BaseSumAggregateInputType
    _min?: BaseMinAggregateInputType
    _max?: BaseMaxAggregateInputType
  }

  export type BaseGroupByOutputType = {
    id: number
    nome: string
    contratoId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: BaseCountAggregateOutputType | null
    _avg: BaseAvgAggregateOutputType | null
    _sum: BaseSumAggregateOutputType | null
    _min: BaseMinAggregateOutputType | null
    _max: BaseMaxAggregateOutputType | null
  }

  type GetBaseGroupByPayload<T extends BaseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BaseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BaseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BaseGroupByOutputType[P]>
            : GetScalarType<T[P], BaseGroupByOutputType[P]>
        }
      >
    >


  export type BaseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    contratoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    EletricistaBaseHistorico?: boolean | Base$EletricistaBaseHistoricoArgs<ExtArgs>
    VeiculoBaseHistorico?: boolean | Base$VeiculoBaseHistoricoArgs<ExtArgs>
    EquipeBaseHistorico?: boolean | Base$EquipeBaseHistoricoArgs<ExtArgs>
    _count?: boolean | BaseCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["base"]>



  export type BaseSelectScalar = {
    id?: boolean
    nome?: boolean
    contratoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type BaseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "contratoId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["base"]>
  export type BaseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    EletricistaBaseHistorico?: boolean | Base$EletricistaBaseHistoricoArgs<ExtArgs>
    VeiculoBaseHistorico?: boolean | Base$VeiculoBaseHistoricoArgs<ExtArgs>
    EquipeBaseHistorico?: boolean | Base$EquipeBaseHistoricoArgs<ExtArgs>
    _count?: boolean | BaseCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $BasePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Base"
    objects: {
      contrato: Prisma.$ContratoPayload<ExtArgs>
      EletricistaBaseHistorico: Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>[]
      VeiculoBaseHistorico: Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>[]
      EquipeBaseHistorico: Prisma.$EquipeBaseHistoricoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      contratoId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["base"]>
    composites: {}
  }

  type BaseGetPayload<S extends boolean | null | undefined | BaseDefaultArgs> = $Result.GetResult<Prisma.$BasePayload, S>

  type BaseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BaseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BaseCountAggregateInputType | true
    }

  export interface BaseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Base'], meta: { name: 'Base' } }
    /**
     * Find zero or one Base that matches the filter.
     * @param {BaseFindUniqueArgs} args - Arguments to find a Base
     * @example
     * // Get one Base
     * const base = await prisma.base.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BaseFindUniqueArgs>(args: SelectSubset<T, BaseFindUniqueArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Base that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BaseFindUniqueOrThrowArgs} args - Arguments to find a Base
     * @example
     * // Get one Base
     * const base = await prisma.base.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BaseFindUniqueOrThrowArgs>(args: SelectSubset<T, BaseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Base that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BaseFindFirstArgs} args - Arguments to find a Base
     * @example
     * // Get one Base
     * const base = await prisma.base.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BaseFindFirstArgs>(args?: SelectSubset<T, BaseFindFirstArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Base that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BaseFindFirstOrThrowArgs} args - Arguments to find a Base
     * @example
     * // Get one Base
     * const base = await prisma.base.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BaseFindFirstOrThrowArgs>(args?: SelectSubset<T, BaseFindFirstOrThrowArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Bases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BaseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bases
     * const bases = await prisma.base.findMany()
     * 
     * // Get first 10 Bases
     * const bases = await prisma.base.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const baseWithIdOnly = await prisma.base.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BaseFindManyArgs>(args?: SelectSubset<T, BaseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Base.
     * @param {BaseCreateArgs} args - Arguments to create a Base.
     * @example
     * // Create one Base
     * const Base = await prisma.base.create({
     *   data: {
     *     // ... data to create a Base
     *   }
     * })
     * 
     */
    create<T extends BaseCreateArgs>(args: SelectSubset<T, BaseCreateArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Bases.
     * @param {BaseCreateManyArgs} args - Arguments to create many Bases.
     * @example
     * // Create many Bases
     * const base = await prisma.base.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BaseCreateManyArgs>(args?: SelectSubset<T, BaseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Base.
     * @param {BaseDeleteArgs} args - Arguments to delete one Base.
     * @example
     * // Delete one Base
     * const Base = await prisma.base.delete({
     *   where: {
     *     // ... filter to delete one Base
     *   }
     * })
     * 
     */
    delete<T extends BaseDeleteArgs>(args: SelectSubset<T, BaseDeleteArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Base.
     * @param {BaseUpdateArgs} args - Arguments to update one Base.
     * @example
     * // Update one Base
     * const base = await prisma.base.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BaseUpdateArgs>(args: SelectSubset<T, BaseUpdateArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Bases.
     * @param {BaseDeleteManyArgs} args - Arguments to filter Bases to delete.
     * @example
     * // Delete a few Bases
     * const { count } = await prisma.base.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BaseDeleteManyArgs>(args?: SelectSubset<T, BaseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BaseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bases
     * const base = await prisma.base.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BaseUpdateManyArgs>(args: SelectSubset<T, BaseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Base.
     * @param {BaseUpsertArgs} args - Arguments to update or create a Base.
     * @example
     * // Update or create a Base
     * const base = await prisma.base.upsert({
     *   create: {
     *     // ... data to create a Base
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Base we want to update
     *   }
     * })
     */
    upsert<T extends BaseUpsertArgs>(args: SelectSubset<T, BaseUpsertArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Bases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BaseCountArgs} args - Arguments to filter Bases to count.
     * @example
     * // Count the number of Bases
     * const count = await prisma.base.count({
     *   where: {
     *     // ... the filter for the Bases we want to count
     *   }
     * })
    **/
    count<T extends BaseCountArgs>(
      args?: Subset<T, BaseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BaseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Base.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BaseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BaseAggregateArgs>(args: Subset<T, BaseAggregateArgs>): Prisma.PrismaPromise<GetBaseAggregateType<T>>

    /**
     * Group by Base.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BaseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BaseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BaseGroupByArgs['orderBy'] }
        : { orderBy?: BaseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BaseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBaseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Base model
   */
  readonly fields: BaseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Base.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BaseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    contrato<T extends ContratoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContratoDefaultArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    EletricistaBaseHistorico<T extends Base$EletricistaBaseHistoricoArgs<ExtArgs> = {}>(args?: Subset<T, Base$EletricistaBaseHistoricoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    VeiculoBaseHistorico<T extends Base$VeiculoBaseHistoricoArgs<ExtArgs> = {}>(args?: Subset<T, Base$VeiculoBaseHistoricoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EquipeBaseHistorico<T extends Base$EquipeBaseHistoricoArgs<ExtArgs> = {}>(args?: Subset<T, Base$EquipeBaseHistoricoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Base model
   */
  interface BaseFieldRefs {
    readonly id: FieldRef<"Base", 'Int'>
    readonly nome: FieldRef<"Base", 'String'>
    readonly contratoId: FieldRef<"Base", 'Int'>
    readonly createdAt: FieldRef<"Base", 'DateTime'>
    readonly createdBy: FieldRef<"Base", 'String'>
    readonly updatedAt: FieldRef<"Base", 'DateTime'>
    readonly updatedBy: FieldRef<"Base", 'String'>
    readonly deletedAt: FieldRef<"Base", 'DateTime'>
    readonly deletedBy: FieldRef<"Base", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Base findUnique
   */
  export type BaseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
    /**
     * Filter, which Base to fetch.
     */
    where: BaseWhereUniqueInput
  }

  /**
   * Base findUniqueOrThrow
   */
  export type BaseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
    /**
     * Filter, which Base to fetch.
     */
    where: BaseWhereUniqueInput
  }

  /**
   * Base findFirst
   */
  export type BaseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
    /**
     * Filter, which Base to fetch.
     */
    where?: BaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bases to fetch.
     */
    orderBy?: BaseOrderByWithRelationInput | BaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bases.
     */
    cursor?: BaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bases.
     */
    distinct?: BaseScalarFieldEnum | BaseScalarFieldEnum[]
  }

  /**
   * Base findFirstOrThrow
   */
  export type BaseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
    /**
     * Filter, which Base to fetch.
     */
    where?: BaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bases to fetch.
     */
    orderBy?: BaseOrderByWithRelationInput | BaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bases.
     */
    cursor?: BaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bases.
     */
    distinct?: BaseScalarFieldEnum | BaseScalarFieldEnum[]
  }

  /**
   * Base findMany
   */
  export type BaseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
    /**
     * Filter, which Bases to fetch.
     */
    where?: BaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bases to fetch.
     */
    orderBy?: BaseOrderByWithRelationInput | BaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Bases.
     */
    cursor?: BaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bases.
     */
    skip?: number
    distinct?: BaseScalarFieldEnum | BaseScalarFieldEnum[]
  }

  /**
   * Base create
   */
  export type BaseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
    /**
     * The data needed to create a Base.
     */
    data: XOR<BaseCreateInput, BaseUncheckedCreateInput>
  }

  /**
   * Base createMany
   */
  export type BaseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Bases.
     */
    data: BaseCreateManyInput | BaseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Base update
   */
  export type BaseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
    /**
     * The data needed to update a Base.
     */
    data: XOR<BaseUpdateInput, BaseUncheckedUpdateInput>
    /**
     * Choose, which Base to update.
     */
    where: BaseWhereUniqueInput
  }

  /**
   * Base updateMany
   */
  export type BaseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Bases.
     */
    data: XOR<BaseUpdateManyMutationInput, BaseUncheckedUpdateManyInput>
    /**
     * Filter which Bases to update
     */
    where?: BaseWhereInput
    /**
     * Limit how many Bases to update.
     */
    limit?: number
  }

  /**
   * Base upsert
   */
  export type BaseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
    /**
     * The filter to search for the Base to update in case it exists.
     */
    where: BaseWhereUniqueInput
    /**
     * In case the Base found by the `where` argument doesn't exist, create a new Base with this data.
     */
    create: XOR<BaseCreateInput, BaseUncheckedCreateInput>
    /**
     * In case the Base was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BaseUpdateInput, BaseUncheckedUpdateInput>
  }

  /**
   * Base delete
   */
  export type BaseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
    /**
     * Filter which Base to delete.
     */
    where: BaseWhereUniqueInput
  }

  /**
   * Base deleteMany
   */
  export type BaseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bases to delete
     */
    where?: BaseWhereInput
    /**
     * Limit how many Bases to delete.
     */
    limit?: number
  }

  /**
   * Base.EletricistaBaseHistorico
   */
  export type Base$EletricistaBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    where?: EletricistaBaseHistoricoWhereInput
    orderBy?: EletricistaBaseHistoricoOrderByWithRelationInput | EletricistaBaseHistoricoOrderByWithRelationInput[]
    cursor?: EletricistaBaseHistoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EletricistaBaseHistoricoScalarFieldEnum | EletricistaBaseHistoricoScalarFieldEnum[]
  }

  /**
   * Base.VeiculoBaseHistorico
   */
  export type Base$VeiculoBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    where?: VeiculoBaseHistoricoWhereInput
    orderBy?: VeiculoBaseHistoricoOrderByWithRelationInput | VeiculoBaseHistoricoOrderByWithRelationInput[]
    cursor?: VeiculoBaseHistoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VeiculoBaseHistoricoScalarFieldEnum | VeiculoBaseHistoricoScalarFieldEnum[]
  }

  /**
   * Base.EquipeBaseHistorico
   */
  export type Base$EquipeBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    where?: EquipeBaseHistoricoWhereInput
    orderBy?: EquipeBaseHistoricoOrderByWithRelationInput | EquipeBaseHistoricoOrderByWithRelationInput[]
    cursor?: EquipeBaseHistoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipeBaseHistoricoScalarFieldEnum | EquipeBaseHistoricoScalarFieldEnum[]
  }

  /**
   * Base without action
   */
  export type BaseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
  }


  /**
   * Model TipoChecklist
   */

  export type AggregateTipoChecklist = {
    _count: TipoChecklistCountAggregateOutputType | null
    _avg: TipoChecklistAvgAggregateOutputType | null
    _sum: TipoChecklistSumAggregateOutputType | null
    _min: TipoChecklistMinAggregateOutputType | null
    _max: TipoChecklistMaxAggregateOutputType | null
  }

  export type TipoChecklistAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoChecklistSumAggregateOutputType = {
    id: number | null
  }

  export type TipoChecklistMinAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoChecklistMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoChecklistCountAggregateOutputType = {
    id: number
    nome: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type TipoChecklistAvgAggregateInputType = {
    id?: true
  }

  export type TipoChecklistSumAggregateInputType = {
    id?: true
  }

  export type TipoChecklistMinAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoChecklistMaxAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoChecklistCountAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type TipoChecklistAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoChecklist to aggregate.
     */
    where?: TipoChecklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoChecklists to fetch.
     */
    orderBy?: TipoChecklistOrderByWithRelationInput | TipoChecklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoChecklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoChecklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoChecklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoChecklists
    **/
    _count?: true | TipoChecklistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoChecklistAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoChecklistSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoChecklistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoChecklistMaxAggregateInputType
  }

  export type GetTipoChecklistAggregateType<T extends TipoChecklistAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoChecklist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoChecklist[P]>
      : GetScalarType<T[P], AggregateTipoChecklist[P]>
  }




  export type TipoChecklistGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoChecklistWhereInput
    orderBy?: TipoChecklistOrderByWithAggregationInput | TipoChecklistOrderByWithAggregationInput[]
    by: TipoChecklistScalarFieldEnum[] | TipoChecklistScalarFieldEnum
    having?: TipoChecklistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoChecklistCountAggregateInputType | true
    _avg?: TipoChecklistAvgAggregateInputType
    _sum?: TipoChecklistSumAggregateInputType
    _min?: TipoChecklistMinAggregateInputType
    _max?: TipoChecklistMaxAggregateInputType
  }

  export type TipoChecklistGroupByOutputType = {
    id: number
    nome: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: TipoChecklistCountAggregateOutputType | null
    _avg: TipoChecklistAvgAggregateOutputType | null
    _sum: TipoChecklistSumAggregateOutputType | null
    _min: TipoChecklistMinAggregateOutputType | null
    _max: TipoChecklistMaxAggregateOutputType | null
  }

  type GetTipoChecklistGroupByPayload<T extends TipoChecklistGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoChecklistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoChecklistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoChecklistGroupByOutputType[P]>
            : GetScalarType<T[P], TipoChecklistGroupByOutputType[P]>
        }
      >
    >


  export type TipoChecklistSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    Checklist?: boolean | TipoChecklist$ChecklistArgs<ExtArgs>
    ChecklistTipoEquipeRelacao?: boolean | TipoChecklist$ChecklistTipoEquipeRelacaoArgs<ExtArgs>
    _count?: boolean | TipoChecklistCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoChecklist"]>



  export type TipoChecklistSelectScalar = {
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type TipoChecklistOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["tipoChecklist"]>
  export type TipoChecklistInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Checklist?: boolean | TipoChecklist$ChecklistArgs<ExtArgs>
    ChecklistTipoEquipeRelacao?: boolean | TipoChecklist$ChecklistTipoEquipeRelacaoArgs<ExtArgs>
    _count?: boolean | TipoChecklistCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TipoChecklistPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoChecklist"
    objects: {
      Checklist: Prisma.$ChecklistPayload<ExtArgs>[]
      ChecklistTipoEquipeRelacao: Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["tipoChecklist"]>
    composites: {}
  }

  type TipoChecklistGetPayload<S extends boolean | null | undefined | TipoChecklistDefaultArgs> = $Result.GetResult<Prisma.$TipoChecklistPayload, S>

  type TipoChecklistCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TipoChecklistFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipoChecklistCountAggregateInputType | true
    }

  export interface TipoChecklistDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoChecklist'], meta: { name: 'TipoChecklist' } }
    /**
     * Find zero or one TipoChecklist that matches the filter.
     * @param {TipoChecklistFindUniqueArgs} args - Arguments to find a TipoChecklist
     * @example
     * // Get one TipoChecklist
     * const tipoChecklist = await prisma.tipoChecklist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoChecklistFindUniqueArgs>(args: SelectSubset<T, TipoChecklistFindUniqueArgs<ExtArgs>>): Prisma__TipoChecklistClient<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TipoChecklist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TipoChecklistFindUniqueOrThrowArgs} args - Arguments to find a TipoChecklist
     * @example
     * // Get one TipoChecklist
     * const tipoChecklist = await prisma.tipoChecklist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoChecklistFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoChecklistFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoChecklistClient<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoChecklist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoChecklistFindFirstArgs} args - Arguments to find a TipoChecklist
     * @example
     * // Get one TipoChecklist
     * const tipoChecklist = await prisma.tipoChecklist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoChecklistFindFirstArgs>(args?: SelectSubset<T, TipoChecklistFindFirstArgs<ExtArgs>>): Prisma__TipoChecklistClient<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoChecklist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoChecklistFindFirstOrThrowArgs} args - Arguments to find a TipoChecklist
     * @example
     * // Get one TipoChecklist
     * const tipoChecklist = await prisma.tipoChecklist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoChecklistFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoChecklistFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoChecklistClient<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TipoChecklists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoChecklistFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoChecklists
     * const tipoChecklists = await prisma.tipoChecklist.findMany()
     * 
     * // Get first 10 TipoChecklists
     * const tipoChecklists = await prisma.tipoChecklist.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoChecklistWithIdOnly = await prisma.tipoChecklist.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoChecklistFindManyArgs>(args?: SelectSubset<T, TipoChecklistFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TipoChecklist.
     * @param {TipoChecklistCreateArgs} args - Arguments to create a TipoChecklist.
     * @example
     * // Create one TipoChecklist
     * const TipoChecklist = await prisma.tipoChecklist.create({
     *   data: {
     *     // ... data to create a TipoChecklist
     *   }
     * })
     * 
     */
    create<T extends TipoChecklistCreateArgs>(args: SelectSubset<T, TipoChecklistCreateArgs<ExtArgs>>): Prisma__TipoChecklistClient<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TipoChecklists.
     * @param {TipoChecklistCreateManyArgs} args - Arguments to create many TipoChecklists.
     * @example
     * // Create many TipoChecklists
     * const tipoChecklist = await prisma.tipoChecklist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoChecklistCreateManyArgs>(args?: SelectSubset<T, TipoChecklistCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TipoChecklist.
     * @param {TipoChecklistDeleteArgs} args - Arguments to delete one TipoChecklist.
     * @example
     * // Delete one TipoChecklist
     * const TipoChecklist = await prisma.tipoChecklist.delete({
     *   where: {
     *     // ... filter to delete one TipoChecklist
     *   }
     * })
     * 
     */
    delete<T extends TipoChecklistDeleteArgs>(args: SelectSubset<T, TipoChecklistDeleteArgs<ExtArgs>>): Prisma__TipoChecklistClient<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TipoChecklist.
     * @param {TipoChecklistUpdateArgs} args - Arguments to update one TipoChecklist.
     * @example
     * // Update one TipoChecklist
     * const tipoChecklist = await prisma.tipoChecklist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoChecklistUpdateArgs>(args: SelectSubset<T, TipoChecklistUpdateArgs<ExtArgs>>): Prisma__TipoChecklistClient<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TipoChecklists.
     * @param {TipoChecklistDeleteManyArgs} args - Arguments to filter TipoChecklists to delete.
     * @example
     * // Delete a few TipoChecklists
     * const { count } = await prisma.tipoChecklist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoChecklistDeleteManyArgs>(args?: SelectSubset<T, TipoChecklistDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoChecklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoChecklistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoChecklists
     * const tipoChecklist = await prisma.tipoChecklist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoChecklistUpdateManyArgs>(args: SelectSubset<T, TipoChecklistUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoChecklist.
     * @param {TipoChecklistUpsertArgs} args - Arguments to update or create a TipoChecklist.
     * @example
     * // Update or create a TipoChecklist
     * const tipoChecklist = await prisma.tipoChecklist.upsert({
     *   create: {
     *     // ... data to create a TipoChecklist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoChecklist we want to update
     *   }
     * })
     */
    upsert<T extends TipoChecklistUpsertArgs>(args: SelectSubset<T, TipoChecklistUpsertArgs<ExtArgs>>): Prisma__TipoChecklistClient<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TipoChecklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoChecklistCountArgs} args - Arguments to filter TipoChecklists to count.
     * @example
     * // Count the number of TipoChecklists
     * const count = await prisma.tipoChecklist.count({
     *   where: {
     *     // ... the filter for the TipoChecklists we want to count
     *   }
     * })
    **/
    count<T extends TipoChecklistCountArgs>(
      args?: Subset<T, TipoChecklistCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoChecklistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoChecklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoChecklistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoChecklistAggregateArgs>(args: Subset<T, TipoChecklistAggregateArgs>): Prisma.PrismaPromise<GetTipoChecklistAggregateType<T>>

    /**
     * Group by TipoChecklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoChecklistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoChecklistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoChecklistGroupByArgs['orderBy'] }
        : { orderBy?: TipoChecklistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoChecklistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoChecklistGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoChecklist model
   */
  readonly fields: TipoChecklistFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoChecklist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoChecklistClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Checklist<T extends TipoChecklist$ChecklistArgs<ExtArgs> = {}>(args?: Subset<T, TipoChecklist$ChecklistArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ChecklistTipoEquipeRelacao<T extends TipoChecklist$ChecklistTipoEquipeRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, TipoChecklist$ChecklistTipoEquipeRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoChecklist model
   */
  interface TipoChecklistFieldRefs {
    readonly id: FieldRef<"TipoChecklist", 'Int'>
    readonly nome: FieldRef<"TipoChecklist", 'String'>
    readonly createdAt: FieldRef<"TipoChecklist", 'DateTime'>
    readonly createdBy: FieldRef<"TipoChecklist", 'String'>
    readonly updatedAt: FieldRef<"TipoChecklist", 'DateTime'>
    readonly updatedBy: FieldRef<"TipoChecklist", 'String'>
    readonly deletedAt: FieldRef<"TipoChecklist", 'DateTime'>
    readonly deletedBy: FieldRef<"TipoChecklist", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoChecklist findUnique
   */
  export type TipoChecklistFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklist
     */
    select?: TipoChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoChecklist
     */
    omit?: TipoChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoChecklistInclude<ExtArgs> | null
    /**
     * Filter, which TipoChecklist to fetch.
     */
    where: TipoChecklistWhereUniqueInput
  }

  /**
   * TipoChecklist findUniqueOrThrow
   */
  export type TipoChecklistFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklist
     */
    select?: TipoChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoChecklist
     */
    omit?: TipoChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoChecklistInclude<ExtArgs> | null
    /**
     * Filter, which TipoChecklist to fetch.
     */
    where: TipoChecklistWhereUniqueInput
  }

  /**
   * TipoChecklist findFirst
   */
  export type TipoChecklistFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklist
     */
    select?: TipoChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoChecklist
     */
    omit?: TipoChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoChecklistInclude<ExtArgs> | null
    /**
     * Filter, which TipoChecklist to fetch.
     */
    where?: TipoChecklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoChecklists to fetch.
     */
    orderBy?: TipoChecklistOrderByWithRelationInput | TipoChecklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoChecklists.
     */
    cursor?: TipoChecklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoChecklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoChecklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoChecklists.
     */
    distinct?: TipoChecklistScalarFieldEnum | TipoChecklistScalarFieldEnum[]
  }

  /**
   * TipoChecklist findFirstOrThrow
   */
  export type TipoChecklistFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklist
     */
    select?: TipoChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoChecklist
     */
    omit?: TipoChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoChecklistInclude<ExtArgs> | null
    /**
     * Filter, which TipoChecklist to fetch.
     */
    where?: TipoChecklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoChecklists to fetch.
     */
    orderBy?: TipoChecklistOrderByWithRelationInput | TipoChecklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoChecklists.
     */
    cursor?: TipoChecklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoChecklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoChecklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoChecklists.
     */
    distinct?: TipoChecklistScalarFieldEnum | TipoChecklistScalarFieldEnum[]
  }

  /**
   * TipoChecklist findMany
   */
  export type TipoChecklistFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklist
     */
    select?: TipoChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoChecklist
     */
    omit?: TipoChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoChecklistInclude<ExtArgs> | null
    /**
     * Filter, which TipoChecklists to fetch.
     */
    where?: TipoChecklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoChecklists to fetch.
     */
    orderBy?: TipoChecklistOrderByWithRelationInput | TipoChecklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoChecklists.
     */
    cursor?: TipoChecklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoChecklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoChecklists.
     */
    skip?: number
    distinct?: TipoChecklistScalarFieldEnum | TipoChecklistScalarFieldEnum[]
  }

  /**
   * TipoChecklist create
   */
  export type TipoChecklistCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklist
     */
    select?: TipoChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoChecklist
     */
    omit?: TipoChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoChecklistInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoChecklist.
     */
    data: XOR<TipoChecklistCreateInput, TipoChecklistUncheckedCreateInput>
  }

  /**
   * TipoChecklist createMany
   */
  export type TipoChecklistCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoChecklists.
     */
    data: TipoChecklistCreateManyInput | TipoChecklistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoChecklist update
   */
  export type TipoChecklistUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklist
     */
    select?: TipoChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoChecklist
     */
    omit?: TipoChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoChecklistInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoChecklist.
     */
    data: XOR<TipoChecklistUpdateInput, TipoChecklistUncheckedUpdateInput>
    /**
     * Choose, which TipoChecklist to update.
     */
    where: TipoChecklistWhereUniqueInput
  }

  /**
   * TipoChecklist updateMany
   */
  export type TipoChecklistUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoChecklists.
     */
    data: XOR<TipoChecklistUpdateManyMutationInput, TipoChecklistUncheckedUpdateManyInput>
    /**
     * Filter which TipoChecklists to update
     */
    where?: TipoChecklistWhereInput
    /**
     * Limit how many TipoChecklists to update.
     */
    limit?: number
  }

  /**
   * TipoChecklist upsert
   */
  export type TipoChecklistUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklist
     */
    select?: TipoChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoChecklist
     */
    omit?: TipoChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoChecklistInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoChecklist to update in case it exists.
     */
    where: TipoChecklistWhereUniqueInput
    /**
     * In case the TipoChecklist found by the `where` argument doesn't exist, create a new TipoChecklist with this data.
     */
    create: XOR<TipoChecklistCreateInput, TipoChecklistUncheckedCreateInput>
    /**
     * In case the TipoChecklist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoChecklistUpdateInput, TipoChecklistUncheckedUpdateInput>
  }

  /**
   * TipoChecklist delete
   */
  export type TipoChecklistDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklist
     */
    select?: TipoChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoChecklist
     */
    omit?: TipoChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoChecklistInclude<ExtArgs> | null
    /**
     * Filter which TipoChecklist to delete.
     */
    where: TipoChecklistWhereUniqueInput
  }

  /**
   * TipoChecklist deleteMany
   */
  export type TipoChecklistDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoChecklists to delete
     */
    where?: TipoChecklistWhereInput
    /**
     * Limit how many TipoChecklists to delete.
     */
    limit?: number
  }

  /**
   * TipoChecklist.Checklist
   */
  export type TipoChecklist$ChecklistArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
    where?: ChecklistWhereInput
    orderBy?: ChecklistOrderByWithRelationInput | ChecklistOrderByWithRelationInput[]
    cursor?: ChecklistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChecklistScalarFieldEnum | ChecklistScalarFieldEnum[]
  }

  /**
   * TipoChecklist.ChecklistTipoEquipeRelacao
   */
  export type TipoChecklist$ChecklistTipoEquipeRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    where?: ChecklistTipoEquipeRelacaoWhereInput
    orderBy?: ChecklistTipoEquipeRelacaoOrderByWithRelationInput | ChecklistTipoEquipeRelacaoOrderByWithRelationInput[]
    cursor?: ChecklistTipoEquipeRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChecklistTipoEquipeRelacaoScalarFieldEnum | ChecklistTipoEquipeRelacaoScalarFieldEnum[]
  }

  /**
   * TipoChecklist without action
   */
  export type TipoChecklistDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoChecklist
     */
    select?: TipoChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoChecklist
     */
    omit?: TipoChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoChecklistInclude<ExtArgs> | null
  }


  /**
   * Model Checklist
   */

  export type AggregateChecklist = {
    _count: ChecklistCountAggregateOutputType | null
    _avg: ChecklistAvgAggregateOutputType | null
    _sum: ChecklistSumAggregateOutputType | null
    _min: ChecklistMinAggregateOutputType | null
    _max: ChecklistMaxAggregateOutputType | null
  }

  export type ChecklistAvgAggregateOutputType = {
    id: number | null
    tipoChecklistId: number | null
  }

  export type ChecklistSumAggregateOutputType = {
    id: number | null
    tipoChecklistId: number | null
  }

  export type ChecklistMinAggregateOutputType = {
    id: number | null
    nome: string | null
    tipoChecklistId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    tipoChecklistId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistCountAggregateOutputType = {
    id: number
    nome: number
    tipoChecklistId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type ChecklistAvgAggregateInputType = {
    id?: true
    tipoChecklistId?: true
  }

  export type ChecklistSumAggregateInputType = {
    id?: true
    tipoChecklistId?: true
  }

  export type ChecklistMinAggregateInputType = {
    id?: true
    nome?: true
    tipoChecklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistMaxAggregateInputType = {
    id?: true
    nome?: true
    tipoChecklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistCountAggregateInputType = {
    id?: true
    nome?: true
    tipoChecklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type ChecklistAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Checklist to aggregate.
     */
    where?: ChecklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Checklists to fetch.
     */
    orderBy?: ChecklistOrderByWithRelationInput | ChecklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChecklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Checklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Checklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Checklists
    **/
    _count?: true | ChecklistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistMaxAggregateInputType
  }

  export type GetChecklistAggregateType<T extends ChecklistAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklist[P]>
      : GetScalarType<T[P], AggregateChecklist[P]>
  }




  export type ChecklistGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistWhereInput
    orderBy?: ChecklistOrderByWithAggregationInput | ChecklistOrderByWithAggregationInput[]
    by: ChecklistScalarFieldEnum[] | ChecklistScalarFieldEnum
    having?: ChecklistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistCountAggregateInputType | true
    _avg?: ChecklistAvgAggregateInputType
    _sum?: ChecklistSumAggregateInputType
    _min?: ChecklistMinAggregateInputType
    _max?: ChecklistMaxAggregateInputType
  }

  export type ChecklistGroupByOutputType = {
    id: number
    nome: string
    tipoChecklistId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: ChecklistCountAggregateOutputType | null
    _avg: ChecklistAvgAggregateOutputType | null
    _sum: ChecklistSumAggregateOutputType | null
    _min: ChecklistMinAggregateOutputType | null
    _max: ChecklistMaxAggregateOutputType | null
  }

  type GetChecklistGroupByPayload<T extends ChecklistGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChecklistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tipoChecklistId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    tipoChecklist?: boolean | TipoChecklistDefaultArgs<ExtArgs>
    ChecklistPerguntaRelacao?: boolean | Checklist$ChecklistPerguntaRelacaoArgs<ExtArgs>
    ChecklistOpcaoRespostaRelacao?: boolean | Checklist$ChecklistOpcaoRespostaRelacaoArgs<ExtArgs>
    ChecklistTipoVeiculoRelacao?: boolean | Checklist$ChecklistTipoVeiculoRelacaoArgs<ExtArgs>
    ChecklistTipoEquipeRelacao?: boolean | Checklist$ChecklistTipoEquipeRelacaoArgs<ExtArgs>
    _count?: boolean | ChecklistCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["checklist"]>



  export type ChecklistSelectScalar = {
    id?: boolean
    nome?: boolean
    tipoChecklistId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type ChecklistOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "tipoChecklistId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["checklist"]>
  export type ChecklistInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipoChecklist?: boolean | TipoChecklistDefaultArgs<ExtArgs>
    ChecklistPerguntaRelacao?: boolean | Checklist$ChecklistPerguntaRelacaoArgs<ExtArgs>
    ChecklistOpcaoRespostaRelacao?: boolean | Checklist$ChecklistOpcaoRespostaRelacaoArgs<ExtArgs>
    ChecklistTipoVeiculoRelacao?: boolean | Checklist$ChecklistTipoVeiculoRelacaoArgs<ExtArgs>
    ChecklistTipoEquipeRelacao?: boolean | Checklist$ChecklistTipoEquipeRelacaoArgs<ExtArgs>
    _count?: boolean | ChecklistCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ChecklistPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Checklist"
    objects: {
      tipoChecklist: Prisma.$TipoChecklistPayload<ExtArgs>
      ChecklistPerguntaRelacao: Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>[]
      ChecklistOpcaoRespostaRelacao: Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>[]
      ChecklistTipoVeiculoRelacao: Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>[]
      ChecklistTipoEquipeRelacao: Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      tipoChecklistId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["checklist"]>
    composites: {}
  }

  type ChecklistGetPayload<S extends boolean | null | undefined | ChecklistDefaultArgs> = $Result.GetResult<Prisma.$ChecklistPayload, S>

  type ChecklistCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChecklistFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChecklistCountAggregateInputType | true
    }

  export interface ChecklistDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Checklist'], meta: { name: 'Checklist' } }
    /**
     * Find zero or one Checklist that matches the filter.
     * @param {ChecklistFindUniqueArgs} args - Arguments to find a Checklist
     * @example
     * // Get one Checklist
     * const checklist = await prisma.checklist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChecklistFindUniqueArgs>(args: SelectSubset<T, ChecklistFindUniqueArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Checklist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChecklistFindUniqueOrThrowArgs} args - Arguments to find a Checklist
     * @example
     * // Get one Checklist
     * const checklist = await prisma.checklist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChecklistFindUniqueOrThrowArgs>(args: SelectSubset<T, ChecklistFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Checklist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistFindFirstArgs} args - Arguments to find a Checklist
     * @example
     * // Get one Checklist
     * const checklist = await prisma.checklist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChecklistFindFirstArgs>(args?: SelectSubset<T, ChecklistFindFirstArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Checklist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistFindFirstOrThrowArgs} args - Arguments to find a Checklist
     * @example
     * // Get one Checklist
     * const checklist = await prisma.checklist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChecklistFindFirstOrThrowArgs>(args?: SelectSubset<T, ChecklistFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Checklists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Checklists
     * const checklists = await prisma.checklist.findMany()
     * 
     * // Get first 10 Checklists
     * const checklists = await prisma.checklist.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistWithIdOnly = await prisma.checklist.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChecklistFindManyArgs>(args?: SelectSubset<T, ChecklistFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Checklist.
     * @param {ChecklistCreateArgs} args - Arguments to create a Checklist.
     * @example
     * // Create one Checklist
     * const Checklist = await prisma.checklist.create({
     *   data: {
     *     // ... data to create a Checklist
     *   }
     * })
     * 
     */
    create<T extends ChecklistCreateArgs>(args: SelectSubset<T, ChecklistCreateArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Checklists.
     * @param {ChecklistCreateManyArgs} args - Arguments to create many Checklists.
     * @example
     * // Create many Checklists
     * const checklist = await prisma.checklist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChecklistCreateManyArgs>(args?: SelectSubset<T, ChecklistCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Checklist.
     * @param {ChecklistDeleteArgs} args - Arguments to delete one Checklist.
     * @example
     * // Delete one Checklist
     * const Checklist = await prisma.checklist.delete({
     *   where: {
     *     // ... filter to delete one Checklist
     *   }
     * })
     * 
     */
    delete<T extends ChecklistDeleteArgs>(args: SelectSubset<T, ChecklistDeleteArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Checklist.
     * @param {ChecklistUpdateArgs} args - Arguments to update one Checklist.
     * @example
     * // Update one Checklist
     * const checklist = await prisma.checklist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChecklistUpdateArgs>(args: SelectSubset<T, ChecklistUpdateArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Checklists.
     * @param {ChecklistDeleteManyArgs} args - Arguments to filter Checklists to delete.
     * @example
     * // Delete a few Checklists
     * const { count } = await prisma.checklist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChecklistDeleteManyArgs>(args?: SelectSubset<T, ChecklistDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Checklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Checklists
     * const checklist = await prisma.checklist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChecklistUpdateManyArgs>(args: SelectSubset<T, ChecklistUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Checklist.
     * @param {ChecklistUpsertArgs} args - Arguments to update or create a Checklist.
     * @example
     * // Update or create a Checklist
     * const checklist = await prisma.checklist.upsert({
     *   create: {
     *     // ... data to create a Checklist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Checklist we want to update
     *   }
     * })
     */
    upsert<T extends ChecklistUpsertArgs>(args: SelectSubset<T, ChecklistUpsertArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Checklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistCountArgs} args - Arguments to filter Checklists to count.
     * @example
     * // Count the number of Checklists
     * const count = await prisma.checklist.count({
     *   where: {
     *     // ... the filter for the Checklists we want to count
     *   }
     * })
    **/
    count<T extends ChecklistCountArgs>(
      args?: Subset<T, ChecklistCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Checklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistAggregateArgs>(args: Subset<T, ChecklistAggregateArgs>): Prisma.PrismaPromise<GetChecklistAggregateType<T>>

    /**
     * Group by Checklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Checklist model
   */
  readonly fields: ChecklistFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Checklist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChecklistClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tipoChecklist<T extends TipoChecklistDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoChecklistDefaultArgs<ExtArgs>>): Prisma__TipoChecklistClient<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ChecklistPerguntaRelacao<T extends Checklist$ChecklistPerguntaRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, Checklist$ChecklistPerguntaRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ChecklistOpcaoRespostaRelacao<T extends Checklist$ChecklistOpcaoRespostaRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, Checklist$ChecklistOpcaoRespostaRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ChecklistTipoVeiculoRelacao<T extends Checklist$ChecklistTipoVeiculoRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, Checklist$ChecklistTipoVeiculoRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ChecklistTipoEquipeRelacao<T extends Checklist$ChecklistTipoEquipeRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, Checklist$ChecklistTipoEquipeRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Checklist model
   */
  interface ChecklistFieldRefs {
    readonly id: FieldRef<"Checklist", 'Int'>
    readonly nome: FieldRef<"Checklist", 'String'>
    readonly tipoChecklistId: FieldRef<"Checklist", 'Int'>
    readonly createdAt: FieldRef<"Checklist", 'DateTime'>
    readonly createdBy: FieldRef<"Checklist", 'String'>
    readonly updatedAt: FieldRef<"Checklist", 'DateTime'>
    readonly updatedBy: FieldRef<"Checklist", 'String'>
    readonly deletedAt: FieldRef<"Checklist", 'DateTime'>
    readonly deletedBy: FieldRef<"Checklist", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Checklist findUnique
   */
  export type ChecklistFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
    /**
     * Filter, which Checklist to fetch.
     */
    where: ChecklistWhereUniqueInput
  }

  /**
   * Checklist findUniqueOrThrow
   */
  export type ChecklistFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
    /**
     * Filter, which Checklist to fetch.
     */
    where: ChecklistWhereUniqueInput
  }

  /**
   * Checklist findFirst
   */
  export type ChecklistFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
    /**
     * Filter, which Checklist to fetch.
     */
    where?: ChecklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Checklists to fetch.
     */
    orderBy?: ChecklistOrderByWithRelationInput | ChecklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Checklists.
     */
    cursor?: ChecklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Checklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Checklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Checklists.
     */
    distinct?: ChecklistScalarFieldEnum | ChecklistScalarFieldEnum[]
  }

  /**
   * Checklist findFirstOrThrow
   */
  export type ChecklistFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
    /**
     * Filter, which Checklist to fetch.
     */
    where?: ChecklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Checklists to fetch.
     */
    orderBy?: ChecklistOrderByWithRelationInput | ChecklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Checklists.
     */
    cursor?: ChecklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Checklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Checklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Checklists.
     */
    distinct?: ChecklistScalarFieldEnum | ChecklistScalarFieldEnum[]
  }

  /**
   * Checklist findMany
   */
  export type ChecklistFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
    /**
     * Filter, which Checklists to fetch.
     */
    where?: ChecklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Checklists to fetch.
     */
    orderBy?: ChecklistOrderByWithRelationInput | ChecklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Checklists.
     */
    cursor?: ChecklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Checklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Checklists.
     */
    skip?: number
    distinct?: ChecklistScalarFieldEnum | ChecklistScalarFieldEnum[]
  }

  /**
   * Checklist create
   */
  export type ChecklistCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
    /**
     * The data needed to create a Checklist.
     */
    data: XOR<ChecklistCreateInput, ChecklistUncheckedCreateInput>
  }

  /**
   * Checklist createMany
   */
  export type ChecklistCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Checklists.
     */
    data: ChecklistCreateManyInput | ChecklistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Checklist update
   */
  export type ChecklistUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
    /**
     * The data needed to update a Checklist.
     */
    data: XOR<ChecklistUpdateInput, ChecklistUncheckedUpdateInput>
    /**
     * Choose, which Checklist to update.
     */
    where: ChecklistWhereUniqueInput
  }

  /**
   * Checklist updateMany
   */
  export type ChecklistUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Checklists.
     */
    data: XOR<ChecklistUpdateManyMutationInput, ChecklistUncheckedUpdateManyInput>
    /**
     * Filter which Checklists to update
     */
    where?: ChecklistWhereInput
    /**
     * Limit how many Checklists to update.
     */
    limit?: number
  }

  /**
   * Checklist upsert
   */
  export type ChecklistUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
    /**
     * The filter to search for the Checklist to update in case it exists.
     */
    where: ChecklistWhereUniqueInput
    /**
     * In case the Checklist found by the `where` argument doesn't exist, create a new Checklist with this data.
     */
    create: XOR<ChecklistCreateInput, ChecklistUncheckedCreateInput>
    /**
     * In case the Checklist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChecklistUpdateInput, ChecklistUncheckedUpdateInput>
  }

  /**
   * Checklist delete
   */
  export type ChecklistDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
    /**
     * Filter which Checklist to delete.
     */
    where: ChecklistWhereUniqueInput
  }

  /**
   * Checklist deleteMany
   */
  export type ChecklistDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Checklists to delete
     */
    where?: ChecklistWhereInput
    /**
     * Limit how many Checklists to delete.
     */
    limit?: number
  }

  /**
   * Checklist.ChecklistPerguntaRelacao
   */
  export type Checklist$ChecklistPerguntaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    where?: ChecklistPerguntaRelacaoWhereInput
    orderBy?: ChecklistPerguntaRelacaoOrderByWithRelationInput | ChecklistPerguntaRelacaoOrderByWithRelationInput[]
    cursor?: ChecklistPerguntaRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChecklistPerguntaRelacaoScalarFieldEnum | ChecklistPerguntaRelacaoScalarFieldEnum[]
  }

  /**
   * Checklist.ChecklistOpcaoRespostaRelacao
   */
  export type Checklist$ChecklistOpcaoRespostaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
    orderBy?: ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput | ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput[]
    cursor?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChecklistOpcaoRespostaRelacaoScalarFieldEnum | ChecklistOpcaoRespostaRelacaoScalarFieldEnum[]
  }

  /**
   * Checklist.ChecklistTipoVeiculoRelacao
   */
  export type Checklist$ChecklistTipoVeiculoRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    where?: ChecklistTipoVeiculoRelacaoWhereInput
    orderBy?: ChecklistTipoVeiculoRelacaoOrderByWithRelationInput | ChecklistTipoVeiculoRelacaoOrderByWithRelationInput[]
    cursor?: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChecklistTipoVeiculoRelacaoScalarFieldEnum | ChecklistTipoVeiculoRelacaoScalarFieldEnum[]
  }

  /**
   * Checklist.ChecklistTipoEquipeRelacao
   */
  export type Checklist$ChecklistTipoEquipeRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    where?: ChecklistTipoEquipeRelacaoWhereInput
    orderBy?: ChecklistTipoEquipeRelacaoOrderByWithRelationInput | ChecklistTipoEquipeRelacaoOrderByWithRelationInput[]
    cursor?: ChecklistTipoEquipeRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChecklistTipoEquipeRelacaoScalarFieldEnum | ChecklistTipoEquipeRelacaoScalarFieldEnum[]
  }

  /**
   * Checklist without action
   */
  export type ChecklistDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Checklist
     */
    select?: ChecklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Checklist
     */
    omit?: ChecklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistInclude<ExtArgs> | null
  }


  /**
   * Model ChecklistPergunta
   */

  export type AggregateChecklistPergunta = {
    _count: ChecklistPerguntaCountAggregateOutputType | null
    _avg: ChecklistPerguntaAvgAggregateOutputType | null
    _sum: ChecklistPerguntaSumAggregateOutputType | null
    _min: ChecklistPerguntaMinAggregateOutputType | null
    _max: ChecklistPerguntaMaxAggregateOutputType | null
  }

  export type ChecklistPerguntaAvgAggregateOutputType = {
    id: number | null
  }

  export type ChecklistPerguntaSumAggregateOutputType = {
    id: number | null
  }

  export type ChecklistPerguntaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistPerguntaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistPerguntaCountAggregateOutputType = {
    id: number
    nome: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type ChecklistPerguntaAvgAggregateInputType = {
    id?: true
  }

  export type ChecklistPerguntaSumAggregateInputType = {
    id?: true
  }

  export type ChecklistPerguntaMinAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistPerguntaMaxAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistPerguntaCountAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type ChecklistPerguntaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistPergunta to aggregate.
     */
    where?: ChecklistPerguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistPerguntas to fetch.
     */
    orderBy?: ChecklistPerguntaOrderByWithRelationInput | ChecklistPerguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChecklistPerguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistPerguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistPerguntas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChecklistPerguntas
    **/
    _count?: true | ChecklistPerguntaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistPerguntaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistPerguntaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistPerguntaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistPerguntaMaxAggregateInputType
  }

  export type GetChecklistPerguntaAggregateType<T extends ChecklistPerguntaAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklistPergunta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklistPergunta[P]>
      : GetScalarType<T[P], AggregateChecklistPergunta[P]>
  }




  export type ChecklistPerguntaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistPerguntaWhereInput
    orderBy?: ChecklistPerguntaOrderByWithAggregationInput | ChecklistPerguntaOrderByWithAggregationInput[]
    by: ChecklistPerguntaScalarFieldEnum[] | ChecklistPerguntaScalarFieldEnum
    having?: ChecklistPerguntaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistPerguntaCountAggregateInputType | true
    _avg?: ChecklistPerguntaAvgAggregateInputType
    _sum?: ChecklistPerguntaSumAggregateInputType
    _min?: ChecklistPerguntaMinAggregateInputType
    _max?: ChecklistPerguntaMaxAggregateInputType
  }

  export type ChecklistPerguntaGroupByOutputType = {
    id: number
    nome: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: ChecklistPerguntaCountAggregateOutputType | null
    _avg: ChecklistPerguntaAvgAggregateOutputType | null
    _sum: ChecklistPerguntaSumAggregateOutputType | null
    _min: ChecklistPerguntaMinAggregateOutputType | null
    _max: ChecklistPerguntaMaxAggregateOutputType | null
  }

  type GetChecklistPerguntaGroupByPayload<T extends ChecklistPerguntaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChecklistPerguntaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistPerguntaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistPerguntaGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistPerguntaGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistPerguntaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    ChecklistPerguntaRelacao?: boolean | ChecklistPergunta$ChecklistPerguntaRelacaoArgs<ExtArgs>
    _count?: boolean | ChecklistPerguntaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["checklistPergunta"]>



  export type ChecklistPerguntaSelectScalar = {
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type ChecklistPerguntaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["checklistPergunta"]>
  export type ChecklistPerguntaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ChecklistPerguntaRelacao?: boolean | ChecklistPergunta$ChecklistPerguntaRelacaoArgs<ExtArgs>
    _count?: boolean | ChecklistPerguntaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ChecklistPerguntaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChecklistPergunta"
    objects: {
      ChecklistPerguntaRelacao: Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["checklistPergunta"]>
    composites: {}
  }

  type ChecklistPerguntaGetPayload<S extends boolean | null | undefined | ChecklistPerguntaDefaultArgs> = $Result.GetResult<Prisma.$ChecklistPerguntaPayload, S>

  type ChecklistPerguntaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChecklistPerguntaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChecklistPerguntaCountAggregateInputType | true
    }

  export interface ChecklistPerguntaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChecklistPergunta'], meta: { name: 'ChecklistPergunta' } }
    /**
     * Find zero or one ChecklistPergunta that matches the filter.
     * @param {ChecklistPerguntaFindUniqueArgs} args - Arguments to find a ChecklistPergunta
     * @example
     * // Get one ChecklistPergunta
     * const checklistPergunta = await prisma.checklistPergunta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChecklistPerguntaFindUniqueArgs>(args: SelectSubset<T, ChecklistPerguntaFindUniqueArgs<ExtArgs>>): Prisma__ChecklistPerguntaClient<$Result.GetResult<Prisma.$ChecklistPerguntaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ChecklistPergunta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChecklistPerguntaFindUniqueOrThrowArgs} args - Arguments to find a ChecklistPergunta
     * @example
     * // Get one ChecklistPergunta
     * const checklistPergunta = await prisma.checklistPergunta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChecklistPerguntaFindUniqueOrThrowArgs>(args: SelectSubset<T, ChecklistPerguntaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChecklistPerguntaClient<$Result.GetResult<Prisma.$ChecklistPerguntaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistPergunta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaFindFirstArgs} args - Arguments to find a ChecklistPergunta
     * @example
     * // Get one ChecklistPergunta
     * const checklistPergunta = await prisma.checklistPergunta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChecklistPerguntaFindFirstArgs>(args?: SelectSubset<T, ChecklistPerguntaFindFirstArgs<ExtArgs>>): Prisma__ChecklistPerguntaClient<$Result.GetResult<Prisma.$ChecklistPerguntaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistPergunta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaFindFirstOrThrowArgs} args - Arguments to find a ChecklistPergunta
     * @example
     * // Get one ChecklistPergunta
     * const checklistPergunta = await prisma.checklistPergunta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChecklistPerguntaFindFirstOrThrowArgs>(args?: SelectSubset<T, ChecklistPerguntaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChecklistPerguntaClient<$Result.GetResult<Prisma.$ChecklistPerguntaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ChecklistPerguntas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChecklistPerguntas
     * const checklistPerguntas = await prisma.checklistPergunta.findMany()
     * 
     * // Get first 10 ChecklistPerguntas
     * const checklistPerguntas = await prisma.checklistPergunta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistPerguntaWithIdOnly = await prisma.checklistPergunta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChecklistPerguntaFindManyArgs>(args?: SelectSubset<T, ChecklistPerguntaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistPerguntaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ChecklistPergunta.
     * @param {ChecklistPerguntaCreateArgs} args - Arguments to create a ChecklistPergunta.
     * @example
     * // Create one ChecklistPergunta
     * const ChecklistPergunta = await prisma.checklistPergunta.create({
     *   data: {
     *     // ... data to create a ChecklistPergunta
     *   }
     * })
     * 
     */
    create<T extends ChecklistPerguntaCreateArgs>(args: SelectSubset<T, ChecklistPerguntaCreateArgs<ExtArgs>>): Prisma__ChecklistPerguntaClient<$Result.GetResult<Prisma.$ChecklistPerguntaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ChecklistPerguntas.
     * @param {ChecklistPerguntaCreateManyArgs} args - Arguments to create many ChecklistPerguntas.
     * @example
     * // Create many ChecklistPerguntas
     * const checklistPergunta = await prisma.checklistPergunta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChecklistPerguntaCreateManyArgs>(args?: SelectSubset<T, ChecklistPerguntaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ChecklistPergunta.
     * @param {ChecklistPerguntaDeleteArgs} args - Arguments to delete one ChecklistPergunta.
     * @example
     * // Delete one ChecklistPergunta
     * const ChecklistPergunta = await prisma.checklistPergunta.delete({
     *   where: {
     *     // ... filter to delete one ChecklistPergunta
     *   }
     * })
     * 
     */
    delete<T extends ChecklistPerguntaDeleteArgs>(args: SelectSubset<T, ChecklistPerguntaDeleteArgs<ExtArgs>>): Prisma__ChecklistPerguntaClient<$Result.GetResult<Prisma.$ChecklistPerguntaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ChecklistPergunta.
     * @param {ChecklistPerguntaUpdateArgs} args - Arguments to update one ChecklistPergunta.
     * @example
     * // Update one ChecklistPergunta
     * const checklistPergunta = await prisma.checklistPergunta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChecklistPerguntaUpdateArgs>(args: SelectSubset<T, ChecklistPerguntaUpdateArgs<ExtArgs>>): Prisma__ChecklistPerguntaClient<$Result.GetResult<Prisma.$ChecklistPerguntaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ChecklistPerguntas.
     * @param {ChecklistPerguntaDeleteManyArgs} args - Arguments to filter ChecklistPerguntas to delete.
     * @example
     * // Delete a few ChecklistPerguntas
     * const { count } = await prisma.checklistPergunta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChecklistPerguntaDeleteManyArgs>(args?: SelectSubset<T, ChecklistPerguntaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChecklistPerguntas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChecklistPerguntas
     * const checklistPergunta = await prisma.checklistPergunta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChecklistPerguntaUpdateManyArgs>(args: SelectSubset<T, ChecklistPerguntaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChecklistPergunta.
     * @param {ChecklistPerguntaUpsertArgs} args - Arguments to update or create a ChecklistPergunta.
     * @example
     * // Update or create a ChecklistPergunta
     * const checklistPergunta = await prisma.checklistPergunta.upsert({
     *   create: {
     *     // ... data to create a ChecklistPergunta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChecklistPergunta we want to update
     *   }
     * })
     */
    upsert<T extends ChecklistPerguntaUpsertArgs>(args: SelectSubset<T, ChecklistPerguntaUpsertArgs<ExtArgs>>): Prisma__ChecklistPerguntaClient<$Result.GetResult<Prisma.$ChecklistPerguntaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ChecklistPerguntas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaCountArgs} args - Arguments to filter ChecklistPerguntas to count.
     * @example
     * // Count the number of ChecklistPerguntas
     * const count = await prisma.checklistPergunta.count({
     *   where: {
     *     // ... the filter for the ChecklistPerguntas we want to count
     *   }
     * })
    **/
    count<T extends ChecklistPerguntaCountArgs>(
      args?: Subset<T, ChecklistPerguntaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistPerguntaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChecklistPergunta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistPerguntaAggregateArgs>(args: Subset<T, ChecklistPerguntaAggregateArgs>): Prisma.PrismaPromise<GetChecklistPerguntaAggregateType<T>>

    /**
     * Group by ChecklistPergunta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistPerguntaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistPerguntaGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistPerguntaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistPerguntaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistPerguntaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChecklistPergunta model
   */
  readonly fields: ChecklistPerguntaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChecklistPergunta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChecklistPerguntaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ChecklistPerguntaRelacao<T extends ChecklistPergunta$ChecklistPerguntaRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, ChecklistPergunta$ChecklistPerguntaRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChecklistPergunta model
   */
  interface ChecklistPerguntaFieldRefs {
    readonly id: FieldRef<"ChecklistPergunta", 'Int'>
    readonly nome: FieldRef<"ChecklistPergunta", 'String'>
    readonly createdAt: FieldRef<"ChecklistPergunta", 'DateTime'>
    readonly createdBy: FieldRef<"ChecklistPergunta", 'String'>
    readonly updatedAt: FieldRef<"ChecklistPergunta", 'DateTime'>
    readonly updatedBy: FieldRef<"ChecklistPergunta", 'String'>
    readonly deletedAt: FieldRef<"ChecklistPergunta", 'DateTime'>
    readonly deletedBy: FieldRef<"ChecklistPergunta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ChecklistPergunta findUnique
   */
  export type ChecklistPerguntaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPergunta
     */
    select?: ChecklistPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPergunta
     */
    omit?: ChecklistPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistPergunta to fetch.
     */
    where: ChecklistPerguntaWhereUniqueInput
  }

  /**
   * ChecklistPergunta findUniqueOrThrow
   */
  export type ChecklistPerguntaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPergunta
     */
    select?: ChecklistPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPergunta
     */
    omit?: ChecklistPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistPergunta to fetch.
     */
    where: ChecklistPerguntaWhereUniqueInput
  }

  /**
   * ChecklistPergunta findFirst
   */
  export type ChecklistPerguntaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPergunta
     */
    select?: ChecklistPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPergunta
     */
    omit?: ChecklistPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistPergunta to fetch.
     */
    where?: ChecklistPerguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistPerguntas to fetch.
     */
    orderBy?: ChecklistPerguntaOrderByWithRelationInput | ChecklistPerguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistPerguntas.
     */
    cursor?: ChecklistPerguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistPerguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistPerguntas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistPerguntas.
     */
    distinct?: ChecklistPerguntaScalarFieldEnum | ChecklistPerguntaScalarFieldEnum[]
  }

  /**
   * ChecklistPergunta findFirstOrThrow
   */
  export type ChecklistPerguntaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPergunta
     */
    select?: ChecklistPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPergunta
     */
    omit?: ChecklistPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistPergunta to fetch.
     */
    where?: ChecklistPerguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistPerguntas to fetch.
     */
    orderBy?: ChecklistPerguntaOrderByWithRelationInput | ChecklistPerguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistPerguntas.
     */
    cursor?: ChecklistPerguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistPerguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistPerguntas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistPerguntas.
     */
    distinct?: ChecklistPerguntaScalarFieldEnum | ChecklistPerguntaScalarFieldEnum[]
  }

  /**
   * ChecklistPergunta findMany
   */
  export type ChecklistPerguntaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPergunta
     */
    select?: ChecklistPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPergunta
     */
    omit?: ChecklistPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistPerguntas to fetch.
     */
    where?: ChecklistPerguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistPerguntas to fetch.
     */
    orderBy?: ChecklistPerguntaOrderByWithRelationInput | ChecklistPerguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChecklistPerguntas.
     */
    cursor?: ChecklistPerguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistPerguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistPerguntas.
     */
    skip?: number
    distinct?: ChecklistPerguntaScalarFieldEnum | ChecklistPerguntaScalarFieldEnum[]
  }

  /**
   * ChecklistPergunta create
   */
  export type ChecklistPerguntaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPergunta
     */
    select?: ChecklistPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPergunta
     */
    omit?: ChecklistPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaInclude<ExtArgs> | null
    /**
     * The data needed to create a ChecklistPergunta.
     */
    data: XOR<ChecklistPerguntaCreateInput, ChecklistPerguntaUncheckedCreateInput>
  }

  /**
   * ChecklistPergunta createMany
   */
  export type ChecklistPerguntaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChecklistPerguntas.
     */
    data: ChecklistPerguntaCreateManyInput | ChecklistPerguntaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChecklistPergunta update
   */
  export type ChecklistPerguntaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPergunta
     */
    select?: ChecklistPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPergunta
     */
    omit?: ChecklistPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaInclude<ExtArgs> | null
    /**
     * The data needed to update a ChecklistPergunta.
     */
    data: XOR<ChecklistPerguntaUpdateInput, ChecklistPerguntaUncheckedUpdateInput>
    /**
     * Choose, which ChecklistPergunta to update.
     */
    where: ChecklistPerguntaWhereUniqueInput
  }

  /**
   * ChecklistPergunta updateMany
   */
  export type ChecklistPerguntaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChecklistPerguntas.
     */
    data: XOR<ChecklistPerguntaUpdateManyMutationInput, ChecklistPerguntaUncheckedUpdateManyInput>
    /**
     * Filter which ChecklistPerguntas to update
     */
    where?: ChecklistPerguntaWhereInput
    /**
     * Limit how many ChecklistPerguntas to update.
     */
    limit?: number
  }

  /**
   * ChecklistPergunta upsert
   */
  export type ChecklistPerguntaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPergunta
     */
    select?: ChecklistPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPergunta
     */
    omit?: ChecklistPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaInclude<ExtArgs> | null
    /**
     * The filter to search for the ChecklistPergunta to update in case it exists.
     */
    where: ChecklistPerguntaWhereUniqueInput
    /**
     * In case the ChecklistPergunta found by the `where` argument doesn't exist, create a new ChecklistPergunta with this data.
     */
    create: XOR<ChecklistPerguntaCreateInput, ChecklistPerguntaUncheckedCreateInput>
    /**
     * In case the ChecklistPergunta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChecklistPerguntaUpdateInput, ChecklistPerguntaUncheckedUpdateInput>
  }

  /**
   * ChecklistPergunta delete
   */
  export type ChecklistPerguntaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPergunta
     */
    select?: ChecklistPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPergunta
     */
    omit?: ChecklistPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaInclude<ExtArgs> | null
    /**
     * Filter which ChecklistPergunta to delete.
     */
    where: ChecklistPerguntaWhereUniqueInput
  }

  /**
   * ChecklistPergunta deleteMany
   */
  export type ChecklistPerguntaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistPerguntas to delete
     */
    where?: ChecklistPerguntaWhereInput
    /**
     * Limit how many ChecklistPerguntas to delete.
     */
    limit?: number
  }

  /**
   * ChecklistPergunta.ChecklistPerguntaRelacao
   */
  export type ChecklistPergunta$ChecklistPerguntaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    where?: ChecklistPerguntaRelacaoWhereInput
    orderBy?: ChecklistPerguntaRelacaoOrderByWithRelationInput | ChecklistPerguntaRelacaoOrderByWithRelationInput[]
    cursor?: ChecklistPerguntaRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChecklistPerguntaRelacaoScalarFieldEnum | ChecklistPerguntaRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistPergunta without action
   */
  export type ChecklistPerguntaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPergunta
     */
    select?: ChecklistPerguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPergunta
     */
    omit?: ChecklistPerguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaInclude<ExtArgs> | null
  }


  /**
   * Model ChecklistPerguntaRelacao
   */

  export type AggregateChecklistPerguntaRelacao = {
    _count: ChecklistPerguntaRelacaoCountAggregateOutputType | null
    _avg: ChecklistPerguntaRelacaoAvgAggregateOutputType | null
    _sum: ChecklistPerguntaRelacaoSumAggregateOutputType | null
    _min: ChecklistPerguntaRelacaoMinAggregateOutputType | null
    _max: ChecklistPerguntaRelacaoMaxAggregateOutputType | null
  }

  export type ChecklistPerguntaRelacaoAvgAggregateOutputType = {
    id: number | null
    checklistPerguntaId: number | null
    checklistId: number | null
  }

  export type ChecklistPerguntaRelacaoSumAggregateOutputType = {
    id: number | null
    checklistPerguntaId: number | null
    checklistId: number | null
  }

  export type ChecklistPerguntaRelacaoMinAggregateOutputType = {
    id: number | null
    checklistPerguntaId: number | null
    checklistId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistPerguntaRelacaoMaxAggregateOutputType = {
    id: number | null
    checklistPerguntaId: number | null
    checklistId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistPerguntaRelacaoCountAggregateOutputType = {
    id: number
    checklistPerguntaId: number
    checklistId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type ChecklistPerguntaRelacaoAvgAggregateInputType = {
    id?: true
    checklistPerguntaId?: true
    checklistId?: true
  }

  export type ChecklistPerguntaRelacaoSumAggregateInputType = {
    id?: true
    checklistPerguntaId?: true
    checklistId?: true
  }

  export type ChecklistPerguntaRelacaoMinAggregateInputType = {
    id?: true
    checklistPerguntaId?: true
    checklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistPerguntaRelacaoMaxAggregateInputType = {
    id?: true
    checklistPerguntaId?: true
    checklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistPerguntaRelacaoCountAggregateInputType = {
    id?: true
    checklistPerguntaId?: true
    checklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type ChecklistPerguntaRelacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistPerguntaRelacao to aggregate.
     */
    where?: ChecklistPerguntaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistPerguntaRelacaos to fetch.
     */
    orderBy?: ChecklistPerguntaRelacaoOrderByWithRelationInput | ChecklistPerguntaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChecklistPerguntaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistPerguntaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistPerguntaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChecklistPerguntaRelacaos
    **/
    _count?: true | ChecklistPerguntaRelacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistPerguntaRelacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistPerguntaRelacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistPerguntaRelacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistPerguntaRelacaoMaxAggregateInputType
  }

  export type GetChecklistPerguntaRelacaoAggregateType<T extends ChecklistPerguntaRelacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklistPerguntaRelacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklistPerguntaRelacao[P]>
      : GetScalarType<T[P], AggregateChecklistPerguntaRelacao[P]>
  }




  export type ChecklistPerguntaRelacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistPerguntaRelacaoWhereInput
    orderBy?: ChecklistPerguntaRelacaoOrderByWithAggregationInput | ChecklistPerguntaRelacaoOrderByWithAggregationInput[]
    by: ChecklistPerguntaRelacaoScalarFieldEnum[] | ChecklistPerguntaRelacaoScalarFieldEnum
    having?: ChecklistPerguntaRelacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistPerguntaRelacaoCountAggregateInputType | true
    _avg?: ChecklistPerguntaRelacaoAvgAggregateInputType
    _sum?: ChecklistPerguntaRelacaoSumAggregateInputType
    _min?: ChecklistPerguntaRelacaoMinAggregateInputType
    _max?: ChecklistPerguntaRelacaoMaxAggregateInputType
  }

  export type ChecklistPerguntaRelacaoGroupByOutputType = {
    id: number
    checklistPerguntaId: number
    checklistId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: ChecklistPerguntaRelacaoCountAggregateOutputType | null
    _avg: ChecklistPerguntaRelacaoAvgAggregateOutputType | null
    _sum: ChecklistPerguntaRelacaoSumAggregateOutputType | null
    _min: ChecklistPerguntaRelacaoMinAggregateOutputType | null
    _max: ChecklistPerguntaRelacaoMaxAggregateOutputType | null
  }

  type GetChecklistPerguntaRelacaoGroupByPayload<T extends ChecklistPerguntaRelacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChecklistPerguntaRelacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistPerguntaRelacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistPerguntaRelacaoGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistPerguntaRelacaoGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistPerguntaRelacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    checklistPerguntaId?: boolean
    checklistId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    checklistPergunta?: boolean | ChecklistPerguntaDefaultArgs<ExtArgs>
    checklist?: boolean | ChecklistDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["checklistPerguntaRelacao"]>



  export type ChecklistPerguntaRelacaoSelectScalar = {
    id?: boolean
    checklistPerguntaId?: boolean
    checklistId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type ChecklistPerguntaRelacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "checklistPerguntaId" | "checklistId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["checklistPerguntaRelacao"]>
  export type ChecklistPerguntaRelacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    checklistPergunta?: boolean | ChecklistPerguntaDefaultArgs<ExtArgs>
    checklist?: boolean | ChecklistDefaultArgs<ExtArgs>
  }

  export type $ChecklistPerguntaRelacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChecklistPerguntaRelacao"
    objects: {
      checklistPergunta: Prisma.$ChecklistPerguntaPayload<ExtArgs>
      checklist: Prisma.$ChecklistPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      checklistPerguntaId: number
      checklistId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["checklistPerguntaRelacao"]>
    composites: {}
  }

  type ChecklistPerguntaRelacaoGetPayload<S extends boolean | null | undefined | ChecklistPerguntaRelacaoDefaultArgs> = $Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload, S>

  type ChecklistPerguntaRelacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChecklistPerguntaRelacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChecklistPerguntaRelacaoCountAggregateInputType | true
    }

  export interface ChecklistPerguntaRelacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChecklistPerguntaRelacao'], meta: { name: 'ChecklistPerguntaRelacao' } }
    /**
     * Find zero or one ChecklistPerguntaRelacao that matches the filter.
     * @param {ChecklistPerguntaRelacaoFindUniqueArgs} args - Arguments to find a ChecklistPerguntaRelacao
     * @example
     * // Get one ChecklistPerguntaRelacao
     * const checklistPerguntaRelacao = await prisma.checklistPerguntaRelacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChecklistPerguntaRelacaoFindUniqueArgs>(args: SelectSubset<T, ChecklistPerguntaRelacaoFindUniqueArgs<ExtArgs>>): Prisma__ChecklistPerguntaRelacaoClient<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ChecklistPerguntaRelacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChecklistPerguntaRelacaoFindUniqueOrThrowArgs} args - Arguments to find a ChecklistPerguntaRelacao
     * @example
     * // Get one ChecklistPerguntaRelacao
     * const checklistPerguntaRelacao = await prisma.checklistPerguntaRelacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChecklistPerguntaRelacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, ChecklistPerguntaRelacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChecklistPerguntaRelacaoClient<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistPerguntaRelacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaRelacaoFindFirstArgs} args - Arguments to find a ChecklistPerguntaRelacao
     * @example
     * // Get one ChecklistPerguntaRelacao
     * const checklistPerguntaRelacao = await prisma.checklistPerguntaRelacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChecklistPerguntaRelacaoFindFirstArgs>(args?: SelectSubset<T, ChecklistPerguntaRelacaoFindFirstArgs<ExtArgs>>): Prisma__ChecklistPerguntaRelacaoClient<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistPerguntaRelacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaRelacaoFindFirstOrThrowArgs} args - Arguments to find a ChecklistPerguntaRelacao
     * @example
     * // Get one ChecklistPerguntaRelacao
     * const checklistPerguntaRelacao = await prisma.checklistPerguntaRelacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChecklistPerguntaRelacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, ChecklistPerguntaRelacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChecklistPerguntaRelacaoClient<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ChecklistPerguntaRelacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaRelacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChecklistPerguntaRelacaos
     * const checklistPerguntaRelacaos = await prisma.checklistPerguntaRelacao.findMany()
     * 
     * // Get first 10 ChecklistPerguntaRelacaos
     * const checklistPerguntaRelacaos = await prisma.checklistPerguntaRelacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistPerguntaRelacaoWithIdOnly = await prisma.checklistPerguntaRelacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChecklistPerguntaRelacaoFindManyArgs>(args?: SelectSubset<T, ChecklistPerguntaRelacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ChecklistPerguntaRelacao.
     * @param {ChecklistPerguntaRelacaoCreateArgs} args - Arguments to create a ChecklistPerguntaRelacao.
     * @example
     * // Create one ChecklistPerguntaRelacao
     * const ChecklistPerguntaRelacao = await prisma.checklistPerguntaRelacao.create({
     *   data: {
     *     // ... data to create a ChecklistPerguntaRelacao
     *   }
     * })
     * 
     */
    create<T extends ChecklistPerguntaRelacaoCreateArgs>(args: SelectSubset<T, ChecklistPerguntaRelacaoCreateArgs<ExtArgs>>): Prisma__ChecklistPerguntaRelacaoClient<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ChecklistPerguntaRelacaos.
     * @param {ChecklistPerguntaRelacaoCreateManyArgs} args - Arguments to create many ChecklistPerguntaRelacaos.
     * @example
     * // Create many ChecklistPerguntaRelacaos
     * const checklistPerguntaRelacao = await prisma.checklistPerguntaRelacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChecklistPerguntaRelacaoCreateManyArgs>(args?: SelectSubset<T, ChecklistPerguntaRelacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ChecklistPerguntaRelacao.
     * @param {ChecklistPerguntaRelacaoDeleteArgs} args - Arguments to delete one ChecklistPerguntaRelacao.
     * @example
     * // Delete one ChecklistPerguntaRelacao
     * const ChecklistPerguntaRelacao = await prisma.checklistPerguntaRelacao.delete({
     *   where: {
     *     // ... filter to delete one ChecklistPerguntaRelacao
     *   }
     * })
     * 
     */
    delete<T extends ChecklistPerguntaRelacaoDeleteArgs>(args: SelectSubset<T, ChecklistPerguntaRelacaoDeleteArgs<ExtArgs>>): Prisma__ChecklistPerguntaRelacaoClient<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ChecklistPerguntaRelacao.
     * @param {ChecklistPerguntaRelacaoUpdateArgs} args - Arguments to update one ChecklistPerguntaRelacao.
     * @example
     * // Update one ChecklistPerguntaRelacao
     * const checklistPerguntaRelacao = await prisma.checklistPerguntaRelacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChecklistPerguntaRelacaoUpdateArgs>(args: SelectSubset<T, ChecklistPerguntaRelacaoUpdateArgs<ExtArgs>>): Prisma__ChecklistPerguntaRelacaoClient<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ChecklistPerguntaRelacaos.
     * @param {ChecklistPerguntaRelacaoDeleteManyArgs} args - Arguments to filter ChecklistPerguntaRelacaos to delete.
     * @example
     * // Delete a few ChecklistPerguntaRelacaos
     * const { count } = await prisma.checklistPerguntaRelacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChecklistPerguntaRelacaoDeleteManyArgs>(args?: SelectSubset<T, ChecklistPerguntaRelacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChecklistPerguntaRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaRelacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChecklistPerguntaRelacaos
     * const checklistPerguntaRelacao = await prisma.checklistPerguntaRelacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChecklistPerguntaRelacaoUpdateManyArgs>(args: SelectSubset<T, ChecklistPerguntaRelacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChecklistPerguntaRelacao.
     * @param {ChecklistPerguntaRelacaoUpsertArgs} args - Arguments to update or create a ChecklistPerguntaRelacao.
     * @example
     * // Update or create a ChecklistPerguntaRelacao
     * const checklistPerguntaRelacao = await prisma.checklistPerguntaRelacao.upsert({
     *   create: {
     *     // ... data to create a ChecklistPerguntaRelacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChecklistPerguntaRelacao we want to update
     *   }
     * })
     */
    upsert<T extends ChecklistPerguntaRelacaoUpsertArgs>(args: SelectSubset<T, ChecklistPerguntaRelacaoUpsertArgs<ExtArgs>>): Prisma__ChecklistPerguntaRelacaoClient<$Result.GetResult<Prisma.$ChecklistPerguntaRelacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ChecklistPerguntaRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaRelacaoCountArgs} args - Arguments to filter ChecklistPerguntaRelacaos to count.
     * @example
     * // Count the number of ChecklistPerguntaRelacaos
     * const count = await prisma.checklistPerguntaRelacao.count({
     *   where: {
     *     // ... the filter for the ChecklistPerguntaRelacaos we want to count
     *   }
     * })
    **/
    count<T extends ChecklistPerguntaRelacaoCountArgs>(
      args?: Subset<T, ChecklistPerguntaRelacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistPerguntaRelacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChecklistPerguntaRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaRelacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistPerguntaRelacaoAggregateArgs>(args: Subset<T, ChecklistPerguntaRelacaoAggregateArgs>): Prisma.PrismaPromise<GetChecklistPerguntaRelacaoAggregateType<T>>

    /**
     * Group by ChecklistPerguntaRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistPerguntaRelacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistPerguntaRelacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistPerguntaRelacaoGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistPerguntaRelacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistPerguntaRelacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistPerguntaRelacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChecklistPerguntaRelacao model
   */
  readonly fields: ChecklistPerguntaRelacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChecklistPerguntaRelacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChecklistPerguntaRelacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    checklistPergunta<T extends ChecklistPerguntaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChecklistPerguntaDefaultArgs<ExtArgs>>): Prisma__ChecklistPerguntaClient<$Result.GetResult<Prisma.$ChecklistPerguntaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    checklist<T extends ChecklistDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChecklistDefaultArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChecklistPerguntaRelacao model
   */
  interface ChecklistPerguntaRelacaoFieldRefs {
    readonly id: FieldRef<"ChecklistPerguntaRelacao", 'Int'>
    readonly checklistPerguntaId: FieldRef<"ChecklistPerguntaRelacao", 'Int'>
    readonly checklistId: FieldRef<"ChecklistPerguntaRelacao", 'Int'>
    readonly createdAt: FieldRef<"ChecklistPerguntaRelacao", 'DateTime'>
    readonly createdBy: FieldRef<"ChecklistPerguntaRelacao", 'String'>
    readonly updatedAt: FieldRef<"ChecklistPerguntaRelacao", 'DateTime'>
    readonly updatedBy: FieldRef<"ChecklistPerguntaRelacao", 'String'>
    readonly deletedAt: FieldRef<"ChecklistPerguntaRelacao", 'DateTime'>
    readonly deletedBy: FieldRef<"ChecklistPerguntaRelacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ChecklistPerguntaRelacao findUnique
   */
  export type ChecklistPerguntaRelacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistPerguntaRelacao to fetch.
     */
    where: ChecklistPerguntaRelacaoWhereUniqueInput
  }

  /**
   * ChecklistPerguntaRelacao findUniqueOrThrow
   */
  export type ChecklistPerguntaRelacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistPerguntaRelacao to fetch.
     */
    where: ChecklistPerguntaRelacaoWhereUniqueInput
  }

  /**
   * ChecklistPerguntaRelacao findFirst
   */
  export type ChecklistPerguntaRelacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistPerguntaRelacao to fetch.
     */
    where?: ChecklistPerguntaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistPerguntaRelacaos to fetch.
     */
    orderBy?: ChecklistPerguntaRelacaoOrderByWithRelationInput | ChecklistPerguntaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistPerguntaRelacaos.
     */
    cursor?: ChecklistPerguntaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistPerguntaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistPerguntaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistPerguntaRelacaos.
     */
    distinct?: ChecklistPerguntaRelacaoScalarFieldEnum | ChecklistPerguntaRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistPerguntaRelacao findFirstOrThrow
   */
  export type ChecklistPerguntaRelacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistPerguntaRelacao to fetch.
     */
    where?: ChecklistPerguntaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistPerguntaRelacaos to fetch.
     */
    orderBy?: ChecklistPerguntaRelacaoOrderByWithRelationInput | ChecklistPerguntaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistPerguntaRelacaos.
     */
    cursor?: ChecklistPerguntaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistPerguntaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistPerguntaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistPerguntaRelacaos.
     */
    distinct?: ChecklistPerguntaRelacaoScalarFieldEnum | ChecklistPerguntaRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistPerguntaRelacao findMany
   */
  export type ChecklistPerguntaRelacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistPerguntaRelacaos to fetch.
     */
    where?: ChecklistPerguntaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistPerguntaRelacaos to fetch.
     */
    orderBy?: ChecklistPerguntaRelacaoOrderByWithRelationInput | ChecklistPerguntaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChecklistPerguntaRelacaos.
     */
    cursor?: ChecklistPerguntaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistPerguntaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistPerguntaRelacaos.
     */
    skip?: number
    distinct?: ChecklistPerguntaRelacaoScalarFieldEnum | ChecklistPerguntaRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistPerguntaRelacao create
   */
  export type ChecklistPerguntaRelacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a ChecklistPerguntaRelacao.
     */
    data: XOR<ChecklistPerguntaRelacaoCreateInput, ChecklistPerguntaRelacaoUncheckedCreateInput>
  }

  /**
   * ChecklistPerguntaRelacao createMany
   */
  export type ChecklistPerguntaRelacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChecklistPerguntaRelacaos.
     */
    data: ChecklistPerguntaRelacaoCreateManyInput | ChecklistPerguntaRelacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChecklistPerguntaRelacao update
   */
  export type ChecklistPerguntaRelacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a ChecklistPerguntaRelacao.
     */
    data: XOR<ChecklistPerguntaRelacaoUpdateInput, ChecklistPerguntaRelacaoUncheckedUpdateInput>
    /**
     * Choose, which ChecklistPerguntaRelacao to update.
     */
    where: ChecklistPerguntaRelacaoWhereUniqueInput
  }

  /**
   * ChecklistPerguntaRelacao updateMany
   */
  export type ChecklistPerguntaRelacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChecklistPerguntaRelacaos.
     */
    data: XOR<ChecklistPerguntaRelacaoUpdateManyMutationInput, ChecklistPerguntaRelacaoUncheckedUpdateManyInput>
    /**
     * Filter which ChecklistPerguntaRelacaos to update
     */
    where?: ChecklistPerguntaRelacaoWhereInput
    /**
     * Limit how many ChecklistPerguntaRelacaos to update.
     */
    limit?: number
  }

  /**
   * ChecklistPerguntaRelacao upsert
   */
  export type ChecklistPerguntaRelacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the ChecklistPerguntaRelacao to update in case it exists.
     */
    where: ChecklistPerguntaRelacaoWhereUniqueInput
    /**
     * In case the ChecklistPerguntaRelacao found by the `where` argument doesn't exist, create a new ChecklistPerguntaRelacao with this data.
     */
    create: XOR<ChecklistPerguntaRelacaoCreateInput, ChecklistPerguntaRelacaoUncheckedCreateInput>
    /**
     * In case the ChecklistPerguntaRelacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChecklistPerguntaRelacaoUpdateInput, ChecklistPerguntaRelacaoUncheckedUpdateInput>
  }

  /**
   * ChecklistPerguntaRelacao delete
   */
  export type ChecklistPerguntaRelacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
    /**
     * Filter which ChecklistPerguntaRelacao to delete.
     */
    where: ChecklistPerguntaRelacaoWhereUniqueInput
  }

  /**
   * ChecklistPerguntaRelacao deleteMany
   */
  export type ChecklistPerguntaRelacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistPerguntaRelacaos to delete
     */
    where?: ChecklistPerguntaRelacaoWhereInput
    /**
     * Limit how many ChecklistPerguntaRelacaos to delete.
     */
    limit?: number
  }

  /**
   * ChecklistPerguntaRelacao without action
   */
  export type ChecklistPerguntaRelacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistPerguntaRelacao
     */
    select?: ChecklistPerguntaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistPerguntaRelacao
     */
    omit?: ChecklistPerguntaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistPerguntaRelacaoInclude<ExtArgs> | null
  }


  /**
   * Model ChecklistOpcaoResposta
   */

  export type AggregateChecklistOpcaoResposta = {
    _count: ChecklistOpcaoRespostaCountAggregateOutputType | null
    _avg: ChecklistOpcaoRespostaAvgAggregateOutputType | null
    _sum: ChecklistOpcaoRespostaSumAggregateOutputType | null
    _min: ChecklistOpcaoRespostaMinAggregateOutputType | null
    _max: ChecklistOpcaoRespostaMaxAggregateOutputType | null
  }

  export type ChecklistOpcaoRespostaAvgAggregateOutputType = {
    id: number | null
  }

  export type ChecklistOpcaoRespostaSumAggregateOutputType = {
    id: number | null
  }

  export type ChecklistOpcaoRespostaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    geraPendencia: boolean | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistOpcaoRespostaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    geraPendencia: boolean | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistOpcaoRespostaCountAggregateOutputType = {
    id: number
    nome: number
    geraPendencia: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type ChecklistOpcaoRespostaAvgAggregateInputType = {
    id?: true
  }

  export type ChecklistOpcaoRespostaSumAggregateInputType = {
    id?: true
  }

  export type ChecklistOpcaoRespostaMinAggregateInputType = {
    id?: true
    nome?: true
    geraPendencia?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistOpcaoRespostaMaxAggregateInputType = {
    id?: true
    nome?: true
    geraPendencia?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistOpcaoRespostaCountAggregateInputType = {
    id?: true
    nome?: true
    geraPendencia?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type ChecklistOpcaoRespostaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistOpcaoResposta to aggregate.
     */
    where?: ChecklistOpcaoRespostaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistOpcaoRespostas to fetch.
     */
    orderBy?: ChecklistOpcaoRespostaOrderByWithRelationInput | ChecklistOpcaoRespostaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChecklistOpcaoRespostaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistOpcaoRespostas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistOpcaoRespostas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChecklistOpcaoRespostas
    **/
    _count?: true | ChecklistOpcaoRespostaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistOpcaoRespostaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistOpcaoRespostaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistOpcaoRespostaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistOpcaoRespostaMaxAggregateInputType
  }

  export type GetChecklistOpcaoRespostaAggregateType<T extends ChecklistOpcaoRespostaAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklistOpcaoResposta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklistOpcaoResposta[P]>
      : GetScalarType<T[P], AggregateChecklistOpcaoResposta[P]>
  }




  export type ChecklistOpcaoRespostaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistOpcaoRespostaWhereInput
    orderBy?: ChecklistOpcaoRespostaOrderByWithAggregationInput | ChecklistOpcaoRespostaOrderByWithAggregationInput[]
    by: ChecklistOpcaoRespostaScalarFieldEnum[] | ChecklistOpcaoRespostaScalarFieldEnum
    having?: ChecklistOpcaoRespostaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistOpcaoRespostaCountAggregateInputType | true
    _avg?: ChecklistOpcaoRespostaAvgAggregateInputType
    _sum?: ChecklistOpcaoRespostaSumAggregateInputType
    _min?: ChecklistOpcaoRespostaMinAggregateInputType
    _max?: ChecklistOpcaoRespostaMaxAggregateInputType
  }

  export type ChecklistOpcaoRespostaGroupByOutputType = {
    id: number
    nome: string
    geraPendencia: boolean
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: ChecklistOpcaoRespostaCountAggregateOutputType | null
    _avg: ChecklistOpcaoRespostaAvgAggregateOutputType | null
    _sum: ChecklistOpcaoRespostaSumAggregateOutputType | null
    _min: ChecklistOpcaoRespostaMinAggregateOutputType | null
    _max: ChecklistOpcaoRespostaMaxAggregateOutputType | null
  }

  type GetChecklistOpcaoRespostaGroupByPayload<T extends ChecklistOpcaoRespostaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChecklistOpcaoRespostaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistOpcaoRespostaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistOpcaoRespostaGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistOpcaoRespostaGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistOpcaoRespostaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    geraPendencia?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    checklistOpcaoRespostaRelacao?: boolean | ChecklistOpcaoResposta$checklistOpcaoRespostaRelacaoArgs<ExtArgs>
    _count?: boolean | ChecklistOpcaoRespostaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["checklistOpcaoResposta"]>



  export type ChecklistOpcaoRespostaSelectScalar = {
    id?: boolean
    nome?: boolean
    geraPendencia?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type ChecklistOpcaoRespostaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "geraPendencia" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["checklistOpcaoResposta"]>
  export type ChecklistOpcaoRespostaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    checklistOpcaoRespostaRelacao?: boolean | ChecklistOpcaoResposta$checklistOpcaoRespostaRelacaoArgs<ExtArgs>
    _count?: boolean | ChecklistOpcaoRespostaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ChecklistOpcaoRespostaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChecklistOpcaoResposta"
    objects: {
      checklistOpcaoRespostaRelacao: Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      geraPendencia: boolean
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["checklistOpcaoResposta"]>
    composites: {}
  }

  type ChecklistOpcaoRespostaGetPayload<S extends boolean | null | undefined | ChecklistOpcaoRespostaDefaultArgs> = $Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload, S>

  type ChecklistOpcaoRespostaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChecklistOpcaoRespostaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChecklistOpcaoRespostaCountAggregateInputType | true
    }

  export interface ChecklistOpcaoRespostaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChecklistOpcaoResposta'], meta: { name: 'ChecklistOpcaoResposta' } }
    /**
     * Find zero or one ChecklistOpcaoResposta that matches the filter.
     * @param {ChecklistOpcaoRespostaFindUniqueArgs} args - Arguments to find a ChecklistOpcaoResposta
     * @example
     * // Get one ChecklistOpcaoResposta
     * const checklistOpcaoResposta = await prisma.checklistOpcaoResposta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChecklistOpcaoRespostaFindUniqueArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaFindUniqueArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ChecklistOpcaoResposta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChecklistOpcaoRespostaFindUniqueOrThrowArgs} args - Arguments to find a ChecklistOpcaoResposta
     * @example
     * // Get one ChecklistOpcaoResposta
     * const checklistOpcaoResposta = await prisma.checklistOpcaoResposta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChecklistOpcaoRespostaFindUniqueOrThrowArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistOpcaoResposta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaFindFirstArgs} args - Arguments to find a ChecklistOpcaoResposta
     * @example
     * // Get one ChecklistOpcaoResposta
     * const checklistOpcaoResposta = await prisma.checklistOpcaoResposta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChecklistOpcaoRespostaFindFirstArgs>(args?: SelectSubset<T, ChecklistOpcaoRespostaFindFirstArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistOpcaoResposta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaFindFirstOrThrowArgs} args - Arguments to find a ChecklistOpcaoResposta
     * @example
     * // Get one ChecklistOpcaoResposta
     * const checklistOpcaoResposta = await prisma.checklistOpcaoResposta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChecklistOpcaoRespostaFindFirstOrThrowArgs>(args?: SelectSubset<T, ChecklistOpcaoRespostaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ChecklistOpcaoRespostas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChecklistOpcaoRespostas
     * const checklistOpcaoRespostas = await prisma.checklistOpcaoResposta.findMany()
     * 
     * // Get first 10 ChecklistOpcaoRespostas
     * const checklistOpcaoRespostas = await prisma.checklistOpcaoResposta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistOpcaoRespostaWithIdOnly = await prisma.checklistOpcaoResposta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChecklistOpcaoRespostaFindManyArgs>(args?: SelectSubset<T, ChecklistOpcaoRespostaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ChecklistOpcaoResposta.
     * @param {ChecklistOpcaoRespostaCreateArgs} args - Arguments to create a ChecklistOpcaoResposta.
     * @example
     * // Create one ChecklistOpcaoResposta
     * const ChecklistOpcaoResposta = await prisma.checklistOpcaoResposta.create({
     *   data: {
     *     // ... data to create a ChecklistOpcaoResposta
     *   }
     * })
     * 
     */
    create<T extends ChecklistOpcaoRespostaCreateArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaCreateArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ChecklistOpcaoRespostas.
     * @param {ChecklistOpcaoRespostaCreateManyArgs} args - Arguments to create many ChecklistOpcaoRespostas.
     * @example
     * // Create many ChecklistOpcaoRespostas
     * const checklistOpcaoResposta = await prisma.checklistOpcaoResposta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChecklistOpcaoRespostaCreateManyArgs>(args?: SelectSubset<T, ChecklistOpcaoRespostaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ChecklistOpcaoResposta.
     * @param {ChecklistOpcaoRespostaDeleteArgs} args - Arguments to delete one ChecklistOpcaoResposta.
     * @example
     * // Delete one ChecklistOpcaoResposta
     * const ChecklistOpcaoResposta = await prisma.checklistOpcaoResposta.delete({
     *   where: {
     *     // ... filter to delete one ChecklistOpcaoResposta
     *   }
     * })
     * 
     */
    delete<T extends ChecklistOpcaoRespostaDeleteArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaDeleteArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ChecklistOpcaoResposta.
     * @param {ChecklistOpcaoRespostaUpdateArgs} args - Arguments to update one ChecklistOpcaoResposta.
     * @example
     * // Update one ChecklistOpcaoResposta
     * const checklistOpcaoResposta = await prisma.checklistOpcaoResposta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChecklistOpcaoRespostaUpdateArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaUpdateArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ChecklistOpcaoRespostas.
     * @param {ChecklistOpcaoRespostaDeleteManyArgs} args - Arguments to filter ChecklistOpcaoRespostas to delete.
     * @example
     * // Delete a few ChecklistOpcaoRespostas
     * const { count } = await prisma.checklistOpcaoResposta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChecklistOpcaoRespostaDeleteManyArgs>(args?: SelectSubset<T, ChecklistOpcaoRespostaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChecklistOpcaoRespostas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChecklistOpcaoRespostas
     * const checklistOpcaoResposta = await prisma.checklistOpcaoResposta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChecklistOpcaoRespostaUpdateManyArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChecklistOpcaoResposta.
     * @param {ChecklistOpcaoRespostaUpsertArgs} args - Arguments to update or create a ChecklistOpcaoResposta.
     * @example
     * // Update or create a ChecklistOpcaoResposta
     * const checklistOpcaoResposta = await prisma.checklistOpcaoResposta.upsert({
     *   create: {
     *     // ... data to create a ChecklistOpcaoResposta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChecklistOpcaoResposta we want to update
     *   }
     * })
     */
    upsert<T extends ChecklistOpcaoRespostaUpsertArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaUpsertArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ChecklistOpcaoRespostas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaCountArgs} args - Arguments to filter ChecklistOpcaoRespostas to count.
     * @example
     * // Count the number of ChecklistOpcaoRespostas
     * const count = await prisma.checklistOpcaoResposta.count({
     *   where: {
     *     // ... the filter for the ChecklistOpcaoRespostas we want to count
     *   }
     * })
    **/
    count<T extends ChecklistOpcaoRespostaCountArgs>(
      args?: Subset<T, ChecklistOpcaoRespostaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistOpcaoRespostaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChecklistOpcaoResposta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistOpcaoRespostaAggregateArgs>(args: Subset<T, ChecklistOpcaoRespostaAggregateArgs>): Prisma.PrismaPromise<GetChecklistOpcaoRespostaAggregateType<T>>

    /**
     * Group by ChecklistOpcaoResposta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistOpcaoRespostaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistOpcaoRespostaGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistOpcaoRespostaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistOpcaoRespostaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistOpcaoRespostaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChecklistOpcaoResposta model
   */
  readonly fields: ChecklistOpcaoRespostaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChecklistOpcaoResposta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChecklistOpcaoRespostaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    checklistOpcaoRespostaRelacao<T extends ChecklistOpcaoResposta$checklistOpcaoRespostaRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, ChecklistOpcaoResposta$checklistOpcaoRespostaRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChecklistOpcaoResposta model
   */
  interface ChecklistOpcaoRespostaFieldRefs {
    readonly id: FieldRef<"ChecklistOpcaoResposta", 'Int'>
    readonly nome: FieldRef<"ChecklistOpcaoResposta", 'String'>
    readonly geraPendencia: FieldRef<"ChecklistOpcaoResposta", 'Boolean'>
    readonly createdAt: FieldRef<"ChecklistOpcaoResposta", 'DateTime'>
    readonly createdBy: FieldRef<"ChecklistOpcaoResposta", 'String'>
    readonly updatedAt: FieldRef<"ChecklistOpcaoResposta", 'DateTime'>
    readonly updatedBy: FieldRef<"ChecklistOpcaoResposta", 'String'>
    readonly deletedAt: FieldRef<"ChecklistOpcaoResposta", 'DateTime'>
    readonly deletedBy: FieldRef<"ChecklistOpcaoResposta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ChecklistOpcaoResposta findUnique
   */
  export type ChecklistOpcaoRespostaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoResposta
     */
    select?: ChecklistOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoResposta
     */
    omit?: ChecklistOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistOpcaoResposta to fetch.
     */
    where: ChecklistOpcaoRespostaWhereUniqueInput
  }

  /**
   * ChecklistOpcaoResposta findUniqueOrThrow
   */
  export type ChecklistOpcaoRespostaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoResposta
     */
    select?: ChecklistOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoResposta
     */
    omit?: ChecklistOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistOpcaoResposta to fetch.
     */
    where: ChecklistOpcaoRespostaWhereUniqueInput
  }

  /**
   * ChecklistOpcaoResposta findFirst
   */
  export type ChecklistOpcaoRespostaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoResposta
     */
    select?: ChecklistOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoResposta
     */
    omit?: ChecklistOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistOpcaoResposta to fetch.
     */
    where?: ChecklistOpcaoRespostaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistOpcaoRespostas to fetch.
     */
    orderBy?: ChecklistOpcaoRespostaOrderByWithRelationInput | ChecklistOpcaoRespostaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistOpcaoRespostas.
     */
    cursor?: ChecklistOpcaoRespostaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistOpcaoRespostas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistOpcaoRespostas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistOpcaoRespostas.
     */
    distinct?: ChecklistOpcaoRespostaScalarFieldEnum | ChecklistOpcaoRespostaScalarFieldEnum[]
  }

  /**
   * ChecklistOpcaoResposta findFirstOrThrow
   */
  export type ChecklistOpcaoRespostaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoResposta
     */
    select?: ChecklistOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoResposta
     */
    omit?: ChecklistOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistOpcaoResposta to fetch.
     */
    where?: ChecklistOpcaoRespostaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistOpcaoRespostas to fetch.
     */
    orderBy?: ChecklistOpcaoRespostaOrderByWithRelationInput | ChecklistOpcaoRespostaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistOpcaoRespostas.
     */
    cursor?: ChecklistOpcaoRespostaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistOpcaoRespostas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistOpcaoRespostas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistOpcaoRespostas.
     */
    distinct?: ChecklistOpcaoRespostaScalarFieldEnum | ChecklistOpcaoRespostaScalarFieldEnum[]
  }

  /**
   * ChecklistOpcaoResposta findMany
   */
  export type ChecklistOpcaoRespostaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoResposta
     */
    select?: ChecklistOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoResposta
     */
    omit?: ChecklistOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistOpcaoRespostas to fetch.
     */
    where?: ChecklistOpcaoRespostaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistOpcaoRespostas to fetch.
     */
    orderBy?: ChecklistOpcaoRespostaOrderByWithRelationInput | ChecklistOpcaoRespostaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChecklistOpcaoRespostas.
     */
    cursor?: ChecklistOpcaoRespostaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistOpcaoRespostas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistOpcaoRespostas.
     */
    skip?: number
    distinct?: ChecklistOpcaoRespostaScalarFieldEnum | ChecklistOpcaoRespostaScalarFieldEnum[]
  }

  /**
   * ChecklistOpcaoResposta create
   */
  export type ChecklistOpcaoRespostaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoResposta
     */
    select?: ChecklistOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoResposta
     */
    omit?: ChecklistOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaInclude<ExtArgs> | null
    /**
     * The data needed to create a ChecklistOpcaoResposta.
     */
    data: XOR<ChecklistOpcaoRespostaCreateInput, ChecklistOpcaoRespostaUncheckedCreateInput>
  }

  /**
   * ChecklistOpcaoResposta createMany
   */
  export type ChecklistOpcaoRespostaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChecklistOpcaoRespostas.
     */
    data: ChecklistOpcaoRespostaCreateManyInput | ChecklistOpcaoRespostaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChecklistOpcaoResposta update
   */
  export type ChecklistOpcaoRespostaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoResposta
     */
    select?: ChecklistOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoResposta
     */
    omit?: ChecklistOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaInclude<ExtArgs> | null
    /**
     * The data needed to update a ChecklistOpcaoResposta.
     */
    data: XOR<ChecklistOpcaoRespostaUpdateInput, ChecklistOpcaoRespostaUncheckedUpdateInput>
    /**
     * Choose, which ChecklistOpcaoResposta to update.
     */
    where: ChecklistOpcaoRespostaWhereUniqueInput
  }

  /**
   * ChecklistOpcaoResposta updateMany
   */
  export type ChecklistOpcaoRespostaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChecklistOpcaoRespostas.
     */
    data: XOR<ChecklistOpcaoRespostaUpdateManyMutationInput, ChecklistOpcaoRespostaUncheckedUpdateManyInput>
    /**
     * Filter which ChecklistOpcaoRespostas to update
     */
    where?: ChecklistOpcaoRespostaWhereInput
    /**
     * Limit how many ChecklistOpcaoRespostas to update.
     */
    limit?: number
  }

  /**
   * ChecklistOpcaoResposta upsert
   */
  export type ChecklistOpcaoRespostaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoResposta
     */
    select?: ChecklistOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoResposta
     */
    omit?: ChecklistOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaInclude<ExtArgs> | null
    /**
     * The filter to search for the ChecklistOpcaoResposta to update in case it exists.
     */
    where: ChecklistOpcaoRespostaWhereUniqueInput
    /**
     * In case the ChecklistOpcaoResposta found by the `where` argument doesn't exist, create a new ChecklistOpcaoResposta with this data.
     */
    create: XOR<ChecklistOpcaoRespostaCreateInput, ChecklistOpcaoRespostaUncheckedCreateInput>
    /**
     * In case the ChecklistOpcaoResposta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChecklistOpcaoRespostaUpdateInput, ChecklistOpcaoRespostaUncheckedUpdateInput>
  }

  /**
   * ChecklistOpcaoResposta delete
   */
  export type ChecklistOpcaoRespostaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoResposta
     */
    select?: ChecklistOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoResposta
     */
    omit?: ChecklistOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaInclude<ExtArgs> | null
    /**
     * Filter which ChecklistOpcaoResposta to delete.
     */
    where: ChecklistOpcaoRespostaWhereUniqueInput
  }

  /**
   * ChecklistOpcaoResposta deleteMany
   */
  export type ChecklistOpcaoRespostaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistOpcaoRespostas to delete
     */
    where?: ChecklistOpcaoRespostaWhereInput
    /**
     * Limit how many ChecklistOpcaoRespostas to delete.
     */
    limit?: number
  }

  /**
   * ChecklistOpcaoResposta.checklistOpcaoRespostaRelacao
   */
  export type ChecklistOpcaoResposta$checklistOpcaoRespostaRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
    orderBy?: ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput | ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput[]
    cursor?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChecklistOpcaoRespostaRelacaoScalarFieldEnum | ChecklistOpcaoRespostaRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistOpcaoResposta without action
   */
  export type ChecklistOpcaoRespostaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoResposta
     */
    select?: ChecklistOpcaoRespostaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoResposta
     */
    omit?: ChecklistOpcaoRespostaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaInclude<ExtArgs> | null
  }


  /**
   * Model ChecklistOpcaoRespostaRelacao
   */

  export type AggregateChecklistOpcaoRespostaRelacao = {
    _count: ChecklistOpcaoRespostaRelacaoCountAggregateOutputType | null
    _avg: ChecklistOpcaoRespostaRelacaoAvgAggregateOutputType | null
    _sum: ChecklistOpcaoRespostaRelacaoSumAggregateOutputType | null
    _min: ChecklistOpcaoRespostaRelacaoMinAggregateOutputType | null
    _max: ChecklistOpcaoRespostaRelacaoMaxAggregateOutputType | null
  }

  export type ChecklistOpcaoRespostaRelacaoAvgAggregateOutputType = {
    id: number | null
    checklistOpcaoRespostaId: number | null
    checklistId: number | null
  }

  export type ChecklistOpcaoRespostaRelacaoSumAggregateOutputType = {
    id: number | null
    checklistOpcaoRespostaId: number | null
    checklistId: number | null
  }

  export type ChecklistOpcaoRespostaRelacaoMinAggregateOutputType = {
    id: number | null
    checklistOpcaoRespostaId: number | null
    checklistId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistOpcaoRespostaRelacaoMaxAggregateOutputType = {
    id: number | null
    checklistOpcaoRespostaId: number | null
    checklistId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistOpcaoRespostaRelacaoCountAggregateOutputType = {
    id: number
    checklistOpcaoRespostaId: number
    checklistId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type ChecklistOpcaoRespostaRelacaoAvgAggregateInputType = {
    id?: true
    checklistOpcaoRespostaId?: true
    checklistId?: true
  }

  export type ChecklistOpcaoRespostaRelacaoSumAggregateInputType = {
    id?: true
    checklistOpcaoRespostaId?: true
    checklistId?: true
  }

  export type ChecklistOpcaoRespostaRelacaoMinAggregateInputType = {
    id?: true
    checklistOpcaoRespostaId?: true
    checklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistOpcaoRespostaRelacaoMaxAggregateInputType = {
    id?: true
    checklistOpcaoRespostaId?: true
    checklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistOpcaoRespostaRelacaoCountAggregateInputType = {
    id?: true
    checklistOpcaoRespostaId?: true
    checklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type ChecklistOpcaoRespostaRelacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistOpcaoRespostaRelacao to aggregate.
     */
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistOpcaoRespostaRelacaos to fetch.
     */
    orderBy?: ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput | ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistOpcaoRespostaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistOpcaoRespostaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChecklistOpcaoRespostaRelacaos
    **/
    _count?: true | ChecklistOpcaoRespostaRelacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistOpcaoRespostaRelacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistOpcaoRespostaRelacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistOpcaoRespostaRelacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistOpcaoRespostaRelacaoMaxAggregateInputType
  }

  export type GetChecklistOpcaoRespostaRelacaoAggregateType<T extends ChecklistOpcaoRespostaRelacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklistOpcaoRespostaRelacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklistOpcaoRespostaRelacao[P]>
      : GetScalarType<T[P], AggregateChecklistOpcaoRespostaRelacao[P]>
  }




  export type ChecklistOpcaoRespostaRelacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
    orderBy?: ChecklistOpcaoRespostaRelacaoOrderByWithAggregationInput | ChecklistOpcaoRespostaRelacaoOrderByWithAggregationInput[]
    by: ChecklistOpcaoRespostaRelacaoScalarFieldEnum[] | ChecklistOpcaoRespostaRelacaoScalarFieldEnum
    having?: ChecklistOpcaoRespostaRelacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistOpcaoRespostaRelacaoCountAggregateInputType | true
    _avg?: ChecklistOpcaoRespostaRelacaoAvgAggregateInputType
    _sum?: ChecklistOpcaoRespostaRelacaoSumAggregateInputType
    _min?: ChecklistOpcaoRespostaRelacaoMinAggregateInputType
    _max?: ChecklistOpcaoRespostaRelacaoMaxAggregateInputType
  }

  export type ChecklistOpcaoRespostaRelacaoGroupByOutputType = {
    id: number
    checklistOpcaoRespostaId: number
    checklistId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: ChecklistOpcaoRespostaRelacaoCountAggregateOutputType | null
    _avg: ChecklistOpcaoRespostaRelacaoAvgAggregateOutputType | null
    _sum: ChecklistOpcaoRespostaRelacaoSumAggregateOutputType | null
    _min: ChecklistOpcaoRespostaRelacaoMinAggregateOutputType | null
    _max: ChecklistOpcaoRespostaRelacaoMaxAggregateOutputType | null
  }

  type GetChecklistOpcaoRespostaRelacaoGroupByPayload<T extends ChecklistOpcaoRespostaRelacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChecklistOpcaoRespostaRelacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistOpcaoRespostaRelacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistOpcaoRespostaRelacaoGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistOpcaoRespostaRelacaoGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistOpcaoRespostaRelacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    checklistOpcaoRespostaId?: boolean
    checklistId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    checklistOpcaoResposta?: boolean | ChecklistOpcaoRespostaDefaultArgs<ExtArgs>
    checklist?: boolean | ChecklistDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["checklistOpcaoRespostaRelacao"]>



  export type ChecklistOpcaoRespostaRelacaoSelectScalar = {
    id?: boolean
    checklistOpcaoRespostaId?: boolean
    checklistId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type ChecklistOpcaoRespostaRelacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "checklistOpcaoRespostaId" | "checklistId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["checklistOpcaoRespostaRelacao"]>
  export type ChecklistOpcaoRespostaRelacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    checklistOpcaoResposta?: boolean | ChecklistOpcaoRespostaDefaultArgs<ExtArgs>
    checklist?: boolean | ChecklistDefaultArgs<ExtArgs>
  }

  export type $ChecklistOpcaoRespostaRelacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChecklistOpcaoRespostaRelacao"
    objects: {
      checklistOpcaoResposta: Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>
      checklist: Prisma.$ChecklistPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      checklistOpcaoRespostaId: number
      checklistId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["checklistOpcaoRespostaRelacao"]>
    composites: {}
  }

  type ChecklistOpcaoRespostaRelacaoGetPayload<S extends boolean | null | undefined | ChecklistOpcaoRespostaRelacaoDefaultArgs> = $Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload, S>

  type ChecklistOpcaoRespostaRelacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChecklistOpcaoRespostaRelacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChecklistOpcaoRespostaRelacaoCountAggregateInputType | true
    }

  export interface ChecklistOpcaoRespostaRelacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChecklistOpcaoRespostaRelacao'], meta: { name: 'ChecklistOpcaoRespostaRelacao' } }
    /**
     * Find zero or one ChecklistOpcaoRespostaRelacao that matches the filter.
     * @param {ChecklistOpcaoRespostaRelacaoFindUniqueArgs} args - Arguments to find a ChecklistOpcaoRespostaRelacao
     * @example
     * // Get one ChecklistOpcaoRespostaRelacao
     * const checklistOpcaoRespostaRelacao = await prisma.checklistOpcaoRespostaRelacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChecklistOpcaoRespostaRelacaoFindUniqueArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaRelacaoFindUniqueArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ChecklistOpcaoRespostaRelacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChecklistOpcaoRespostaRelacaoFindUniqueOrThrowArgs} args - Arguments to find a ChecklistOpcaoRespostaRelacao
     * @example
     * // Get one ChecklistOpcaoRespostaRelacao
     * const checklistOpcaoRespostaRelacao = await prisma.checklistOpcaoRespostaRelacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChecklistOpcaoRespostaRelacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaRelacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistOpcaoRespostaRelacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaRelacaoFindFirstArgs} args - Arguments to find a ChecklistOpcaoRespostaRelacao
     * @example
     * // Get one ChecklistOpcaoRespostaRelacao
     * const checklistOpcaoRespostaRelacao = await prisma.checklistOpcaoRespostaRelacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChecklistOpcaoRespostaRelacaoFindFirstArgs>(args?: SelectSubset<T, ChecklistOpcaoRespostaRelacaoFindFirstArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistOpcaoRespostaRelacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaRelacaoFindFirstOrThrowArgs} args - Arguments to find a ChecklistOpcaoRespostaRelacao
     * @example
     * // Get one ChecklistOpcaoRespostaRelacao
     * const checklistOpcaoRespostaRelacao = await prisma.checklistOpcaoRespostaRelacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChecklistOpcaoRespostaRelacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, ChecklistOpcaoRespostaRelacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ChecklistOpcaoRespostaRelacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaRelacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChecklistOpcaoRespostaRelacaos
     * const checklistOpcaoRespostaRelacaos = await prisma.checklistOpcaoRespostaRelacao.findMany()
     * 
     * // Get first 10 ChecklistOpcaoRespostaRelacaos
     * const checklistOpcaoRespostaRelacaos = await prisma.checklistOpcaoRespostaRelacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistOpcaoRespostaRelacaoWithIdOnly = await prisma.checklistOpcaoRespostaRelacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChecklistOpcaoRespostaRelacaoFindManyArgs>(args?: SelectSubset<T, ChecklistOpcaoRespostaRelacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ChecklistOpcaoRespostaRelacao.
     * @param {ChecklistOpcaoRespostaRelacaoCreateArgs} args - Arguments to create a ChecklistOpcaoRespostaRelacao.
     * @example
     * // Create one ChecklistOpcaoRespostaRelacao
     * const ChecklistOpcaoRespostaRelacao = await prisma.checklistOpcaoRespostaRelacao.create({
     *   data: {
     *     // ... data to create a ChecklistOpcaoRespostaRelacao
     *   }
     * })
     * 
     */
    create<T extends ChecklistOpcaoRespostaRelacaoCreateArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaRelacaoCreateArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ChecklistOpcaoRespostaRelacaos.
     * @param {ChecklistOpcaoRespostaRelacaoCreateManyArgs} args - Arguments to create many ChecklistOpcaoRespostaRelacaos.
     * @example
     * // Create many ChecklistOpcaoRespostaRelacaos
     * const checklistOpcaoRespostaRelacao = await prisma.checklistOpcaoRespostaRelacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChecklistOpcaoRespostaRelacaoCreateManyArgs>(args?: SelectSubset<T, ChecklistOpcaoRespostaRelacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ChecklistOpcaoRespostaRelacao.
     * @param {ChecklistOpcaoRespostaRelacaoDeleteArgs} args - Arguments to delete one ChecklistOpcaoRespostaRelacao.
     * @example
     * // Delete one ChecklistOpcaoRespostaRelacao
     * const ChecklistOpcaoRespostaRelacao = await prisma.checklistOpcaoRespostaRelacao.delete({
     *   where: {
     *     // ... filter to delete one ChecklistOpcaoRespostaRelacao
     *   }
     * })
     * 
     */
    delete<T extends ChecklistOpcaoRespostaRelacaoDeleteArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaRelacaoDeleteArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ChecklistOpcaoRespostaRelacao.
     * @param {ChecklistOpcaoRespostaRelacaoUpdateArgs} args - Arguments to update one ChecklistOpcaoRespostaRelacao.
     * @example
     * // Update one ChecklistOpcaoRespostaRelacao
     * const checklistOpcaoRespostaRelacao = await prisma.checklistOpcaoRespostaRelacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChecklistOpcaoRespostaRelacaoUpdateArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaRelacaoUpdateArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ChecklistOpcaoRespostaRelacaos.
     * @param {ChecklistOpcaoRespostaRelacaoDeleteManyArgs} args - Arguments to filter ChecklistOpcaoRespostaRelacaos to delete.
     * @example
     * // Delete a few ChecklistOpcaoRespostaRelacaos
     * const { count } = await prisma.checklistOpcaoRespostaRelacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChecklistOpcaoRespostaRelacaoDeleteManyArgs>(args?: SelectSubset<T, ChecklistOpcaoRespostaRelacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChecklistOpcaoRespostaRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaRelacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChecklistOpcaoRespostaRelacaos
     * const checklistOpcaoRespostaRelacao = await prisma.checklistOpcaoRespostaRelacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChecklistOpcaoRespostaRelacaoUpdateManyArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaRelacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChecklistOpcaoRespostaRelacao.
     * @param {ChecklistOpcaoRespostaRelacaoUpsertArgs} args - Arguments to update or create a ChecklistOpcaoRespostaRelacao.
     * @example
     * // Update or create a ChecklistOpcaoRespostaRelacao
     * const checklistOpcaoRespostaRelacao = await prisma.checklistOpcaoRespostaRelacao.upsert({
     *   create: {
     *     // ... data to create a ChecklistOpcaoRespostaRelacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChecklistOpcaoRespostaRelacao we want to update
     *   }
     * })
     */
    upsert<T extends ChecklistOpcaoRespostaRelacaoUpsertArgs>(args: SelectSubset<T, ChecklistOpcaoRespostaRelacaoUpsertArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaRelacaoClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaRelacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ChecklistOpcaoRespostaRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaRelacaoCountArgs} args - Arguments to filter ChecklistOpcaoRespostaRelacaos to count.
     * @example
     * // Count the number of ChecklistOpcaoRespostaRelacaos
     * const count = await prisma.checklistOpcaoRespostaRelacao.count({
     *   where: {
     *     // ... the filter for the ChecklistOpcaoRespostaRelacaos we want to count
     *   }
     * })
    **/
    count<T extends ChecklistOpcaoRespostaRelacaoCountArgs>(
      args?: Subset<T, ChecklistOpcaoRespostaRelacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistOpcaoRespostaRelacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChecklistOpcaoRespostaRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaRelacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistOpcaoRespostaRelacaoAggregateArgs>(args: Subset<T, ChecklistOpcaoRespostaRelacaoAggregateArgs>): Prisma.PrismaPromise<GetChecklistOpcaoRespostaRelacaoAggregateType<T>>

    /**
     * Group by ChecklistOpcaoRespostaRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistOpcaoRespostaRelacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistOpcaoRespostaRelacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistOpcaoRespostaRelacaoGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistOpcaoRespostaRelacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistOpcaoRespostaRelacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistOpcaoRespostaRelacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChecklistOpcaoRespostaRelacao model
   */
  readonly fields: ChecklistOpcaoRespostaRelacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChecklistOpcaoRespostaRelacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChecklistOpcaoRespostaRelacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    checklistOpcaoResposta<T extends ChecklistOpcaoRespostaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChecklistOpcaoRespostaDefaultArgs<ExtArgs>>): Prisma__ChecklistOpcaoRespostaClient<$Result.GetResult<Prisma.$ChecklistOpcaoRespostaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    checklist<T extends ChecklistDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChecklistDefaultArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChecklistOpcaoRespostaRelacao model
   */
  interface ChecklistOpcaoRespostaRelacaoFieldRefs {
    readonly id: FieldRef<"ChecklistOpcaoRespostaRelacao", 'Int'>
    readonly checklistOpcaoRespostaId: FieldRef<"ChecklistOpcaoRespostaRelacao", 'Int'>
    readonly checklistId: FieldRef<"ChecklistOpcaoRespostaRelacao", 'Int'>
    readonly createdAt: FieldRef<"ChecklistOpcaoRespostaRelacao", 'DateTime'>
    readonly createdBy: FieldRef<"ChecklistOpcaoRespostaRelacao", 'String'>
    readonly updatedAt: FieldRef<"ChecklistOpcaoRespostaRelacao", 'DateTime'>
    readonly updatedBy: FieldRef<"ChecklistOpcaoRespostaRelacao", 'String'>
    readonly deletedAt: FieldRef<"ChecklistOpcaoRespostaRelacao", 'DateTime'>
    readonly deletedBy: FieldRef<"ChecklistOpcaoRespostaRelacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ChecklistOpcaoRespostaRelacao findUnique
   */
  export type ChecklistOpcaoRespostaRelacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistOpcaoRespostaRelacao to fetch.
     */
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
  }

  /**
   * ChecklistOpcaoRespostaRelacao findUniqueOrThrow
   */
  export type ChecklistOpcaoRespostaRelacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistOpcaoRespostaRelacao to fetch.
     */
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
  }

  /**
   * ChecklistOpcaoRespostaRelacao findFirst
   */
  export type ChecklistOpcaoRespostaRelacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistOpcaoRespostaRelacao to fetch.
     */
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistOpcaoRespostaRelacaos to fetch.
     */
    orderBy?: ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput | ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistOpcaoRespostaRelacaos.
     */
    cursor?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistOpcaoRespostaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistOpcaoRespostaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistOpcaoRespostaRelacaos.
     */
    distinct?: ChecklistOpcaoRespostaRelacaoScalarFieldEnum | ChecklistOpcaoRespostaRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistOpcaoRespostaRelacao findFirstOrThrow
   */
  export type ChecklistOpcaoRespostaRelacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistOpcaoRespostaRelacao to fetch.
     */
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistOpcaoRespostaRelacaos to fetch.
     */
    orderBy?: ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput | ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistOpcaoRespostaRelacaos.
     */
    cursor?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistOpcaoRespostaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistOpcaoRespostaRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistOpcaoRespostaRelacaos.
     */
    distinct?: ChecklistOpcaoRespostaRelacaoScalarFieldEnum | ChecklistOpcaoRespostaRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistOpcaoRespostaRelacao findMany
   */
  export type ChecklistOpcaoRespostaRelacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistOpcaoRespostaRelacaos to fetch.
     */
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistOpcaoRespostaRelacaos to fetch.
     */
    orderBy?: ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput | ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChecklistOpcaoRespostaRelacaos.
     */
    cursor?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistOpcaoRespostaRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistOpcaoRespostaRelacaos.
     */
    skip?: number
    distinct?: ChecklistOpcaoRespostaRelacaoScalarFieldEnum | ChecklistOpcaoRespostaRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistOpcaoRespostaRelacao create
   */
  export type ChecklistOpcaoRespostaRelacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a ChecklistOpcaoRespostaRelacao.
     */
    data: XOR<ChecklistOpcaoRespostaRelacaoCreateInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateInput>
  }

  /**
   * ChecklistOpcaoRespostaRelacao createMany
   */
  export type ChecklistOpcaoRespostaRelacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChecklistOpcaoRespostaRelacaos.
     */
    data: ChecklistOpcaoRespostaRelacaoCreateManyInput | ChecklistOpcaoRespostaRelacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChecklistOpcaoRespostaRelacao update
   */
  export type ChecklistOpcaoRespostaRelacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a ChecklistOpcaoRespostaRelacao.
     */
    data: XOR<ChecklistOpcaoRespostaRelacaoUpdateInput, ChecklistOpcaoRespostaRelacaoUncheckedUpdateInput>
    /**
     * Choose, which ChecklistOpcaoRespostaRelacao to update.
     */
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
  }

  /**
   * ChecklistOpcaoRespostaRelacao updateMany
   */
  export type ChecklistOpcaoRespostaRelacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChecklistOpcaoRespostaRelacaos.
     */
    data: XOR<ChecklistOpcaoRespostaRelacaoUpdateManyMutationInput, ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyInput>
    /**
     * Filter which ChecklistOpcaoRespostaRelacaos to update
     */
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
    /**
     * Limit how many ChecklistOpcaoRespostaRelacaos to update.
     */
    limit?: number
  }

  /**
   * ChecklistOpcaoRespostaRelacao upsert
   */
  export type ChecklistOpcaoRespostaRelacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the ChecklistOpcaoRespostaRelacao to update in case it exists.
     */
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    /**
     * In case the ChecklistOpcaoRespostaRelacao found by the `where` argument doesn't exist, create a new ChecklistOpcaoRespostaRelacao with this data.
     */
    create: XOR<ChecklistOpcaoRespostaRelacaoCreateInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateInput>
    /**
     * In case the ChecklistOpcaoRespostaRelacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChecklistOpcaoRespostaRelacaoUpdateInput, ChecklistOpcaoRespostaRelacaoUncheckedUpdateInput>
  }

  /**
   * ChecklistOpcaoRespostaRelacao delete
   */
  export type ChecklistOpcaoRespostaRelacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
    /**
     * Filter which ChecklistOpcaoRespostaRelacao to delete.
     */
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
  }

  /**
   * ChecklistOpcaoRespostaRelacao deleteMany
   */
  export type ChecklistOpcaoRespostaRelacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistOpcaoRespostaRelacaos to delete
     */
    where?: ChecklistOpcaoRespostaRelacaoWhereInput
    /**
     * Limit how many ChecklistOpcaoRespostaRelacaos to delete.
     */
    limit?: number
  }

  /**
   * ChecklistOpcaoRespostaRelacao without action
   */
  export type ChecklistOpcaoRespostaRelacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistOpcaoRespostaRelacao
     */
    select?: ChecklistOpcaoRespostaRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistOpcaoRespostaRelacao
     */
    omit?: ChecklistOpcaoRespostaRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistOpcaoRespostaRelacaoInclude<ExtArgs> | null
  }


  /**
   * Model ChecklistTipoVeiculoRelacao
   */

  export type AggregateChecklistTipoVeiculoRelacao = {
    _count: ChecklistTipoVeiculoRelacaoCountAggregateOutputType | null
    _avg: ChecklistTipoVeiculoRelacaoAvgAggregateOutputType | null
    _sum: ChecklistTipoVeiculoRelacaoSumAggregateOutputType | null
    _min: ChecklistTipoVeiculoRelacaoMinAggregateOutputType | null
    _max: ChecklistTipoVeiculoRelacaoMaxAggregateOutputType | null
  }

  export type ChecklistTipoVeiculoRelacaoAvgAggregateOutputType = {
    id: number | null
    checklistId: number | null
    tipoVeiculoId: number | null
  }

  export type ChecklistTipoVeiculoRelacaoSumAggregateOutputType = {
    id: number | null
    checklistId: number | null
    tipoVeiculoId: number | null
  }

  export type ChecklistTipoVeiculoRelacaoMinAggregateOutputType = {
    id: number | null
    checklistId: number | null
    tipoVeiculoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistTipoVeiculoRelacaoMaxAggregateOutputType = {
    id: number | null
    checklistId: number | null
    tipoVeiculoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistTipoVeiculoRelacaoCountAggregateOutputType = {
    id: number
    checklistId: number
    tipoVeiculoId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type ChecklistTipoVeiculoRelacaoAvgAggregateInputType = {
    id?: true
    checklistId?: true
    tipoVeiculoId?: true
  }

  export type ChecklistTipoVeiculoRelacaoSumAggregateInputType = {
    id?: true
    checklistId?: true
    tipoVeiculoId?: true
  }

  export type ChecklistTipoVeiculoRelacaoMinAggregateInputType = {
    id?: true
    checklistId?: true
    tipoVeiculoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistTipoVeiculoRelacaoMaxAggregateInputType = {
    id?: true
    checklistId?: true
    tipoVeiculoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistTipoVeiculoRelacaoCountAggregateInputType = {
    id?: true
    checklistId?: true
    tipoVeiculoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type ChecklistTipoVeiculoRelacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistTipoVeiculoRelacao to aggregate.
     */
    where?: ChecklistTipoVeiculoRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTipoVeiculoRelacaos to fetch.
     */
    orderBy?: ChecklistTipoVeiculoRelacaoOrderByWithRelationInput | ChecklistTipoVeiculoRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTipoVeiculoRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTipoVeiculoRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChecklistTipoVeiculoRelacaos
    **/
    _count?: true | ChecklistTipoVeiculoRelacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistTipoVeiculoRelacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistTipoVeiculoRelacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistTipoVeiculoRelacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistTipoVeiculoRelacaoMaxAggregateInputType
  }

  export type GetChecklistTipoVeiculoRelacaoAggregateType<T extends ChecklistTipoVeiculoRelacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklistTipoVeiculoRelacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklistTipoVeiculoRelacao[P]>
      : GetScalarType<T[P], AggregateChecklistTipoVeiculoRelacao[P]>
  }




  export type ChecklistTipoVeiculoRelacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistTipoVeiculoRelacaoWhereInput
    orderBy?: ChecklistTipoVeiculoRelacaoOrderByWithAggregationInput | ChecklistTipoVeiculoRelacaoOrderByWithAggregationInput[]
    by: ChecklistTipoVeiculoRelacaoScalarFieldEnum[] | ChecklistTipoVeiculoRelacaoScalarFieldEnum
    having?: ChecklistTipoVeiculoRelacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistTipoVeiculoRelacaoCountAggregateInputType | true
    _avg?: ChecklistTipoVeiculoRelacaoAvgAggregateInputType
    _sum?: ChecklistTipoVeiculoRelacaoSumAggregateInputType
    _min?: ChecklistTipoVeiculoRelacaoMinAggregateInputType
    _max?: ChecklistTipoVeiculoRelacaoMaxAggregateInputType
  }

  export type ChecklistTipoVeiculoRelacaoGroupByOutputType = {
    id: number
    checklistId: number
    tipoVeiculoId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: ChecklistTipoVeiculoRelacaoCountAggregateOutputType | null
    _avg: ChecklistTipoVeiculoRelacaoAvgAggregateOutputType | null
    _sum: ChecklistTipoVeiculoRelacaoSumAggregateOutputType | null
    _min: ChecklistTipoVeiculoRelacaoMinAggregateOutputType | null
    _max: ChecklistTipoVeiculoRelacaoMaxAggregateOutputType | null
  }

  type GetChecklistTipoVeiculoRelacaoGroupByPayload<T extends ChecklistTipoVeiculoRelacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChecklistTipoVeiculoRelacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistTipoVeiculoRelacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistTipoVeiculoRelacaoGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistTipoVeiculoRelacaoGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistTipoVeiculoRelacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    checklistId?: boolean
    tipoVeiculoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    checklist?: boolean | ChecklistDefaultArgs<ExtArgs>
    tipoVeiculo?: boolean | TipoVeiculoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["checklistTipoVeiculoRelacao"]>



  export type ChecklistTipoVeiculoRelacaoSelectScalar = {
    id?: boolean
    checklistId?: boolean
    tipoVeiculoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type ChecklistTipoVeiculoRelacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "checklistId" | "tipoVeiculoId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["checklistTipoVeiculoRelacao"]>
  export type ChecklistTipoVeiculoRelacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    checklist?: boolean | ChecklistDefaultArgs<ExtArgs>
    tipoVeiculo?: boolean | TipoVeiculoDefaultArgs<ExtArgs>
  }

  export type $ChecklistTipoVeiculoRelacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChecklistTipoVeiculoRelacao"
    objects: {
      checklist: Prisma.$ChecklistPayload<ExtArgs>
      tipoVeiculo: Prisma.$TipoVeiculoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      checklistId: number
      tipoVeiculoId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["checklistTipoVeiculoRelacao"]>
    composites: {}
  }

  type ChecklistTipoVeiculoRelacaoGetPayload<S extends boolean | null | undefined | ChecklistTipoVeiculoRelacaoDefaultArgs> = $Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload, S>

  type ChecklistTipoVeiculoRelacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChecklistTipoVeiculoRelacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChecklistTipoVeiculoRelacaoCountAggregateInputType | true
    }

  export interface ChecklistTipoVeiculoRelacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChecklistTipoVeiculoRelacao'], meta: { name: 'ChecklistTipoVeiculoRelacao' } }
    /**
     * Find zero or one ChecklistTipoVeiculoRelacao that matches the filter.
     * @param {ChecklistTipoVeiculoRelacaoFindUniqueArgs} args - Arguments to find a ChecklistTipoVeiculoRelacao
     * @example
     * // Get one ChecklistTipoVeiculoRelacao
     * const checklistTipoVeiculoRelacao = await prisma.checklistTipoVeiculoRelacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChecklistTipoVeiculoRelacaoFindUniqueArgs>(args: SelectSubset<T, ChecklistTipoVeiculoRelacaoFindUniqueArgs<ExtArgs>>): Prisma__ChecklistTipoVeiculoRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ChecklistTipoVeiculoRelacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChecklistTipoVeiculoRelacaoFindUniqueOrThrowArgs} args - Arguments to find a ChecklistTipoVeiculoRelacao
     * @example
     * // Get one ChecklistTipoVeiculoRelacao
     * const checklistTipoVeiculoRelacao = await prisma.checklistTipoVeiculoRelacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChecklistTipoVeiculoRelacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, ChecklistTipoVeiculoRelacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChecklistTipoVeiculoRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistTipoVeiculoRelacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoVeiculoRelacaoFindFirstArgs} args - Arguments to find a ChecklistTipoVeiculoRelacao
     * @example
     * // Get one ChecklistTipoVeiculoRelacao
     * const checklistTipoVeiculoRelacao = await prisma.checklistTipoVeiculoRelacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChecklistTipoVeiculoRelacaoFindFirstArgs>(args?: SelectSubset<T, ChecklistTipoVeiculoRelacaoFindFirstArgs<ExtArgs>>): Prisma__ChecklistTipoVeiculoRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistTipoVeiculoRelacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoVeiculoRelacaoFindFirstOrThrowArgs} args - Arguments to find a ChecklistTipoVeiculoRelacao
     * @example
     * // Get one ChecklistTipoVeiculoRelacao
     * const checklistTipoVeiculoRelacao = await prisma.checklistTipoVeiculoRelacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChecklistTipoVeiculoRelacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, ChecklistTipoVeiculoRelacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChecklistTipoVeiculoRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ChecklistTipoVeiculoRelacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoVeiculoRelacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChecklistTipoVeiculoRelacaos
     * const checklistTipoVeiculoRelacaos = await prisma.checklistTipoVeiculoRelacao.findMany()
     * 
     * // Get first 10 ChecklistTipoVeiculoRelacaos
     * const checklistTipoVeiculoRelacaos = await prisma.checklistTipoVeiculoRelacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistTipoVeiculoRelacaoWithIdOnly = await prisma.checklistTipoVeiculoRelacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChecklistTipoVeiculoRelacaoFindManyArgs>(args?: SelectSubset<T, ChecklistTipoVeiculoRelacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ChecklistTipoVeiculoRelacao.
     * @param {ChecklistTipoVeiculoRelacaoCreateArgs} args - Arguments to create a ChecklistTipoVeiculoRelacao.
     * @example
     * // Create one ChecklistTipoVeiculoRelacao
     * const ChecklistTipoVeiculoRelacao = await prisma.checklistTipoVeiculoRelacao.create({
     *   data: {
     *     // ... data to create a ChecklistTipoVeiculoRelacao
     *   }
     * })
     * 
     */
    create<T extends ChecklistTipoVeiculoRelacaoCreateArgs>(args: SelectSubset<T, ChecklistTipoVeiculoRelacaoCreateArgs<ExtArgs>>): Prisma__ChecklistTipoVeiculoRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ChecklistTipoVeiculoRelacaos.
     * @param {ChecklistTipoVeiculoRelacaoCreateManyArgs} args - Arguments to create many ChecklistTipoVeiculoRelacaos.
     * @example
     * // Create many ChecklistTipoVeiculoRelacaos
     * const checklistTipoVeiculoRelacao = await prisma.checklistTipoVeiculoRelacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChecklistTipoVeiculoRelacaoCreateManyArgs>(args?: SelectSubset<T, ChecklistTipoVeiculoRelacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ChecklistTipoVeiculoRelacao.
     * @param {ChecklistTipoVeiculoRelacaoDeleteArgs} args - Arguments to delete one ChecklistTipoVeiculoRelacao.
     * @example
     * // Delete one ChecklistTipoVeiculoRelacao
     * const ChecklistTipoVeiculoRelacao = await prisma.checklistTipoVeiculoRelacao.delete({
     *   where: {
     *     // ... filter to delete one ChecklistTipoVeiculoRelacao
     *   }
     * })
     * 
     */
    delete<T extends ChecklistTipoVeiculoRelacaoDeleteArgs>(args: SelectSubset<T, ChecklistTipoVeiculoRelacaoDeleteArgs<ExtArgs>>): Prisma__ChecklistTipoVeiculoRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ChecklistTipoVeiculoRelacao.
     * @param {ChecklistTipoVeiculoRelacaoUpdateArgs} args - Arguments to update one ChecklistTipoVeiculoRelacao.
     * @example
     * // Update one ChecklistTipoVeiculoRelacao
     * const checklistTipoVeiculoRelacao = await prisma.checklistTipoVeiculoRelacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChecklistTipoVeiculoRelacaoUpdateArgs>(args: SelectSubset<T, ChecklistTipoVeiculoRelacaoUpdateArgs<ExtArgs>>): Prisma__ChecklistTipoVeiculoRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ChecklistTipoVeiculoRelacaos.
     * @param {ChecklistTipoVeiculoRelacaoDeleteManyArgs} args - Arguments to filter ChecklistTipoVeiculoRelacaos to delete.
     * @example
     * // Delete a few ChecklistTipoVeiculoRelacaos
     * const { count } = await prisma.checklistTipoVeiculoRelacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChecklistTipoVeiculoRelacaoDeleteManyArgs>(args?: SelectSubset<T, ChecklistTipoVeiculoRelacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChecklistTipoVeiculoRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoVeiculoRelacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChecklistTipoVeiculoRelacaos
     * const checklistTipoVeiculoRelacao = await prisma.checklistTipoVeiculoRelacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChecklistTipoVeiculoRelacaoUpdateManyArgs>(args: SelectSubset<T, ChecklistTipoVeiculoRelacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChecklistTipoVeiculoRelacao.
     * @param {ChecklistTipoVeiculoRelacaoUpsertArgs} args - Arguments to update or create a ChecklistTipoVeiculoRelacao.
     * @example
     * // Update or create a ChecklistTipoVeiculoRelacao
     * const checklistTipoVeiculoRelacao = await prisma.checklistTipoVeiculoRelacao.upsert({
     *   create: {
     *     // ... data to create a ChecklistTipoVeiculoRelacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChecklistTipoVeiculoRelacao we want to update
     *   }
     * })
     */
    upsert<T extends ChecklistTipoVeiculoRelacaoUpsertArgs>(args: SelectSubset<T, ChecklistTipoVeiculoRelacaoUpsertArgs<ExtArgs>>): Prisma__ChecklistTipoVeiculoRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ChecklistTipoVeiculoRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoVeiculoRelacaoCountArgs} args - Arguments to filter ChecklistTipoVeiculoRelacaos to count.
     * @example
     * // Count the number of ChecklistTipoVeiculoRelacaos
     * const count = await prisma.checklistTipoVeiculoRelacao.count({
     *   where: {
     *     // ... the filter for the ChecklistTipoVeiculoRelacaos we want to count
     *   }
     * })
    **/
    count<T extends ChecklistTipoVeiculoRelacaoCountArgs>(
      args?: Subset<T, ChecklistTipoVeiculoRelacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistTipoVeiculoRelacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChecklistTipoVeiculoRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoVeiculoRelacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistTipoVeiculoRelacaoAggregateArgs>(args: Subset<T, ChecklistTipoVeiculoRelacaoAggregateArgs>): Prisma.PrismaPromise<GetChecklistTipoVeiculoRelacaoAggregateType<T>>

    /**
     * Group by ChecklistTipoVeiculoRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoVeiculoRelacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistTipoVeiculoRelacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistTipoVeiculoRelacaoGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistTipoVeiculoRelacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistTipoVeiculoRelacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistTipoVeiculoRelacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChecklistTipoVeiculoRelacao model
   */
  readonly fields: ChecklistTipoVeiculoRelacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChecklistTipoVeiculoRelacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChecklistTipoVeiculoRelacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    checklist<T extends ChecklistDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChecklistDefaultArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tipoVeiculo<T extends TipoVeiculoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoVeiculoDefaultArgs<ExtArgs>>): Prisma__TipoVeiculoClient<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChecklistTipoVeiculoRelacao model
   */
  interface ChecklistTipoVeiculoRelacaoFieldRefs {
    readonly id: FieldRef<"ChecklistTipoVeiculoRelacao", 'Int'>
    readonly checklistId: FieldRef<"ChecklistTipoVeiculoRelacao", 'Int'>
    readonly tipoVeiculoId: FieldRef<"ChecklistTipoVeiculoRelacao", 'Int'>
    readonly createdAt: FieldRef<"ChecklistTipoVeiculoRelacao", 'DateTime'>
    readonly createdBy: FieldRef<"ChecklistTipoVeiculoRelacao", 'String'>
    readonly updatedAt: FieldRef<"ChecklistTipoVeiculoRelacao", 'DateTime'>
    readonly updatedBy: FieldRef<"ChecklistTipoVeiculoRelacao", 'String'>
    readonly deletedAt: FieldRef<"ChecklistTipoVeiculoRelacao", 'DateTime'>
    readonly deletedBy: FieldRef<"ChecklistTipoVeiculoRelacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ChecklistTipoVeiculoRelacao findUnique
   */
  export type ChecklistTipoVeiculoRelacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistTipoVeiculoRelacao to fetch.
     */
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
  }

  /**
   * ChecklistTipoVeiculoRelacao findUniqueOrThrow
   */
  export type ChecklistTipoVeiculoRelacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistTipoVeiculoRelacao to fetch.
     */
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
  }

  /**
   * ChecklistTipoVeiculoRelacao findFirst
   */
  export type ChecklistTipoVeiculoRelacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistTipoVeiculoRelacao to fetch.
     */
    where?: ChecklistTipoVeiculoRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTipoVeiculoRelacaos to fetch.
     */
    orderBy?: ChecklistTipoVeiculoRelacaoOrderByWithRelationInput | ChecklistTipoVeiculoRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistTipoVeiculoRelacaos.
     */
    cursor?: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTipoVeiculoRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTipoVeiculoRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistTipoVeiculoRelacaos.
     */
    distinct?: ChecklistTipoVeiculoRelacaoScalarFieldEnum | ChecklistTipoVeiculoRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistTipoVeiculoRelacao findFirstOrThrow
   */
  export type ChecklistTipoVeiculoRelacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistTipoVeiculoRelacao to fetch.
     */
    where?: ChecklistTipoVeiculoRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTipoVeiculoRelacaos to fetch.
     */
    orderBy?: ChecklistTipoVeiculoRelacaoOrderByWithRelationInput | ChecklistTipoVeiculoRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistTipoVeiculoRelacaos.
     */
    cursor?: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTipoVeiculoRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTipoVeiculoRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistTipoVeiculoRelacaos.
     */
    distinct?: ChecklistTipoVeiculoRelacaoScalarFieldEnum | ChecklistTipoVeiculoRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistTipoVeiculoRelacao findMany
   */
  export type ChecklistTipoVeiculoRelacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistTipoVeiculoRelacaos to fetch.
     */
    where?: ChecklistTipoVeiculoRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTipoVeiculoRelacaos to fetch.
     */
    orderBy?: ChecklistTipoVeiculoRelacaoOrderByWithRelationInput | ChecklistTipoVeiculoRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChecklistTipoVeiculoRelacaos.
     */
    cursor?: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTipoVeiculoRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTipoVeiculoRelacaos.
     */
    skip?: number
    distinct?: ChecklistTipoVeiculoRelacaoScalarFieldEnum | ChecklistTipoVeiculoRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistTipoVeiculoRelacao create
   */
  export type ChecklistTipoVeiculoRelacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a ChecklistTipoVeiculoRelacao.
     */
    data: XOR<ChecklistTipoVeiculoRelacaoCreateInput, ChecklistTipoVeiculoRelacaoUncheckedCreateInput>
  }

  /**
   * ChecklistTipoVeiculoRelacao createMany
   */
  export type ChecklistTipoVeiculoRelacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChecklistTipoVeiculoRelacaos.
     */
    data: ChecklistTipoVeiculoRelacaoCreateManyInput | ChecklistTipoVeiculoRelacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChecklistTipoVeiculoRelacao update
   */
  export type ChecklistTipoVeiculoRelacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a ChecklistTipoVeiculoRelacao.
     */
    data: XOR<ChecklistTipoVeiculoRelacaoUpdateInput, ChecklistTipoVeiculoRelacaoUncheckedUpdateInput>
    /**
     * Choose, which ChecklistTipoVeiculoRelacao to update.
     */
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
  }

  /**
   * ChecklistTipoVeiculoRelacao updateMany
   */
  export type ChecklistTipoVeiculoRelacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChecklistTipoVeiculoRelacaos.
     */
    data: XOR<ChecklistTipoVeiculoRelacaoUpdateManyMutationInput, ChecklistTipoVeiculoRelacaoUncheckedUpdateManyInput>
    /**
     * Filter which ChecklistTipoVeiculoRelacaos to update
     */
    where?: ChecklistTipoVeiculoRelacaoWhereInput
    /**
     * Limit how many ChecklistTipoVeiculoRelacaos to update.
     */
    limit?: number
  }

  /**
   * ChecklistTipoVeiculoRelacao upsert
   */
  export type ChecklistTipoVeiculoRelacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the ChecklistTipoVeiculoRelacao to update in case it exists.
     */
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    /**
     * In case the ChecklistTipoVeiculoRelacao found by the `where` argument doesn't exist, create a new ChecklistTipoVeiculoRelacao with this data.
     */
    create: XOR<ChecklistTipoVeiculoRelacaoCreateInput, ChecklistTipoVeiculoRelacaoUncheckedCreateInput>
    /**
     * In case the ChecklistTipoVeiculoRelacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChecklistTipoVeiculoRelacaoUpdateInput, ChecklistTipoVeiculoRelacaoUncheckedUpdateInput>
  }

  /**
   * ChecklistTipoVeiculoRelacao delete
   */
  export type ChecklistTipoVeiculoRelacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    /**
     * Filter which ChecklistTipoVeiculoRelacao to delete.
     */
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
  }

  /**
   * ChecklistTipoVeiculoRelacao deleteMany
   */
  export type ChecklistTipoVeiculoRelacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistTipoVeiculoRelacaos to delete
     */
    where?: ChecklistTipoVeiculoRelacaoWhereInput
    /**
     * Limit how many ChecklistTipoVeiculoRelacaos to delete.
     */
    limit?: number
  }

  /**
   * ChecklistTipoVeiculoRelacao without action
   */
  export type ChecklistTipoVeiculoRelacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
  }


  /**
   * Model ChecklistTipoEquipeRelacao
   */

  export type AggregateChecklistTipoEquipeRelacao = {
    _count: ChecklistTipoEquipeRelacaoCountAggregateOutputType | null
    _avg: ChecklistTipoEquipeRelacaoAvgAggregateOutputType | null
    _sum: ChecklistTipoEquipeRelacaoSumAggregateOutputType | null
    _min: ChecklistTipoEquipeRelacaoMinAggregateOutputType | null
    _max: ChecklistTipoEquipeRelacaoMaxAggregateOutputType | null
  }

  export type ChecklistTipoEquipeRelacaoAvgAggregateOutputType = {
    id: number | null
    checklistId: number | null
    tipoEquipeId: number | null
    tipoChecklistId: number | null
  }

  export type ChecklistTipoEquipeRelacaoSumAggregateOutputType = {
    id: number | null
    checklistId: number | null
    tipoEquipeId: number | null
    tipoChecklistId: number | null
  }

  export type ChecklistTipoEquipeRelacaoMinAggregateOutputType = {
    id: number | null
    checklistId: number | null
    tipoEquipeId: number | null
    tipoChecklistId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistTipoEquipeRelacaoMaxAggregateOutputType = {
    id: number | null
    checklistId: number | null
    tipoEquipeId: number | null
    tipoChecklistId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ChecklistTipoEquipeRelacaoCountAggregateOutputType = {
    id: number
    checklistId: number
    tipoEquipeId: number
    tipoChecklistId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type ChecklistTipoEquipeRelacaoAvgAggregateInputType = {
    id?: true
    checklistId?: true
    tipoEquipeId?: true
    tipoChecklistId?: true
  }

  export type ChecklistTipoEquipeRelacaoSumAggregateInputType = {
    id?: true
    checklistId?: true
    tipoEquipeId?: true
    tipoChecklistId?: true
  }

  export type ChecklistTipoEquipeRelacaoMinAggregateInputType = {
    id?: true
    checklistId?: true
    tipoEquipeId?: true
    tipoChecklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistTipoEquipeRelacaoMaxAggregateInputType = {
    id?: true
    checklistId?: true
    tipoEquipeId?: true
    tipoChecklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ChecklistTipoEquipeRelacaoCountAggregateInputType = {
    id?: true
    checklistId?: true
    tipoEquipeId?: true
    tipoChecklistId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type ChecklistTipoEquipeRelacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistTipoEquipeRelacao to aggregate.
     */
    where?: ChecklistTipoEquipeRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTipoEquipeRelacaos to fetch.
     */
    orderBy?: ChecklistTipoEquipeRelacaoOrderByWithRelationInput | ChecklistTipoEquipeRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChecklistTipoEquipeRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTipoEquipeRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTipoEquipeRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChecklistTipoEquipeRelacaos
    **/
    _count?: true | ChecklistTipoEquipeRelacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChecklistTipoEquipeRelacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChecklistTipoEquipeRelacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecklistTipoEquipeRelacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecklistTipoEquipeRelacaoMaxAggregateInputType
  }

  export type GetChecklistTipoEquipeRelacaoAggregateType<T extends ChecklistTipoEquipeRelacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateChecklistTipoEquipeRelacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecklistTipoEquipeRelacao[P]>
      : GetScalarType<T[P], AggregateChecklistTipoEquipeRelacao[P]>
  }




  export type ChecklistTipoEquipeRelacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChecklistTipoEquipeRelacaoWhereInput
    orderBy?: ChecklistTipoEquipeRelacaoOrderByWithAggregationInput | ChecklistTipoEquipeRelacaoOrderByWithAggregationInput[]
    by: ChecklistTipoEquipeRelacaoScalarFieldEnum[] | ChecklistTipoEquipeRelacaoScalarFieldEnum
    having?: ChecklistTipoEquipeRelacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecklistTipoEquipeRelacaoCountAggregateInputType | true
    _avg?: ChecklistTipoEquipeRelacaoAvgAggregateInputType
    _sum?: ChecklistTipoEquipeRelacaoSumAggregateInputType
    _min?: ChecklistTipoEquipeRelacaoMinAggregateInputType
    _max?: ChecklistTipoEquipeRelacaoMaxAggregateInputType
  }

  export type ChecklistTipoEquipeRelacaoGroupByOutputType = {
    id: number
    checklistId: number
    tipoEquipeId: number
    tipoChecklistId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: ChecklistTipoEquipeRelacaoCountAggregateOutputType | null
    _avg: ChecklistTipoEquipeRelacaoAvgAggregateOutputType | null
    _sum: ChecklistTipoEquipeRelacaoSumAggregateOutputType | null
    _min: ChecklistTipoEquipeRelacaoMinAggregateOutputType | null
    _max: ChecklistTipoEquipeRelacaoMaxAggregateOutputType | null
  }

  type GetChecklistTipoEquipeRelacaoGroupByPayload<T extends ChecklistTipoEquipeRelacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChecklistTipoEquipeRelacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecklistTipoEquipeRelacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecklistTipoEquipeRelacaoGroupByOutputType[P]>
            : GetScalarType<T[P], ChecklistTipoEquipeRelacaoGroupByOutputType[P]>
        }
      >
    >


  export type ChecklistTipoEquipeRelacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    checklistId?: boolean
    tipoEquipeId?: boolean
    tipoChecklistId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    checklist?: boolean | ChecklistDefaultArgs<ExtArgs>
    tipoEquipe?: boolean | TipoEquipeDefaultArgs<ExtArgs>
    tipoChecklist?: boolean | TipoChecklistDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["checklistTipoEquipeRelacao"]>



  export type ChecklistTipoEquipeRelacaoSelectScalar = {
    id?: boolean
    checklistId?: boolean
    tipoEquipeId?: boolean
    tipoChecklistId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type ChecklistTipoEquipeRelacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "checklistId" | "tipoEquipeId" | "tipoChecklistId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["checklistTipoEquipeRelacao"]>
  export type ChecklistTipoEquipeRelacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    checklist?: boolean | ChecklistDefaultArgs<ExtArgs>
    tipoEquipe?: boolean | TipoEquipeDefaultArgs<ExtArgs>
    tipoChecklist?: boolean | TipoChecklistDefaultArgs<ExtArgs>
  }

  export type $ChecklistTipoEquipeRelacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChecklistTipoEquipeRelacao"
    objects: {
      checklist: Prisma.$ChecklistPayload<ExtArgs>
      tipoEquipe: Prisma.$TipoEquipePayload<ExtArgs>
      tipoChecklist: Prisma.$TipoChecklistPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      checklistId: number
      tipoEquipeId: number
      tipoChecklistId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["checklistTipoEquipeRelacao"]>
    composites: {}
  }

  type ChecklistTipoEquipeRelacaoGetPayload<S extends boolean | null | undefined | ChecklistTipoEquipeRelacaoDefaultArgs> = $Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload, S>

  type ChecklistTipoEquipeRelacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChecklistTipoEquipeRelacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChecklistTipoEquipeRelacaoCountAggregateInputType | true
    }

  export interface ChecklistTipoEquipeRelacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChecklistTipoEquipeRelacao'], meta: { name: 'ChecklistTipoEquipeRelacao' } }
    /**
     * Find zero or one ChecklistTipoEquipeRelacao that matches the filter.
     * @param {ChecklistTipoEquipeRelacaoFindUniqueArgs} args - Arguments to find a ChecklistTipoEquipeRelacao
     * @example
     * // Get one ChecklistTipoEquipeRelacao
     * const checklistTipoEquipeRelacao = await prisma.checklistTipoEquipeRelacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChecklistTipoEquipeRelacaoFindUniqueArgs>(args: SelectSubset<T, ChecklistTipoEquipeRelacaoFindUniqueArgs<ExtArgs>>): Prisma__ChecklistTipoEquipeRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ChecklistTipoEquipeRelacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChecklistTipoEquipeRelacaoFindUniqueOrThrowArgs} args - Arguments to find a ChecklistTipoEquipeRelacao
     * @example
     * // Get one ChecklistTipoEquipeRelacao
     * const checklistTipoEquipeRelacao = await prisma.checklistTipoEquipeRelacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChecklistTipoEquipeRelacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, ChecklistTipoEquipeRelacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChecklistTipoEquipeRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistTipoEquipeRelacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoEquipeRelacaoFindFirstArgs} args - Arguments to find a ChecklistTipoEquipeRelacao
     * @example
     * // Get one ChecklistTipoEquipeRelacao
     * const checklistTipoEquipeRelacao = await prisma.checklistTipoEquipeRelacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChecklistTipoEquipeRelacaoFindFirstArgs>(args?: SelectSubset<T, ChecklistTipoEquipeRelacaoFindFirstArgs<ExtArgs>>): Prisma__ChecklistTipoEquipeRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChecklistTipoEquipeRelacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoEquipeRelacaoFindFirstOrThrowArgs} args - Arguments to find a ChecklistTipoEquipeRelacao
     * @example
     * // Get one ChecklistTipoEquipeRelacao
     * const checklistTipoEquipeRelacao = await prisma.checklistTipoEquipeRelacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChecklistTipoEquipeRelacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, ChecklistTipoEquipeRelacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChecklistTipoEquipeRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ChecklistTipoEquipeRelacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoEquipeRelacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChecklistTipoEquipeRelacaos
     * const checklistTipoEquipeRelacaos = await prisma.checklistTipoEquipeRelacao.findMany()
     * 
     * // Get first 10 ChecklistTipoEquipeRelacaos
     * const checklistTipoEquipeRelacaos = await prisma.checklistTipoEquipeRelacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const checklistTipoEquipeRelacaoWithIdOnly = await prisma.checklistTipoEquipeRelacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChecklistTipoEquipeRelacaoFindManyArgs>(args?: SelectSubset<T, ChecklistTipoEquipeRelacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ChecklistTipoEquipeRelacao.
     * @param {ChecklistTipoEquipeRelacaoCreateArgs} args - Arguments to create a ChecklistTipoEquipeRelacao.
     * @example
     * // Create one ChecklistTipoEquipeRelacao
     * const ChecklistTipoEquipeRelacao = await prisma.checklistTipoEquipeRelacao.create({
     *   data: {
     *     // ... data to create a ChecklistTipoEquipeRelacao
     *   }
     * })
     * 
     */
    create<T extends ChecklistTipoEquipeRelacaoCreateArgs>(args: SelectSubset<T, ChecklistTipoEquipeRelacaoCreateArgs<ExtArgs>>): Prisma__ChecklistTipoEquipeRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ChecklistTipoEquipeRelacaos.
     * @param {ChecklistTipoEquipeRelacaoCreateManyArgs} args - Arguments to create many ChecklistTipoEquipeRelacaos.
     * @example
     * // Create many ChecklistTipoEquipeRelacaos
     * const checklistTipoEquipeRelacao = await prisma.checklistTipoEquipeRelacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChecklistTipoEquipeRelacaoCreateManyArgs>(args?: SelectSubset<T, ChecklistTipoEquipeRelacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ChecklistTipoEquipeRelacao.
     * @param {ChecklistTipoEquipeRelacaoDeleteArgs} args - Arguments to delete one ChecklistTipoEquipeRelacao.
     * @example
     * // Delete one ChecklistTipoEquipeRelacao
     * const ChecklistTipoEquipeRelacao = await prisma.checklistTipoEquipeRelacao.delete({
     *   where: {
     *     // ... filter to delete one ChecklistTipoEquipeRelacao
     *   }
     * })
     * 
     */
    delete<T extends ChecklistTipoEquipeRelacaoDeleteArgs>(args: SelectSubset<T, ChecklistTipoEquipeRelacaoDeleteArgs<ExtArgs>>): Prisma__ChecklistTipoEquipeRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ChecklistTipoEquipeRelacao.
     * @param {ChecklistTipoEquipeRelacaoUpdateArgs} args - Arguments to update one ChecklistTipoEquipeRelacao.
     * @example
     * // Update one ChecklistTipoEquipeRelacao
     * const checklistTipoEquipeRelacao = await prisma.checklistTipoEquipeRelacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChecklistTipoEquipeRelacaoUpdateArgs>(args: SelectSubset<T, ChecklistTipoEquipeRelacaoUpdateArgs<ExtArgs>>): Prisma__ChecklistTipoEquipeRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ChecklistTipoEquipeRelacaos.
     * @param {ChecklistTipoEquipeRelacaoDeleteManyArgs} args - Arguments to filter ChecklistTipoEquipeRelacaos to delete.
     * @example
     * // Delete a few ChecklistTipoEquipeRelacaos
     * const { count } = await prisma.checklistTipoEquipeRelacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChecklistTipoEquipeRelacaoDeleteManyArgs>(args?: SelectSubset<T, ChecklistTipoEquipeRelacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChecklistTipoEquipeRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoEquipeRelacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChecklistTipoEquipeRelacaos
     * const checklistTipoEquipeRelacao = await prisma.checklistTipoEquipeRelacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChecklistTipoEquipeRelacaoUpdateManyArgs>(args: SelectSubset<T, ChecklistTipoEquipeRelacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChecklistTipoEquipeRelacao.
     * @param {ChecklistTipoEquipeRelacaoUpsertArgs} args - Arguments to update or create a ChecklistTipoEquipeRelacao.
     * @example
     * // Update or create a ChecklistTipoEquipeRelacao
     * const checklistTipoEquipeRelacao = await prisma.checklistTipoEquipeRelacao.upsert({
     *   create: {
     *     // ... data to create a ChecklistTipoEquipeRelacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChecklistTipoEquipeRelacao we want to update
     *   }
     * })
     */
    upsert<T extends ChecklistTipoEquipeRelacaoUpsertArgs>(args: SelectSubset<T, ChecklistTipoEquipeRelacaoUpsertArgs<ExtArgs>>): Prisma__ChecklistTipoEquipeRelacaoClient<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ChecklistTipoEquipeRelacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoEquipeRelacaoCountArgs} args - Arguments to filter ChecklistTipoEquipeRelacaos to count.
     * @example
     * // Count the number of ChecklistTipoEquipeRelacaos
     * const count = await prisma.checklistTipoEquipeRelacao.count({
     *   where: {
     *     // ... the filter for the ChecklistTipoEquipeRelacaos we want to count
     *   }
     * })
    **/
    count<T extends ChecklistTipoEquipeRelacaoCountArgs>(
      args?: Subset<T, ChecklistTipoEquipeRelacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecklistTipoEquipeRelacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChecklistTipoEquipeRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoEquipeRelacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecklistTipoEquipeRelacaoAggregateArgs>(args: Subset<T, ChecklistTipoEquipeRelacaoAggregateArgs>): Prisma.PrismaPromise<GetChecklistTipoEquipeRelacaoAggregateType<T>>

    /**
     * Group by ChecklistTipoEquipeRelacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecklistTipoEquipeRelacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecklistTipoEquipeRelacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecklistTipoEquipeRelacaoGroupByArgs['orderBy'] }
        : { orderBy?: ChecklistTipoEquipeRelacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecklistTipoEquipeRelacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecklistTipoEquipeRelacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChecklistTipoEquipeRelacao model
   */
  readonly fields: ChecklistTipoEquipeRelacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChecklistTipoEquipeRelacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChecklistTipoEquipeRelacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    checklist<T extends ChecklistDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChecklistDefaultArgs<ExtArgs>>): Prisma__ChecklistClient<$Result.GetResult<Prisma.$ChecklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tipoEquipe<T extends TipoEquipeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoEquipeDefaultArgs<ExtArgs>>): Prisma__TipoEquipeClient<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tipoChecklist<T extends TipoChecklistDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoChecklistDefaultArgs<ExtArgs>>): Prisma__TipoChecklistClient<$Result.GetResult<Prisma.$TipoChecklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChecklistTipoEquipeRelacao model
   */
  interface ChecklistTipoEquipeRelacaoFieldRefs {
    readonly id: FieldRef<"ChecklistTipoEquipeRelacao", 'Int'>
    readonly checklistId: FieldRef<"ChecklistTipoEquipeRelacao", 'Int'>
    readonly tipoEquipeId: FieldRef<"ChecklistTipoEquipeRelacao", 'Int'>
    readonly tipoChecklistId: FieldRef<"ChecklistTipoEquipeRelacao", 'Int'>
    readonly createdAt: FieldRef<"ChecklistTipoEquipeRelacao", 'DateTime'>
    readonly createdBy: FieldRef<"ChecklistTipoEquipeRelacao", 'String'>
    readonly updatedAt: FieldRef<"ChecklistTipoEquipeRelacao", 'DateTime'>
    readonly updatedBy: FieldRef<"ChecklistTipoEquipeRelacao", 'String'>
    readonly deletedAt: FieldRef<"ChecklistTipoEquipeRelacao", 'DateTime'>
    readonly deletedBy: FieldRef<"ChecklistTipoEquipeRelacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ChecklistTipoEquipeRelacao findUnique
   */
  export type ChecklistTipoEquipeRelacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistTipoEquipeRelacao to fetch.
     */
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
  }

  /**
   * ChecklistTipoEquipeRelacao findUniqueOrThrow
   */
  export type ChecklistTipoEquipeRelacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistTipoEquipeRelacao to fetch.
     */
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
  }

  /**
   * ChecklistTipoEquipeRelacao findFirst
   */
  export type ChecklistTipoEquipeRelacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistTipoEquipeRelacao to fetch.
     */
    where?: ChecklistTipoEquipeRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTipoEquipeRelacaos to fetch.
     */
    orderBy?: ChecklistTipoEquipeRelacaoOrderByWithRelationInput | ChecklistTipoEquipeRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistTipoEquipeRelacaos.
     */
    cursor?: ChecklistTipoEquipeRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTipoEquipeRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTipoEquipeRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistTipoEquipeRelacaos.
     */
    distinct?: ChecklistTipoEquipeRelacaoScalarFieldEnum | ChecklistTipoEquipeRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistTipoEquipeRelacao findFirstOrThrow
   */
  export type ChecklistTipoEquipeRelacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistTipoEquipeRelacao to fetch.
     */
    where?: ChecklistTipoEquipeRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTipoEquipeRelacaos to fetch.
     */
    orderBy?: ChecklistTipoEquipeRelacaoOrderByWithRelationInput | ChecklistTipoEquipeRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChecklistTipoEquipeRelacaos.
     */
    cursor?: ChecklistTipoEquipeRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTipoEquipeRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTipoEquipeRelacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChecklistTipoEquipeRelacaos.
     */
    distinct?: ChecklistTipoEquipeRelacaoScalarFieldEnum | ChecklistTipoEquipeRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistTipoEquipeRelacao findMany
   */
  export type ChecklistTipoEquipeRelacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    /**
     * Filter, which ChecklistTipoEquipeRelacaos to fetch.
     */
    where?: ChecklistTipoEquipeRelacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChecklistTipoEquipeRelacaos to fetch.
     */
    orderBy?: ChecklistTipoEquipeRelacaoOrderByWithRelationInput | ChecklistTipoEquipeRelacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChecklistTipoEquipeRelacaos.
     */
    cursor?: ChecklistTipoEquipeRelacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChecklistTipoEquipeRelacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChecklistTipoEquipeRelacaos.
     */
    skip?: number
    distinct?: ChecklistTipoEquipeRelacaoScalarFieldEnum | ChecklistTipoEquipeRelacaoScalarFieldEnum[]
  }

  /**
   * ChecklistTipoEquipeRelacao create
   */
  export type ChecklistTipoEquipeRelacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a ChecklistTipoEquipeRelacao.
     */
    data: XOR<ChecklistTipoEquipeRelacaoCreateInput, ChecklistTipoEquipeRelacaoUncheckedCreateInput>
  }

  /**
   * ChecklistTipoEquipeRelacao createMany
   */
  export type ChecklistTipoEquipeRelacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChecklistTipoEquipeRelacaos.
     */
    data: ChecklistTipoEquipeRelacaoCreateManyInput | ChecklistTipoEquipeRelacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChecklistTipoEquipeRelacao update
   */
  export type ChecklistTipoEquipeRelacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a ChecklistTipoEquipeRelacao.
     */
    data: XOR<ChecklistTipoEquipeRelacaoUpdateInput, ChecklistTipoEquipeRelacaoUncheckedUpdateInput>
    /**
     * Choose, which ChecklistTipoEquipeRelacao to update.
     */
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
  }

  /**
   * ChecklistTipoEquipeRelacao updateMany
   */
  export type ChecklistTipoEquipeRelacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChecklistTipoEquipeRelacaos.
     */
    data: XOR<ChecklistTipoEquipeRelacaoUpdateManyMutationInput, ChecklistTipoEquipeRelacaoUncheckedUpdateManyInput>
    /**
     * Filter which ChecklistTipoEquipeRelacaos to update
     */
    where?: ChecklistTipoEquipeRelacaoWhereInput
    /**
     * Limit how many ChecklistTipoEquipeRelacaos to update.
     */
    limit?: number
  }

  /**
   * ChecklistTipoEquipeRelacao upsert
   */
  export type ChecklistTipoEquipeRelacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the ChecklistTipoEquipeRelacao to update in case it exists.
     */
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
    /**
     * In case the ChecklistTipoEquipeRelacao found by the `where` argument doesn't exist, create a new ChecklistTipoEquipeRelacao with this data.
     */
    create: XOR<ChecklistTipoEquipeRelacaoCreateInput, ChecklistTipoEquipeRelacaoUncheckedCreateInput>
    /**
     * In case the ChecklistTipoEquipeRelacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChecklistTipoEquipeRelacaoUpdateInput, ChecklistTipoEquipeRelacaoUncheckedUpdateInput>
  }

  /**
   * ChecklistTipoEquipeRelacao delete
   */
  export type ChecklistTipoEquipeRelacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    /**
     * Filter which ChecklistTipoEquipeRelacao to delete.
     */
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
  }

  /**
   * ChecklistTipoEquipeRelacao deleteMany
   */
  export type ChecklistTipoEquipeRelacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChecklistTipoEquipeRelacaos to delete
     */
    where?: ChecklistTipoEquipeRelacaoWhereInput
    /**
     * Limit how many ChecklistTipoEquipeRelacaos to delete.
     */
    limit?: number
  }

  /**
   * ChecklistTipoEquipeRelacao without action
   */
  export type ChecklistTipoEquipeRelacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
  }


  /**
   * Model Contrato
   */

  export type AggregateContrato = {
    _count: ContratoCountAggregateOutputType | null
    _avg: ContratoAvgAggregateOutputType | null
    _sum: ContratoSumAggregateOutputType | null
    _min: ContratoMinAggregateOutputType | null
    _max: ContratoMaxAggregateOutputType | null
  }

  export type ContratoAvgAggregateOutputType = {
    id: number | null
  }

  export type ContratoSumAggregateOutputType = {
    id: number | null
  }

  export type ContratoMinAggregateOutputType = {
    id: number | null
    nome: string | null
    numero: string | null
    dataInicio: Date | null
    dataFim: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ContratoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    numero: string | null
    dataInicio: Date | null
    dataFim: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ContratoCountAggregateOutputType = {
    id: number
    nome: number
    numero: number
    dataInicio: number
    dataFim: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type ContratoAvgAggregateInputType = {
    id?: true
  }

  export type ContratoSumAggregateInputType = {
    id?: true
  }

  export type ContratoMinAggregateInputType = {
    id?: true
    nome?: true
    numero?: true
    dataInicio?: true
    dataFim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ContratoMaxAggregateInputType = {
    id?: true
    nome?: true
    numero?: true
    dataInicio?: true
    dataFim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ContratoCountAggregateInputType = {
    id?: true
    nome?: true
    numero?: true
    dataInicio?: true
    dataFim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type ContratoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contrato to aggregate.
     */
    where?: ContratoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contratoes to fetch.
     */
    orderBy?: ContratoOrderByWithRelationInput | ContratoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContratoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contratoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contratoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contratoes
    **/
    _count?: true | ContratoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ContratoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ContratoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContratoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContratoMaxAggregateInputType
  }

  export type GetContratoAggregateType<T extends ContratoAggregateArgs> = {
        [P in keyof T & keyof AggregateContrato]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContrato[P]>
      : GetScalarType<T[P], AggregateContrato[P]>
  }




  export type ContratoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContratoWhereInput
    orderBy?: ContratoOrderByWithAggregationInput | ContratoOrderByWithAggregationInput[]
    by: ContratoScalarFieldEnum[] | ContratoScalarFieldEnum
    having?: ContratoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContratoCountAggregateInputType | true
    _avg?: ContratoAvgAggregateInputType
    _sum?: ContratoSumAggregateInputType
    _min?: ContratoMinAggregateInputType
    _max?: ContratoMaxAggregateInputType
  }

  export type ContratoGroupByOutputType = {
    id: number
    nome: string
    numero: string
    dataInicio: Date | null
    dataFim: Date | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: ContratoCountAggregateOutputType | null
    _avg: ContratoAvgAggregateOutputType | null
    _sum: ContratoSumAggregateOutputType | null
    _min: ContratoMinAggregateOutputType | null
    _max: ContratoMaxAggregateOutputType | null
  }

  type GetContratoGroupByPayload<T extends ContratoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContratoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContratoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContratoGroupByOutputType[P]>
            : GetScalarType<T[P], ContratoGroupByOutputType[P]>
        }
      >
    >


  export type ContratoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    numero?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    Veiculo?: boolean | Contrato$VeiculoArgs<ExtArgs>
    Eletricista?: boolean | Contrato$EletricistaArgs<ExtArgs>
    Equipe?: boolean | Contrato$EquipeArgs<ExtArgs>
    Supervisor?: boolean | Contrato$SupervisorArgs<ExtArgs>
    MobileContratoPermissao?: boolean | Contrato$MobileContratoPermissaoArgs<ExtArgs>
    Base?: boolean | Contrato$BaseArgs<ExtArgs>
    _count?: boolean | ContratoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contrato"]>



  export type ContratoSelectScalar = {
    id?: boolean
    nome?: boolean
    numero?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type ContratoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "numero" | "dataInicio" | "dataFim" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["contrato"]>
  export type ContratoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Veiculo?: boolean | Contrato$VeiculoArgs<ExtArgs>
    Eletricista?: boolean | Contrato$EletricistaArgs<ExtArgs>
    Equipe?: boolean | Contrato$EquipeArgs<ExtArgs>
    Supervisor?: boolean | Contrato$SupervisorArgs<ExtArgs>
    MobileContratoPermissao?: boolean | Contrato$MobileContratoPermissaoArgs<ExtArgs>
    Base?: boolean | Contrato$BaseArgs<ExtArgs>
    _count?: boolean | ContratoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ContratoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Contrato"
    objects: {
      Veiculo: Prisma.$VeiculoPayload<ExtArgs>[]
      Eletricista: Prisma.$EletricistaPayload<ExtArgs>[]
      Equipe: Prisma.$EquipePayload<ExtArgs>[]
      Supervisor: Prisma.$SupervisorPayload<ExtArgs>[]
      MobileContratoPermissao: Prisma.$MobileContratoPermissaoPayload<ExtArgs>[]
      Base: Prisma.$BasePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      numero: string
      dataInicio: Date | null
      dataFim: Date | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["contrato"]>
    composites: {}
  }

  type ContratoGetPayload<S extends boolean | null | undefined | ContratoDefaultArgs> = $Result.GetResult<Prisma.$ContratoPayload, S>

  type ContratoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ContratoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ContratoCountAggregateInputType | true
    }

  export interface ContratoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Contrato'], meta: { name: 'Contrato' } }
    /**
     * Find zero or one Contrato that matches the filter.
     * @param {ContratoFindUniqueArgs} args - Arguments to find a Contrato
     * @example
     * // Get one Contrato
     * const contrato = await prisma.contrato.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContratoFindUniqueArgs>(args: SelectSubset<T, ContratoFindUniqueArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Contrato that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ContratoFindUniqueOrThrowArgs} args - Arguments to find a Contrato
     * @example
     * // Get one Contrato
     * const contrato = await prisma.contrato.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContratoFindUniqueOrThrowArgs>(args: SelectSubset<T, ContratoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contrato that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContratoFindFirstArgs} args - Arguments to find a Contrato
     * @example
     * // Get one Contrato
     * const contrato = await prisma.contrato.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContratoFindFirstArgs>(args?: SelectSubset<T, ContratoFindFirstArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contrato that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContratoFindFirstOrThrowArgs} args - Arguments to find a Contrato
     * @example
     * // Get one Contrato
     * const contrato = await prisma.contrato.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContratoFindFirstOrThrowArgs>(args?: SelectSubset<T, ContratoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Contratoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContratoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contratoes
     * const contratoes = await prisma.contrato.findMany()
     * 
     * // Get first 10 Contratoes
     * const contratoes = await prisma.contrato.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contratoWithIdOnly = await prisma.contrato.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ContratoFindManyArgs>(args?: SelectSubset<T, ContratoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Contrato.
     * @param {ContratoCreateArgs} args - Arguments to create a Contrato.
     * @example
     * // Create one Contrato
     * const Contrato = await prisma.contrato.create({
     *   data: {
     *     // ... data to create a Contrato
     *   }
     * })
     * 
     */
    create<T extends ContratoCreateArgs>(args: SelectSubset<T, ContratoCreateArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Contratoes.
     * @param {ContratoCreateManyArgs} args - Arguments to create many Contratoes.
     * @example
     * // Create many Contratoes
     * const contrato = await prisma.contrato.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContratoCreateManyArgs>(args?: SelectSubset<T, ContratoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Contrato.
     * @param {ContratoDeleteArgs} args - Arguments to delete one Contrato.
     * @example
     * // Delete one Contrato
     * const Contrato = await prisma.contrato.delete({
     *   where: {
     *     // ... filter to delete one Contrato
     *   }
     * })
     * 
     */
    delete<T extends ContratoDeleteArgs>(args: SelectSubset<T, ContratoDeleteArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Contrato.
     * @param {ContratoUpdateArgs} args - Arguments to update one Contrato.
     * @example
     * // Update one Contrato
     * const contrato = await prisma.contrato.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContratoUpdateArgs>(args: SelectSubset<T, ContratoUpdateArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Contratoes.
     * @param {ContratoDeleteManyArgs} args - Arguments to filter Contratoes to delete.
     * @example
     * // Delete a few Contratoes
     * const { count } = await prisma.contrato.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContratoDeleteManyArgs>(args?: SelectSubset<T, ContratoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contratoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContratoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contratoes
     * const contrato = await prisma.contrato.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContratoUpdateManyArgs>(args: SelectSubset<T, ContratoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contrato.
     * @param {ContratoUpsertArgs} args - Arguments to update or create a Contrato.
     * @example
     * // Update or create a Contrato
     * const contrato = await prisma.contrato.upsert({
     *   create: {
     *     // ... data to create a Contrato
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contrato we want to update
     *   }
     * })
     */
    upsert<T extends ContratoUpsertArgs>(args: SelectSubset<T, ContratoUpsertArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Contratoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContratoCountArgs} args - Arguments to filter Contratoes to count.
     * @example
     * // Count the number of Contratoes
     * const count = await prisma.contrato.count({
     *   where: {
     *     // ... the filter for the Contratoes we want to count
     *   }
     * })
    **/
    count<T extends ContratoCountArgs>(
      args?: Subset<T, ContratoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContratoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contrato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContratoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContratoAggregateArgs>(args: Subset<T, ContratoAggregateArgs>): Prisma.PrismaPromise<GetContratoAggregateType<T>>

    /**
     * Group by Contrato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContratoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContratoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContratoGroupByArgs['orderBy'] }
        : { orderBy?: ContratoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContratoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContratoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Contrato model
   */
  readonly fields: ContratoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Contrato.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContratoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Veiculo<T extends Contrato$VeiculoArgs<ExtArgs> = {}>(args?: Subset<T, Contrato$VeiculoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Eletricista<T extends Contrato$EletricistaArgs<ExtArgs> = {}>(args?: Subset<T, Contrato$EletricistaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Equipe<T extends Contrato$EquipeArgs<ExtArgs> = {}>(args?: Subset<T, Contrato$EquipeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Supervisor<T extends Contrato$SupervisorArgs<ExtArgs> = {}>(args?: Subset<T, Contrato$SupervisorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MobileContratoPermissao<T extends Contrato$MobileContratoPermissaoArgs<ExtArgs> = {}>(args?: Subset<T, Contrato$MobileContratoPermissaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Base<T extends Contrato$BaseArgs<ExtArgs> = {}>(args?: Subset<T, Contrato$BaseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Contrato model
   */
  interface ContratoFieldRefs {
    readonly id: FieldRef<"Contrato", 'Int'>
    readonly nome: FieldRef<"Contrato", 'String'>
    readonly numero: FieldRef<"Contrato", 'String'>
    readonly dataInicio: FieldRef<"Contrato", 'DateTime'>
    readonly dataFim: FieldRef<"Contrato", 'DateTime'>
    readonly createdAt: FieldRef<"Contrato", 'DateTime'>
    readonly createdBy: FieldRef<"Contrato", 'String'>
    readonly updatedAt: FieldRef<"Contrato", 'DateTime'>
    readonly updatedBy: FieldRef<"Contrato", 'String'>
    readonly deletedAt: FieldRef<"Contrato", 'DateTime'>
    readonly deletedBy: FieldRef<"Contrato", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Contrato findUnique
   */
  export type ContratoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contrato
     */
    select?: ContratoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contrato
     */
    omit?: ContratoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContratoInclude<ExtArgs> | null
    /**
     * Filter, which Contrato to fetch.
     */
    where: ContratoWhereUniqueInput
  }

  /**
   * Contrato findUniqueOrThrow
   */
  export type ContratoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contrato
     */
    select?: ContratoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contrato
     */
    omit?: ContratoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContratoInclude<ExtArgs> | null
    /**
     * Filter, which Contrato to fetch.
     */
    where: ContratoWhereUniqueInput
  }

  /**
   * Contrato findFirst
   */
  export type ContratoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contrato
     */
    select?: ContratoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contrato
     */
    omit?: ContratoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContratoInclude<ExtArgs> | null
    /**
     * Filter, which Contrato to fetch.
     */
    where?: ContratoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contratoes to fetch.
     */
    orderBy?: ContratoOrderByWithRelationInput | ContratoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contratoes.
     */
    cursor?: ContratoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contratoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contratoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contratoes.
     */
    distinct?: ContratoScalarFieldEnum | ContratoScalarFieldEnum[]
  }

  /**
   * Contrato findFirstOrThrow
   */
  export type ContratoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contrato
     */
    select?: ContratoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contrato
     */
    omit?: ContratoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContratoInclude<ExtArgs> | null
    /**
     * Filter, which Contrato to fetch.
     */
    where?: ContratoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contratoes to fetch.
     */
    orderBy?: ContratoOrderByWithRelationInput | ContratoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contratoes.
     */
    cursor?: ContratoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contratoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contratoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contratoes.
     */
    distinct?: ContratoScalarFieldEnum | ContratoScalarFieldEnum[]
  }

  /**
   * Contrato findMany
   */
  export type ContratoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contrato
     */
    select?: ContratoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contrato
     */
    omit?: ContratoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContratoInclude<ExtArgs> | null
    /**
     * Filter, which Contratoes to fetch.
     */
    where?: ContratoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contratoes to fetch.
     */
    orderBy?: ContratoOrderByWithRelationInput | ContratoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contratoes.
     */
    cursor?: ContratoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contratoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contratoes.
     */
    skip?: number
    distinct?: ContratoScalarFieldEnum | ContratoScalarFieldEnum[]
  }

  /**
   * Contrato create
   */
  export type ContratoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contrato
     */
    select?: ContratoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contrato
     */
    omit?: ContratoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContratoInclude<ExtArgs> | null
    /**
     * The data needed to create a Contrato.
     */
    data: XOR<ContratoCreateInput, ContratoUncheckedCreateInput>
  }

  /**
   * Contrato createMany
   */
  export type ContratoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contratoes.
     */
    data: ContratoCreateManyInput | ContratoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Contrato update
   */
  export type ContratoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contrato
     */
    select?: ContratoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contrato
     */
    omit?: ContratoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContratoInclude<ExtArgs> | null
    /**
     * The data needed to update a Contrato.
     */
    data: XOR<ContratoUpdateInput, ContratoUncheckedUpdateInput>
    /**
     * Choose, which Contrato to update.
     */
    where: ContratoWhereUniqueInput
  }

  /**
   * Contrato updateMany
   */
  export type ContratoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contratoes.
     */
    data: XOR<ContratoUpdateManyMutationInput, ContratoUncheckedUpdateManyInput>
    /**
     * Filter which Contratoes to update
     */
    where?: ContratoWhereInput
    /**
     * Limit how many Contratoes to update.
     */
    limit?: number
  }

  /**
   * Contrato upsert
   */
  export type ContratoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contrato
     */
    select?: ContratoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contrato
     */
    omit?: ContratoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContratoInclude<ExtArgs> | null
    /**
     * The filter to search for the Contrato to update in case it exists.
     */
    where: ContratoWhereUniqueInput
    /**
     * In case the Contrato found by the `where` argument doesn't exist, create a new Contrato with this data.
     */
    create: XOR<ContratoCreateInput, ContratoUncheckedCreateInput>
    /**
     * In case the Contrato was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContratoUpdateInput, ContratoUncheckedUpdateInput>
  }

  /**
   * Contrato delete
   */
  export type ContratoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contrato
     */
    select?: ContratoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contrato
     */
    omit?: ContratoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContratoInclude<ExtArgs> | null
    /**
     * Filter which Contrato to delete.
     */
    where: ContratoWhereUniqueInput
  }

  /**
   * Contrato deleteMany
   */
  export type ContratoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contratoes to delete
     */
    where?: ContratoWhereInput
    /**
     * Limit how many Contratoes to delete.
     */
    limit?: number
  }

  /**
   * Contrato.Veiculo
   */
  export type Contrato$VeiculoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    where?: VeiculoWhereInput
    orderBy?: VeiculoOrderByWithRelationInput | VeiculoOrderByWithRelationInput[]
    cursor?: VeiculoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VeiculoScalarFieldEnum | VeiculoScalarFieldEnum[]
  }

  /**
   * Contrato.Eletricista
   */
  export type Contrato$EletricistaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    where?: EletricistaWhereInput
    orderBy?: EletricistaOrderByWithRelationInput | EletricistaOrderByWithRelationInput[]
    cursor?: EletricistaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EletricistaScalarFieldEnum | EletricistaScalarFieldEnum[]
  }

  /**
   * Contrato.Equipe
   */
  export type Contrato$EquipeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    where?: EquipeWhereInput
    orderBy?: EquipeOrderByWithRelationInput | EquipeOrderByWithRelationInput[]
    cursor?: EquipeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipeScalarFieldEnum | EquipeScalarFieldEnum[]
  }

  /**
   * Contrato.Supervisor
   */
  export type Contrato$SupervisorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
    where?: SupervisorWhereInput
    orderBy?: SupervisorOrderByWithRelationInput | SupervisorOrderByWithRelationInput[]
    cursor?: SupervisorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupervisorScalarFieldEnum | SupervisorScalarFieldEnum[]
  }

  /**
   * Contrato.MobileContratoPermissao
   */
  export type Contrato$MobileContratoPermissaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    where?: MobileContratoPermissaoWhereInput
    orderBy?: MobileContratoPermissaoOrderByWithRelationInput | MobileContratoPermissaoOrderByWithRelationInput[]
    cursor?: MobileContratoPermissaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MobileContratoPermissaoScalarFieldEnum | MobileContratoPermissaoScalarFieldEnum[]
  }

  /**
   * Contrato.Base
   */
  export type Contrato$BaseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Base
     */
    select?: BaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Base
     */
    omit?: BaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BaseInclude<ExtArgs> | null
    where?: BaseWhereInput
    orderBy?: BaseOrderByWithRelationInput | BaseOrderByWithRelationInput[]
    cursor?: BaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BaseScalarFieldEnum | BaseScalarFieldEnum[]
  }

  /**
   * Contrato without action
   */
  export type ContratoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contrato
     */
    select?: ContratoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contrato
     */
    omit?: ContratoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContratoInclude<ExtArgs> | null
  }


  /**
   * Model MobileContratoPermissao
   */

  export type AggregateMobileContratoPermissao = {
    _count: MobileContratoPermissaoCountAggregateOutputType | null
    _avg: MobileContratoPermissaoAvgAggregateOutputType | null
    _sum: MobileContratoPermissaoSumAggregateOutputType | null
    _min: MobileContratoPermissaoMinAggregateOutputType | null
    _max: MobileContratoPermissaoMaxAggregateOutputType | null
  }

  export type MobileContratoPermissaoAvgAggregateOutputType = {
    id: number | null
    contratoId: number | null
    mobileUserId: number | null
  }

  export type MobileContratoPermissaoSumAggregateOutputType = {
    id: number | null
    contratoId: number | null
    mobileUserId: number | null
  }

  export type MobileContratoPermissaoMinAggregateOutputType = {
    id: number | null
    contratoId: number | null
    mobileUserId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type MobileContratoPermissaoMaxAggregateOutputType = {
    id: number | null
    contratoId: number | null
    mobileUserId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type MobileContratoPermissaoCountAggregateOutputType = {
    id: number
    contratoId: number
    mobileUserId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type MobileContratoPermissaoAvgAggregateInputType = {
    id?: true
    contratoId?: true
    mobileUserId?: true
  }

  export type MobileContratoPermissaoSumAggregateInputType = {
    id?: true
    contratoId?: true
    mobileUserId?: true
  }

  export type MobileContratoPermissaoMinAggregateInputType = {
    id?: true
    contratoId?: true
    mobileUserId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type MobileContratoPermissaoMaxAggregateInputType = {
    id?: true
    contratoId?: true
    mobileUserId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type MobileContratoPermissaoCountAggregateInputType = {
    id?: true
    contratoId?: true
    mobileUserId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type MobileContratoPermissaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MobileContratoPermissao to aggregate.
     */
    where?: MobileContratoPermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileContratoPermissaos to fetch.
     */
    orderBy?: MobileContratoPermissaoOrderByWithRelationInput | MobileContratoPermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MobileContratoPermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileContratoPermissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileContratoPermissaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MobileContratoPermissaos
    **/
    _count?: true | MobileContratoPermissaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MobileContratoPermissaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MobileContratoPermissaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MobileContratoPermissaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MobileContratoPermissaoMaxAggregateInputType
  }

  export type GetMobileContratoPermissaoAggregateType<T extends MobileContratoPermissaoAggregateArgs> = {
        [P in keyof T & keyof AggregateMobileContratoPermissao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMobileContratoPermissao[P]>
      : GetScalarType<T[P], AggregateMobileContratoPermissao[P]>
  }




  export type MobileContratoPermissaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MobileContratoPermissaoWhereInput
    orderBy?: MobileContratoPermissaoOrderByWithAggregationInput | MobileContratoPermissaoOrderByWithAggregationInput[]
    by: MobileContratoPermissaoScalarFieldEnum[] | MobileContratoPermissaoScalarFieldEnum
    having?: MobileContratoPermissaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MobileContratoPermissaoCountAggregateInputType | true
    _avg?: MobileContratoPermissaoAvgAggregateInputType
    _sum?: MobileContratoPermissaoSumAggregateInputType
    _min?: MobileContratoPermissaoMinAggregateInputType
    _max?: MobileContratoPermissaoMaxAggregateInputType
  }

  export type MobileContratoPermissaoGroupByOutputType = {
    id: number
    contratoId: number
    mobileUserId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: MobileContratoPermissaoCountAggregateOutputType | null
    _avg: MobileContratoPermissaoAvgAggregateOutputType | null
    _sum: MobileContratoPermissaoSumAggregateOutputType | null
    _min: MobileContratoPermissaoMinAggregateOutputType | null
    _max: MobileContratoPermissaoMaxAggregateOutputType | null
  }

  type GetMobileContratoPermissaoGroupByPayload<T extends MobileContratoPermissaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MobileContratoPermissaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MobileContratoPermissaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MobileContratoPermissaoGroupByOutputType[P]>
            : GetScalarType<T[P], MobileContratoPermissaoGroupByOutputType[P]>
        }
      >
    >


  export type MobileContratoPermissaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    contratoId?: boolean
    mobileUserId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    mobileUser?: boolean | MobileUserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mobileContratoPermissao"]>



  export type MobileContratoPermissaoSelectScalar = {
    id?: boolean
    contratoId?: boolean
    mobileUserId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type MobileContratoPermissaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "contratoId" | "mobileUserId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["mobileContratoPermissao"]>
  export type MobileContratoPermissaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    mobileUser?: boolean | MobileUserDefaultArgs<ExtArgs>
  }

  export type $MobileContratoPermissaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MobileContratoPermissao"
    objects: {
      contrato: Prisma.$ContratoPayload<ExtArgs>
      mobileUser: Prisma.$MobileUserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      contratoId: number
      mobileUserId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["mobileContratoPermissao"]>
    composites: {}
  }

  type MobileContratoPermissaoGetPayload<S extends boolean | null | undefined | MobileContratoPermissaoDefaultArgs> = $Result.GetResult<Prisma.$MobileContratoPermissaoPayload, S>

  type MobileContratoPermissaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MobileContratoPermissaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MobileContratoPermissaoCountAggregateInputType | true
    }

  export interface MobileContratoPermissaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MobileContratoPermissao'], meta: { name: 'MobileContratoPermissao' } }
    /**
     * Find zero or one MobileContratoPermissao that matches the filter.
     * @param {MobileContratoPermissaoFindUniqueArgs} args - Arguments to find a MobileContratoPermissao
     * @example
     * // Get one MobileContratoPermissao
     * const mobileContratoPermissao = await prisma.mobileContratoPermissao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MobileContratoPermissaoFindUniqueArgs>(args: SelectSubset<T, MobileContratoPermissaoFindUniqueArgs<ExtArgs>>): Prisma__MobileContratoPermissaoClient<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MobileContratoPermissao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MobileContratoPermissaoFindUniqueOrThrowArgs} args - Arguments to find a MobileContratoPermissao
     * @example
     * // Get one MobileContratoPermissao
     * const mobileContratoPermissao = await prisma.mobileContratoPermissao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MobileContratoPermissaoFindUniqueOrThrowArgs>(args: SelectSubset<T, MobileContratoPermissaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MobileContratoPermissaoClient<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MobileContratoPermissao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileContratoPermissaoFindFirstArgs} args - Arguments to find a MobileContratoPermissao
     * @example
     * // Get one MobileContratoPermissao
     * const mobileContratoPermissao = await prisma.mobileContratoPermissao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MobileContratoPermissaoFindFirstArgs>(args?: SelectSubset<T, MobileContratoPermissaoFindFirstArgs<ExtArgs>>): Prisma__MobileContratoPermissaoClient<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MobileContratoPermissao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileContratoPermissaoFindFirstOrThrowArgs} args - Arguments to find a MobileContratoPermissao
     * @example
     * // Get one MobileContratoPermissao
     * const mobileContratoPermissao = await prisma.mobileContratoPermissao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MobileContratoPermissaoFindFirstOrThrowArgs>(args?: SelectSubset<T, MobileContratoPermissaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__MobileContratoPermissaoClient<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MobileContratoPermissaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileContratoPermissaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MobileContratoPermissaos
     * const mobileContratoPermissaos = await prisma.mobileContratoPermissao.findMany()
     * 
     * // Get first 10 MobileContratoPermissaos
     * const mobileContratoPermissaos = await prisma.mobileContratoPermissao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mobileContratoPermissaoWithIdOnly = await prisma.mobileContratoPermissao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MobileContratoPermissaoFindManyArgs>(args?: SelectSubset<T, MobileContratoPermissaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MobileContratoPermissao.
     * @param {MobileContratoPermissaoCreateArgs} args - Arguments to create a MobileContratoPermissao.
     * @example
     * // Create one MobileContratoPermissao
     * const MobileContratoPermissao = await prisma.mobileContratoPermissao.create({
     *   data: {
     *     // ... data to create a MobileContratoPermissao
     *   }
     * })
     * 
     */
    create<T extends MobileContratoPermissaoCreateArgs>(args: SelectSubset<T, MobileContratoPermissaoCreateArgs<ExtArgs>>): Prisma__MobileContratoPermissaoClient<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MobileContratoPermissaos.
     * @param {MobileContratoPermissaoCreateManyArgs} args - Arguments to create many MobileContratoPermissaos.
     * @example
     * // Create many MobileContratoPermissaos
     * const mobileContratoPermissao = await prisma.mobileContratoPermissao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MobileContratoPermissaoCreateManyArgs>(args?: SelectSubset<T, MobileContratoPermissaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MobileContratoPermissao.
     * @param {MobileContratoPermissaoDeleteArgs} args - Arguments to delete one MobileContratoPermissao.
     * @example
     * // Delete one MobileContratoPermissao
     * const MobileContratoPermissao = await prisma.mobileContratoPermissao.delete({
     *   where: {
     *     // ... filter to delete one MobileContratoPermissao
     *   }
     * })
     * 
     */
    delete<T extends MobileContratoPermissaoDeleteArgs>(args: SelectSubset<T, MobileContratoPermissaoDeleteArgs<ExtArgs>>): Prisma__MobileContratoPermissaoClient<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MobileContratoPermissao.
     * @param {MobileContratoPermissaoUpdateArgs} args - Arguments to update one MobileContratoPermissao.
     * @example
     * // Update one MobileContratoPermissao
     * const mobileContratoPermissao = await prisma.mobileContratoPermissao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MobileContratoPermissaoUpdateArgs>(args: SelectSubset<T, MobileContratoPermissaoUpdateArgs<ExtArgs>>): Prisma__MobileContratoPermissaoClient<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MobileContratoPermissaos.
     * @param {MobileContratoPermissaoDeleteManyArgs} args - Arguments to filter MobileContratoPermissaos to delete.
     * @example
     * // Delete a few MobileContratoPermissaos
     * const { count } = await prisma.mobileContratoPermissao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MobileContratoPermissaoDeleteManyArgs>(args?: SelectSubset<T, MobileContratoPermissaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MobileContratoPermissaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileContratoPermissaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MobileContratoPermissaos
     * const mobileContratoPermissao = await prisma.mobileContratoPermissao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MobileContratoPermissaoUpdateManyArgs>(args: SelectSubset<T, MobileContratoPermissaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MobileContratoPermissao.
     * @param {MobileContratoPermissaoUpsertArgs} args - Arguments to update or create a MobileContratoPermissao.
     * @example
     * // Update or create a MobileContratoPermissao
     * const mobileContratoPermissao = await prisma.mobileContratoPermissao.upsert({
     *   create: {
     *     // ... data to create a MobileContratoPermissao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MobileContratoPermissao we want to update
     *   }
     * })
     */
    upsert<T extends MobileContratoPermissaoUpsertArgs>(args: SelectSubset<T, MobileContratoPermissaoUpsertArgs<ExtArgs>>): Prisma__MobileContratoPermissaoClient<$Result.GetResult<Prisma.$MobileContratoPermissaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MobileContratoPermissaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileContratoPermissaoCountArgs} args - Arguments to filter MobileContratoPermissaos to count.
     * @example
     * // Count the number of MobileContratoPermissaos
     * const count = await prisma.mobileContratoPermissao.count({
     *   where: {
     *     // ... the filter for the MobileContratoPermissaos we want to count
     *   }
     * })
    **/
    count<T extends MobileContratoPermissaoCountArgs>(
      args?: Subset<T, MobileContratoPermissaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MobileContratoPermissaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MobileContratoPermissao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileContratoPermissaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MobileContratoPermissaoAggregateArgs>(args: Subset<T, MobileContratoPermissaoAggregateArgs>): Prisma.PrismaPromise<GetMobileContratoPermissaoAggregateType<T>>

    /**
     * Group by MobileContratoPermissao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MobileContratoPermissaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MobileContratoPermissaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MobileContratoPermissaoGroupByArgs['orderBy'] }
        : { orderBy?: MobileContratoPermissaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MobileContratoPermissaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMobileContratoPermissaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MobileContratoPermissao model
   */
  readonly fields: MobileContratoPermissaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MobileContratoPermissao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MobileContratoPermissaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    contrato<T extends ContratoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContratoDefaultArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    mobileUser<T extends MobileUserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MobileUserDefaultArgs<ExtArgs>>): Prisma__MobileUserClient<$Result.GetResult<Prisma.$MobileUserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MobileContratoPermissao model
   */
  interface MobileContratoPermissaoFieldRefs {
    readonly id: FieldRef<"MobileContratoPermissao", 'Int'>
    readonly contratoId: FieldRef<"MobileContratoPermissao", 'Int'>
    readonly mobileUserId: FieldRef<"MobileContratoPermissao", 'Int'>
    readonly createdAt: FieldRef<"MobileContratoPermissao", 'DateTime'>
    readonly createdBy: FieldRef<"MobileContratoPermissao", 'String'>
    readonly updatedAt: FieldRef<"MobileContratoPermissao", 'DateTime'>
    readonly updatedBy: FieldRef<"MobileContratoPermissao", 'String'>
    readonly deletedAt: FieldRef<"MobileContratoPermissao", 'DateTime'>
    readonly deletedBy: FieldRef<"MobileContratoPermissao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MobileContratoPermissao findUnique
   */
  export type MobileContratoPermissaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    /**
     * Filter, which MobileContratoPermissao to fetch.
     */
    where: MobileContratoPermissaoWhereUniqueInput
  }

  /**
   * MobileContratoPermissao findUniqueOrThrow
   */
  export type MobileContratoPermissaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    /**
     * Filter, which MobileContratoPermissao to fetch.
     */
    where: MobileContratoPermissaoWhereUniqueInput
  }

  /**
   * MobileContratoPermissao findFirst
   */
  export type MobileContratoPermissaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    /**
     * Filter, which MobileContratoPermissao to fetch.
     */
    where?: MobileContratoPermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileContratoPermissaos to fetch.
     */
    orderBy?: MobileContratoPermissaoOrderByWithRelationInput | MobileContratoPermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MobileContratoPermissaos.
     */
    cursor?: MobileContratoPermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileContratoPermissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileContratoPermissaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MobileContratoPermissaos.
     */
    distinct?: MobileContratoPermissaoScalarFieldEnum | MobileContratoPermissaoScalarFieldEnum[]
  }

  /**
   * MobileContratoPermissao findFirstOrThrow
   */
  export type MobileContratoPermissaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    /**
     * Filter, which MobileContratoPermissao to fetch.
     */
    where?: MobileContratoPermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileContratoPermissaos to fetch.
     */
    orderBy?: MobileContratoPermissaoOrderByWithRelationInput | MobileContratoPermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MobileContratoPermissaos.
     */
    cursor?: MobileContratoPermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileContratoPermissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileContratoPermissaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MobileContratoPermissaos.
     */
    distinct?: MobileContratoPermissaoScalarFieldEnum | MobileContratoPermissaoScalarFieldEnum[]
  }

  /**
   * MobileContratoPermissao findMany
   */
  export type MobileContratoPermissaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    /**
     * Filter, which MobileContratoPermissaos to fetch.
     */
    where?: MobileContratoPermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MobileContratoPermissaos to fetch.
     */
    orderBy?: MobileContratoPermissaoOrderByWithRelationInput | MobileContratoPermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MobileContratoPermissaos.
     */
    cursor?: MobileContratoPermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MobileContratoPermissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MobileContratoPermissaos.
     */
    skip?: number
    distinct?: MobileContratoPermissaoScalarFieldEnum | MobileContratoPermissaoScalarFieldEnum[]
  }

  /**
   * MobileContratoPermissao create
   */
  export type MobileContratoPermissaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    /**
     * The data needed to create a MobileContratoPermissao.
     */
    data: XOR<MobileContratoPermissaoCreateInput, MobileContratoPermissaoUncheckedCreateInput>
  }

  /**
   * MobileContratoPermissao createMany
   */
  export type MobileContratoPermissaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MobileContratoPermissaos.
     */
    data: MobileContratoPermissaoCreateManyInput | MobileContratoPermissaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MobileContratoPermissao update
   */
  export type MobileContratoPermissaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    /**
     * The data needed to update a MobileContratoPermissao.
     */
    data: XOR<MobileContratoPermissaoUpdateInput, MobileContratoPermissaoUncheckedUpdateInput>
    /**
     * Choose, which MobileContratoPermissao to update.
     */
    where: MobileContratoPermissaoWhereUniqueInput
  }

  /**
   * MobileContratoPermissao updateMany
   */
  export type MobileContratoPermissaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MobileContratoPermissaos.
     */
    data: XOR<MobileContratoPermissaoUpdateManyMutationInput, MobileContratoPermissaoUncheckedUpdateManyInput>
    /**
     * Filter which MobileContratoPermissaos to update
     */
    where?: MobileContratoPermissaoWhereInput
    /**
     * Limit how many MobileContratoPermissaos to update.
     */
    limit?: number
  }

  /**
   * MobileContratoPermissao upsert
   */
  export type MobileContratoPermissaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    /**
     * The filter to search for the MobileContratoPermissao to update in case it exists.
     */
    where: MobileContratoPermissaoWhereUniqueInput
    /**
     * In case the MobileContratoPermissao found by the `where` argument doesn't exist, create a new MobileContratoPermissao with this data.
     */
    create: XOR<MobileContratoPermissaoCreateInput, MobileContratoPermissaoUncheckedCreateInput>
    /**
     * In case the MobileContratoPermissao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MobileContratoPermissaoUpdateInput, MobileContratoPermissaoUncheckedUpdateInput>
  }

  /**
   * MobileContratoPermissao delete
   */
  export type MobileContratoPermissaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
    /**
     * Filter which MobileContratoPermissao to delete.
     */
    where: MobileContratoPermissaoWhereUniqueInput
  }

  /**
   * MobileContratoPermissao deleteMany
   */
  export type MobileContratoPermissaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MobileContratoPermissaos to delete
     */
    where?: MobileContratoPermissaoWhereInput
    /**
     * Limit how many MobileContratoPermissaos to delete.
     */
    limit?: number
  }

  /**
   * MobileContratoPermissao without action
   */
  export type MobileContratoPermissaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MobileContratoPermissao
     */
    select?: MobileContratoPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MobileContratoPermissao
     */
    omit?: MobileContratoPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MobileContratoPermissaoInclude<ExtArgs> | null
  }


  /**
   * Model EletricistaBaseHistorico
   */

  export type AggregateEletricistaBaseHistorico = {
    _count: EletricistaBaseHistoricoCountAggregateOutputType | null
    _avg: EletricistaBaseHistoricoAvgAggregateOutputType | null
    _sum: EletricistaBaseHistoricoSumAggregateOutputType | null
    _min: EletricistaBaseHistoricoMinAggregateOutputType | null
    _max: EletricistaBaseHistoricoMaxAggregateOutputType | null
  }

  export type EletricistaBaseHistoricoAvgAggregateOutputType = {
    id: number | null
    eletricistaId: number | null
    baseId: number | null
  }

  export type EletricistaBaseHistoricoSumAggregateOutputType = {
    id: number | null
    eletricistaId: number | null
    baseId: number | null
  }

  export type EletricistaBaseHistoricoMinAggregateOutputType = {
    id: number | null
    eletricistaId: number | null
    baseId: number | null
    dataInicio: Date | null
    dataFim: Date | null
    motivo: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EletricistaBaseHistoricoMaxAggregateOutputType = {
    id: number | null
    eletricistaId: number | null
    baseId: number | null
    dataInicio: Date | null
    dataFim: Date | null
    motivo: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EletricistaBaseHistoricoCountAggregateOutputType = {
    id: number
    eletricistaId: number
    baseId: number
    dataInicio: number
    dataFim: number
    motivo: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type EletricistaBaseHistoricoAvgAggregateInputType = {
    id?: true
    eletricistaId?: true
    baseId?: true
  }

  export type EletricistaBaseHistoricoSumAggregateInputType = {
    id?: true
    eletricistaId?: true
    baseId?: true
  }

  export type EletricistaBaseHistoricoMinAggregateInputType = {
    id?: true
    eletricistaId?: true
    baseId?: true
    dataInicio?: true
    dataFim?: true
    motivo?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EletricistaBaseHistoricoMaxAggregateInputType = {
    id?: true
    eletricistaId?: true
    baseId?: true
    dataInicio?: true
    dataFim?: true
    motivo?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EletricistaBaseHistoricoCountAggregateInputType = {
    id?: true
    eletricistaId?: true
    baseId?: true
    dataInicio?: true
    dataFim?: true
    motivo?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type EletricistaBaseHistoricoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EletricistaBaseHistorico to aggregate.
     */
    where?: EletricistaBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EletricistaBaseHistoricos to fetch.
     */
    orderBy?: EletricistaBaseHistoricoOrderByWithRelationInput | EletricistaBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EletricistaBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EletricistaBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EletricistaBaseHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EletricistaBaseHistoricos
    **/
    _count?: true | EletricistaBaseHistoricoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EletricistaBaseHistoricoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EletricistaBaseHistoricoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EletricistaBaseHistoricoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EletricistaBaseHistoricoMaxAggregateInputType
  }

  export type GetEletricistaBaseHistoricoAggregateType<T extends EletricistaBaseHistoricoAggregateArgs> = {
        [P in keyof T & keyof AggregateEletricistaBaseHistorico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEletricistaBaseHistorico[P]>
      : GetScalarType<T[P], AggregateEletricistaBaseHistorico[P]>
  }




  export type EletricistaBaseHistoricoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EletricistaBaseHistoricoWhereInput
    orderBy?: EletricistaBaseHistoricoOrderByWithAggregationInput | EletricistaBaseHistoricoOrderByWithAggregationInput[]
    by: EletricistaBaseHistoricoScalarFieldEnum[] | EletricistaBaseHistoricoScalarFieldEnum
    having?: EletricistaBaseHistoricoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EletricistaBaseHistoricoCountAggregateInputType | true
    _avg?: EletricistaBaseHistoricoAvgAggregateInputType
    _sum?: EletricistaBaseHistoricoSumAggregateInputType
    _min?: EletricistaBaseHistoricoMinAggregateInputType
    _max?: EletricistaBaseHistoricoMaxAggregateInputType
  }

  export type EletricistaBaseHistoricoGroupByOutputType = {
    id: number
    eletricistaId: number
    baseId: number
    dataInicio: Date
    dataFim: Date | null
    motivo: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: EletricistaBaseHistoricoCountAggregateOutputType | null
    _avg: EletricistaBaseHistoricoAvgAggregateOutputType | null
    _sum: EletricistaBaseHistoricoSumAggregateOutputType | null
    _min: EletricistaBaseHistoricoMinAggregateOutputType | null
    _max: EletricistaBaseHistoricoMaxAggregateOutputType | null
  }

  type GetEletricistaBaseHistoricoGroupByPayload<T extends EletricistaBaseHistoricoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EletricistaBaseHistoricoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EletricistaBaseHistoricoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EletricistaBaseHistoricoGroupByOutputType[P]>
            : GetScalarType<T[P], EletricistaBaseHistoricoGroupByOutputType[P]>
        }
      >
    >


  export type EletricistaBaseHistoricoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eletricistaId?: boolean
    baseId?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    motivo?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    eletricista?: boolean | EletricistaDefaultArgs<ExtArgs>
    base?: boolean | BaseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eletricistaBaseHistorico"]>



  export type EletricistaBaseHistoricoSelectScalar = {
    id?: boolean
    eletricistaId?: boolean
    baseId?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    motivo?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type EletricistaBaseHistoricoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "eletricistaId" | "baseId" | "dataInicio" | "dataFim" | "motivo" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["eletricistaBaseHistorico"]>
  export type EletricistaBaseHistoricoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    eletricista?: boolean | EletricistaDefaultArgs<ExtArgs>
    base?: boolean | BaseDefaultArgs<ExtArgs>
  }

  export type $EletricistaBaseHistoricoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EletricistaBaseHistorico"
    objects: {
      eletricista: Prisma.$EletricistaPayload<ExtArgs>
      base: Prisma.$BasePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      eletricistaId: number
      baseId: number
      dataInicio: Date
      dataFim: Date | null
      motivo: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["eletricistaBaseHistorico"]>
    composites: {}
  }

  type EletricistaBaseHistoricoGetPayload<S extends boolean | null | undefined | EletricistaBaseHistoricoDefaultArgs> = $Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload, S>

  type EletricistaBaseHistoricoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EletricistaBaseHistoricoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EletricistaBaseHistoricoCountAggregateInputType | true
    }

  export interface EletricistaBaseHistoricoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EletricistaBaseHistorico'], meta: { name: 'EletricistaBaseHistorico' } }
    /**
     * Find zero or one EletricistaBaseHistorico that matches the filter.
     * @param {EletricistaBaseHistoricoFindUniqueArgs} args - Arguments to find a EletricistaBaseHistorico
     * @example
     * // Get one EletricistaBaseHistorico
     * const eletricistaBaseHistorico = await prisma.eletricistaBaseHistorico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EletricistaBaseHistoricoFindUniqueArgs>(args: SelectSubset<T, EletricistaBaseHistoricoFindUniqueArgs<ExtArgs>>): Prisma__EletricistaBaseHistoricoClient<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EletricistaBaseHistorico that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EletricistaBaseHistoricoFindUniqueOrThrowArgs} args - Arguments to find a EletricistaBaseHistorico
     * @example
     * // Get one EletricistaBaseHistorico
     * const eletricistaBaseHistorico = await prisma.eletricistaBaseHistorico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EletricistaBaseHistoricoFindUniqueOrThrowArgs>(args: SelectSubset<T, EletricistaBaseHistoricoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EletricistaBaseHistoricoClient<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EletricistaBaseHistorico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaBaseHistoricoFindFirstArgs} args - Arguments to find a EletricistaBaseHistorico
     * @example
     * // Get one EletricistaBaseHistorico
     * const eletricistaBaseHistorico = await prisma.eletricistaBaseHistorico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EletricistaBaseHistoricoFindFirstArgs>(args?: SelectSubset<T, EletricistaBaseHistoricoFindFirstArgs<ExtArgs>>): Prisma__EletricistaBaseHistoricoClient<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EletricistaBaseHistorico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaBaseHistoricoFindFirstOrThrowArgs} args - Arguments to find a EletricistaBaseHistorico
     * @example
     * // Get one EletricistaBaseHistorico
     * const eletricistaBaseHistorico = await prisma.eletricistaBaseHistorico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EletricistaBaseHistoricoFindFirstOrThrowArgs>(args?: SelectSubset<T, EletricistaBaseHistoricoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EletricistaBaseHistoricoClient<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EletricistaBaseHistoricos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaBaseHistoricoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EletricistaBaseHistoricos
     * const eletricistaBaseHistoricos = await prisma.eletricistaBaseHistorico.findMany()
     * 
     * // Get first 10 EletricistaBaseHistoricos
     * const eletricistaBaseHistoricos = await prisma.eletricistaBaseHistorico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eletricistaBaseHistoricoWithIdOnly = await prisma.eletricistaBaseHistorico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EletricistaBaseHistoricoFindManyArgs>(args?: SelectSubset<T, EletricistaBaseHistoricoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EletricistaBaseHistorico.
     * @param {EletricistaBaseHistoricoCreateArgs} args - Arguments to create a EletricistaBaseHistorico.
     * @example
     * // Create one EletricistaBaseHistorico
     * const EletricistaBaseHistorico = await prisma.eletricistaBaseHistorico.create({
     *   data: {
     *     // ... data to create a EletricistaBaseHistorico
     *   }
     * })
     * 
     */
    create<T extends EletricistaBaseHistoricoCreateArgs>(args: SelectSubset<T, EletricistaBaseHistoricoCreateArgs<ExtArgs>>): Prisma__EletricistaBaseHistoricoClient<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EletricistaBaseHistoricos.
     * @param {EletricistaBaseHistoricoCreateManyArgs} args - Arguments to create many EletricistaBaseHistoricos.
     * @example
     * // Create many EletricistaBaseHistoricos
     * const eletricistaBaseHistorico = await prisma.eletricistaBaseHistorico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EletricistaBaseHistoricoCreateManyArgs>(args?: SelectSubset<T, EletricistaBaseHistoricoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EletricistaBaseHistorico.
     * @param {EletricistaBaseHistoricoDeleteArgs} args - Arguments to delete one EletricistaBaseHistorico.
     * @example
     * // Delete one EletricistaBaseHistorico
     * const EletricistaBaseHistorico = await prisma.eletricistaBaseHistorico.delete({
     *   where: {
     *     // ... filter to delete one EletricistaBaseHistorico
     *   }
     * })
     * 
     */
    delete<T extends EletricistaBaseHistoricoDeleteArgs>(args: SelectSubset<T, EletricistaBaseHistoricoDeleteArgs<ExtArgs>>): Prisma__EletricistaBaseHistoricoClient<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EletricistaBaseHistorico.
     * @param {EletricistaBaseHistoricoUpdateArgs} args - Arguments to update one EletricistaBaseHistorico.
     * @example
     * // Update one EletricistaBaseHistorico
     * const eletricistaBaseHistorico = await prisma.eletricistaBaseHistorico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EletricistaBaseHistoricoUpdateArgs>(args: SelectSubset<T, EletricistaBaseHistoricoUpdateArgs<ExtArgs>>): Prisma__EletricistaBaseHistoricoClient<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EletricistaBaseHistoricos.
     * @param {EletricistaBaseHistoricoDeleteManyArgs} args - Arguments to filter EletricistaBaseHistoricos to delete.
     * @example
     * // Delete a few EletricistaBaseHistoricos
     * const { count } = await prisma.eletricistaBaseHistorico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EletricistaBaseHistoricoDeleteManyArgs>(args?: SelectSubset<T, EletricistaBaseHistoricoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EletricistaBaseHistoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaBaseHistoricoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EletricistaBaseHistoricos
     * const eletricistaBaseHistorico = await prisma.eletricistaBaseHistorico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EletricistaBaseHistoricoUpdateManyArgs>(args: SelectSubset<T, EletricistaBaseHistoricoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EletricistaBaseHistorico.
     * @param {EletricistaBaseHistoricoUpsertArgs} args - Arguments to update or create a EletricistaBaseHistorico.
     * @example
     * // Update or create a EletricistaBaseHistorico
     * const eletricistaBaseHistorico = await prisma.eletricistaBaseHistorico.upsert({
     *   create: {
     *     // ... data to create a EletricistaBaseHistorico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EletricistaBaseHistorico we want to update
     *   }
     * })
     */
    upsert<T extends EletricistaBaseHistoricoUpsertArgs>(args: SelectSubset<T, EletricistaBaseHistoricoUpsertArgs<ExtArgs>>): Prisma__EletricistaBaseHistoricoClient<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EletricistaBaseHistoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaBaseHistoricoCountArgs} args - Arguments to filter EletricistaBaseHistoricos to count.
     * @example
     * // Count the number of EletricistaBaseHistoricos
     * const count = await prisma.eletricistaBaseHistorico.count({
     *   where: {
     *     // ... the filter for the EletricistaBaseHistoricos we want to count
     *   }
     * })
    **/
    count<T extends EletricistaBaseHistoricoCountArgs>(
      args?: Subset<T, EletricistaBaseHistoricoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EletricistaBaseHistoricoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EletricistaBaseHistorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaBaseHistoricoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EletricistaBaseHistoricoAggregateArgs>(args: Subset<T, EletricistaBaseHistoricoAggregateArgs>): Prisma.PrismaPromise<GetEletricistaBaseHistoricoAggregateType<T>>

    /**
     * Group by EletricistaBaseHistorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaBaseHistoricoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EletricistaBaseHistoricoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EletricistaBaseHistoricoGroupByArgs['orderBy'] }
        : { orderBy?: EletricistaBaseHistoricoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EletricistaBaseHistoricoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEletricistaBaseHistoricoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EletricistaBaseHistorico model
   */
  readonly fields: EletricistaBaseHistoricoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EletricistaBaseHistorico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EletricistaBaseHistoricoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    eletricista<T extends EletricistaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EletricistaDefaultArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    base<T extends BaseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BaseDefaultArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EletricistaBaseHistorico model
   */
  interface EletricistaBaseHistoricoFieldRefs {
    readonly id: FieldRef<"EletricistaBaseHistorico", 'Int'>
    readonly eletricistaId: FieldRef<"EletricistaBaseHistorico", 'Int'>
    readonly baseId: FieldRef<"EletricistaBaseHistorico", 'Int'>
    readonly dataInicio: FieldRef<"EletricistaBaseHistorico", 'DateTime'>
    readonly dataFim: FieldRef<"EletricistaBaseHistorico", 'DateTime'>
    readonly motivo: FieldRef<"EletricistaBaseHistorico", 'String'>
    readonly createdAt: FieldRef<"EletricistaBaseHistorico", 'DateTime'>
    readonly createdBy: FieldRef<"EletricistaBaseHistorico", 'String'>
    readonly updatedAt: FieldRef<"EletricistaBaseHistorico", 'DateTime'>
    readonly updatedBy: FieldRef<"EletricistaBaseHistorico", 'String'>
    readonly deletedAt: FieldRef<"EletricistaBaseHistorico", 'DateTime'>
    readonly deletedBy: FieldRef<"EletricistaBaseHistorico", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EletricistaBaseHistorico findUnique
   */
  export type EletricistaBaseHistoricoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EletricistaBaseHistorico to fetch.
     */
    where: EletricistaBaseHistoricoWhereUniqueInput
  }

  /**
   * EletricistaBaseHistorico findUniqueOrThrow
   */
  export type EletricistaBaseHistoricoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EletricistaBaseHistorico to fetch.
     */
    where: EletricistaBaseHistoricoWhereUniqueInput
  }

  /**
   * EletricistaBaseHistorico findFirst
   */
  export type EletricistaBaseHistoricoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EletricistaBaseHistorico to fetch.
     */
    where?: EletricistaBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EletricistaBaseHistoricos to fetch.
     */
    orderBy?: EletricistaBaseHistoricoOrderByWithRelationInput | EletricistaBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EletricistaBaseHistoricos.
     */
    cursor?: EletricistaBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EletricistaBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EletricistaBaseHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EletricistaBaseHistoricos.
     */
    distinct?: EletricistaBaseHistoricoScalarFieldEnum | EletricistaBaseHistoricoScalarFieldEnum[]
  }

  /**
   * EletricistaBaseHistorico findFirstOrThrow
   */
  export type EletricistaBaseHistoricoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EletricistaBaseHistorico to fetch.
     */
    where?: EletricistaBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EletricistaBaseHistoricos to fetch.
     */
    orderBy?: EletricistaBaseHistoricoOrderByWithRelationInput | EletricistaBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EletricistaBaseHistoricos.
     */
    cursor?: EletricistaBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EletricistaBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EletricistaBaseHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EletricistaBaseHistoricos.
     */
    distinct?: EletricistaBaseHistoricoScalarFieldEnum | EletricistaBaseHistoricoScalarFieldEnum[]
  }

  /**
   * EletricistaBaseHistorico findMany
   */
  export type EletricistaBaseHistoricoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EletricistaBaseHistoricos to fetch.
     */
    where?: EletricistaBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EletricistaBaseHistoricos to fetch.
     */
    orderBy?: EletricistaBaseHistoricoOrderByWithRelationInput | EletricistaBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EletricistaBaseHistoricos.
     */
    cursor?: EletricistaBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EletricistaBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EletricistaBaseHistoricos.
     */
    skip?: number
    distinct?: EletricistaBaseHistoricoScalarFieldEnum | EletricistaBaseHistoricoScalarFieldEnum[]
  }

  /**
   * EletricistaBaseHistorico create
   */
  export type EletricistaBaseHistoricoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    /**
     * The data needed to create a EletricistaBaseHistorico.
     */
    data: XOR<EletricistaBaseHistoricoCreateInput, EletricistaBaseHistoricoUncheckedCreateInput>
  }

  /**
   * EletricistaBaseHistorico createMany
   */
  export type EletricistaBaseHistoricoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EletricistaBaseHistoricos.
     */
    data: EletricistaBaseHistoricoCreateManyInput | EletricistaBaseHistoricoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EletricistaBaseHistorico update
   */
  export type EletricistaBaseHistoricoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    /**
     * The data needed to update a EletricistaBaseHistorico.
     */
    data: XOR<EletricistaBaseHistoricoUpdateInput, EletricistaBaseHistoricoUncheckedUpdateInput>
    /**
     * Choose, which EletricistaBaseHistorico to update.
     */
    where: EletricistaBaseHistoricoWhereUniqueInput
  }

  /**
   * EletricistaBaseHistorico updateMany
   */
  export type EletricistaBaseHistoricoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EletricistaBaseHistoricos.
     */
    data: XOR<EletricistaBaseHistoricoUpdateManyMutationInput, EletricistaBaseHistoricoUncheckedUpdateManyInput>
    /**
     * Filter which EletricistaBaseHistoricos to update
     */
    where?: EletricistaBaseHistoricoWhereInput
    /**
     * Limit how many EletricistaBaseHistoricos to update.
     */
    limit?: number
  }

  /**
   * EletricistaBaseHistorico upsert
   */
  export type EletricistaBaseHistoricoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    /**
     * The filter to search for the EletricistaBaseHistorico to update in case it exists.
     */
    where: EletricistaBaseHistoricoWhereUniqueInput
    /**
     * In case the EletricistaBaseHistorico found by the `where` argument doesn't exist, create a new EletricistaBaseHistorico with this data.
     */
    create: XOR<EletricistaBaseHistoricoCreateInput, EletricistaBaseHistoricoUncheckedCreateInput>
    /**
     * In case the EletricistaBaseHistorico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EletricistaBaseHistoricoUpdateInput, EletricistaBaseHistoricoUncheckedUpdateInput>
  }

  /**
   * EletricistaBaseHistorico delete
   */
  export type EletricistaBaseHistoricoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter which EletricistaBaseHistorico to delete.
     */
    where: EletricistaBaseHistoricoWhereUniqueInput
  }

  /**
   * EletricistaBaseHistorico deleteMany
   */
  export type EletricistaBaseHistoricoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EletricistaBaseHistoricos to delete
     */
    where?: EletricistaBaseHistoricoWhereInput
    /**
     * Limit how many EletricistaBaseHistoricos to delete.
     */
    limit?: number
  }

  /**
   * EletricistaBaseHistorico without action
   */
  export type EletricistaBaseHistoricoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
  }


  /**
   * Model Eletricista
   */

  export type AggregateEletricista = {
    _count: EletricistaCountAggregateOutputType | null
    _avg: EletricistaAvgAggregateOutputType | null
    _sum: EletricistaSumAggregateOutputType | null
    _min: EletricistaMinAggregateOutputType | null
    _max: EletricistaMaxAggregateOutputType | null
  }

  export type EletricistaAvgAggregateOutputType = {
    id: number | null
    cargoId: number | null
    contratoId: number | null
  }

  export type EletricistaSumAggregateOutputType = {
    id: number | null
    cargoId: number | null
    contratoId: number | null
  }

  export type EletricistaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    matricula: string | null
    telefone: string | null
    estado: string | null
    admissao: Date | null
    cargoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    contratoId: number | null
  }

  export type EletricistaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    matricula: string | null
    telefone: string | null
    estado: string | null
    admissao: Date | null
    cargoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    contratoId: number | null
  }

  export type EletricistaCountAggregateOutputType = {
    id: number
    nome: number
    matricula: number
    telefone: number
    estado: number
    admissao: number
    cargoId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    contratoId: number
    _all: number
  }


  export type EletricistaAvgAggregateInputType = {
    id?: true
    cargoId?: true
    contratoId?: true
  }

  export type EletricistaSumAggregateInputType = {
    id?: true
    cargoId?: true
    contratoId?: true
  }

  export type EletricistaMinAggregateInputType = {
    id?: true
    nome?: true
    matricula?: true
    telefone?: true
    estado?: true
    admissao?: true
    cargoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    contratoId?: true
  }

  export type EletricistaMaxAggregateInputType = {
    id?: true
    nome?: true
    matricula?: true
    telefone?: true
    estado?: true
    admissao?: true
    cargoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    contratoId?: true
  }

  export type EletricistaCountAggregateInputType = {
    id?: true
    nome?: true
    matricula?: true
    telefone?: true
    estado?: true
    admissao?: true
    cargoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    contratoId?: true
    _all?: true
  }

  export type EletricistaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Eletricista to aggregate.
     */
    where?: EletricistaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eletricistas to fetch.
     */
    orderBy?: EletricistaOrderByWithRelationInput | EletricistaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EletricistaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eletricistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eletricistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Eletricistas
    **/
    _count?: true | EletricistaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EletricistaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EletricistaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EletricistaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EletricistaMaxAggregateInputType
  }

  export type GetEletricistaAggregateType<T extends EletricistaAggregateArgs> = {
        [P in keyof T & keyof AggregateEletricista]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEletricista[P]>
      : GetScalarType<T[P], AggregateEletricista[P]>
  }




  export type EletricistaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EletricistaWhereInput
    orderBy?: EletricistaOrderByWithAggregationInput | EletricistaOrderByWithAggregationInput[]
    by: EletricistaScalarFieldEnum[] | EletricistaScalarFieldEnum
    having?: EletricistaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EletricistaCountAggregateInputType | true
    _avg?: EletricistaAvgAggregateInputType
    _sum?: EletricistaSumAggregateInputType
    _min?: EletricistaMinAggregateInputType
    _max?: EletricistaMaxAggregateInputType
  }

  export type EletricistaGroupByOutputType = {
    id: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao: Date
    cargoId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    contratoId: number
    _count: EletricistaCountAggregateOutputType | null
    _avg: EletricistaAvgAggregateOutputType | null
    _sum: EletricistaSumAggregateOutputType | null
    _min: EletricistaMinAggregateOutputType | null
    _max: EletricistaMaxAggregateOutputType | null
  }

  type GetEletricistaGroupByPayload<T extends EletricistaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EletricistaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EletricistaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EletricistaGroupByOutputType[P]>
            : GetScalarType<T[P], EletricistaGroupByOutputType[P]>
        }
      >
    >


  export type EletricistaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    matricula?: boolean
    telefone?: boolean
    estado?: boolean
    admissao?: boolean
    cargoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    contratoId?: boolean
    cargo?: boolean | CargoDefaultArgs<ExtArgs>
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    TurnoEletricistas?: boolean | Eletricista$TurnoEletricistasArgs<ExtArgs>
    EletricistaBaseHistorico?: boolean | Eletricista$EletricistaBaseHistoricoArgs<ExtArgs>
    EventoCobertura?: boolean | Eletricista$EventoCoberturaArgs<ExtArgs>
    SlotEscala?: boolean | Eletricista$SlotEscalaArgs<ExtArgs>
    _count?: boolean | EletricistaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eletricista"]>



  export type EletricistaSelectScalar = {
    id?: boolean
    nome?: boolean
    matricula?: boolean
    telefone?: boolean
    estado?: boolean
    admissao?: boolean
    cargoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    contratoId?: boolean
  }

  export type EletricistaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "matricula" | "telefone" | "estado" | "admissao" | "cargoId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy" | "contratoId", ExtArgs["result"]["eletricista"]>
  export type EletricistaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cargo?: boolean | CargoDefaultArgs<ExtArgs>
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    TurnoEletricistas?: boolean | Eletricista$TurnoEletricistasArgs<ExtArgs>
    EletricistaBaseHistorico?: boolean | Eletricista$EletricistaBaseHistoricoArgs<ExtArgs>
    EventoCobertura?: boolean | Eletricista$EventoCoberturaArgs<ExtArgs>
    SlotEscala?: boolean | Eletricista$SlotEscalaArgs<ExtArgs>
    _count?: boolean | EletricistaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $EletricistaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Eletricista"
    objects: {
      cargo: Prisma.$CargoPayload<ExtArgs>
      contrato: Prisma.$ContratoPayload<ExtArgs>
      TurnoEletricistas: Prisma.$TurnoEletricistaPayload<ExtArgs>[]
      EletricistaBaseHistorico: Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>[]
      EventoCobertura: Prisma.$EventoCoberturaPayload<ExtArgs>[]
      SlotEscala: Prisma.$SlotEscalaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      matricula: string
      telefone: string
      estado: string
      admissao: Date
      cargoId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
      contratoId: number
    }, ExtArgs["result"]["eletricista"]>
    composites: {}
  }

  type EletricistaGetPayload<S extends boolean | null | undefined | EletricistaDefaultArgs> = $Result.GetResult<Prisma.$EletricistaPayload, S>

  type EletricistaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EletricistaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EletricistaCountAggregateInputType | true
    }

  export interface EletricistaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Eletricista'], meta: { name: 'Eletricista' } }
    /**
     * Find zero or one Eletricista that matches the filter.
     * @param {EletricistaFindUniqueArgs} args - Arguments to find a Eletricista
     * @example
     * // Get one Eletricista
     * const eletricista = await prisma.eletricista.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EletricistaFindUniqueArgs>(args: SelectSubset<T, EletricistaFindUniqueArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Eletricista that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EletricistaFindUniqueOrThrowArgs} args - Arguments to find a Eletricista
     * @example
     * // Get one Eletricista
     * const eletricista = await prisma.eletricista.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EletricistaFindUniqueOrThrowArgs>(args: SelectSubset<T, EletricistaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Eletricista that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaFindFirstArgs} args - Arguments to find a Eletricista
     * @example
     * // Get one Eletricista
     * const eletricista = await prisma.eletricista.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EletricistaFindFirstArgs>(args?: SelectSubset<T, EletricistaFindFirstArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Eletricista that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaFindFirstOrThrowArgs} args - Arguments to find a Eletricista
     * @example
     * // Get one Eletricista
     * const eletricista = await prisma.eletricista.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EletricistaFindFirstOrThrowArgs>(args?: SelectSubset<T, EletricistaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Eletricistas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Eletricistas
     * const eletricistas = await prisma.eletricista.findMany()
     * 
     * // Get first 10 Eletricistas
     * const eletricistas = await prisma.eletricista.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eletricistaWithIdOnly = await prisma.eletricista.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EletricistaFindManyArgs>(args?: SelectSubset<T, EletricistaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Eletricista.
     * @param {EletricistaCreateArgs} args - Arguments to create a Eletricista.
     * @example
     * // Create one Eletricista
     * const Eletricista = await prisma.eletricista.create({
     *   data: {
     *     // ... data to create a Eletricista
     *   }
     * })
     * 
     */
    create<T extends EletricistaCreateArgs>(args: SelectSubset<T, EletricistaCreateArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Eletricistas.
     * @param {EletricistaCreateManyArgs} args - Arguments to create many Eletricistas.
     * @example
     * // Create many Eletricistas
     * const eletricista = await prisma.eletricista.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EletricistaCreateManyArgs>(args?: SelectSubset<T, EletricistaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Eletricista.
     * @param {EletricistaDeleteArgs} args - Arguments to delete one Eletricista.
     * @example
     * // Delete one Eletricista
     * const Eletricista = await prisma.eletricista.delete({
     *   where: {
     *     // ... filter to delete one Eletricista
     *   }
     * })
     * 
     */
    delete<T extends EletricistaDeleteArgs>(args: SelectSubset<T, EletricistaDeleteArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Eletricista.
     * @param {EletricistaUpdateArgs} args - Arguments to update one Eletricista.
     * @example
     * // Update one Eletricista
     * const eletricista = await prisma.eletricista.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EletricistaUpdateArgs>(args: SelectSubset<T, EletricistaUpdateArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Eletricistas.
     * @param {EletricistaDeleteManyArgs} args - Arguments to filter Eletricistas to delete.
     * @example
     * // Delete a few Eletricistas
     * const { count } = await prisma.eletricista.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EletricistaDeleteManyArgs>(args?: SelectSubset<T, EletricistaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Eletricistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Eletricistas
     * const eletricista = await prisma.eletricista.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EletricistaUpdateManyArgs>(args: SelectSubset<T, EletricistaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Eletricista.
     * @param {EletricistaUpsertArgs} args - Arguments to update or create a Eletricista.
     * @example
     * // Update or create a Eletricista
     * const eletricista = await prisma.eletricista.upsert({
     *   create: {
     *     // ... data to create a Eletricista
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Eletricista we want to update
     *   }
     * })
     */
    upsert<T extends EletricistaUpsertArgs>(args: SelectSubset<T, EletricistaUpsertArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Eletricistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaCountArgs} args - Arguments to filter Eletricistas to count.
     * @example
     * // Count the number of Eletricistas
     * const count = await prisma.eletricista.count({
     *   where: {
     *     // ... the filter for the Eletricistas we want to count
     *   }
     * })
    **/
    count<T extends EletricistaCountArgs>(
      args?: Subset<T, EletricistaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EletricistaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Eletricista.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EletricistaAggregateArgs>(args: Subset<T, EletricistaAggregateArgs>): Prisma.PrismaPromise<GetEletricistaAggregateType<T>>

    /**
     * Group by Eletricista.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EletricistaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EletricistaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EletricistaGroupByArgs['orderBy'] }
        : { orderBy?: EletricistaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EletricistaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEletricistaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Eletricista model
   */
  readonly fields: EletricistaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Eletricista.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EletricistaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cargo<T extends CargoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CargoDefaultArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    contrato<T extends ContratoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContratoDefaultArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    TurnoEletricistas<T extends Eletricista$TurnoEletricistasArgs<ExtArgs> = {}>(args?: Subset<T, Eletricista$TurnoEletricistasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EletricistaBaseHistorico<T extends Eletricista$EletricistaBaseHistoricoArgs<ExtArgs> = {}>(args?: Subset<T, Eletricista$EletricistaBaseHistoricoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EletricistaBaseHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EventoCobertura<T extends Eletricista$EventoCoberturaArgs<ExtArgs> = {}>(args?: Subset<T, Eletricista$EventoCoberturaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SlotEscala<T extends Eletricista$SlotEscalaArgs<ExtArgs> = {}>(args?: Subset<T, Eletricista$SlotEscalaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Eletricista model
   */
  interface EletricistaFieldRefs {
    readonly id: FieldRef<"Eletricista", 'Int'>
    readonly nome: FieldRef<"Eletricista", 'String'>
    readonly matricula: FieldRef<"Eletricista", 'String'>
    readonly telefone: FieldRef<"Eletricista", 'String'>
    readonly estado: FieldRef<"Eletricista", 'String'>
    readonly admissao: FieldRef<"Eletricista", 'DateTime'>
    readonly cargoId: FieldRef<"Eletricista", 'Int'>
    readonly createdAt: FieldRef<"Eletricista", 'DateTime'>
    readonly createdBy: FieldRef<"Eletricista", 'String'>
    readonly updatedAt: FieldRef<"Eletricista", 'DateTime'>
    readonly updatedBy: FieldRef<"Eletricista", 'String'>
    readonly deletedAt: FieldRef<"Eletricista", 'DateTime'>
    readonly deletedBy: FieldRef<"Eletricista", 'String'>
    readonly contratoId: FieldRef<"Eletricista", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Eletricista findUnique
   */
  export type EletricistaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    /**
     * Filter, which Eletricista to fetch.
     */
    where: EletricistaWhereUniqueInput
  }

  /**
   * Eletricista findUniqueOrThrow
   */
  export type EletricistaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    /**
     * Filter, which Eletricista to fetch.
     */
    where: EletricistaWhereUniqueInput
  }

  /**
   * Eletricista findFirst
   */
  export type EletricistaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    /**
     * Filter, which Eletricista to fetch.
     */
    where?: EletricistaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eletricistas to fetch.
     */
    orderBy?: EletricistaOrderByWithRelationInput | EletricistaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Eletricistas.
     */
    cursor?: EletricistaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eletricistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eletricistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Eletricistas.
     */
    distinct?: EletricistaScalarFieldEnum | EletricistaScalarFieldEnum[]
  }

  /**
   * Eletricista findFirstOrThrow
   */
  export type EletricistaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    /**
     * Filter, which Eletricista to fetch.
     */
    where?: EletricistaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eletricistas to fetch.
     */
    orderBy?: EletricistaOrderByWithRelationInput | EletricistaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Eletricistas.
     */
    cursor?: EletricistaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eletricistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eletricistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Eletricistas.
     */
    distinct?: EletricistaScalarFieldEnum | EletricistaScalarFieldEnum[]
  }

  /**
   * Eletricista findMany
   */
  export type EletricistaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    /**
     * Filter, which Eletricistas to fetch.
     */
    where?: EletricistaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eletricistas to fetch.
     */
    orderBy?: EletricistaOrderByWithRelationInput | EletricistaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Eletricistas.
     */
    cursor?: EletricistaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eletricistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eletricistas.
     */
    skip?: number
    distinct?: EletricistaScalarFieldEnum | EletricistaScalarFieldEnum[]
  }

  /**
   * Eletricista create
   */
  export type EletricistaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    /**
     * The data needed to create a Eletricista.
     */
    data: XOR<EletricistaCreateInput, EletricistaUncheckedCreateInput>
  }

  /**
   * Eletricista createMany
   */
  export type EletricistaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Eletricistas.
     */
    data: EletricistaCreateManyInput | EletricistaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Eletricista update
   */
  export type EletricistaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    /**
     * The data needed to update a Eletricista.
     */
    data: XOR<EletricistaUpdateInput, EletricistaUncheckedUpdateInput>
    /**
     * Choose, which Eletricista to update.
     */
    where: EletricistaWhereUniqueInput
  }

  /**
   * Eletricista updateMany
   */
  export type EletricistaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Eletricistas.
     */
    data: XOR<EletricistaUpdateManyMutationInput, EletricistaUncheckedUpdateManyInput>
    /**
     * Filter which Eletricistas to update
     */
    where?: EletricistaWhereInput
    /**
     * Limit how many Eletricistas to update.
     */
    limit?: number
  }

  /**
   * Eletricista upsert
   */
  export type EletricistaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    /**
     * The filter to search for the Eletricista to update in case it exists.
     */
    where: EletricistaWhereUniqueInput
    /**
     * In case the Eletricista found by the `where` argument doesn't exist, create a new Eletricista with this data.
     */
    create: XOR<EletricistaCreateInput, EletricistaUncheckedCreateInput>
    /**
     * In case the Eletricista was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EletricistaUpdateInput, EletricistaUncheckedUpdateInput>
  }

  /**
   * Eletricista delete
   */
  export type EletricistaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    /**
     * Filter which Eletricista to delete.
     */
    where: EletricistaWhereUniqueInput
  }

  /**
   * Eletricista deleteMany
   */
  export type EletricistaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Eletricistas to delete
     */
    where?: EletricistaWhereInput
    /**
     * Limit how many Eletricistas to delete.
     */
    limit?: number
  }

  /**
   * Eletricista.TurnoEletricistas
   */
  export type Eletricista$TurnoEletricistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    where?: TurnoEletricistaWhereInput
    orderBy?: TurnoEletricistaOrderByWithRelationInput | TurnoEletricistaOrderByWithRelationInput[]
    cursor?: TurnoEletricistaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TurnoEletricistaScalarFieldEnum | TurnoEletricistaScalarFieldEnum[]
  }

  /**
   * Eletricista.EletricistaBaseHistorico
   */
  export type Eletricista$EletricistaBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EletricistaBaseHistorico
     */
    select?: EletricistaBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EletricistaBaseHistorico
     */
    omit?: EletricistaBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaBaseHistoricoInclude<ExtArgs> | null
    where?: EletricistaBaseHistoricoWhereInput
    orderBy?: EletricistaBaseHistoricoOrderByWithRelationInput | EletricistaBaseHistoricoOrderByWithRelationInput[]
    cursor?: EletricistaBaseHistoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EletricistaBaseHistoricoScalarFieldEnum | EletricistaBaseHistoricoScalarFieldEnum[]
  }

  /**
   * Eletricista.EventoCobertura
   */
  export type Eletricista$EventoCoberturaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    where?: EventoCoberturaWhereInput
    orderBy?: EventoCoberturaOrderByWithRelationInput | EventoCoberturaOrderByWithRelationInput[]
    cursor?: EventoCoberturaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventoCoberturaScalarFieldEnum | EventoCoberturaScalarFieldEnum[]
  }

  /**
   * Eletricista.SlotEscala
   */
  export type Eletricista$SlotEscalaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    where?: SlotEscalaWhereInput
    orderBy?: SlotEscalaOrderByWithRelationInput | SlotEscalaOrderByWithRelationInput[]
    cursor?: SlotEscalaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SlotEscalaScalarFieldEnum | SlotEscalaScalarFieldEnum[]
  }

  /**
   * Eletricista without action
   */
  export type EletricistaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
  }


  /**
   * Model Cargo
   */

  export type AggregateCargo = {
    _count: CargoCountAggregateOutputType | null
    _avg: CargoAvgAggregateOutputType | null
    _sum: CargoSumAggregateOutputType | null
    _min: CargoMinAggregateOutputType | null
    _max: CargoMaxAggregateOutputType | null
  }

  export type CargoAvgAggregateOutputType = {
    id: number | null
    salarioBase: number | null
  }

  export type CargoSumAggregateOutputType = {
    id: number | null
    salarioBase: number | null
  }

  export type CargoMinAggregateOutputType = {
    id: number | null
    nome: string | null
    salarioBase: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type CargoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    salarioBase: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type CargoCountAggregateOutputType = {
    id: number
    nome: number
    salarioBase: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type CargoAvgAggregateInputType = {
    id?: true
    salarioBase?: true
  }

  export type CargoSumAggregateInputType = {
    id?: true
    salarioBase?: true
  }

  export type CargoMinAggregateInputType = {
    id?: true
    nome?: true
    salarioBase?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type CargoMaxAggregateInputType = {
    id?: true
    nome?: true
    salarioBase?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type CargoCountAggregateInputType = {
    id?: true
    nome?: true
    salarioBase?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type CargoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cargo to aggregate.
     */
    where?: CargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cargos to fetch.
     */
    orderBy?: CargoOrderByWithRelationInput | CargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cargos
    **/
    _count?: true | CargoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CargoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CargoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CargoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CargoMaxAggregateInputType
  }

  export type GetCargoAggregateType<T extends CargoAggregateArgs> = {
        [P in keyof T & keyof AggregateCargo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCargo[P]>
      : GetScalarType<T[P], AggregateCargo[P]>
  }




  export type CargoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CargoWhereInput
    orderBy?: CargoOrderByWithAggregationInput | CargoOrderByWithAggregationInput[]
    by: CargoScalarFieldEnum[] | CargoScalarFieldEnum
    having?: CargoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CargoCountAggregateInputType | true
    _avg?: CargoAvgAggregateInputType
    _sum?: CargoSumAggregateInputType
    _min?: CargoMinAggregateInputType
    _max?: CargoMaxAggregateInputType
  }

  export type CargoGroupByOutputType = {
    id: number
    nome: string
    salarioBase: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: CargoCountAggregateOutputType | null
    _avg: CargoAvgAggregateOutputType | null
    _sum: CargoSumAggregateOutputType | null
    _min: CargoMinAggregateOutputType | null
    _max: CargoMaxAggregateOutputType | null
  }

  type GetCargoGroupByPayload<T extends CargoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CargoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CargoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CargoGroupByOutputType[P]>
            : GetScalarType<T[P], CargoGroupByOutputType[P]>
        }
      >
    >


  export type CargoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    salarioBase?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    Eletricista?: boolean | Cargo$EletricistaArgs<ExtArgs>
    _count?: boolean | CargoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cargo"]>



  export type CargoSelectScalar = {
    id?: boolean
    nome?: boolean
    salarioBase?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type CargoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "salarioBase" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["cargo"]>
  export type CargoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Eletricista?: boolean | Cargo$EletricistaArgs<ExtArgs>
    _count?: boolean | CargoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CargoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cargo"
    objects: {
      Eletricista: Prisma.$EletricistaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      salarioBase: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["cargo"]>
    composites: {}
  }

  type CargoGetPayload<S extends boolean | null | undefined | CargoDefaultArgs> = $Result.GetResult<Prisma.$CargoPayload, S>

  type CargoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CargoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CargoCountAggregateInputType | true
    }

  export interface CargoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cargo'], meta: { name: 'Cargo' } }
    /**
     * Find zero or one Cargo that matches the filter.
     * @param {CargoFindUniqueArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CargoFindUniqueArgs>(args: SelectSubset<T, CargoFindUniqueArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cargo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CargoFindUniqueOrThrowArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CargoFindUniqueOrThrowArgs>(args: SelectSubset<T, CargoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cargo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoFindFirstArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CargoFindFirstArgs>(args?: SelectSubset<T, CargoFindFirstArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cargo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoFindFirstOrThrowArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CargoFindFirstOrThrowArgs>(args?: SelectSubset<T, CargoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cargos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cargos
     * const cargos = await prisma.cargo.findMany()
     * 
     * // Get first 10 Cargos
     * const cargos = await prisma.cargo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cargoWithIdOnly = await prisma.cargo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CargoFindManyArgs>(args?: SelectSubset<T, CargoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cargo.
     * @param {CargoCreateArgs} args - Arguments to create a Cargo.
     * @example
     * // Create one Cargo
     * const Cargo = await prisma.cargo.create({
     *   data: {
     *     // ... data to create a Cargo
     *   }
     * })
     * 
     */
    create<T extends CargoCreateArgs>(args: SelectSubset<T, CargoCreateArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cargos.
     * @param {CargoCreateManyArgs} args - Arguments to create many Cargos.
     * @example
     * // Create many Cargos
     * const cargo = await prisma.cargo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CargoCreateManyArgs>(args?: SelectSubset<T, CargoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cargo.
     * @param {CargoDeleteArgs} args - Arguments to delete one Cargo.
     * @example
     * // Delete one Cargo
     * const Cargo = await prisma.cargo.delete({
     *   where: {
     *     // ... filter to delete one Cargo
     *   }
     * })
     * 
     */
    delete<T extends CargoDeleteArgs>(args: SelectSubset<T, CargoDeleteArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cargo.
     * @param {CargoUpdateArgs} args - Arguments to update one Cargo.
     * @example
     * // Update one Cargo
     * const cargo = await prisma.cargo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CargoUpdateArgs>(args: SelectSubset<T, CargoUpdateArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cargos.
     * @param {CargoDeleteManyArgs} args - Arguments to filter Cargos to delete.
     * @example
     * // Delete a few Cargos
     * const { count } = await prisma.cargo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CargoDeleteManyArgs>(args?: SelectSubset<T, CargoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cargos
     * const cargo = await prisma.cargo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CargoUpdateManyArgs>(args: SelectSubset<T, CargoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cargo.
     * @param {CargoUpsertArgs} args - Arguments to update or create a Cargo.
     * @example
     * // Update or create a Cargo
     * const cargo = await prisma.cargo.upsert({
     *   create: {
     *     // ... data to create a Cargo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cargo we want to update
     *   }
     * })
     */
    upsert<T extends CargoUpsertArgs>(args: SelectSubset<T, CargoUpsertArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoCountArgs} args - Arguments to filter Cargos to count.
     * @example
     * // Count the number of Cargos
     * const count = await prisma.cargo.count({
     *   where: {
     *     // ... the filter for the Cargos we want to count
     *   }
     * })
    **/
    count<T extends CargoCountArgs>(
      args?: Subset<T, CargoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CargoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cargo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CargoAggregateArgs>(args: Subset<T, CargoAggregateArgs>): Prisma.PrismaPromise<GetCargoAggregateType<T>>

    /**
     * Group by Cargo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CargoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CargoGroupByArgs['orderBy'] }
        : { orderBy?: CargoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CargoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCargoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cargo model
   */
  readonly fields: CargoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cargo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CargoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Eletricista<T extends Cargo$EletricistaArgs<ExtArgs> = {}>(args?: Subset<T, Cargo$EletricistaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cargo model
   */
  interface CargoFieldRefs {
    readonly id: FieldRef<"Cargo", 'Int'>
    readonly nome: FieldRef<"Cargo", 'String'>
    readonly salarioBase: FieldRef<"Cargo", 'Float'>
    readonly createdAt: FieldRef<"Cargo", 'DateTime'>
    readonly createdBy: FieldRef<"Cargo", 'String'>
    readonly updatedAt: FieldRef<"Cargo", 'DateTime'>
    readonly updatedBy: FieldRef<"Cargo", 'String'>
    readonly deletedAt: FieldRef<"Cargo", 'DateTime'>
    readonly deletedBy: FieldRef<"Cargo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Cargo findUnique
   */
  export type CargoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter, which Cargo to fetch.
     */
    where: CargoWhereUniqueInput
  }

  /**
   * Cargo findUniqueOrThrow
   */
  export type CargoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter, which Cargo to fetch.
     */
    where: CargoWhereUniqueInput
  }

  /**
   * Cargo findFirst
   */
  export type CargoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter, which Cargo to fetch.
     */
    where?: CargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cargos to fetch.
     */
    orderBy?: CargoOrderByWithRelationInput | CargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cargos.
     */
    cursor?: CargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cargos.
     */
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * Cargo findFirstOrThrow
   */
  export type CargoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter, which Cargo to fetch.
     */
    where?: CargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cargos to fetch.
     */
    orderBy?: CargoOrderByWithRelationInput | CargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cargos.
     */
    cursor?: CargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cargos.
     */
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * Cargo findMany
   */
  export type CargoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter, which Cargos to fetch.
     */
    where?: CargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cargos to fetch.
     */
    orderBy?: CargoOrderByWithRelationInput | CargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cargos.
     */
    cursor?: CargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cargos.
     */
    skip?: number
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * Cargo create
   */
  export type CargoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * The data needed to create a Cargo.
     */
    data: XOR<CargoCreateInput, CargoUncheckedCreateInput>
  }

  /**
   * Cargo createMany
   */
  export type CargoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cargos.
     */
    data: CargoCreateManyInput | CargoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cargo update
   */
  export type CargoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * The data needed to update a Cargo.
     */
    data: XOR<CargoUpdateInput, CargoUncheckedUpdateInput>
    /**
     * Choose, which Cargo to update.
     */
    where: CargoWhereUniqueInput
  }

  /**
   * Cargo updateMany
   */
  export type CargoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cargos.
     */
    data: XOR<CargoUpdateManyMutationInput, CargoUncheckedUpdateManyInput>
    /**
     * Filter which Cargos to update
     */
    where?: CargoWhereInput
    /**
     * Limit how many Cargos to update.
     */
    limit?: number
  }

  /**
   * Cargo upsert
   */
  export type CargoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * The filter to search for the Cargo to update in case it exists.
     */
    where: CargoWhereUniqueInput
    /**
     * In case the Cargo found by the `where` argument doesn't exist, create a new Cargo with this data.
     */
    create: XOR<CargoCreateInput, CargoUncheckedCreateInput>
    /**
     * In case the Cargo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CargoUpdateInput, CargoUncheckedUpdateInput>
  }

  /**
   * Cargo delete
   */
  export type CargoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter which Cargo to delete.
     */
    where: CargoWhereUniqueInput
  }

  /**
   * Cargo deleteMany
   */
  export type CargoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cargos to delete
     */
    where?: CargoWhereInput
    /**
     * Limit how many Cargos to delete.
     */
    limit?: number
  }

  /**
   * Cargo.Eletricista
   */
  export type Cargo$EletricistaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    where?: EletricistaWhereInput
    orderBy?: EletricistaOrderByWithRelationInput | EletricistaOrderByWithRelationInput[]
    cursor?: EletricistaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EletricistaScalarFieldEnum | EletricistaScalarFieldEnum[]
  }

  /**
   * Cargo without action
   */
  export type CargoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
  }


  /**
   * Model EquipeBaseHistorico
   */

  export type AggregateEquipeBaseHistorico = {
    _count: EquipeBaseHistoricoCountAggregateOutputType | null
    _avg: EquipeBaseHistoricoAvgAggregateOutputType | null
    _sum: EquipeBaseHistoricoSumAggregateOutputType | null
    _min: EquipeBaseHistoricoMinAggregateOutputType | null
    _max: EquipeBaseHistoricoMaxAggregateOutputType | null
  }

  export type EquipeBaseHistoricoAvgAggregateOutputType = {
    id: number | null
    equipeId: number | null
    baseId: number | null
  }

  export type EquipeBaseHistoricoSumAggregateOutputType = {
    id: number | null
    equipeId: number | null
    baseId: number | null
  }

  export type EquipeBaseHistoricoMinAggregateOutputType = {
    id: number | null
    equipeId: number | null
    baseId: number | null
    dataInicio: Date | null
    dataFim: Date | null
    motivo: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EquipeBaseHistoricoMaxAggregateOutputType = {
    id: number | null
    equipeId: number | null
    baseId: number | null
    dataInicio: Date | null
    dataFim: Date | null
    motivo: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EquipeBaseHistoricoCountAggregateOutputType = {
    id: number
    equipeId: number
    baseId: number
    dataInicio: number
    dataFim: number
    motivo: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type EquipeBaseHistoricoAvgAggregateInputType = {
    id?: true
    equipeId?: true
    baseId?: true
  }

  export type EquipeBaseHistoricoSumAggregateInputType = {
    id?: true
    equipeId?: true
    baseId?: true
  }

  export type EquipeBaseHistoricoMinAggregateInputType = {
    id?: true
    equipeId?: true
    baseId?: true
    dataInicio?: true
    dataFim?: true
    motivo?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EquipeBaseHistoricoMaxAggregateInputType = {
    id?: true
    equipeId?: true
    baseId?: true
    dataInicio?: true
    dataFim?: true
    motivo?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EquipeBaseHistoricoCountAggregateInputType = {
    id?: true
    equipeId?: true
    baseId?: true
    dataInicio?: true
    dataFim?: true
    motivo?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type EquipeBaseHistoricoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipeBaseHistorico to aggregate.
     */
    where?: EquipeBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeBaseHistoricos to fetch.
     */
    orderBy?: EquipeBaseHistoricoOrderByWithRelationInput | EquipeBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipeBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeBaseHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EquipeBaseHistoricos
    **/
    _count?: true | EquipeBaseHistoricoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipeBaseHistoricoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipeBaseHistoricoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipeBaseHistoricoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipeBaseHistoricoMaxAggregateInputType
  }

  export type GetEquipeBaseHistoricoAggregateType<T extends EquipeBaseHistoricoAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipeBaseHistorico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipeBaseHistorico[P]>
      : GetScalarType<T[P], AggregateEquipeBaseHistorico[P]>
  }




  export type EquipeBaseHistoricoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeBaseHistoricoWhereInput
    orderBy?: EquipeBaseHistoricoOrderByWithAggregationInput | EquipeBaseHistoricoOrderByWithAggregationInput[]
    by: EquipeBaseHistoricoScalarFieldEnum[] | EquipeBaseHistoricoScalarFieldEnum
    having?: EquipeBaseHistoricoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipeBaseHistoricoCountAggregateInputType | true
    _avg?: EquipeBaseHistoricoAvgAggregateInputType
    _sum?: EquipeBaseHistoricoSumAggregateInputType
    _min?: EquipeBaseHistoricoMinAggregateInputType
    _max?: EquipeBaseHistoricoMaxAggregateInputType
  }

  export type EquipeBaseHistoricoGroupByOutputType = {
    id: number
    equipeId: number
    baseId: number
    dataInicio: Date
    dataFim: Date | null
    motivo: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: EquipeBaseHistoricoCountAggregateOutputType | null
    _avg: EquipeBaseHistoricoAvgAggregateOutputType | null
    _sum: EquipeBaseHistoricoSumAggregateOutputType | null
    _min: EquipeBaseHistoricoMinAggregateOutputType | null
    _max: EquipeBaseHistoricoMaxAggregateOutputType | null
  }

  type GetEquipeBaseHistoricoGroupByPayload<T extends EquipeBaseHistoricoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipeBaseHistoricoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipeBaseHistoricoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipeBaseHistoricoGroupByOutputType[P]>
            : GetScalarType<T[P], EquipeBaseHistoricoGroupByOutputType[P]>
        }
      >
    >


  export type EquipeBaseHistoricoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    equipeId?: boolean
    baseId?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    motivo?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
    base?: boolean | BaseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipeBaseHistorico"]>



  export type EquipeBaseHistoricoSelectScalar = {
    id?: boolean
    equipeId?: boolean
    baseId?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    motivo?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type EquipeBaseHistoricoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "equipeId" | "baseId" | "dataInicio" | "dataFim" | "motivo" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["equipeBaseHistorico"]>
  export type EquipeBaseHistoricoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
    base?: boolean | BaseDefaultArgs<ExtArgs>
  }

  export type $EquipeBaseHistoricoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EquipeBaseHistorico"
    objects: {
      equipe: Prisma.$EquipePayload<ExtArgs>
      base: Prisma.$BasePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      equipeId: number
      baseId: number
      dataInicio: Date
      dataFim: Date | null
      motivo: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["equipeBaseHistorico"]>
    composites: {}
  }

  type EquipeBaseHistoricoGetPayload<S extends boolean | null | undefined | EquipeBaseHistoricoDefaultArgs> = $Result.GetResult<Prisma.$EquipeBaseHistoricoPayload, S>

  type EquipeBaseHistoricoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EquipeBaseHistoricoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EquipeBaseHistoricoCountAggregateInputType | true
    }

  export interface EquipeBaseHistoricoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EquipeBaseHistorico'], meta: { name: 'EquipeBaseHistorico' } }
    /**
     * Find zero or one EquipeBaseHistorico that matches the filter.
     * @param {EquipeBaseHistoricoFindUniqueArgs} args - Arguments to find a EquipeBaseHistorico
     * @example
     * // Get one EquipeBaseHistorico
     * const equipeBaseHistorico = await prisma.equipeBaseHistorico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipeBaseHistoricoFindUniqueArgs>(args: SelectSubset<T, EquipeBaseHistoricoFindUniqueArgs<ExtArgs>>): Prisma__EquipeBaseHistoricoClient<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EquipeBaseHistorico that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EquipeBaseHistoricoFindUniqueOrThrowArgs} args - Arguments to find a EquipeBaseHistorico
     * @example
     * // Get one EquipeBaseHistorico
     * const equipeBaseHistorico = await prisma.equipeBaseHistorico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipeBaseHistoricoFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipeBaseHistoricoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipeBaseHistoricoClient<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipeBaseHistorico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeBaseHistoricoFindFirstArgs} args - Arguments to find a EquipeBaseHistorico
     * @example
     * // Get one EquipeBaseHistorico
     * const equipeBaseHistorico = await prisma.equipeBaseHistorico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipeBaseHistoricoFindFirstArgs>(args?: SelectSubset<T, EquipeBaseHistoricoFindFirstArgs<ExtArgs>>): Prisma__EquipeBaseHistoricoClient<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipeBaseHistorico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeBaseHistoricoFindFirstOrThrowArgs} args - Arguments to find a EquipeBaseHistorico
     * @example
     * // Get one EquipeBaseHistorico
     * const equipeBaseHistorico = await prisma.equipeBaseHistorico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipeBaseHistoricoFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipeBaseHistoricoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipeBaseHistoricoClient<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EquipeBaseHistoricos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeBaseHistoricoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EquipeBaseHistoricos
     * const equipeBaseHistoricos = await prisma.equipeBaseHistorico.findMany()
     * 
     * // Get first 10 EquipeBaseHistoricos
     * const equipeBaseHistoricos = await prisma.equipeBaseHistorico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipeBaseHistoricoWithIdOnly = await prisma.equipeBaseHistorico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipeBaseHistoricoFindManyArgs>(args?: SelectSubset<T, EquipeBaseHistoricoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EquipeBaseHistorico.
     * @param {EquipeBaseHistoricoCreateArgs} args - Arguments to create a EquipeBaseHistorico.
     * @example
     * // Create one EquipeBaseHistorico
     * const EquipeBaseHistorico = await prisma.equipeBaseHistorico.create({
     *   data: {
     *     // ... data to create a EquipeBaseHistorico
     *   }
     * })
     * 
     */
    create<T extends EquipeBaseHistoricoCreateArgs>(args: SelectSubset<T, EquipeBaseHistoricoCreateArgs<ExtArgs>>): Prisma__EquipeBaseHistoricoClient<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EquipeBaseHistoricos.
     * @param {EquipeBaseHistoricoCreateManyArgs} args - Arguments to create many EquipeBaseHistoricos.
     * @example
     * // Create many EquipeBaseHistoricos
     * const equipeBaseHistorico = await prisma.equipeBaseHistorico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipeBaseHistoricoCreateManyArgs>(args?: SelectSubset<T, EquipeBaseHistoricoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EquipeBaseHistorico.
     * @param {EquipeBaseHistoricoDeleteArgs} args - Arguments to delete one EquipeBaseHistorico.
     * @example
     * // Delete one EquipeBaseHistorico
     * const EquipeBaseHistorico = await prisma.equipeBaseHistorico.delete({
     *   where: {
     *     // ... filter to delete one EquipeBaseHistorico
     *   }
     * })
     * 
     */
    delete<T extends EquipeBaseHistoricoDeleteArgs>(args: SelectSubset<T, EquipeBaseHistoricoDeleteArgs<ExtArgs>>): Prisma__EquipeBaseHistoricoClient<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EquipeBaseHistorico.
     * @param {EquipeBaseHistoricoUpdateArgs} args - Arguments to update one EquipeBaseHistorico.
     * @example
     * // Update one EquipeBaseHistorico
     * const equipeBaseHistorico = await prisma.equipeBaseHistorico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipeBaseHistoricoUpdateArgs>(args: SelectSubset<T, EquipeBaseHistoricoUpdateArgs<ExtArgs>>): Prisma__EquipeBaseHistoricoClient<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EquipeBaseHistoricos.
     * @param {EquipeBaseHistoricoDeleteManyArgs} args - Arguments to filter EquipeBaseHistoricos to delete.
     * @example
     * // Delete a few EquipeBaseHistoricos
     * const { count } = await prisma.equipeBaseHistorico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipeBaseHistoricoDeleteManyArgs>(args?: SelectSubset<T, EquipeBaseHistoricoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipeBaseHistoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeBaseHistoricoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EquipeBaseHistoricos
     * const equipeBaseHistorico = await prisma.equipeBaseHistorico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipeBaseHistoricoUpdateManyArgs>(args: SelectSubset<T, EquipeBaseHistoricoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EquipeBaseHistorico.
     * @param {EquipeBaseHistoricoUpsertArgs} args - Arguments to update or create a EquipeBaseHistorico.
     * @example
     * // Update or create a EquipeBaseHistorico
     * const equipeBaseHistorico = await prisma.equipeBaseHistorico.upsert({
     *   create: {
     *     // ... data to create a EquipeBaseHistorico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EquipeBaseHistorico we want to update
     *   }
     * })
     */
    upsert<T extends EquipeBaseHistoricoUpsertArgs>(args: SelectSubset<T, EquipeBaseHistoricoUpsertArgs<ExtArgs>>): Prisma__EquipeBaseHistoricoClient<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EquipeBaseHistoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeBaseHistoricoCountArgs} args - Arguments to filter EquipeBaseHistoricos to count.
     * @example
     * // Count the number of EquipeBaseHistoricos
     * const count = await prisma.equipeBaseHistorico.count({
     *   where: {
     *     // ... the filter for the EquipeBaseHistoricos we want to count
     *   }
     * })
    **/
    count<T extends EquipeBaseHistoricoCountArgs>(
      args?: Subset<T, EquipeBaseHistoricoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipeBaseHistoricoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EquipeBaseHistorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeBaseHistoricoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipeBaseHistoricoAggregateArgs>(args: Subset<T, EquipeBaseHistoricoAggregateArgs>): Prisma.PrismaPromise<GetEquipeBaseHistoricoAggregateType<T>>

    /**
     * Group by EquipeBaseHistorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeBaseHistoricoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipeBaseHistoricoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipeBaseHistoricoGroupByArgs['orderBy'] }
        : { orderBy?: EquipeBaseHistoricoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipeBaseHistoricoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipeBaseHistoricoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EquipeBaseHistorico model
   */
  readonly fields: EquipeBaseHistoricoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EquipeBaseHistorico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipeBaseHistoricoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    equipe<T extends EquipeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipeDefaultArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    base<T extends BaseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BaseDefaultArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EquipeBaseHistorico model
   */
  interface EquipeBaseHistoricoFieldRefs {
    readonly id: FieldRef<"EquipeBaseHistorico", 'Int'>
    readonly equipeId: FieldRef<"EquipeBaseHistorico", 'Int'>
    readonly baseId: FieldRef<"EquipeBaseHistorico", 'Int'>
    readonly dataInicio: FieldRef<"EquipeBaseHistorico", 'DateTime'>
    readonly dataFim: FieldRef<"EquipeBaseHistorico", 'DateTime'>
    readonly motivo: FieldRef<"EquipeBaseHistorico", 'String'>
    readonly createdAt: FieldRef<"EquipeBaseHistorico", 'DateTime'>
    readonly createdBy: FieldRef<"EquipeBaseHistorico", 'String'>
    readonly updatedAt: FieldRef<"EquipeBaseHistorico", 'DateTime'>
    readonly updatedBy: FieldRef<"EquipeBaseHistorico", 'String'>
    readonly deletedAt: FieldRef<"EquipeBaseHistorico", 'DateTime'>
    readonly deletedBy: FieldRef<"EquipeBaseHistorico", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EquipeBaseHistorico findUnique
   */
  export type EquipeBaseHistoricoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EquipeBaseHistorico to fetch.
     */
    where: EquipeBaseHistoricoWhereUniqueInput
  }

  /**
   * EquipeBaseHistorico findUniqueOrThrow
   */
  export type EquipeBaseHistoricoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EquipeBaseHistorico to fetch.
     */
    where: EquipeBaseHistoricoWhereUniqueInput
  }

  /**
   * EquipeBaseHistorico findFirst
   */
  export type EquipeBaseHistoricoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EquipeBaseHistorico to fetch.
     */
    where?: EquipeBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeBaseHistoricos to fetch.
     */
    orderBy?: EquipeBaseHistoricoOrderByWithRelationInput | EquipeBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipeBaseHistoricos.
     */
    cursor?: EquipeBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeBaseHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipeBaseHistoricos.
     */
    distinct?: EquipeBaseHistoricoScalarFieldEnum | EquipeBaseHistoricoScalarFieldEnum[]
  }

  /**
   * EquipeBaseHistorico findFirstOrThrow
   */
  export type EquipeBaseHistoricoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EquipeBaseHistorico to fetch.
     */
    where?: EquipeBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeBaseHistoricos to fetch.
     */
    orderBy?: EquipeBaseHistoricoOrderByWithRelationInput | EquipeBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipeBaseHistoricos.
     */
    cursor?: EquipeBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeBaseHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipeBaseHistoricos.
     */
    distinct?: EquipeBaseHistoricoScalarFieldEnum | EquipeBaseHistoricoScalarFieldEnum[]
  }

  /**
   * EquipeBaseHistorico findMany
   */
  export type EquipeBaseHistoricoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EquipeBaseHistoricos to fetch.
     */
    where?: EquipeBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeBaseHistoricos to fetch.
     */
    orderBy?: EquipeBaseHistoricoOrderByWithRelationInput | EquipeBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EquipeBaseHistoricos.
     */
    cursor?: EquipeBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeBaseHistoricos.
     */
    skip?: number
    distinct?: EquipeBaseHistoricoScalarFieldEnum | EquipeBaseHistoricoScalarFieldEnum[]
  }

  /**
   * EquipeBaseHistorico create
   */
  export type EquipeBaseHistoricoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    /**
     * The data needed to create a EquipeBaseHistorico.
     */
    data: XOR<EquipeBaseHistoricoCreateInput, EquipeBaseHistoricoUncheckedCreateInput>
  }

  /**
   * EquipeBaseHistorico createMany
   */
  export type EquipeBaseHistoricoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EquipeBaseHistoricos.
     */
    data: EquipeBaseHistoricoCreateManyInput | EquipeBaseHistoricoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipeBaseHistorico update
   */
  export type EquipeBaseHistoricoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    /**
     * The data needed to update a EquipeBaseHistorico.
     */
    data: XOR<EquipeBaseHistoricoUpdateInput, EquipeBaseHistoricoUncheckedUpdateInput>
    /**
     * Choose, which EquipeBaseHistorico to update.
     */
    where: EquipeBaseHistoricoWhereUniqueInput
  }

  /**
   * EquipeBaseHistorico updateMany
   */
  export type EquipeBaseHistoricoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EquipeBaseHistoricos.
     */
    data: XOR<EquipeBaseHistoricoUpdateManyMutationInput, EquipeBaseHistoricoUncheckedUpdateManyInput>
    /**
     * Filter which EquipeBaseHistoricos to update
     */
    where?: EquipeBaseHistoricoWhereInput
    /**
     * Limit how many EquipeBaseHistoricos to update.
     */
    limit?: number
  }

  /**
   * EquipeBaseHistorico upsert
   */
  export type EquipeBaseHistoricoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    /**
     * The filter to search for the EquipeBaseHistorico to update in case it exists.
     */
    where: EquipeBaseHistoricoWhereUniqueInput
    /**
     * In case the EquipeBaseHistorico found by the `where` argument doesn't exist, create a new EquipeBaseHistorico with this data.
     */
    create: XOR<EquipeBaseHistoricoCreateInput, EquipeBaseHistoricoUncheckedCreateInput>
    /**
     * In case the EquipeBaseHistorico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipeBaseHistoricoUpdateInput, EquipeBaseHistoricoUncheckedUpdateInput>
  }

  /**
   * EquipeBaseHistorico delete
   */
  export type EquipeBaseHistoricoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter which EquipeBaseHistorico to delete.
     */
    where: EquipeBaseHistoricoWhereUniqueInput
  }

  /**
   * EquipeBaseHistorico deleteMany
   */
  export type EquipeBaseHistoricoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipeBaseHistoricos to delete
     */
    where?: EquipeBaseHistoricoWhereInput
    /**
     * Limit how many EquipeBaseHistoricos to delete.
     */
    limit?: number
  }

  /**
   * EquipeBaseHistorico without action
   */
  export type EquipeBaseHistoricoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
  }


  /**
   * Model TipoEquipe
   */

  export type AggregateTipoEquipe = {
    _count: TipoEquipeCountAggregateOutputType | null
    _avg: TipoEquipeAvgAggregateOutputType | null
    _sum: TipoEquipeSumAggregateOutputType | null
    _min: TipoEquipeMinAggregateOutputType | null
    _max: TipoEquipeMaxAggregateOutputType | null
  }

  export type TipoEquipeAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoEquipeSumAggregateOutputType = {
    id: number | null
  }

  export type TipoEquipeMinAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoEquipeMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoEquipeCountAggregateOutputType = {
    id: number
    nome: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type TipoEquipeAvgAggregateInputType = {
    id?: true
  }

  export type TipoEquipeSumAggregateInputType = {
    id?: true
  }

  export type TipoEquipeMinAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoEquipeMaxAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoEquipeCountAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type TipoEquipeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoEquipe to aggregate.
     */
    where?: TipoEquipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEquipes to fetch.
     */
    orderBy?: TipoEquipeOrderByWithRelationInput | TipoEquipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoEquipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEquipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEquipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoEquipes
    **/
    _count?: true | TipoEquipeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoEquipeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoEquipeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoEquipeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoEquipeMaxAggregateInputType
  }

  export type GetTipoEquipeAggregateType<T extends TipoEquipeAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoEquipe]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoEquipe[P]>
      : GetScalarType<T[P], AggregateTipoEquipe[P]>
  }




  export type TipoEquipeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoEquipeWhereInput
    orderBy?: TipoEquipeOrderByWithAggregationInput | TipoEquipeOrderByWithAggregationInput[]
    by: TipoEquipeScalarFieldEnum[] | TipoEquipeScalarFieldEnum
    having?: TipoEquipeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoEquipeCountAggregateInputType | true
    _avg?: TipoEquipeAvgAggregateInputType
    _sum?: TipoEquipeSumAggregateInputType
    _min?: TipoEquipeMinAggregateInputType
    _max?: TipoEquipeMaxAggregateInputType
  }

  export type TipoEquipeGroupByOutputType = {
    id: number
    nome: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: TipoEquipeCountAggregateOutputType | null
    _avg: TipoEquipeAvgAggregateOutputType | null
    _sum: TipoEquipeSumAggregateOutputType | null
    _min: TipoEquipeMinAggregateOutputType | null
    _max: TipoEquipeMaxAggregateOutputType | null
  }

  type GetTipoEquipeGroupByPayload<T extends TipoEquipeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoEquipeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoEquipeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoEquipeGroupByOutputType[P]>
            : GetScalarType<T[P], TipoEquipeGroupByOutputType[P]>
        }
      >
    >


  export type TipoEquipeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    Equipe?: boolean | TipoEquipe$EquipeArgs<ExtArgs>
    ChecklistTipoEquipeRelacao?: boolean | TipoEquipe$ChecklistTipoEquipeRelacaoArgs<ExtArgs>
    _count?: boolean | TipoEquipeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoEquipe"]>



  export type TipoEquipeSelectScalar = {
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type TipoEquipeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["tipoEquipe"]>
  export type TipoEquipeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Equipe?: boolean | TipoEquipe$EquipeArgs<ExtArgs>
    ChecklistTipoEquipeRelacao?: boolean | TipoEquipe$ChecklistTipoEquipeRelacaoArgs<ExtArgs>
    _count?: boolean | TipoEquipeCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TipoEquipePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoEquipe"
    objects: {
      Equipe: Prisma.$EquipePayload<ExtArgs>[]
      ChecklistTipoEquipeRelacao: Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["tipoEquipe"]>
    composites: {}
  }

  type TipoEquipeGetPayload<S extends boolean | null | undefined | TipoEquipeDefaultArgs> = $Result.GetResult<Prisma.$TipoEquipePayload, S>

  type TipoEquipeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TipoEquipeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipoEquipeCountAggregateInputType | true
    }

  export interface TipoEquipeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoEquipe'], meta: { name: 'TipoEquipe' } }
    /**
     * Find zero or one TipoEquipe that matches the filter.
     * @param {TipoEquipeFindUniqueArgs} args - Arguments to find a TipoEquipe
     * @example
     * // Get one TipoEquipe
     * const tipoEquipe = await prisma.tipoEquipe.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoEquipeFindUniqueArgs>(args: SelectSubset<T, TipoEquipeFindUniqueArgs<ExtArgs>>): Prisma__TipoEquipeClient<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TipoEquipe that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TipoEquipeFindUniqueOrThrowArgs} args - Arguments to find a TipoEquipe
     * @example
     * // Get one TipoEquipe
     * const tipoEquipe = await prisma.tipoEquipe.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoEquipeFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoEquipeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoEquipeClient<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoEquipe that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEquipeFindFirstArgs} args - Arguments to find a TipoEquipe
     * @example
     * // Get one TipoEquipe
     * const tipoEquipe = await prisma.tipoEquipe.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoEquipeFindFirstArgs>(args?: SelectSubset<T, TipoEquipeFindFirstArgs<ExtArgs>>): Prisma__TipoEquipeClient<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoEquipe that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEquipeFindFirstOrThrowArgs} args - Arguments to find a TipoEquipe
     * @example
     * // Get one TipoEquipe
     * const tipoEquipe = await prisma.tipoEquipe.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoEquipeFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoEquipeFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoEquipeClient<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TipoEquipes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEquipeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoEquipes
     * const tipoEquipes = await prisma.tipoEquipe.findMany()
     * 
     * // Get first 10 TipoEquipes
     * const tipoEquipes = await prisma.tipoEquipe.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoEquipeWithIdOnly = await prisma.tipoEquipe.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoEquipeFindManyArgs>(args?: SelectSubset<T, TipoEquipeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TipoEquipe.
     * @param {TipoEquipeCreateArgs} args - Arguments to create a TipoEquipe.
     * @example
     * // Create one TipoEquipe
     * const TipoEquipe = await prisma.tipoEquipe.create({
     *   data: {
     *     // ... data to create a TipoEquipe
     *   }
     * })
     * 
     */
    create<T extends TipoEquipeCreateArgs>(args: SelectSubset<T, TipoEquipeCreateArgs<ExtArgs>>): Prisma__TipoEquipeClient<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TipoEquipes.
     * @param {TipoEquipeCreateManyArgs} args - Arguments to create many TipoEquipes.
     * @example
     * // Create many TipoEquipes
     * const tipoEquipe = await prisma.tipoEquipe.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoEquipeCreateManyArgs>(args?: SelectSubset<T, TipoEquipeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TipoEquipe.
     * @param {TipoEquipeDeleteArgs} args - Arguments to delete one TipoEquipe.
     * @example
     * // Delete one TipoEquipe
     * const TipoEquipe = await prisma.tipoEquipe.delete({
     *   where: {
     *     // ... filter to delete one TipoEquipe
     *   }
     * })
     * 
     */
    delete<T extends TipoEquipeDeleteArgs>(args: SelectSubset<T, TipoEquipeDeleteArgs<ExtArgs>>): Prisma__TipoEquipeClient<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TipoEquipe.
     * @param {TipoEquipeUpdateArgs} args - Arguments to update one TipoEquipe.
     * @example
     * // Update one TipoEquipe
     * const tipoEquipe = await prisma.tipoEquipe.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoEquipeUpdateArgs>(args: SelectSubset<T, TipoEquipeUpdateArgs<ExtArgs>>): Prisma__TipoEquipeClient<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TipoEquipes.
     * @param {TipoEquipeDeleteManyArgs} args - Arguments to filter TipoEquipes to delete.
     * @example
     * // Delete a few TipoEquipes
     * const { count } = await prisma.tipoEquipe.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoEquipeDeleteManyArgs>(args?: SelectSubset<T, TipoEquipeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoEquipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEquipeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoEquipes
     * const tipoEquipe = await prisma.tipoEquipe.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoEquipeUpdateManyArgs>(args: SelectSubset<T, TipoEquipeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoEquipe.
     * @param {TipoEquipeUpsertArgs} args - Arguments to update or create a TipoEquipe.
     * @example
     * // Update or create a TipoEquipe
     * const tipoEquipe = await prisma.tipoEquipe.upsert({
     *   create: {
     *     // ... data to create a TipoEquipe
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoEquipe we want to update
     *   }
     * })
     */
    upsert<T extends TipoEquipeUpsertArgs>(args: SelectSubset<T, TipoEquipeUpsertArgs<ExtArgs>>): Prisma__TipoEquipeClient<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TipoEquipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEquipeCountArgs} args - Arguments to filter TipoEquipes to count.
     * @example
     * // Count the number of TipoEquipes
     * const count = await prisma.tipoEquipe.count({
     *   where: {
     *     // ... the filter for the TipoEquipes we want to count
     *   }
     * })
    **/
    count<T extends TipoEquipeCountArgs>(
      args?: Subset<T, TipoEquipeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoEquipeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoEquipe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEquipeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoEquipeAggregateArgs>(args: Subset<T, TipoEquipeAggregateArgs>): Prisma.PrismaPromise<GetTipoEquipeAggregateType<T>>

    /**
     * Group by TipoEquipe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEquipeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoEquipeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoEquipeGroupByArgs['orderBy'] }
        : { orderBy?: TipoEquipeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoEquipeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoEquipeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoEquipe model
   */
  readonly fields: TipoEquipeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoEquipe.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoEquipeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Equipe<T extends TipoEquipe$EquipeArgs<ExtArgs> = {}>(args?: Subset<T, TipoEquipe$EquipeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ChecklistTipoEquipeRelacao<T extends TipoEquipe$ChecklistTipoEquipeRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, TipoEquipe$ChecklistTipoEquipeRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistTipoEquipeRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoEquipe model
   */
  interface TipoEquipeFieldRefs {
    readonly id: FieldRef<"TipoEquipe", 'Int'>
    readonly nome: FieldRef<"TipoEquipe", 'String'>
    readonly createdAt: FieldRef<"TipoEquipe", 'DateTime'>
    readonly createdBy: FieldRef<"TipoEquipe", 'String'>
    readonly updatedAt: FieldRef<"TipoEquipe", 'DateTime'>
    readonly updatedBy: FieldRef<"TipoEquipe", 'String'>
    readonly deletedAt: FieldRef<"TipoEquipe", 'DateTime'>
    readonly deletedBy: FieldRef<"TipoEquipe", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoEquipe findUnique
   */
  export type TipoEquipeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipe
     */
    select?: TipoEquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEquipe
     */
    omit?: TipoEquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEquipeInclude<ExtArgs> | null
    /**
     * Filter, which TipoEquipe to fetch.
     */
    where: TipoEquipeWhereUniqueInput
  }

  /**
   * TipoEquipe findUniqueOrThrow
   */
  export type TipoEquipeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipe
     */
    select?: TipoEquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEquipe
     */
    omit?: TipoEquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEquipeInclude<ExtArgs> | null
    /**
     * Filter, which TipoEquipe to fetch.
     */
    where: TipoEquipeWhereUniqueInput
  }

  /**
   * TipoEquipe findFirst
   */
  export type TipoEquipeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipe
     */
    select?: TipoEquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEquipe
     */
    omit?: TipoEquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEquipeInclude<ExtArgs> | null
    /**
     * Filter, which TipoEquipe to fetch.
     */
    where?: TipoEquipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEquipes to fetch.
     */
    orderBy?: TipoEquipeOrderByWithRelationInput | TipoEquipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoEquipes.
     */
    cursor?: TipoEquipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEquipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEquipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoEquipes.
     */
    distinct?: TipoEquipeScalarFieldEnum | TipoEquipeScalarFieldEnum[]
  }

  /**
   * TipoEquipe findFirstOrThrow
   */
  export type TipoEquipeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipe
     */
    select?: TipoEquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEquipe
     */
    omit?: TipoEquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEquipeInclude<ExtArgs> | null
    /**
     * Filter, which TipoEquipe to fetch.
     */
    where?: TipoEquipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEquipes to fetch.
     */
    orderBy?: TipoEquipeOrderByWithRelationInput | TipoEquipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoEquipes.
     */
    cursor?: TipoEquipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEquipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEquipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoEquipes.
     */
    distinct?: TipoEquipeScalarFieldEnum | TipoEquipeScalarFieldEnum[]
  }

  /**
   * TipoEquipe findMany
   */
  export type TipoEquipeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipe
     */
    select?: TipoEquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEquipe
     */
    omit?: TipoEquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEquipeInclude<ExtArgs> | null
    /**
     * Filter, which TipoEquipes to fetch.
     */
    where?: TipoEquipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEquipes to fetch.
     */
    orderBy?: TipoEquipeOrderByWithRelationInput | TipoEquipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoEquipes.
     */
    cursor?: TipoEquipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEquipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEquipes.
     */
    skip?: number
    distinct?: TipoEquipeScalarFieldEnum | TipoEquipeScalarFieldEnum[]
  }

  /**
   * TipoEquipe create
   */
  export type TipoEquipeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipe
     */
    select?: TipoEquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEquipe
     */
    omit?: TipoEquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEquipeInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoEquipe.
     */
    data: XOR<TipoEquipeCreateInput, TipoEquipeUncheckedCreateInput>
  }

  /**
   * TipoEquipe createMany
   */
  export type TipoEquipeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoEquipes.
     */
    data: TipoEquipeCreateManyInput | TipoEquipeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoEquipe update
   */
  export type TipoEquipeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipe
     */
    select?: TipoEquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEquipe
     */
    omit?: TipoEquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEquipeInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoEquipe.
     */
    data: XOR<TipoEquipeUpdateInput, TipoEquipeUncheckedUpdateInput>
    /**
     * Choose, which TipoEquipe to update.
     */
    where: TipoEquipeWhereUniqueInput
  }

  /**
   * TipoEquipe updateMany
   */
  export type TipoEquipeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoEquipes.
     */
    data: XOR<TipoEquipeUpdateManyMutationInput, TipoEquipeUncheckedUpdateManyInput>
    /**
     * Filter which TipoEquipes to update
     */
    where?: TipoEquipeWhereInput
    /**
     * Limit how many TipoEquipes to update.
     */
    limit?: number
  }

  /**
   * TipoEquipe upsert
   */
  export type TipoEquipeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipe
     */
    select?: TipoEquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEquipe
     */
    omit?: TipoEquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEquipeInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoEquipe to update in case it exists.
     */
    where: TipoEquipeWhereUniqueInput
    /**
     * In case the TipoEquipe found by the `where` argument doesn't exist, create a new TipoEquipe with this data.
     */
    create: XOR<TipoEquipeCreateInput, TipoEquipeUncheckedCreateInput>
    /**
     * In case the TipoEquipe was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoEquipeUpdateInput, TipoEquipeUncheckedUpdateInput>
  }

  /**
   * TipoEquipe delete
   */
  export type TipoEquipeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipe
     */
    select?: TipoEquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEquipe
     */
    omit?: TipoEquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEquipeInclude<ExtArgs> | null
    /**
     * Filter which TipoEquipe to delete.
     */
    where: TipoEquipeWhereUniqueInput
  }

  /**
   * TipoEquipe deleteMany
   */
  export type TipoEquipeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoEquipes to delete
     */
    where?: TipoEquipeWhereInput
    /**
     * Limit how many TipoEquipes to delete.
     */
    limit?: number
  }

  /**
   * TipoEquipe.Equipe
   */
  export type TipoEquipe$EquipeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    where?: EquipeWhereInput
    orderBy?: EquipeOrderByWithRelationInput | EquipeOrderByWithRelationInput[]
    cursor?: EquipeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipeScalarFieldEnum | EquipeScalarFieldEnum[]
  }

  /**
   * TipoEquipe.ChecklistTipoEquipeRelacao
   */
  export type TipoEquipe$ChecklistTipoEquipeRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoEquipeRelacao
     */
    select?: ChecklistTipoEquipeRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoEquipeRelacao
     */
    omit?: ChecklistTipoEquipeRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoEquipeRelacaoInclude<ExtArgs> | null
    where?: ChecklistTipoEquipeRelacaoWhereInput
    orderBy?: ChecklistTipoEquipeRelacaoOrderByWithRelationInput | ChecklistTipoEquipeRelacaoOrderByWithRelationInput[]
    cursor?: ChecklistTipoEquipeRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChecklistTipoEquipeRelacaoScalarFieldEnum | ChecklistTipoEquipeRelacaoScalarFieldEnum[]
  }

  /**
   * TipoEquipe without action
   */
  export type TipoEquipeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEquipe
     */
    select?: TipoEquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEquipe
     */
    omit?: TipoEquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEquipeInclude<ExtArgs> | null
  }


  /**
   * Model Equipe
   */

  export type AggregateEquipe = {
    _count: EquipeCountAggregateOutputType | null
    _avg: EquipeAvgAggregateOutputType | null
    _sum: EquipeSumAggregateOutputType | null
    _min: EquipeMinAggregateOutputType | null
    _max: EquipeMaxAggregateOutputType | null
  }

  export type EquipeAvgAggregateOutputType = {
    id: number | null
    tipoEquipeId: number | null
    contratoId: number | null
  }

  export type EquipeSumAggregateOutputType = {
    id: number | null
    tipoEquipeId: number | null
    contratoId: number | null
  }

  export type EquipeMinAggregateOutputType = {
    id: number | null
    nome: string | null
    tipoEquipeId: number | null
    contratoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EquipeMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    tipoEquipeId: number | null
    contratoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EquipeCountAggregateOutputType = {
    id: number
    nome: number
    tipoEquipeId: number
    contratoId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type EquipeAvgAggregateInputType = {
    id?: true
    tipoEquipeId?: true
    contratoId?: true
  }

  export type EquipeSumAggregateInputType = {
    id?: true
    tipoEquipeId?: true
    contratoId?: true
  }

  export type EquipeMinAggregateInputType = {
    id?: true
    nome?: true
    tipoEquipeId?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EquipeMaxAggregateInputType = {
    id?: true
    nome?: true
    tipoEquipeId?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EquipeCountAggregateInputType = {
    id?: true
    nome?: true
    tipoEquipeId?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type EquipeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Equipe to aggregate.
     */
    where?: EquipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipes to fetch.
     */
    orderBy?: EquipeOrderByWithRelationInput | EquipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Equipes
    **/
    _count?: true | EquipeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipeMaxAggregateInputType
  }

  export type GetEquipeAggregateType<T extends EquipeAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipe]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipe[P]>
      : GetScalarType<T[P], AggregateEquipe[P]>
  }




  export type EquipeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeWhereInput
    orderBy?: EquipeOrderByWithAggregationInput | EquipeOrderByWithAggregationInput[]
    by: EquipeScalarFieldEnum[] | EquipeScalarFieldEnum
    having?: EquipeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipeCountAggregateInputType | true
    _avg?: EquipeAvgAggregateInputType
    _sum?: EquipeSumAggregateInputType
    _min?: EquipeMinAggregateInputType
    _max?: EquipeMaxAggregateInputType
  }

  export type EquipeGroupByOutputType = {
    id: number
    nome: string
    tipoEquipeId: number
    contratoId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: EquipeCountAggregateOutputType | null
    _avg: EquipeAvgAggregateOutputType | null
    _sum: EquipeSumAggregateOutputType | null
    _min: EquipeMinAggregateOutputType | null
    _max: EquipeMaxAggregateOutputType | null
  }

  type GetEquipeGroupByPayload<T extends EquipeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipeGroupByOutputType[P]>
            : GetScalarType<T[P], EquipeGroupByOutputType[P]>
        }
      >
    >


  export type EquipeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tipoEquipeId?: boolean
    contratoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    tipoEquipe?: boolean | TipoEquipeDefaultArgs<ExtArgs>
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    EquipeSupervisor?: boolean | Equipe$EquipeSupervisorArgs<ExtArgs>
    Turno?: boolean | Equipe$TurnoArgs<ExtArgs>
    EscalaEquipePeriodo?: boolean | Equipe$EscalaEquipePeriodoArgs<ExtArgs>
    EquipeHorarioVigencia?: boolean | Equipe$EquipeHorarioVigenciaArgs<ExtArgs>
    EquipeTurnoHistorico?: boolean | Equipe$EquipeTurnoHistoricoArgs<ExtArgs>
    EquipeBaseHistorico?: boolean | Equipe$EquipeBaseHistoricoArgs<ExtArgs>
    _count?: boolean | EquipeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipe"]>



  export type EquipeSelectScalar = {
    id?: boolean
    nome?: boolean
    tipoEquipeId?: boolean
    contratoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type EquipeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "tipoEquipeId" | "contratoId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["equipe"]>
  export type EquipeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipoEquipe?: boolean | TipoEquipeDefaultArgs<ExtArgs>
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    EquipeSupervisor?: boolean | Equipe$EquipeSupervisorArgs<ExtArgs>
    Turno?: boolean | Equipe$TurnoArgs<ExtArgs>
    EscalaEquipePeriodo?: boolean | Equipe$EscalaEquipePeriodoArgs<ExtArgs>
    EquipeHorarioVigencia?: boolean | Equipe$EquipeHorarioVigenciaArgs<ExtArgs>
    EquipeTurnoHistorico?: boolean | Equipe$EquipeTurnoHistoricoArgs<ExtArgs>
    EquipeBaseHistorico?: boolean | Equipe$EquipeBaseHistoricoArgs<ExtArgs>
    _count?: boolean | EquipeCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $EquipePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Equipe"
    objects: {
      tipoEquipe: Prisma.$TipoEquipePayload<ExtArgs>
      contrato: Prisma.$ContratoPayload<ExtArgs>
      EquipeSupervisor: Prisma.$EquipeSupervisorPayload<ExtArgs>[]
      Turno: Prisma.$TurnoPayload<ExtArgs>[]
      EscalaEquipePeriodo: Prisma.$EscalaEquipePeriodoPayload<ExtArgs>[]
      EquipeHorarioVigencia: Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>[]
      EquipeTurnoHistorico: Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>[]
      EquipeBaseHistorico: Prisma.$EquipeBaseHistoricoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      tipoEquipeId: number
      contratoId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["equipe"]>
    composites: {}
  }

  type EquipeGetPayload<S extends boolean | null | undefined | EquipeDefaultArgs> = $Result.GetResult<Prisma.$EquipePayload, S>

  type EquipeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EquipeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EquipeCountAggregateInputType | true
    }

  export interface EquipeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Equipe'], meta: { name: 'Equipe' } }
    /**
     * Find zero or one Equipe that matches the filter.
     * @param {EquipeFindUniqueArgs} args - Arguments to find a Equipe
     * @example
     * // Get one Equipe
     * const equipe = await prisma.equipe.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipeFindUniqueArgs>(args: SelectSubset<T, EquipeFindUniqueArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Equipe that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EquipeFindUniqueOrThrowArgs} args - Arguments to find a Equipe
     * @example
     * // Get one Equipe
     * const equipe = await prisma.equipe.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipeFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Equipe that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeFindFirstArgs} args - Arguments to find a Equipe
     * @example
     * // Get one Equipe
     * const equipe = await prisma.equipe.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipeFindFirstArgs>(args?: SelectSubset<T, EquipeFindFirstArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Equipe that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeFindFirstOrThrowArgs} args - Arguments to find a Equipe
     * @example
     * // Get one Equipe
     * const equipe = await prisma.equipe.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipeFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipeFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Equipes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Equipes
     * const equipes = await prisma.equipe.findMany()
     * 
     * // Get first 10 Equipes
     * const equipes = await prisma.equipe.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipeWithIdOnly = await prisma.equipe.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipeFindManyArgs>(args?: SelectSubset<T, EquipeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Equipe.
     * @param {EquipeCreateArgs} args - Arguments to create a Equipe.
     * @example
     * // Create one Equipe
     * const Equipe = await prisma.equipe.create({
     *   data: {
     *     // ... data to create a Equipe
     *   }
     * })
     * 
     */
    create<T extends EquipeCreateArgs>(args: SelectSubset<T, EquipeCreateArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Equipes.
     * @param {EquipeCreateManyArgs} args - Arguments to create many Equipes.
     * @example
     * // Create many Equipes
     * const equipe = await prisma.equipe.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipeCreateManyArgs>(args?: SelectSubset<T, EquipeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Equipe.
     * @param {EquipeDeleteArgs} args - Arguments to delete one Equipe.
     * @example
     * // Delete one Equipe
     * const Equipe = await prisma.equipe.delete({
     *   where: {
     *     // ... filter to delete one Equipe
     *   }
     * })
     * 
     */
    delete<T extends EquipeDeleteArgs>(args: SelectSubset<T, EquipeDeleteArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Equipe.
     * @param {EquipeUpdateArgs} args - Arguments to update one Equipe.
     * @example
     * // Update one Equipe
     * const equipe = await prisma.equipe.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipeUpdateArgs>(args: SelectSubset<T, EquipeUpdateArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Equipes.
     * @param {EquipeDeleteManyArgs} args - Arguments to filter Equipes to delete.
     * @example
     * // Delete a few Equipes
     * const { count } = await prisma.equipe.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipeDeleteManyArgs>(args?: SelectSubset<T, EquipeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Equipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Equipes
     * const equipe = await prisma.equipe.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipeUpdateManyArgs>(args: SelectSubset<T, EquipeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Equipe.
     * @param {EquipeUpsertArgs} args - Arguments to update or create a Equipe.
     * @example
     * // Update or create a Equipe
     * const equipe = await prisma.equipe.upsert({
     *   create: {
     *     // ... data to create a Equipe
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Equipe we want to update
     *   }
     * })
     */
    upsert<T extends EquipeUpsertArgs>(args: SelectSubset<T, EquipeUpsertArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Equipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeCountArgs} args - Arguments to filter Equipes to count.
     * @example
     * // Count the number of Equipes
     * const count = await prisma.equipe.count({
     *   where: {
     *     // ... the filter for the Equipes we want to count
     *   }
     * })
    **/
    count<T extends EquipeCountArgs>(
      args?: Subset<T, EquipeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Equipe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipeAggregateArgs>(args: Subset<T, EquipeAggregateArgs>): Prisma.PrismaPromise<GetEquipeAggregateType<T>>

    /**
     * Group by Equipe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipeGroupByArgs['orderBy'] }
        : { orderBy?: EquipeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Equipe model
   */
  readonly fields: EquipeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Equipe.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tipoEquipe<T extends TipoEquipeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoEquipeDefaultArgs<ExtArgs>>): Prisma__TipoEquipeClient<$Result.GetResult<Prisma.$TipoEquipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    contrato<T extends ContratoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContratoDefaultArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    EquipeSupervisor<T extends Equipe$EquipeSupervisorArgs<ExtArgs> = {}>(args?: Subset<T, Equipe$EquipeSupervisorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Turno<T extends Equipe$TurnoArgs<ExtArgs> = {}>(args?: Subset<T, Equipe$TurnoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EscalaEquipePeriodo<T extends Equipe$EscalaEquipePeriodoArgs<ExtArgs> = {}>(args?: Subset<T, Equipe$EscalaEquipePeriodoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EquipeHorarioVigencia<T extends Equipe$EquipeHorarioVigenciaArgs<ExtArgs> = {}>(args?: Subset<T, Equipe$EquipeHorarioVigenciaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EquipeTurnoHistorico<T extends Equipe$EquipeTurnoHistoricoArgs<ExtArgs> = {}>(args?: Subset<T, Equipe$EquipeTurnoHistoricoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EquipeBaseHistorico<T extends Equipe$EquipeBaseHistoricoArgs<ExtArgs> = {}>(args?: Subset<T, Equipe$EquipeBaseHistoricoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeBaseHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Equipe model
   */
  interface EquipeFieldRefs {
    readonly id: FieldRef<"Equipe", 'Int'>
    readonly nome: FieldRef<"Equipe", 'String'>
    readonly tipoEquipeId: FieldRef<"Equipe", 'Int'>
    readonly contratoId: FieldRef<"Equipe", 'Int'>
    readonly createdAt: FieldRef<"Equipe", 'DateTime'>
    readonly createdBy: FieldRef<"Equipe", 'String'>
    readonly updatedAt: FieldRef<"Equipe", 'DateTime'>
    readonly updatedBy: FieldRef<"Equipe", 'String'>
    readonly deletedAt: FieldRef<"Equipe", 'DateTime'>
    readonly deletedBy: FieldRef<"Equipe", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Equipe findUnique
   */
  export type EquipeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    /**
     * Filter, which Equipe to fetch.
     */
    where: EquipeWhereUniqueInput
  }

  /**
   * Equipe findUniqueOrThrow
   */
  export type EquipeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    /**
     * Filter, which Equipe to fetch.
     */
    where: EquipeWhereUniqueInput
  }

  /**
   * Equipe findFirst
   */
  export type EquipeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    /**
     * Filter, which Equipe to fetch.
     */
    where?: EquipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipes to fetch.
     */
    orderBy?: EquipeOrderByWithRelationInput | EquipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Equipes.
     */
    cursor?: EquipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Equipes.
     */
    distinct?: EquipeScalarFieldEnum | EquipeScalarFieldEnum[]
  }

  /**
   * Equipe findFirstOrThrow
   */
  export type EquipeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    /**
     * Filter, which Equipe to fetch.
     */
    where?: EquipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipes to fetch.
     */
    orderBy?: EquipeOrderByWithRelationInput | EquipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Equipes.
     */
    cursor?: EquipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Equipes.
     */
    distinct?: EquipeScalarFieldEnum | EquipeScalarFieldEnum[]
  }

  /**
   * Equipe findMany
   */
  export type EquipeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    /**
     * Filter, which Equipes to fetch.
     */
    where?: EquipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipes to fetch.
     */
    orderBy?: EquipeOrderByWithRelationInput | EquipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Equipes.
     */
    cursor?: EquipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipes.
     */
    skip?: number
    distinct?: EquipeScalarFieldEnum | EquipeScalarFieldEnum[]
  }

  /**
   * Equipe create
   */
  export type EquipeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    /**
     * The data needed to create a Equipe.
     */
    data: XOR<EquipeCreateInput, EquipeUncheckedCreateInput>
  }

  /**
   * Equipe createMany
   */
  export type EquipeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Equipes.
     */
    data: EquipeCreateManyInput | EquipeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Equipe update
   */
  export type EquipeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    /**
     * The data needed to update a Equipe.
     */
    data: XOR<EquipeUpdateInput, EquipeUncheckedUpdateInput>
    /**
     * Choose, which Equipe to update.
     */
    where: EquipeWhereUniqueInput
  }

  /**
   * Equipe updateMany
   */
  export type EquipeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Equipes.
     */
    data: XOR<EquipeUpdateManyMutationInput, EquipeUncheckedUpdateManyInput>
    /**
     * Filter which Equipes to update
     */
    where?: EquipeWhereInput
    /**
     * Limit how many Equipes to update.
     */
    limit?: number
  }

  /**
   * Equipe upsert
   */
  export type EquipeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    /**
     * The filter to search for the Equipe to update in case it exists.
     */
    where: EquipeWhereUniqueInput
    /**
     * In case the Equipe found by the `where` argument doesn't exist, create a new Equipe with this data.
     */
    create: XOR<EquipeCreateInput, EquipeUncheckedCreateInput>
    /**
     * In case the Equipe was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipeUpdateInput, EquipeUncheckedUpdateInput>
  }

  /**
   * Equipe delete
   */
  export type EquipeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
    /**
     * Filter which Equipe to delete.
     */
    where: EquipeWhereUniqueInput
  }

  /**
   * Equipe deleteMany
   */
  export type EquipeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Equipes to delete
     */
    where?: EquipeWhereInput
    /**
     * Limit how many Equipes to delete.
     */
    limit?: number
  }

  /**
   * Equipe.EquipeSupervisor
   */
  export type Equipe$EquipeSupervisorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    where?: EquipeSupervisorWhereInput
    orderBy?: EquipeSupervisorOrderByWithRelationInput | EquipeSupervisorOrderByWithRelationInput[]
    cursor?: EquipeSupervisorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipeSupervisorScalarFieldEnum | EquipeSupervisorScalarFieldEnum[]
  }

  /**
   * Equipe.Turno
   */
  export type Equipe$TurnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    where?: TurnoWhereInput
    orderBy?: TurnoOrderByWithRelationInput | TurnoOrderByWithRelationInput[]
    cursor?: TurnoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TurnoScalarFieldEnum | TurnoScalarFieldEnum[]
  }

  /**
   * Equipe.EscalaEquipePeriodo
   */
  export type Equipe$EscalaEquipePeriodoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    where?: EscalaEquipePeriodoWhereInput
    orderBy?: EscalaEquipePeriodoOrderByWithRelationInput | EscalaEquipePeriodoOrderByWithRelationInput[]
    cursor?: EscalaEquipePeriodoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EscalaEquipePeriodoScalarFieldEnum | EscalaEquipePeriodoScalarFieldEnum[]
  }

  /**
   * Equipe.EquipeHorarioVigencia
   */
  export type Equipe$EquipeHorarioVigenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
    where?: EquipeHorarioVigenciaWhereInput
    orderBy?: EquipeHorarioVigenciaOrderByWithRelationInput | EquipeHorarioVigenciaOrderByWithRelationInput[]
    cursor?: EquipeHorarioVigenciaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipeHorarioVigenciaScalarFieldEnum | EquipeHorarioVigenciaScalarFieldEnum[]
  }

  /**
   * Equipe.EquipeTurnoHistorico
   */
  export type Equipe$EquipeTurnoHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    where?: EquipeTurnoHistoricoWhereInput
    orderBy?: EquipeTurnoHistoricoOrderByWithRelationInput | EquipeTurnoHistoricoOrderByWithRelationInput[]
    cursor?: EquipeTurnoHistoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipeTurnoHistoricoScalarFieldEnum | EquipeTurnoHistoricoScalarFieldEnum[]
  }

  /**
   * Equipe.EquipeBaseHistorico
   */
  export type Equipe$EquipeBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeBaseHistorico
     */
    select?: EquipeBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeBaseHistorico
     */
    omit?: EquipeBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeBaseHistoricoInclude<ExtArgs> | null
    where?: EquipeBaseHistoricoWhereInput
    orderBy?: EquipeBaseHistoricoOrderByWithRelationInput | EquipeBaseHistoricoOrderByWithRelationInput[]
    cursor?: EquipeBaseHistoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipeBaseHistoricoScalarFieldEnum | EquipeBaseHistoricoScalarFieldEnum[]
  }

  /**
   * Equipe without action
   */
  export type EquipeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipe
     */
    select?: EquipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipe
     */
    omit?: EquipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeInclude<ExtArgs> | null
  }


  /**
   * Model EquipeSupervisor
   */

  export type AggregateEquipeSupervisor = {
    _count: EquipeSupervisorCountAggregateOutputType | null
    _avg: EquipeSupervisorAvgAggregateOutputType | null
    _sum: EquipeSupervisorSumAggregateOutputType | null
    _min: EquipeSupervisorMinAggregateOutputType | null
    _max: EquipeSupervisorMaxAggregateOutputType | null
  }

  export type EquipeSupervisorAvgAggregateOutputType = {
    id: number | null
    equipeId: number | null
    supervisorId: number | null
  }

  export type EquipeSupervisorSumAggregateOutputType = {
    id: number | null
    equipeId: number | null
    supervisorId: number | null
  }

  export type EquipeSupervisorMinAggregateOutputType = {
    id: number | null
    equipeId: number | null
    supervisorId: number | null
    inicio: Date | null
    fim: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EquipeSupervisorMaxAggregateOutputType = {
    id: number | null
    equipeId: number | null
    supervisorId: number | null
    inicio: Date | null
    fim: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EquipeSupervisorCountAggregateOutputType = {
    id: number
    equipeId: number
    supervisorId: number
    inicio: number
    fim: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type EquipeSupervisorAvgAggregateInputType = {
    id?: true
    equipeId?: true
    supervisorId?: true
  }

  export type EquipeSupervisorSumAggregateInputType = {
    id?: true
    equipeId?: true
    supervisorId?: true
  }

  export type EquipeSupervisorMinAggregateInputType = {
    id?: true
    equipeId?: true
    supervisorId?: true
    inicio?: true
    fim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EquipeSupervisorMaxAggregateInputType = {
    id?: true
    equipeId?: true
    supervisorId?: true
    inicio?: true
    fim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EquipeSupervisorCountAggregateInputType = {
    id?: true
    equipeId?: true
    supervisorId?: true
    inicio?: true
    fim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type EquipeSupervisorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipeSupervisor to aggregate.
     */
    where?: EquipeSupervisorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeSupervisors to fetch.
     */
    orderBy?: EquipeSupervisorOrderByWithRelationInput | EquipeSupervisorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipeSupervisorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeSupervisors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeSupervisors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EquipeSupervisors
    **/
    _count?: true | EquipeSupervisorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipeSupervisorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipeSupervisorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipeSupervisorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipeSupervisorMaxAggregateInputType
  }

  export type GetEquipeSupervisorAggregateType<T extends EquipeSupervisorAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipeSupervisor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipeSupervisor[P]>
      : GetScalarType<T[P], AggregateEquipeSupervisor[P]>
  }




  export type EquipeSupervisorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeSupervisorWhereInput
    orderBy?: EquipeSupervisorOrderByWithAggregationInput | EquipeSupervisorOrderByWithAggregationInput[]
    by: EquipeSupervisorScalarFieldEnum[] | EquipeSupervisorScalarFieldEnum
    having?: EquipeSupervisorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipeSupervisorCountAggregateInputType | true
    _avg?: EquipeSupervisorAvgAggregateInputType
    _sum?: EquipeSupervisorSumAggregateInputType
    _min?: EquipeSupervisorMinAggregateInputType
    _max?: EquipeSupervisorMaxAggregateInputType
  }

  export type EquipeSupervisorGroupByOutputType = {
    id: number
    equipeId: number
    supervisorId: number
    inicio: Date
    fim: Date | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: EquipeSupervisorCountAggregateOutputType | null
    _avg: EquipeSupervisorAvgAggregateOutputType | null
    _sum: EquipeSupervisorSumAggregateOutputType | null
    _min: EquipeSupervisorMinAggregateOutputType | null
    _max: EquipeSupervisorMaxAggregateOutputType | null
  }

  type GetEquipeSupervisorGroupByPayload<T extends EquipeSupervisorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipeSupervisorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipeSupervisorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipeSupervisorGroupByOutputType[P]>
            : GetScalarType<T[P], EquipeSupervisorGroupByOutputType[P]>
        }
      >
    >


  export type EquipeSupervisorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    equipeId?: boolean
    supervisorId?: boolean
    inicio?: boolean
    fim?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
    supervisor?: boolean | SupervisorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipeSupervisor"]>



  export type EquipeSupervisorSelectScalar = {
    id?: boolean
    equipeId?: boolean
    supervisorId?: boolean
    inicio?: boolean
    fim?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type EquipeSupervisorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "equipeId" | "supervisorId" | "inicio" | "fim" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["equipeSupervisor"]>
  export type EquipeSupervisorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
    supervisor?: boolean | SupervisorDefaultArgs<ExtArgs>
  }

  export type $EquipeSupervisorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EquipeSupervisor"
    objects: {
      equipe: Prisma.$EquipePayload<ExtArgs>
      supervisor: Prisma.$SupervisorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      equipeId: number
      supervisorId: number
      inicio: Date
      fim: Date | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["equipeSupervisor"]>
    composites: {}
  }

  type EquipeSupervisorGetPayload<S extends boolean | null | undefined | EquipeSupervisorDefaultArgs> = $Result.GetResult<Prisma.$EquipeSupervisorPayload, S>

  type EquipeSupervisorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EquipeSupervisorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EquipeSupervisorCountAggregateInputType | true
    }

  export interface EquipeSupervisorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EquipeSupervisor'], meta: { name: 'EquipeSupervisor' } }
    /**
     * Find zero or one EquipeSupervisor that matches the filter.
     * @param {EquipeSupervisorFindUniqueArgs} args - Arguments to find a EquipeSupervisor
     * @example
     * // Get one EquipeSupervisor
     * const equipeSupervisor = await prisma.equipeSupervisor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipeSupervisorFindUniqueArgs>(args: SelectSubset<T, EquipeSupervisorFindUniqueArgs<ExtArgs>>): Prisma__EquipeSupervisorClient<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EquipeSupervisor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EquipeSupervisorFindUniqueOrThrowArgs} args - Arguments to find a EquipeSupervisor
     * @example
     * // Get one EquipeSupervisor
     * const equipeSupervisor = await prisma.equipeSupervisor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipeSupervisorFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipeSupervisorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipeSupervisorClient<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipeSupervisor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeSupervisorFindFirstArgs} args - Arguments to find a EquipeSupervisor
     * @example
     * // Get one EquipeSupervisor
     * const equipeSupervisor = await prisma.equipeSupervisor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipeSupervisorFindFirstArgs>(args?: SelectSubset<T, EquipeSupervisorFindFirstArgs<ExtArgs>>): Prisma__EquipeSupervisorClient<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipeSupervisor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeSupervisorFindFirstOrThrowArgs} args - Arguments to find a EquipeSupervisor
     * @example
     * // Get one EquipeSupervisor
     * const equipeSupervisor = await prisma.equipeSupervisor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipeSupervisorFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipeSupervisorFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipeSupervisorClient<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EquipeSupervisors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeSupervisorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EquipeSupervisors
     * const equipeSupervisors = await prisma.equipeSupervisor.findMany()
     * 
     * // Get first 10 EquipeSupervisors
     * const equipeSupervisors = await prisma.equipeSupervisor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipeSupervisorWithIdOnly = await prisma.equipeSupervisor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipeSupervisorFindManyArgs>(args?: SelectSubset<T, EquipeSupervisorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EquipeSupervisor.
     * @param {EquipeSupervisorCreateArgs} args - Arguments to create a EquipeSupervisor.
     * @example
     * // Create one EquipeSupervisor
     * const EquipeSupervisor = await prisma.equipeSupervisor.create({
     *   data: {
     *     // ... data to create a EquipeSupervisor
     *   }
     * })
     * 
     */
    create<T extends EquipeSupervisorCreateArgs>(args: SelectSubset<T, EquipeSupervisorCreateArgs<ExtArgs>>): Prisma__EquipeSupervisorClient<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EquipeSupervisors.
     * @param {EquipeSupervisorCreateManyArgs} args - Arguments to create many EquipeSupervisors.
     * @example
     * // Create many EquipeSupervisors
     * const equipeSupervisor = await prisma.equipeSupervisor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipeSupervisorCreateManyArgs>(args?: SelectSubset<T, EquipeSupervisorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EquipeSupervisor.
     * @param {EquipeSupervisorDeleteArgs} args - Arguments to delete one EquipeSupervisor.
     * @example
     * // Delete one EquipeSupervisor
     * const EquipeSupervisor = await prisma.equipeSupervisor.delete({
     *   where: {
     *     // ... filter to delete one EquipeSupervisor
     *   }
     * })
     * 
     */
    delete<T extends EquipeSupervisorDeleteArgs>(args: SelectSubset<T, EquipeSupervisorDeleteArgs<ExtArgs>>): Prisma__EquipeSupervisorClient<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EquipeSupervisor.
     * @param {EquipeSupervisorUpdateArgs} args - Arguments to update one EquipeSupervisor.
     * @example
     * // Update one EquipeSupervisor
     * const equipeSupervisor = await prisma.equipeSupervisor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipeSupervisorUpdateArgs>(args: SelectSubset<T, EquipeSupervisorUpdateArgs<ExtArgs>>): Prisma__EquipeSupervisorClient<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EquipeSupervisors.
     * @param {EquipeSupervisorDeleteManyArgs} args - Arguments to filter EquipeSupervisors to delete.
     * @example
     * // Delete a few EquipeSupervisors
     * const { count } = await prisma.equipeSupervisor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipeSupervisorDeleteManyArgs>(args?: SelectSubset<T, EquipeSupervisorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipeSupervisors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeSupervisorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EquipeSupervisors
     * const equipeSupervisor = await prisma.equipeSupervisor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipeSupervisorUpdateManyArgs>(args: SelectSubset<T, EquipeSupervisorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EquipeSupervisor.
     * @param {EquipeSupervisorUpsertArgs} args - Arguments to update or create a EquipeSupervisor.
     * @example
     * // Update or create a EquipeSupervisor
     * const equipeSupervisor = await prisma.equipeSupervisor.upsert({
     *   create: {
     *     // ... data to create a EquipeSupervisor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EquipeSupervisor we want to update
     *   }
     * })
     */
    upsert<T extends EquipeSupervisorUpsertArgs>(args: SelectSubset<T, EquipeSupervisorUpsertArgs<ExtArgs>>): Prisma__EquipeSupervisorClient<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EquipeSupervisors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeSupervisorCountArgs} args - Arguments to filter EquipeSupervisors to count.
     * @example
     * // Count the number of EquipeSupervisors
     * const count = await prisma.equipeSupervisor.count({
     *   where: {
     *     // ... the filter for the EquipeSupervisors we want to count
     *   }
     * })
    **/
    count<T extends EquipeSupervisorCountArgs>(
      args?: Subset<T, EquipeSupervisorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipeSupervisorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EquipeSupervisor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeSupervisorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipeSupervisorAggregateArgs>(args: Subset<T, EquipeSupervisorAggregateArgs>): Prisma.PrismaPromise<GetEquipeSupervisorAggregateType<T>>

    /**
     * Group by EquipeSupervisor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeSupervisorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipeSupervisorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipeSupervisorGroupByArgs['orderBy'] }
        : { orderBy?: EquipeSupervisorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipeSupervisorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipeSupervisorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EquipeSupervisor model
   */
  readonly fields: EquipeSupervisorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EquipeSupervisor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipeSupervisorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    equipe<T extends EquipeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipeDefaultArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    supervisor<T extends SupervisorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupervisorDefaultArgs<ExtArgs>>): Prisma__SupervisorClient<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EquipeSupervisor model
   */
  interface EquipeSupervisorFieldRefs {
    readonly id: FieldRef<"EquipeSupervisor", 'Int'>
    readonly equipeId: FieldRef<"EquipeSupervisor", 'Int'>
    readonly supervisorId: FieldRef<"EquipeSupervisor", 'Int'>
    readonly inicio: FieldRef<"EquipeSupervisor", 'DateTime'>
    readonly fim: FieldRef<"EquipeSupervisor", 'DateTime'>
    readonly createdAt: FieldRef<"EquipeSupervisor", 'DateTime'>
    readonly createdBy: FieldRef<"EquipeSupervisor", 'String'>
    readonly updatedAt: FieldRef<"EquipeSupervisor", 'DateTime'>
    readonly updatedBy: FieldRef<"EquipeSupervisor", 'String'>
    readonly deletedAt: FieldRef<"EquipeSupervisor", 'DateTime'>
    readonly deletedBy: FieldRef<"EquipeSupervisor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EquipeSupervisor findUnique
   */
  export type EquipeSupervisorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    /**
     * Filter, which EquipeSupervisor to fetch.
     */
    where: EquipeSupervisorWhereUniqueInput
  }

  /**
   * EquipeSupervisor findUniqueOrThrow
   */
  export type EquipeSupervisorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    /**
     * Filter, which EquipeSupervisor to fetch.
     */
    where: EquipeSupervisorWhereUniqueInput
  }

  /**
   * EquipeSupervisor findFirst
   */
  export type EquipeSupervisorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    /**
     * Filter, which EquipeSupervisor to fetch.
     */
    where?: EquipeSupervisorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeSupervisors to fetch.
     */
    orderBy?: EquipeSupervisorOrderByWithRelationInput | EquipeSupervisorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipeSupervisors.
     */
    cursor?: EquipeSupervisorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeSupervisors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeSupervisors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipeSupervisors.
     */
    distinct?: EquipeSupervisorScalarFieldEnum | EquipeSupervisorScalarFieldEnum[]
  }

  /**
   * EquipeSupervisor findFirstOrThrow
   */
  export type EquipeSupervisorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    /**
     * Filter, which EquipeSupervisor to fetch.
     */
    where?: EquipeSupervisorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeSupervisors to fetch.
     */
    orderBy?: EquipeSupervisorOrderByWithRelationInput | EquipeSupervisorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipeSupervisors.
     */
    cursor?: EquipeSupervisorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeSupervisors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeSupervisors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipeSupervisors.
     */
    distinct?: EquipeSupervisorScalarFieldEnum | EquipeSupervisorScalarFieldEnum[]
  }

  /**
   * EquipeSupervisor findMany
   */
  export type EquipeSupervisorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    /**
     * Filter, which EquipeSupervisors to fetch.
     */
    where?: EquipeSupervisorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeSupervisors to fetch.
     */
    orderBy?: EquipeSupervisorOrderByWithRelationInput | EquipeSupervisorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EquipeSupervisors.
     */
    cursor?: EquipeSupervisorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeSupervisors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeSupervisors.
     */
    skip?: number
    distinct?: EquipeSupervisorScalarFieldEnum | EquipeSupervisorScalarFieldEnum[]
  }

  /**
   * EquipeSupervisor create
   */
  export type EquipeSupervisorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    /**
     * The data needed to create a EquipeSupervisor.
     */
    data: XOR<EquipeSupervisorCreateInput, EquipeSupervisorUncheckedCreateInput>
  }

  /**
   * EquipeSupervisor createMany
   */
  export type EquipeSupervisorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EquipeSupervisors.
     */
    data: EquipeSupervisorCreateManyInput | EquipeSupervisorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipeSupervisor update
   */
  export type EquipeSupervisorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    /**
     * The data needed to update a EquipeSupervisor.
     */
    data: XOR<EquipeSupervisorUpdateInput, EquipeSupervisorUncheckedUpdateInput>
    /**
     * Choose, which EquipeSupervisor to update.
     */
    where: EquipeSupervisorWhereUniqueInput
  }

  /**
   * EquipeSupervisor updateMany
   */
  export type EquipeSupervisorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EquipeSupervisors.
     */
    data: XOR<EquipeSupervisorUpdateManyMutationInput, EquipeSupervisorUncheckedUpdateManyInput>
    /**
     * Filter which EquipeSupervisors to update
     */
    where?: EquipeSupervisorWhereInput
    /**
     * Limit how many EquipeSupervisors to update.
     */
    limit?: number
  }

  /**
   * EquipeSupervisor upsert
   */
  export type EquipeSupervisorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    /**
     * The filter to search for the EquipeSupervisor to update in case it exists.
     */
    where: EquipeSupervisorWhereUniqueInput
    /**
     * In case the EquipeSupervisor found by the `where` argument doesn't exist, create a new EquipeSupervisor with this data.
     */
    create: XOR<EquipeSupervisorCreateInput, EquipeSupervisorUncheckedCreateInput>
    /**
     * In case the EquipeSupervisor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipeSupervisorUpdateInput, EquipeSupervisorUncheckedUpdateInput>
  }

  /**
   * EquipeSupervisor delete
   */
  export type EquipeSupervisorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    /**
     * Filter which EquipeSupervisor to delete.
     */
    where: EquipeSupervisorWhereUniqueInput
  }

  /**
   * EquipeSupervisor deleteMany
   */
  export type EquipeSupervisorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipeSupervisors to delete
     */
    where?: EquipeSupervisorWhereInput
    /**
     * Limit how many EquipeSupervisors to delete.
     */
    limit?: number
  }

  /**
   * EquipeSupervisor without action
   */
  export type EquipeSupervisorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
  }


  /**
   * Model TipoEscala
   */

  export type AggregateTipoEscala = {
    _count: TipoEscalaCountAggregateOutputType | null
    _avg: TipoEscalaAvgAggregateOutputType | null
    _sum: TipoEscalaSumAggregateOutputType | null
    _min: TipoEscalaMinAggregateOutputType | null
    _max: TipoEscalaMaxAggregateOutputType | null
  }

  export type TipoEscalaAvgAggregateOutputType = {
    id: number | null
    cicloDias: number | null
    periodicidadeSemanas: number | null
    eletricistasPorTurma: number | null
  }

  export type TipoEscalaSumAggregateOutputType = {
    id: number | null
    cicloDias: number | null
    periodicidadeSemanas: number | null
    eletricistasPorTurma: number | null
  }

  export type TipoEscalaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    modoRepeticao: $Enums.ModoRepeticao | null
    cicloDias: number | null
    periodicidadeSemanas: number | null
    eletricistasPorTurma: number | null
    ativo: boolean | null
    observacoes: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoEscalaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    modoRepeticao: $Enums.ModoRepeticao | null
    cicloDias: number | null
    periodicidadeSemanas: number | null
    eletricistasPorTurma: number | null
    ativo: boolean | null
    observacoes: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoEscalaCountAggregateOutputType = {
    id: number
    nome: number
    modoRepeticao: number
    cicloDias: number
    periodicidadeSemanas: number
    eletricistasPorTurma: number
    ativo: number
    observacoes: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type TipoEscalaAvgAggregateInputType = {
    id?: true
    cicloDias?: true
    periodicidadeSemanas?: true
    eletricistasPorTurma?: true
  }

  export type TipoEscalaSumAggregateInputType = {
    id?: true
    cicloDias?: true
    periodicidadeSemanas?: true
    eletricistasPorTurma?: true
  }

  export type TipoEscalaMinAggregateInputType = {
    id?: true
    nome?: true
    modoRepeticao?: true
    cicloDias?: true
    periodicidadeSemanas?: true
    eletricistasPorTurma?: true
    ativo?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoEscalaMaxAggregateInputType = {
    id?: true
    nome?: true
    modoRepeticao?: true
    cicloDias?: true
    periodicidadeSemanas?: true
    eletricistasPorTurma?: true
    ativo?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoEscalaCountAggregateInputType = {
    id?: true
    nome?: true
    modoRepeticao?: true
    cicloDias?: true
    periodicidadeSemanas?: true
    eletricistasPorTurma?: true
    ativo?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type TipoEscalaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoEscala to aggregate.
     */
    where?: TipoEscalaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalas to fetch.
     */
    orderBy?: TipoEscalaOrderByWithRelationInput | TipoEscalaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoEscalaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoEscalas
    **/
    _count?: true | TipoEscalaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoEscalaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoEscalaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoEscalaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoEscalaMaxAggregateInputType
  }

  export type GetTipoEscalaAggregateType<T extends TipoEscalaAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoEscala]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoEscala[P]>
      : GetScalarType<T[P], AggregateTipoEscala[P]>
  }




  export type TipoEscalaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoEscalaWhereInput
    orderBy?: TipoEscalaOrderByWithAggregationInput | TipoEscalaOrderByWithAggregationInput[]
    by: TipoEscalaScalarFieldEnum[] | TipoEscalaScalarFieldEnum
    having?: TipoEscalaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoEscalaCountAggregateInputType | true
    _avg?: TipoEscalaAvgAggregateInputType
    _sum?: TipoEscalaSumAggregateInputType
    _min?: TipoEscalaMinAggregateInputType
    _max?: TipoEscalaMaxAggregateInputType
  }

  export type TipoEscalaGroupByOutputType = {
    id: number
    nome: string
    modoRepeticao: $Enums.ModoRepeticao
    cicloDias: number | null
    periodicidadeSemanas: number | null
    eletricistasPorTurma: number | null
    ativo: boolean
    observacoes: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: TipoEscalaCountAggregateOutputType | null
    _avg: TipoEscalaAvgAggregateOutputType | null
    _sum: TipoEscalaSumAggregateOutputType | null
    _min: TipoEscalaMinAggregateOutputType | null
    _max: TipoEscalaMaxAggregateOutputType | null
  }

  type GetTipoEscalaGroupByPayload<T extends TipoEscalaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoEscalaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoEscalaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoEscalaGroupByOutputType[P]>
            : GetScalarType<T[P], TipoEscalaGroupByOutputType[P]>
        }
      >
    >


  export type TipoEscalaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    modoRepeticao?: boolean
    cicloDias?: boolean
    periodicidadeSemanas?: boolean
    eletricistasPorTurma?: boolean
    ativo?: boolean
    observacoes?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    CicloPosicoes?: boolean | TipoEscala$CicloPosicoesArgs<ExtArgs>
    SemanaMascaras?: boolean | TipoEscala$SemanaMascarasArgs<ExtArgs>
    EscalasEquipePeriodo?: boolean | TipoEscala$EscalasEquipePeriodoArgs<ExtArgs>
    _count?: boolean | TipoEscalaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoEscala"]>



  export type TipoEscalaSelectScalar = {
    id?: boolean
    nome?: boolean
    modoRepeticao?: boolean
    cicloDias?: boolean
    periodicidadeSemanas?: boolean
    eletricistasPorTurma?: boolean
    ativo?: boolean
    observacoes?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type TipoEscalaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "modoRepeticao" | "cicloDias" | "periodicidadeSemanas" | "eletricistasPorTurma" | "ativo" | "observacoes" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["tipoEscala"]>
  export type TipoEscalaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CicloPosicoes?: boolean | TipoEscala$CicloPosicoesArgs<ExtArgs>
    SemanaMascaras?: boolean | TipoEscala$SemanaMascarasArgs<ExtArgs>
    EscalasEquipePeriodo?: boolean | TipoEscala$EscalasEquipePeriodoArgs<ExtArgs>
    _count?: boolean | TipoEscalaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TipoEscalaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoEscala"
    objects: {
      CicloPosicoes: Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>[]
      SemanaMascaras: Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>[]
      EscalasEquipePeriodo: Prisma.$EscalaEquipePeriodoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      modoRepeticao: $Enums.ModoRepeticao
      cicloDias: number | null
      periodicidadeSemanas: number | null
      eletricistasPorTurma: number | null
      ativo: boolean
      observacoes: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["tipoEscala"]>
    composites: {}
  }

  type TipoEscalaGetPayload<S extends boolean | null | undefined | TipoEscalaDefaultArgs> = $Result.GetResult<Prisma.$TipoEscalaPayload, S>

  type TipoEscalaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TipoEscalaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipoEscalaCountAggregateInputType | true
    }

  export interface TipoEscalaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoEscala'], meta: { name: 'TipoEscala' } }
    /**
     * Find zero or one TipoEscala that matches the filter.
     * @param {TipoEscalaFindUniqueArgs} args - Arguments to find a TipoEscala
     * @example
     * // Get one TipoEscala
     * const tipoEscala = await prisma.tipoEscala.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoEscalaFindUniqueArgs>(args: SelectSubset<T, TipoEscalaFindUniqueArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TipoEscala that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TipoEscalaFindUniqueOrThrowArgs} args - Arguments to find a TipoEscala
     * @example
     * // Get one TipoEscala
     * const tipoEscala = await prisma.tipoEscala.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoEscalaFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoEscalaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoEscala that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaFindFirstArgs} args - Arguments to find a TipoEscala
     * @example
     * // Get one TipoEscala
     * const tipoEscala = await prisma.tipoEscala.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoEscalaFindFirstArgs>(args?: SelectSubset<T, TipoEscalaFindFirstArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoEscala that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaFindFirstOrThrowArgs} args - Arguments to find a TipoEscala
     * @example
     * // Get one TipoEscala
     * const tipoEscala = await prisma.tipoEscala.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoEscalaFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoEscalaFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TipoEscalas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoEscalas
     * const tipoEscalas = await prisma.tipoEscala.findMany()
     * 
     * // Get first 10 TipoEscalas
     * const tipoEscalas = await prisma.tipoEscala.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoEscalaWithIdOnly = await prisma.tipoEscala.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoEscalaFindManyArgs>(args?: SelectSubset<T, TipoEscalaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TipoEscala.
     * @param {TipoEscalaCreateArgs} args - Arguments to create a TipoEscala.
     * @example
     * // Create one TipoEscala
     * const TipoEscala = await prisma.tipoEscala.create({
     *   data: {
     *     // ... data to create a TipoEscala
     *   }
     * })
     * 
     */
    create<T extends TipoEscalaCreateArgs>(args: SelectSubset<T, TipoEscalaCreateArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TipoEscalas.
     * @param {TipoEscalaCreateManyArgs} args - Arguments to create many TipoEscalas.
     * @example
     * // Create many TipoEscalas
     * const tipoEscala = await prisma.tipoEscala.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoEscalaCreateManyArgs>(args?: SelectSubset<T, TipoEscalaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TipoEscala.
     * @param {TipoEscalaDeleteArgs} args - Arguments to delete one TipoEscala.
     * @example
     * // Delete one TipoEscala
     * const TipoEscala = await prisma.tipoEscala.delete({
     *   where: {
     *     // ... filter to delete one TipoEscala
     *   }
     * })
     * 
     */
    delete<T extends TipoEscalaDeleteArgs>(args: SelectSubset<T, TipoEscalaDeleteArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TipoEscala.
     * @param {TipoEscalaUpdateArgs} args - Arguments to update one TipoEscala.
     * @example
     * // Update one TipoEscala
     * const tipoEscala = await prisma.tipoEscala.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoEscalaUpdateArgs>(args: SelectSubset<T, TipoEscalaUpdateArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TipoEscalas.
     * @param {TipoEscalaDeleteManyArgs} args - Arguments to filter TipoEscalas to delete.
     * @example
     * // Delete a few TipoEscalas
     * const { count } = await prisma.tipoEscala.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoEscalaDeleteManyArgs>(args?: SelectSubset<T, TipoEscalaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoEscalas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoEscalas
     * const tipoEscala = await prisma.tipoEscala.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoEscalaUpdateManyArgs>(args: SelectSubset<T, TipoEscalaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoEscala.
     * @param {TipoEscalaUpsertArgs} args - Arguments to update or create a TipoEscala.
     * @example
     * // Update or create a TipoEscala
     * const tipoEscala = await prisma.tipoEscala.upsert({
     *   create: {
     *     // ... data to create a TipoEscala
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoEscala we want to update
     *   }
     * })
     */
    upsert<T extends TipoEscalaUpsertArgs>(args: SelectSubset<T, TipoEscalaUpsertArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TipoEscalas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaCountArgs} args - Arguments to filter TipoEscalas to count.
     * @example
     * // Count the number of TipoEscalas
     * const count = await prisma.tipoEscala.count({
     *   where: {
     *     // ... the filter for the TipoEscalas we want to count
     *   }
     * })
    **/
    count<T extends TipoEscalaCountArgs>(
      args?: Subset<T, TipoEscalaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoEscalaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoEscala.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoEscalaAggregateArgs>(args: Subset<T, TipoEscalaAggregateArgs>): Prisma.PrismaPromise<GetTipoEscalaAggregateType<T>>

    /**
     * Group by TipoEscala.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoEscalaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoEscalaGroupByArgs['orderBy'] }
        : { orderBy?: TipoEscalaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoEscalaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoEscalaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoEscala model
   */
  readonly fields: TipoEscalaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoEscala.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoEscalaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CicloPosicoes<T extends TipoEscala$CicloPosicoesArgs<ExtArgs> = {}>(args?: Subset<T, TipoEscala$CicloPosicoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SemanaMascaras<T extends TipoEscala$SemanaMascarasArgs<ExtArgs> = {}>(args?: Subset<T, TipoEscala$SemanaMascarasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EscalasEquipePeriodo<T extends TipoEscala$EscalasEquipePeriodoArgs<ExtArgs> = {}>(args?: Subset<T, TipoEscala$EscalasEquipePeriodoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoEscala model
   */
  interface TipoEscalaFieldRefs {
    readonly id: FieldRef<"TipoEscala", 'Int'>
    readonly nome: FieldRef<"TipoEscala", 'String'>
    readonly modoRepeticao: FieldRef<"TipoEscala", 'ModoRepeticao'>
    readonly cicloDias: FieldRef<"TipoEscala", 'Int'>
    readonly periodicidadeSemanas: FieldRef<"TipoEscala", 'Int'>
    readonly eletricistasPorTurma: FieldRef<"TipoEscala", 'Int'>
    readonly ativo: FieldRef<"TipoEscala", 'Boolean'>
    readonly observacoes: FieldRef<"TipoEscala", 'String'>
    readonly createdAt: FieldRef<"TipoEscala", 'DateTime'>
    readonly createdBy: FieldRef<"TipoEscala", 'String'>
    readonly updatedAt: FieldRef<"TipoEscala", 'DateTime'>
    readonly updatedBy: FieldRef<"TipoEscala", 'String'>
    readonly deletedAt: FieldRef<"TipoEscala", 'DateTime'>
    readonly deletedBy: FieldRef<"TipoEscala", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoEscala findUnique
   */
  export type TipoEscalaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscala
     */
    select?: TipoEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscala
     */
    omit?: TipoEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscala to fetch.
     */
    where: TipoEscalaWhereUniqueInput
  }

  /**
   * TipoEscala findUniqueOrThrow
   */
  export type TipoEscalaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscala
     */
    select?: TipoEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscala
     */
    omit?: TipoEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscala to fetch.
     */
    where: TipoEscalaWhereUniqueInput
  }

  /**
   * TipoEscala findFirst
   */
  export type TipoEscalaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscala
     */
    select?: TipoEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscala
     */
    omit?: TipoEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscala to fetch.
     */
    where?: TipoEscalaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalas to fetch.
     */
    orderBy?: TipoEscalaOrderByWithRelationInput | TipoEscalaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoEscalas.
     */
    cursor?: TipoEscalaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoEscalas.
     */
    distinct?: TipoEscalaScalarFieldEnum | TipoEscalaScalarFieldEnum[]
  }

  /**
   * TipoEscala findFirstOrThrow
   */
  export type TipoEscalaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscala
     */
    select?: TipoEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscala
     */
    omit?: TipoEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscala to fetch.
     */
    where?: TipoEscalaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalas to fetch.
     */
    orderBy?: TipoEscalaOrderByWithRelationInput | TipoEscalaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoEscalas.
     */
    cursor?: TipoEscalaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoEscalas.
     */
    distinct?: TipoEscalaScalarFieldEnum | TipoEscalaScalarFieldEnum[]
  }

  /**
   * TipoEscala findMany
   */
  export type TipoEscalaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscala
     */
    select?: TipoEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscala
     */
    omit?: TipoEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalas to fetch.
     */
    where?: TipoEscalaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalas to fetch.
     */
    orderBy?: TipoEscalaOrderByWithRelationInput | TipoEscalaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoEscalas.
     */
    cursor?: TipoEscalaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalas.
     */
    skip?: number
    distinct?: TipoEscalaScalarFieldEnum | TipoEscalaScalarFieldEnum[]
  }

  /**
   * TipoEscala create
   */
  export type TipoEscalaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscala
     */
    select?: TipoEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscala
     */
    omit?: TipoEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoEscala.
     */
    data: XOR<TipoEscalaCreateInput, TipoEscalaUncheckedCreateInput>
  }

  /**
   * TipoEscala createMany
   */
  export type TipoEscalaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoEscalas.
     */
    data: TipoEscalaCreateManyInput | TipoEscalaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoEscala update
   */
  export type TipoEscalaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscala
     */
    select?: TipoEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscala
     */
    omit?: TipoEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoEscala.
     */
    data: XOR<TipoEscalaUpdateInput, TipoEscalaUncheckedUpdateInput>
    /**
     * Choose, which TipoEscala to update.
     */
    where: TipoEscalaWhereUniqueInput
  }

  /**
   * TipoEscala updateMany
   */
  export type TipoEscalaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoEscalas.
     */
    data: XOR<TipoEscalaUpdateManyMutationInput, TipoEscalaUncheckedUpdateManyInput>
    /**
     * Filter which TipoEscalas to update
     */
    where?: TipoEscalaWhereInput
    /**
     * Limit how many TipoEscalas to update.
     */
    limit?: number
  }

  /**
   * TipoEscala upsert
   */
  export type TipoEscalaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscala
     */
    select?: TipoEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscala
     */
    omit?: TipoEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoEscala to update in case it exists.
     */
    where: TipoEscalaWhereUniqueInput
    /**
     * In case the TipoEscala found by the `where` argument doesn't exist, create a new TipoEscala with this data.
     */
    create: XOR<TipoEscalaCreateInput, TipoEscalaUncheckedCreateInput>
    /**
     * In case the TipoEscala was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoEscalaUpdateInput, TipoEscalaUncheckedUpdateInput>
  }

  /**
   * TipoEscala delete
   */
  export type TipoEscalaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscala
     */
    select?: TipoEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscala
     */
    omit?: TipoEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaInclude<ExtArgs> | null
    /**
     * Filter which TipoEscala to delete.
     */
    where: TipoEscalaWhereUniqueInput
  }

  /**
   * TipoEscala deleteMany
   */
  export type TipoEscalaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoEscalas to delete
     */
    where?: TipoEscalaWhereInput
    /**
     * Limit how many TipoEscalas to delete.
     */
    limit?: number
  }

  /**
   * TipoEscala.CicloPosicoes
   */
  export type TipoEscala$CicloPosicoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
    where?: TipoEscalaCicloPosicaoWhereInput
    orderBy?: TipoEscalaCicloPosicaoOrderByWithRelationInput | TipoEscalaCicloPosicaoOrderByWithRelationInput[]
    cursor?: TipoEscalaCicloPosicaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TipoEscalaCicloPosicaoScalarFieldEnum | TipoEscalaCicloPosicaoScalarFieldEnum[]
  }

  /**
   * TipoEscala.SemanaMascaras
   */
  export type TipoEscala$SemanaMascarasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
    where?: TipoEscalaSemanaMascaraWhereInput
    orderBy?: TipoEscalaSemanaMascaraOrderByWithRelationInput | TipoEscalaSemanaMascaraOrderByWithRelationInput[]
    cursor?: TipoEscalaSemanaMascaraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TipoEscalaSemanaMascaraScalarFieldEnum | TipoEscalaSemanaMascaraScalarFieldEnum[]
  }

  /**
   * TipoEscala.EscalasEquipePeriodo
   */
  export type TipoEscala$EscalasEquipePeriodoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    where?: EscalaEquipePeriodoWhereInput
    orderBy?: EscalaEquipePeriodoOrderByWithRelationInput | EscalaEquipePeriodoOrderByWithRelationInput[]
    cursor?: EscalaEquipePeriodoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EscalaEquipePeriodoScalarFieldEnum | EscalaEquipePeriodoScalarFieldEnum[]
  }

  /**
   * TipoEscala without action
   */
  export type TipoEscalaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscala
     */
    select?: TipoEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscala
     */
    omit?: TipoEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaInclude<ExtArgs> | null
  }


  /**
   * Model TipoEscalaCicloPosicao
   */

  export type AggregateTipoEscalaCicloPosicao = {
    _count: TipoEscalaCicloPosicaoCountAggregateOutputType | null
    _avg: TipoEscalaCicloPosicaoAvgAggregateOutputType | null
    _sum: TipoEscalaCicloPosicaoSumAggregateOutputType | null
    _min: TipoEscalaCicloPosicaoMinAggregateOutputType | null
    _max: TipoEscalaCicloPosicaoMaxAggregateOutputType | null
  }

  export type TipoEscalaCicloPosicaoAvgAggregateOutputType = {
    id: number | null
    tipoEscalaId: number | null
    posicao: number | null
  }

  export type TipoEscalaCicloPosicaoSumAggregateOutputType = {
    id: number | null
    tipoEscalaId: number | null
    posicao: number | null
  }

  export type TipoEscalaCicloPosicaoMinAggregateOutputType = {
    id: number | null
    tipoEscalaId: number | null
    posicao: number | null
    status: $Enums.StatusTrabalho | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoEscalaCicloPosicaoMaxAggregateOutputType = {
    id: number | null
    tipoEscalaId: number | null
    posicao: number | null
    status: $Enums.StatusTrabalho | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoEscalaCicloPosicaoCountAggregateOutputType = {
    id: number
    tipoEscalaId: number
    posicao: number
    status: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type TipoEscalaCicloPosicaoAvgAggregateInputType = {
    id?: true
    tipoEscalaId?: true
    posicao?: true
  }

  export type TipoEscalaCicloPosicaoSumAggregateInputType = {
    id?: true
    tipoEscalaId?: true
    posicao?: true
  }

  export type TipoEscalaCicloPosicaoMinAggregateInputType = {
    id?: true
    tipoEscalaId?: true
    posicao?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoEscalaCicloPosicaoMaxAggregateInputType = {
    id?: true
    tipoEscalaId?: true
    posicao?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoEscalaCicloPosicaoCountAggregateInputType = {
    id?: true
    tipoEscalaId?: true
    posicao?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type TipoEscalaCicloPosicaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoEscalaCicloPosicao to aggregate.
     */
    where?: TipoEscalaCicloPosicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalaCicloPosicaos to fetch.
     */
    orderBy?: TipoEscalaCicloPosicaoOrderByWithRelationInput | TipoEscalaCicloPosicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoEscalaCicloPosicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalaCicloPosicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalaCicloPosicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoEscalaCicloPosicaos
    **/
    _count?: true | TipoEscalaCicloPosicaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoEscalaCicloPosicaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoEscalaCicloPosicaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoEscalaCicloPosicaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoEscalaCicloPosicaoMaxAggregateInputType
  }

  export type GetTipoEscalaCicloPosicaoAggregateType<T extends TipoEscalaCicloPosicaoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoEscalaCicloPosicao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoEscalaCicloPosicao[P]>
      : GetScalarType<T[P], AggregateTipoEscalaCicloPosicao[P]>
  }




  export type TipoEscalaCicloPosicaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoEscalaCicloPosicaoWhereInput
    orderBy?: TipoEscalaCicloPosicaoOrderByWithAggregationInput | TipoEscalaCicloPosicaoOrderByWithAggregationInput[]
    by: TipoEscalaCicloPosicaoScalarFieldEnum[] | TipoEscalaCicloPosicaoScalarFieldEnum
    having?: TipoEscalaCicloPosicaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoEscalaCicloPosicaoCountAggregateInputType | true
    _avg?: TipoEscalaCicloPosicaoAvgAggregateInputType
    _sum?: TipoEscalaCicloPosicaoSumAggregateInputType
    _min?: TipoEscalaCicloPosicaoMinAggregateInputType
    _max?: TipoEscalaCicloPosicaoMaxAggregateInputType
  }

  export type TipoEscalaCicloPosicaoGroupByOutputType = {
    id: number
    tipoEscalaId: number
    posicao: number
    status: $Enums.StatusTrabalho
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: TipoEscalaCicloPosicaoCountAggregateOutputType | null
    _avg: TipoEscalaCicloPosicaoAvgAggregateOutputType | null
    _sum: TipoEscalaCicloPosicaoSumAggregateOutputType | null
    _min: TipoEscalaCicloPosicaoMinAggregateOutputType | null
    _max: TipoEscalaCicloPosicaoMaxAggregateOutputType | null
  }

  type GetTipoEscalaCicloPosicaoGroupByPayload<T extends TipoEscalaCicloPosicaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoEscalaCicloPosicaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoEscalaCicloPosicaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoEscalaCicloPosicaoGroupByOutputType[P]>
            : GetScalarType<T[P], TipoEscalaCicloPosicaoGroupByOutputType[P]>
        }
      >
    >


  export type TipoEscalaCicloPosicaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipoEscalaId?: boolean
    posicao?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    tipoEscala?: boolean | TipoEscalaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoEscalaCicloPosicao"]>



  export type TipoEscalaCicloPosicaoSelectScalar = {
    id?: boolean
    tipoEscalaId?: boolean
    posicao?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type TipoEscalaCicloPosicaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tipoEscalaId" | "posicao" | "status" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["tipoEscalaCicloPosicao"]>
  export type TipoEscalaCicloPosicaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipoEscala?: boolean | TipoEscalaDefaultArgs<ExtArgs>
  }

  export type $TipoEscalaCicloPosicaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoEscalaCicloPosicao"
    objects: {
      tipoEscala: Prisma.$TipoEscalaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      tipoEscalaId: number
      posicao: number
      status: $Enums.StatusTrabalho
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["tipoEscalaCicloPosicao"]>
    composites: {}
  }

  type TipoEscalaCicloPosicaoGetPayload<S extends boolean | null | undefined | TipoEscalaCicloPosicaoDefaultArgs> = $Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload, S>

  type TipoEscalaCicloPosicaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TipoEscalaCicloPosicaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipoEscalaCicloPosicaoCountAggregateInputType | true
    }

  export interface TipoEscalaCicloPosicaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoEscalaCicloPosicao'], meta: { name: 'TipoEscalaCicloPosicao' } }
    /**
     * Find zero or one TipoEscalaCicloPosicao that matches the filter.
     * @param {TipoEscalaCicloPosicaoFindUniqueArgs} args - Arguments to find a TipoEscalaCicloPosicao
     * @example
     * // Get one TipoEscalaCicloPosicao
     * const tipoEscalaCicloPosicao = await prisma.tipoEscalaCicloPosicao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoEscalaCicloPosicaoFindUniqueArgs>(args: SelectSubset<T, TipoEscalaCicloPosicaoFindUniqueArgs<ExtArgs>>): Prisma__TipoEscalaCicloPosicaoClient<$Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TipoEscalaCicloPosicao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TipoEscalaCicloPosicaoFindUniqueOrThrowArgs} args - Arguments to find a TipoEscalaCicloPosicao
     * @example
     * // Get one TipoEscalaCicloPosicao
     * const tipoEscalaCicloPosicao = await prisma.tipoEscalaCicloPosicao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoEscalaCicloPosicaoFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoEscalaCicloPosicaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoEscalaCicloPosicaoClient<$Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoEscalaCicloPosicao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaCicloPosicaoFindFirstArgs} args - Arguments to find a TipoEscalaCicloPosicao
     * @example
     * // Get one TipoEscalaCicloPosicao
     * const tipoEscalaCicloPosicao = await prisma.tipoEscalaCicloPosicao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoEscalaCicloPosicaoFindFirstArgs>(args?: SelectSubset<T, TipoEscalaCicloPosicaoFindFirstArgs<ExtArgs>>): Prisma__TipoEscalaCicloPosicaoClient<$Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoEscalaCicloPosicao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaCicloPosicaoFindFirstOrThrowArgs} args - Arguments to find a TipoEscalaCicloPosicao
     * @example
     * // Get one TipoEscalaCicloPosicao
     * const tipoEscalaCicloPosicao = await prisma.tipoEscalaCicloPosicao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoEscalaCicloPosicaoFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoEscalaCicloPosicaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoEscalaCicloPosicaoClient<$Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TipoEscalaCicloPosicaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaCicloPosicaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoEscalaCicloPosicaos
     * const tipoEscalaCicloPosicaos = await prisma.tipoEscalaCicloPosicao.findMany()
     * 
     * // Get first 10 TipoEscalaCicloPosicaos
     * const tipoEscalaCicloPosicaos = await prisma.tipoEscalaCicloPosicao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoEscalaCicloPosicaoWithIdOnly = await prisma.tipoEscalaCicloPosicao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoEscalaCicloPosicaoFindManyArgs>(args?: SelectSubset<T, TipoEscalaCicloPosicaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TipoEscalaCicloPosicao.
     * @param {TipoEscalaCicloPosicaoCreateArgs} args - Arguments to create a TipoEscalaCicloPosicao.
     * @example
     * // Create one TipoEscalaCicloPosicao
     * const TipoEscalaCicloPosicao = await prisma.tipoEscalaCicloPosicao.create({
     *   data: {
     *     // ... data to create a TipoEscalaCicloPosicao
     *   }
     * })
     * 
     */
    create<T extends TipoEscalaCicloPosicaoCreateArgs>(args: SelectSubset<T, TipoEscalaCicloPosicaoCreateArgs<ExtArgs>>): Prisma__TipoEscalaCicloPosicaoClient<$Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TipoEscalaCicloPosicaos.
     * @param {TipoEscalaCicloPosicaoCreateManyArgs} args - Arguments to create many TipoEscalaCicloPosicaos.
     * @example
     * // Create many TipoEscalaCicloPosicaos
     * const tipoEscalaCicloPosicao = await prisma.tipoEscalaCicloPosicao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoEscalaCicloPosicaoCreateManyArgs>(args?: SelectSubset<T, TipoEscalaCicloPosicaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TipoEscalaCicloPosicao.
     * @param {TipoEscalaCicloPosicaoDeleteArgs} args - Arguments to delete one TipoEscalaCicloPosicao.
     * @example
     * // Delete one TipoEscalaCicloPosicao
     * const TipoEscalaCicloPosicao = await prisma.tipoEscalaCicloPosicao.delete({
     *   where: {
     *     // ... filter to delete one TipoEscalaCicloPosicao
     *   }
     * })
     * 
     */
    delete<T extends TipoEscalaCicloPosicaoDeleteArgs>(args: SelectSubset<T, TipoEscalaCicloPosicaoDeleteArgs<ExtArgs>>): Prisma__TipoEscalaCicloPosicaoClient<$Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TipoEscalaCicloPosicao.
     * @param {TipoEscalaCicloPosicaoUpdateArgs} args - Arguments to update one TipoEscalaCicloPosicao.
     * @example
     * // Update one TipoEscalaCicloPosicao
     * const tipoEscalaCicloPosicao = await prisma.tipoEscalaCicloPosicao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoEscalaCicloPosicaoUpdateArgs>(args: SelectSubset<T, TipoEscalaCicloPosicaoUpdateArgs<ExtArgs>>): Prisma__TipoEscalaCicloPosicaoClient<$Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TipoEscalaCicloPosicaos.
     * @param {TipoEscalaCicloPosicaoDeleteManyArgs} args - Arguments to filter TipoEscalaCicloPosicaos to delete.
     * @example
     * // Delete a few TipoEscalaCicloPosicaos
     * const { count } = await prisma.tipoEscalaCicloPosicao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoEscalaCicloPosicaoDeleteManyArgs>(args?: SelectSubset<T, TipoEscalaCicloPosicaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoEscalaCicloPosicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaCicloPosicaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoEscalaCicloPosicaos
     * const tipoEscalaCicloPosicao = await prisma.tipoEscalaCicloPosicao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoEscalaCicloPosicaoUpdateManyArgs>(args: SelectSubset<T, TipoEscalaCicloPosicaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoEscalaCicloPosicao.
     * @param {TipoEscalaCicloPosicaoUpsertArgs} args - Arguments to update or create a TipoEscalaCicloPosicao.
     * @example
     * // Update or create a TipoEscalaCicloPosicao
     * const tipoEscalaCicloPosicao = await prisma.tipoEscalaCicloPosicao.upsert({
     *   create: {
     *     // ... data to create a TipoEscalaCicloPosicao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoEscalaCicloPosicao we want to update
     *   }
     * })
     */
    upsert<T extends TipoEscalaCicloPosicaoUpsertArgs>(args: SelectSubset<T, TipoEscalaCicloPosicaoUpsertArgs<ExtArgs>>): Prisma__TipoEscalaCicloPosicaoClient<$Result.GetResult<Prisma.$TipoEscalaCicloPosicaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TipoEscalaCicloPosicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaCicloPosicaoCountArgs} args - Arguments to filter TipoEscalaCicloPosicaos to count.
     * @example
     * // Count the number of TipoEscalaCicloPosicaos
     * const count = await prisma.tipoEscalaCicloPosicao.count({
     *   where: {
     *     // ... the filter for the TipoEscalaCicloPosicaos we want to count
     *   }
     * })
    **/
    count<T extends TipoEscalaCicloPosicaoCountArgs>(
      args?: Subset<T, TipoEscalaCicloPosicaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoEscalaCicloPosicaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoEscalaCicloPosicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaCicloPosicaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoEscalaCicloPosicaoAggregateArgs>(args: Subset<T, TipoEscalaCicloPosicaoAggregateArgs>): Prisma.PrismaPromise<GetTipoEscalaCicloPosicaoAggregateType<T>>

    /**
     * Group by TipoEscalaCicloPosicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaCicloPosicaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoEscalaCicloPosicaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoEscalaCicloPosicaoGroupByArgs['orderBy'] }
        : { orderBy?: TipoEscalaCicloPosicaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoEscalaCicloPosicaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoEscalaCicloPosicaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoEscalaCicloPosicao model
   */
  readonly fields: TipoEscalaCicloPosicaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoEscalaCicloPosicao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoEscalaCicloPosicaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tipoEscala<T extends TipoEscalaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoEscalaDefaultArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoEscalaCicloPosicao model
   */
  interface TipoEscalaCicloPosicaoFieldRefs {
    readonly id: FieldRef<"TipoEscalaCicloPosicao", 'Int'>
    readonly tipoEscalaId: FieldRef<"TipoEscalaCicloPosicao", 'Int'>
    readonly posicao: FieldRef<"TipoEscalaCicloPosicao", 'Int'>
    readonly status: FieldRef<"TipoEscalaCicloPosicao", 'StatusTrabalho'>
    readonly createdAt: FieldRef<"TipoEscalaCicloPosicao", 'DateTime'>
    readonly createdBy: FieldRef<"TipoEscalaCicloPosicao", 'String'>
    readonly updatedAt: FieldRef<"TipoEscalaCicloPosicao", 'DateTime'>
    readonly updatedBy: FieldRef<"TipoEscalaCicloPosicao", 'String'>
    readonly deletedAt: FieldRef<"TipoEscalaCicloPosicao", 'DateTime'>
    readonly deletedBy: FieldRef<"TipoEscalaCicloPosicao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoEscalaCicloPosicao findUnique
   */
  export type TipoEscalaCicloPosicaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalaCicloPosicao to fetch.
     */
    where: TipoEscalaCicloPosicaoWhereUniqueInput
  }

  /**
   * TipoEscalaCicloPosicao findUniqueOrThrow
   */
  export type TipoEscalaCicloPosicaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalaCicloPosicao to fetch.
     */
    where: TipoEscalaCicloPosicaoWhereUniqueInput
  }

  /**
   * TipoEscalaCicloPosicao findFirst
   */
  export type TipoEscalaCicloPosicaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalaCicloPosicao to fetch.
     */
    where?: TipoEscalaCicloPosicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalaCicloPosicaos to fetch.
     */
    orderBy?: TipoEscalaCicloPosicaoOrderByWithRelationInput | TipoEscalaCicloPosicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoEscalaCicloPosicaos.
     */
    cursor?: TipoEscalaCicloPosicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalaCicloPosicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalaCicloPosicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoEscalaCicloPosicaos.
     */
    distinct?: TipoEscalaCicloPosicaoScalarFieldEnum | TipoEscalaCicloPosicaoScalarFieldEnum[]
  }

  /**
   * TipoEscalaCicloPosicao findFirstOrThrow
   */
  export type TipoEscalaCicloPosicaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalaCicloPosicao to fetch.
     */
    where?: TipoEscalaCicloPosicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalaCicloPosicaos to fetch.
     */
    orderBy?: TipoEscalaCicloPosicaoOrderByWithRelationInput | TipoEscalaCicloPosicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoEscalaCicloPosicaos.
     */
    cursor?: TipoEscalaCicloPosicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalaCicloPosicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalaCicloPosicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoEscalaCicloPosicaos.
     */
    distinct?: TipoEscalaCicloPosicaoScalarFieldEnum | TipoEscalaCicloPosicaoScalarFieldEnum[]
  }

  /**
   * TipoEscalaCicloPosicao findMany
   */
  export type TipoEscalaCicloPosicaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalaCicloPosicaos to fetch.
     */
    where?: TipoEscalaCicloPosicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalaCicloPosicaos to fetch.
     */
    orderBy?: TipoEscalaCicloPosicaoOrderByWithRelationInput | TipoEscalaCicloPosicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoEscalaCicloPosicaos.
     */
    cursor?: TipoEscalaCicloPosicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalaCicloPosicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalaCicloPosicaos.
     */
    skip?: number
    distinct?: TipoEscalaCicloPosicaoScalarFieldEnum | TipoEscalaCicloPosicaoScalarFieldEnum[]
  }

  /**
   * TipoEscalaCicloPosicao create
   */
  export type TipoEscalaCicloPosicaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoEscalaCicloPosicao.
     */
    data: XOR<TipoEscalaCicloPosicaoCreateInput, TipoEscalaCicloPosicaoUncheckedCreateInput>
  }

  /**
   * TipoEscalaCicloPosicao createMany
   */
  export type TipoEscalaCicloPosicaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoEscalaCicloPosicaos.
     */
    data: TipoEscalaCicloPosicaoCreateManyInput | TipoEscalaCicloPosicaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoEscalaCicloPosicao update
   */
  export type TipoEscalaCicloPosicaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoEscalaCicloPosicao.
     */
    data: XOR<TipoEscalaCicloPosicaoUpdateInput, TipoEscalaCicloPosicaoUncheckedUpdateInput>
    /**
     * Choose, which TipoEscalaCicloPosicao to update.
     */
    where: TipoEscalaCicloPosicaoWhereUniqueInput
  }

  /**
   * TipoEscalaCicloPosicao updateMany
   */
  export type TipoEscalaCicloPosicaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoEscalaCicloPosicaos.
     */
    data: XOR<TipoEscalaCicloPosicaoUpdateManyMutationInput, TipoEscalaCicloPosicaoUncheckedUpdateManyInput>
    /**
     * Filter which TipoEscalaCicloPosicaos to update
     */
    where?: TipoEscalaCicloPosicaoWhereInput
    /**
     * Limit how many TipoEscalaCicloPosicaos to update.
     */
    limit?: number
  }

  /**
   * TipoEscalaCicloPosicao upsert
   */
  export type TipoEscalaCicloPosicaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoEscalaCicloPosicao to update in case it exists.
     */
    where: TipoEscalaCicloPosicaoWhereUniqueInput
    /**
     * In case the TipoEscalaCicloPosicao found by the `where` argument doesn't exist, create a new TipoEscalaCicloPosicao with this data.
     */
    create: XOR<TipoEscalaCicloPosicaoCreateInput, TipoEscalaCicloPosicaoUncheckedCreateInput>
    /**
     * In case the TipoEscalaCicloPosicao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoEscalaCicloPosicaoUpdateInput, TipoEscalaCicloPosicaoUncheckedUpdateInput>
  }

  /**
   * TipoEscalaCicloPosicao delete
   */
  export type TipoEscalaCicloPosicaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
    /**
     * Filter which TipoEscalaCicloPosicao to delete.
     */
    where: TipoEscalaCicloPosicaoWhereUniqueInput
  }

  /**
   * TipoEscalaCicloPosicao deleteMany
   */
  export type TipoEscalaCicloPosicaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoEscalaCicloPosicaos to delete
     */
    where?: TipoEscalaCicloPosicaoWhereInput
    /**
     * Limit how many TipoEscalaCicloPosicaos to delete.
     */
    limit?: number
  }

  /**
   * TipoEscalaCicloPosicao without action
   */
  export type TipoEscalaCicloPosicaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaCicloPosicao
     */
    select?: TipoEscalaCicloPosicaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaCicloPosicao
     */
    omit?: TipoEscalaCicloPosicaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaCicloPosicaoInclude<ExtArgs> | null
  }


  /**
   * Model TipoEscalaSemanaMascara
   */

  export type AggregateTipoEscalaSemanaMascara = {
    _count: TipoEscalaSemanaMascaraCountAggregateOutputType | null
    _avg: TipoEscalaSemanaMascaraAvgAggregateOutputType | null
    _sum: TipoEscalaSemanaMascaraSumAggregateOutputType | null
    _min: TipoEscalaSemanaMascaraMinAggregateOutputType | null
    _max: TipoEscalaSemanaMascaraMaxAggregateOutputType | null
  }

  export type TipoEscalaSemanaMascaraAvgAggregateOutputType = {
    id: number | null
    tipoEscalaId: number | null
    semanaIndex: number | null
  }

  export type TipoEscalaSemanaMascaraSumAggregateOutputType = {
    id: number | null
    tipoEscalaId: number | null
    semanaIndex: number | null
  }

  export type TipoEscalaSemanaMascaraMinAggregateOutputType = {
    id: number | null
    tipoEscalaId: number | null
    semanaIndex: number | null
    dia: $Enums.DiaSemana | null
    status: $Enums.StatusTrabalho | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoEscalaSemanaMascaraMaxAggregateOutputType = {
    id: number | null
    tipoEscalaId: number | null
    semanaIndex: number | null
    dia: $Enums.DiaSemana | null
    status: $Enums.StatusTrabalho | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoEscalaSemanaMascaraCountAggregateOutputType = {
    id: number
    tipoEscalaId: number
    semanaIndex: number
    dia: number
    status: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type TipoEscalaSemanaMascaraAvgAggregateInputType = {
    id?: true
    tipoEscalaId?: true
    semanaIndex?: true
  }

  export type TipoEscalaSemanaMascaraSumAggregateInputType = {
    id?: true
    tipoEscalaId?: true
    semanaIndex?: true
  }

  export type TipoEscalaSemanaMascaraMinAggregateInputType = {
    id?: true
    tipoEscalaId?: true
    semanaIndex?: true
    dia?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoEscalaSemanaMascaraMaxAggregateInputType = {
    id?: true
    tipoEscalaId?: true
    semanaIndex?: true
    dia?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoEscalaSemanaMascaraCountAggregateInputType = {
    id?: true
    tipoEscalaId?: true
    semanaIndex?: true
    dia?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type TipoEscalaSemanaMascaraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoEscalaSemanaMascara to aggregate.
     */
    where?: TipoEscalaSemanaMascaraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalaSemanaMascaras to fetch.
     */
    orderBy?: TipoEscalaSemanaMascaraOrderByWithRelationInput | TipoEscalaSemanaMascaraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoEscalaSemanaMascaraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalaSemanaMascaras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalaSemanaMascaras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoEscalaSemanaMascaras
    **/
    _count?: true | TipoEscalaSemanaMascaraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoEscalaSemanaMascaraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoEscalaSemanaMascaraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoEscalaSemanaMascaraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoEscalaSemanaMascaraMaxAggregateInputType
  }

  export type GetTipoEscalaSemanaMascaraAggregateType<T extends TipoEscalaSemanaMascaraAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoEscalaSemanaMascara]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoEscalaSemanaMascara[P]>
      : GetScalarType<T[P], AggregateTipoEscalaSemanaMascara[P]>
  }




  export type TipoEscalaSemanaMascaraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoEscalaSemanaMascaraWhereInput
    orderBy?: TipoEscalaSemanaMascaraOrderByWithAggregationInput | TipoEscalaSemanaMascaraOrderByWithAggregationInput[]
    by: TipoEscalaSemanaMascaraScalarFieldEnum[] | TipoEscalaSemanaMascaraScalarFieldEnum
    having?: TipoEscalaSemanaMascaraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoEscalaSemanaMascaraCountAggregateInputType | true
    _avg?: TipoEscalaSemanaMascaraAvgAggregateInputType
    _sum?: TipoEscalaSemanaMascaraSumAggregateInputType
    _min?: TipoEscalaSemanaMascaraMinAggregateInputType
    _max?: TipoEscalaSemanaMascaraMaxAggregateInputType
  }

  export type TipoEscalaSemanaMascaraGroupByOutputType = {
    id: number
    tipoEscalaId: number
    semanaIndex: number
    dia: $Enums.DiaSemana
    status: $Enums.StatusTrabalho
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: TipoEscalaSemanaMascaraCountAggregateOutputType | null
    _avg: TipoEscalaSemanaMascaraAvgAggregateOutputType | null
    _sum: TipoEscalaSemanaMascaraSumAggregateOutputType | null
    _min: TipoEscalaSemanaMascaraMinAggregateOutputType | null
    _max: TipoEscalaSemanaMascaraMaxAggregateOutputType | null
  }

  type GetTipoEscalaSemanaMascaraGroupByPayload<T extends TipoEscalaSemanaMascaraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoEscalaSemanaMascaraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoEscalaSemanaMascaraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoEscalaSemanaMascaraGroupByOutputType[P]>
            : GetScalarType<T[P], TipoEscalaSemanaMascaraGroupByOutputType[P]>
        }
      >
    >


  export type TipoEscalaSemanaMascaraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipoEscalaId?: boolean
    semanaIndex?: boolean
    dia?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    tipoEscala?: boolean | TipoEscalaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoEscalaSemanaMascara"]>



  export type TipoEscalaSemanaMascaraSelectScalar = {
    id?: boolean
    tipoEscalaId?: boolean
    semanaIndex?: boolean
    dia?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type TipoEscalaSemanaMascaraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tipoEscalaId" | "semanaIndex" | "dia" | "status" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["tipoEscalaSemanaMascara"]>
  export type TipoEscalaSemanaMascaraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipoEscala?: boolean | TipoEscalaDefaultArgs<ExtArgs>
  }

  export type $TipoEscalaSemanaMascaraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoEscalaSemanaMascara"
    objects: {
      tipoEscala: Prisma.$TipoEscalaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      tipoEscalaId: number
      semanaIndex: number
      dia: $Enums.DiaSemana
      status: $Enums.StatusTrabalho
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["tipoEscalaSemanaMascara"]>
    composites: {}
  }

  type TipoEscalaSemanaMascaraGetPayload<S extends boolean | null | undefined | TipoEscalaSemanaMascaraDefaultArgs> = $Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload, S>

  type TipoEscalaSemanaMascaraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TipoEscalaSemanaMascaraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipoEscalaSemanaMascaraCountAggregateInputType | true
    }

  export interface TipoEscalaSemanaMascaraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoEscalaSemanaMascara'], meta: { name: 'TipoEscalaSemanaMascara' } }
    /**
     * Find zero or one TipoEscalaSemanaMascara that matches the filter.
     * @param {TipoEscalaSemanaMascaraFindUniqueArgs} args - Arguments to find a TipoEscalaSemanaMascara
     * @example
     * // Get one TipoEscalaSemanaMascara
     * const tipoEscalaSemanaMascara = await prisma.tipoEscalaSemanaMascara.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoEscalaSemanaMascaraFindUniqueArgs>(args: SelectSubset<T, TipoEscalaSemanaMascaraFindUniqueArgs<ExtArgs>>): Prisma__TipoEscalaSemanaMascaraClient<$Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TipoEscalaSemanaMascara that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TipoEscalaSemanaMascaraFindUniqueOrThrowArgs} args - Arguments to find a TipoEscalaSemanaMascara
     * @example
     * // Get one TipoEscalaSemanaMascara
     * const tipoEscalaSemanaMascara = await prisma.tipoEscalaSemanaMascara.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoEscalaSemanaMascaraFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoEscalaSemanaMascaraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoEscalaSemanaMascaraClient<$Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoEscalaSemanaMascara that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaSemanaMascaraFindFirstArgs} args - Arguments to find a TipoEscalaSemanaMascara
     * @example
     * // Get one TipoEscalaSemanaMascara
     * const tipoEscalaSemanaMascara = await prisma.tipoEscalaSemanaMascara.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoEscalaSemanaMascaraFindFirstArgs>(args?: SelectSubset<T, TipoEscalaSemanaMascaraFindFirstArgs<ExtArgs>>): Prisma__TipoEscalaSemanaMascaraClient<$Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoEscalaSemanaMascara that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaSemanaMascaraFindFirstOrThrowArgs} args - Arguments to find a TipoEscalaSemanaMascara
     * @example
     * // Get one TipoEscalaSemanaMascara
     * const tipoEscalaSemanaMascara = await prisma.tipoEscalaSemanaMascara.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoEscalaSemanaMascaraFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoEscalaSemanaMascaraFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoEscalaSemanaMascaraClient<$Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TipoEscalaSemanaMascaras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaSemanaMascaraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoEscalaSemanaMascaras
     * const tipoEscalaSemanaMascaras = await prisma.tipoEscalaSemanaMascara.findMany()
     * 
     * // Get first 10 TipoEscalaSemanaMascaras
     * const tipoEscalaSemanaMascaras = await prisma.tipoEscalaSemanaMascara.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoEscalaSemanaMascaraWithIdOnly = await prisma.tipoEscalaSemanaMascara.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoEscalaSemanaMascaraFindManyArgs>(args?: SelectSubset<T, TipoEscalaSemanaMascaraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TipoEscalaSemanaMascara.
     * @param {TipoEscalaSemanaMascaraCreateArgs} args - Arguments to create a TipoEscalaSemanaMascara.
     * @example
     * // Create one TipoEscalaSemanaMascara
     * const TipoEscalaSemanaMascara = await prisma.tipoEscalaSemanaMascara.create({
     *   data: {
     *     // ... data to create a TipoEscalaSemanaMascara
     *   }
     * })
     * 
     */
    create<T extends TipoEscalaSemanaMascaraCreateArgs>(args: SelectSubset<T, TipoEscalaSemanaMascaraCreateArgs<ExtArgs>>): Prisma__TipoEscalaSemanaMascaraClient<$Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TipoEscalaSemanaMascaras.
     * @param {TipoEscalaSemanaMascaraCreateManyArgs} args - Arguments to create many TipoEscalaSemanaMascaras.
     * @example
     * // Create many TipoEscalaSemanaMascaras
     * const tipoEscalaSemanaMascara = await prisma.tipoEscalaSemanaMascara.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoEscalaSemanaMascaraCreateManyArgs>(args?: SelectSubset<T, TipoEscalaSemanaMascaraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TipoEscalaSemanaMascara.
     * @param {TipoEscalaSemanaMascaraDeleteArgs} args - Arguments to delete one TipoEscalaSemanaMascara.
     * @example
     * // Delete one TipoEscalaSemanaMascara
     * const TipoEscalaSemanaMascara = await prisma.tipoEscalaSemanaMascara.delete({
     *   where: {
     *     // ... filter to delete one TipoEscalaSemanaMascara
     *   }
     * })
     * 
     */
    delete<T extends TipoEscalaSemanaMascaraDeleteArgs>(args: SelectSubset<T, TipoEscalaSemanaMascaraDeleteArgs<ExtArgs>>): Prisma__TipoEscalaSemanaMascaraClient<$Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TipoEscalaSemanaMascara.
     * @param {TipoEscalaSemanaMascaraUpdateArgs} args - Arguments to update one TipoEscalaSemanaMascara.
     * @example
     * // Update one TipoEscalaSemanaMascara
     * const tipoEscalaSemanaMascara = await prisma.tipoEscalaSemanaMascara.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoEscalaSemanaMascaraUpdateArgs>(args: SelectSubset<T, TipoEscalaSemanaMascaraUpdateArgs<ExtArgs>>): Prisma__TipoEscalaSemanaMascaraClient<$Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TipoEscalaSemanaMascaras.
     * @param {TipoEscalaSemanaMascaraDeleteManyArgs} args - Arguments to filter TipoEscalaSemanaMascaras to delete.
     * @example
     * // Delete a few TipoEscalaSemanaMascaras
     * const { count } = await prisma.tipoEscalaSemanaMascara.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoEscalaSemanaMascaraDeleteManyArgs>(args?: SelectSubset<T, TipoEscalaSemanaMascaraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoEscalaSemanaMascaras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaSemanaMascaraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoEscalaSemanaMascaras
     * const tipoEscalaSemanaMascara = await prisma.tipoEscalaSemanaMascara.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoEscalaSemanaMascaraUpdateManyArgs>(args: SelectSubset<T, TipoEscalaSemanaMascaraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoEscalaSemanaMascara.
     * @param {TipoEscalaSemanaMascaraUpsertArgs} args - Arguments to update or create a TipoEscalaSemanaMascara.
     * @example
     * // Update or create a TipoEscalaSemanaMascara
     * const tipoEscalaSemanaMascara = await prisma.tipoEscalaSemanaMascara.upsert({
     *   create: {
     *     // ... data to create a TipoEscalaSemanaMascara
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoEscalaSemanaMascara we want to update
     *   }
     * })
     */
    upsert<T extends TipoEscalaSemanaMascaraUpsertArgs>(args: SelectSubset<T, TipoEscalaSemanaMascaraUpsertArgs<ExtArgs>>): Prisma__TipoEscalaSemanaMascaraClient<$Result.GetResult<Prisma.$TipoEscalaSemanaMascaraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TipoEscalaSemanaMascaras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaSemanaMascaraCountArgs} args - Arguments to filter TipoEscalaSemanaMascaras to count.
     * @example
     * // Count the number of TipoEscalaSemanaMascaras
     * const count = await prisma.tipoEscalaSemanaMascara.count({
     *   where: {
     *     // ... the filter for the TipoEscalaSemanaMascaras we want to count
     *   }
     * })
    **/
    count<T extends TipoEscalaSemanaMascaraCountArgs>(
      args?: Subset<T, TipoEscalaSemanaMascaraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoEscalaSemanaMascaraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoEscalaSemanaMascara.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaSemanaMascaraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoEscalaSemanaMascaraAggregateArgs>(args: Subset<T, TipoEscalaSemanaMascaraAggregateArgs>): Prisma.PrismaPromise<GetTipoEscalaSemanaMascaraAggregateType<T>>

    /**
     * Group by TipoEscalaSemanaMascara.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoEscalaSemanaMascaraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoEscalaSemanaMascaraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoEscalaSemanaMascaraGroupByArgs['orderBy'] }
        : { orderBy?: TipoEscalaSemanaMascaraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoEscalaSemanaMascaraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoEscalaSemanaMascaraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoEscalaSemanaMascara model
   */
  readonly fields: TipoEscalaSemanaMascaraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoEscalaSemanaMascara.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoEscalaSemanaMascaraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tipoEscala<T extends TipoEscalaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoEscalaDefaultArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoEscalaSemanaMascara model
   */
  interface TipoEscalaSemanaMascaraFieldRefs {
    readonly id: FieldRef<"TipoEscalaSemanaMascara", 'Int'>
    readonly tipoEscalaId: FieldRef<"TipoEscalaSemanaMascara", 'Int'>
    readonly semanaIndex: FieldRef<"TipoEscalaSemanaMascara", 'Int'>
    readonly dia: FieldRef<"TipoEscalaSemanaMascara", 'DiaSemana'>
    readonly status: FieldRef<"TipoEscalaSemanaMascara", 'StatusTrabalho'>
    readonly createdAt: FieldRef<"TipoEscalaSemanaMascara", 'DateTime'>
    readonly createdBy: FieldRef<"TipoEscalaSemanaMascara", 'String'>
    readonly updatedAt: FieldRef<"TipoEscalaSemanaMascara", 'DateTime'>
    readonly updatedBy: FieldRef<"TipoEscalaSemanaMascara", 'String'>
    readonly deletedAt: FieldRef<"TipoEscalaSemanaMascara", 'DateTime'>
    readonly deletedBy: FieldRef<"TipoEscalaSemanaMascara", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoEscalaSemanaMascara findUnique
   */
  export type TipoEscalaSemanaMascaraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalaSemanaMascara to fetch.
     */
    where: TipoEscalaSemanaMascaraWhereUniqueInput
  }

  /**
   * TipoEscalaSemanaMascara findUniqueOrThrow
   */
  export type TipoEscalaSemanaMascaraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalaSemanaMascara to fetch.
     */
    where: TipoEscalaSemanaMascaraWhereUniqueInput
  }

  /**
   * TipoEscalaSemanaMascara findFirst
   */
  export type TipoEscalaSemanaMascaraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalaSemanaMascara to fetch.
     */
    where?: TipoEscalaSemanaMascaraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalaSemanaMascaras to fetch.
     */
    orderBy?: TipoEscalaSemanaMascaraOrderByWithRelationInput | TipoEscalaSemanaMascaraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoEscalaSemanaMascaras.
     */
    cursor?: TipoEscalaSemanaMascaraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalaSemanaMascaras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalaSemanaMascaras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoEscalaSemanaMascaras.
     */
    distinct?: TipoEscalaSemanaMascaraScalarFieldEnum | TipoEscalaSemanaMascaraScalarFieldEnum[]
  }

  /**
   * TipoEscalaSemanaMascara findFirstOrThrow
   */
  export type TipoEscalaSemanaMascaraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalaSemanaMascara to fetch.
     */
    where?: TipoEscalaSemanaMascaraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalaSemanaMascaras to fetch.
     */
    orderBy?: TipoEscalaSemanaMascaraOrderByWithRelationInput | TipoEscalaSemanaMascaraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoEscalaSemanaMascaras.
     */
    cursor?: TipoEscalaSemanaMascaraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalaSemanaMascaras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalaSemanaMascaras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoEscalaSemanaMascaras.
     */
    distinct?: TipoEscalaSemanaMascaraScalarFieldEnum | TipoEscalaSemanaMascaraScalarFieldEnum[]
  }

  /**
   * TipoEscalaSemanaMascara findMany
   */
  export type TipoEscalaSemanaMascaraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
    /**
     * Filter, which TipoEscalaSemanaMascaras to fetch.
     */
    where?: TipoEscalaSemanaMascaraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoEscalaSemanaMascaras to fetch.
     */
    orderBy?: TipoEscalaSemanaMascaraOrderByWithRelationInput | TipoEscalaSemanaMascaraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoEscalaSemanaMascaras.
     */
    cursor?: TipoEscalaSemanaMascaraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoEscalaSemanaMascaras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoEscalaSemanaMascaras.
     */
    skip?: number
    distinct?: TipoEscalaSemanaMascaraScalarFieldEnum | TipoEscalaSemanaMascaraScalarFieldEnum[]
  }

  /**
   * TipoEscalaSemanaMascara create
   */
  export type TipoEscalaSemanaMascaraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoEscalaSemanaMascara.
     */
    data: XOR<TipoEscalaSemanaMascaraCreateInput, TipoEscalaSemanaMascaraUncheckedCreateInput>
  }

  /**
   * TipoEscalaSemanaMascara createMany
   */
  export type TipoEscalaSemanaMascaraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoEscalaSemanaMascaras.
     */
    data: TipoEscalaSemanaMascaraCreateManyInput | TipoEscalaSemanaMascaraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoEscalaSemanaMascara update
   */
  export type TipoEscalaSemanaMascaraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoEscalaSemanaMascara.
     */
    data: XOR<TipoEscalaSemanaMascaraUpdateInput, TipoEscalaSemanaMascaraUncheckedUpdateInput>
    /**
     * Choose, which TipoEscalaSemanaMascara to update.
     */
    where: TipoEscalaSemanaMascaraWhereUniqueInput
  }

  /**
   * TipoEscalaSemanaMascara updateMany
   */
  export type TipoEscalaSemanaMascaraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoEscalaSemanaMascaras.
     */
    data: XOR<TipoEscalaSemanaMascaraUpdateManyMutationInput, TipoEscalaSemanaMascaraUncheckedUpdateManyInput>
    /**
     * Filter which TipoEscalaSemanaMascaras to update
     */
    where?: TipoEscalaSemanaMascaraWhereInput
    /**
     * Limit how many TipoEscalaSemanaMascaras to update.
     */
    limit?: number
  }

  /**
   * TipoEscalaSemanaMascara upsert
   */
  export type TipoEscalaSemanaMascaraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoEscalaSemanaMascara to update in case it exists.
     */
    where: TipoEscalaSemanaMascaraWhereUniqueInput
    /**
     * In case the TipoEscalaSemanaMascara found by the `where` argument doesn't exist, create a new TipoEscalaSemanaMascara with this data.
     */
    create: XOR<TipoEscalaSemanaMascaraCreateInput, TipoEscalaSemanaMascaraUncheckedCreateInput>
    /**
     * In case the TipoEscalaSemanaMascara was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoEscalaSemanaMascaraUpdateInput, TipoEscalaSemanaMascaraUncheckedUpdateInput>
  }

  /**
   * TipoEscalaSemanaMascara delete
   */
  export type TipoEscalaSemanaMascaraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
    /**
     * Filter which TipoEscalaSemanaMascara to delete.
     */
    where: TipoEscalaSemanaMascaraWhereUniqueInput
  }

  /**
   * TipoEscalaSemanaMascara deleteMany
   */
  export type TipoEscalaSemanaMascaraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoEscalaSemanaMascaras to delete
     */
    where?: TipoEscalaSemanaMascaraWhereInput
    /**
     * Limit how many TipoEscalaSemanaMascaras to delete.
     */
    limit?: number
  }

  /**
   * TipoEscalaSemanaMascara without action
   */
  export type TipoEscalaSemanaMascaraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoEscalaSemanaMascara
     */
    select?: TipoEscalaSemanaMascaraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoEscalaSemanaMascara
     */
    omit?: TipoEscalaSemanaMascaraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoEscalaSemanaMascaraInclude<ExtArgs> | null
  }


  /**
   * Model EscalaEquipePeriodo
   */

  export type AggregateEscalaEquipePeriodo = {
    _count: EscalaEquipePeriodoCountAggregateOutputType | null
    _avg: EscalaEquipePeriodoAvgAggregateOutputType | null
    _sum: EscalaEquipePeriodoSumAggregateOutputType | null
    _min: EscalaEquipePeriodoMinAggregateOutputType | null
    _max: EscalaEquipePeriodoMaxAggregateOutputType | null
  }

  export type EscalaEquipePeriodoAvgAggregateOutputType = {
    id: number | null
    equipeId: number | null
    tipoEscalaId: number | null
    versao: number | null
  }

  export type EscalaEquipePeriodoSumAggregateOutputType = {
    id: number | null
    equipeId: number | null
    tipoEscalaId: number | null
    versao: number | null
  }

  export type EscalaEquipePeriodoMinAggregateOutputType = {
    id: number | null
    equipeId: number | null
    periodoInicio: Date | null
    periodoFim: Date | null
    tipoEscalaId: number | null
    status: $Enums.StatusEscalaEquipePeriodo | null
    versao: number | null
    observacoes: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EscalaEquipePeriodoMaxAggregateOutputType = {
    id: number | null
    equipeId: number | null
    periodoInicio: Date | null
    periodoFim: Date | null
    tipoEscalaId: number | null
    status: $Enums.StatusEscalaEquipePeriodo | null
    versao: number | null
    observacoes: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EscalaEquipePeriodoCountAggregateOutputType = {
    id: number
    equipeId: number
    periodoInicio: number
    periodoFim: number
    tipoEscalaId: number
    status: number
    versao: number
    observacoes: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type EscalaEquipePeriodoAvgAggregateInputType = {
    id?: true
    equipeId?: true
    tipoEscalaId?: true
    versao?: true
  }

  export type EscalaEquipePeriodoSumAggregateInputType = {
    id?: true
    equipeId?: true
    tipoEscalaId?: true
    versao?: true
  }

  export type EscalaEquipePeriodoMinAggregateInputType = {
    id?: true
    equipeId?: true
    periodoInicio?: true
    periodoFim?: true
    tipoEscalaId?: true
    status?: true
    versao?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EscalaEquipePeriodoMaxAggregateInputType = {
    id?: true
    equipeId?: true
    periodoInicio?: true
    periodoFim?: true
    tipoEscalaId?: true
    status?: true
    versao?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EscalaEquipePeriodoCountAggregateInputType = {
    id?: true
    equipeId?: true
    periodoInicio?: true
    periodoFim?: true
    tipoEscalaId?: true
    status?: true
    versao?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type EscalaEquipePeriodoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EscalaEquipePeriodo to aggregate.
     */
    where?: EscalaEquipePeriodoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EscalaEquipePeriodos to fetch.
     */
    orderBy?: EscalaEquipePeriodoOrderByWithRelationInput | EscalaEquipePeriodoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EscalaEquipePeriodoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EscalaEquipePeriodos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EscalaEquipePeriodos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EscalaEquipePeriodos
    **/
    _count?: true | EscalaEquipePeriodoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EscalaEquipePeriodoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EscalaEquipePeriodoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EscalaEquipePeriodoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EscalaEquipePeriodoMaxAggregateInputType
  }

  export type GetEscalaEquipePeriodoAggregateType<T extends EscalaEquipePeriodoAggregateArgs> = {
        [P in keyof T & keyof AggregateEscalaEquipePeriodo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEscalaEquipePeriodo[P]>
      : GetScalarType<T[P], AggregateEscalaEquipePeriodo[P]>
  }




  export type EscalaEquipePeriodoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EscalaEquipePeriodoWhereInput
    orderBy?: EscalaEquipePeriodoOrderByWithAggregationInput | EscalaEquipePeriodoOrderByWithAggregationInput[]
    by: EscalaEquipePeriodoScalarFieldEnum[] | EscalaEquipePeriodoScalarFieldEnum
    having?: EscalaEquipePeriodoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EscalaEquipePeriodoCountAggregateInputType | true
    _avg?: EscalaEquipePeriodoAvgAggregateInputType
    _sum?: EscalaEquipePeriodoSumAggregateInputType
    _min?: EscalaEquipePeriodoMinAggregateInputType
    _max?: EscalaEquipePeriodoMaxAggregateInputType
  }

  export type EscalaEquipePeriodoGroupByOutputType = {
    id: number
    equipeId: number
    periodoInicio: Date
    periodoFim: Date
    tipoEscalaId: number
    status: $Enums.StatusEscalaEquipePeriodo
    versao: number
    observacoes: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: EscalaEquipePeriodoCountAggregateOutputType | null
    _avg: EscalaEquipePeriodoAvgAggregateOutputType | null
    _sum: EscalaEquipePeriodoSumAggregateOutputType | null
    _min: EscalaEquipePeriodoMinAggregateOutputType | null
    _max: EscalaEquipePeriodoMaxAggregateOutputType | null
  }

  type GetEscalaEquipePeriodoGroupByPayload<T extends EscalaEquipePeriodoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EscalaEquipePeriodoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EscalaEquipePeriodoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EscalaEquipePeriodoGroupByOutputType[P]>
            : GetScalarType<T[P], EscalaEquipePeriodoGroupByOutputType[P]>
        }
      >
    >


  export type EscalaEquipePeriodoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    equipeId?: boolean
    periodoInicio?: boolean
    periodoFim?: boolean
    tipoEscalaId?: boolean
    status?: boolean
    versao?: boolean
    observacoes?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
    tipoEscala?: boolean | TipoEscalaDefaultArgs<ExtArgs>
    Slots?: boolean | EscalaEquipePeriodo$SlotsArgs<ExtArgs>
    _count?: boolean | EscalaEquipePeriodoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["escalaEquipePeriodo"]>



  export type EscalaEquipePeriodoSelectScalar = {
    id?: boolean
    equipeId?: boolean
    periodoInicio?: boolean
    periodoFim?: boolean
    tipoEscalaId?: boolean
    status?: boolean
    versao?: boolean
    observacoes?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type EscalaEquipePeriodoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "equipeId" | "periodoInicio" | "periodoFim" | "tipoEscalaId" | "status" | "versao" | "observacoes" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["escalaEquipePeriodo"]>
  export type EscalaEquipePeriodoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
    tipoEscala?: boolean | TipoEscalaDefaultArgs<ExtArgs>
    Slots?: boolean | EscalaEquipePeriodo$SlotsArgs<ExtArgs>
    _count?: boolean | EscalaEquipePeriodoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $EscalaEquipePeriodoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EscalaEquipePeriodo"
    objects: {
      equipe: Prisma.$EquipePayload<ExtArgs>
      tipoEscala: Prisma.$TipoEscalaPayload<ExtArgs>
      Slots: Prisma.$SlotEscalaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      equipeId: number
      periodoInicio: Date
      periodoFim: Date
      tipoEscalaId: number
      status: $Enums.StatusEscalaEquipePeriodo
      versao: number
      observacoes: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["escalaEquipePeriodo"]>
    composites: {}
  }

  type EscalaEquipePeriodoGetPayload<S extends boolean | null | undefined | EscalaEquipePeriodoDefaultArgs> = $Result.GetResult<Prisma.$EscalaEquipePeriodoPayload, S>

  type EscalaEquipePeriodoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EscalaEquipePeriodoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EscalaEquipePeriodoCountAggregateInputType | true
    }

  export interface EscalaEquipePeriodoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EscalaEquipePeriodo'], meta: { name: 'EscalaEquipePeriodo' } }
    /**
     * Find zero or one EscalaEquipePeriodo that matches the filter.
     * @param {EscalaEquipePeriodoFindUniqueArgs} args - Arguments to find a EscalaEquipePeriodo
     * @example
     * // Get one EscalaEquipePeriodo
     * const escalaEquipePeriodo = await prisma.escalaEquipePeriodo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EscalaEquipePeriodoFindUniqueArgs>(args: SelectSubset<T, EscalaEquipePeriodoFindUniqueArgs<ExtArgs>>): Prisma__EscalaEquipePeriodoClient<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EscalaEquipePeriodo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EscalaEquipePeriodoFindUniqueOrThrowArgs} args - Arguments to find a EscalaEquipePeriodo
     * @example
     * // Get one EscalaEquipePeriodo
     * const escalaEquipePeriodo = await prisma.escalaEquipePeriodo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EscalaEquipePeriodoFindUniqueOrThrowArgs>(args: SelectSubset<T, EscalaEquipePeriodoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EscalaEquipePeriodoClient<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EscalaEquipePeriodo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscalaEquipePeriodoFindFirstArgs} args - Arguments to find a EscalaEquipePeriodo
     * @example
     * // Get one EscalaEquipePeriodo
     * const escalaEquipePeriodo = await prisma.escalaEquipePeriodo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EscalaEquipePeriodoFindFirstArgs>(args?: SelectSubset<T, EscalaEquipePeriodoFindFirstArgs<ExtArgs>>): Prisma__EscalaEquipePeriodoClient<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EscalaEquipePeriodo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscalaEquipePeriodoFindFirstOrThrowArgs} args - Arguments to find a EscalaEquipePeriodo
     * @example
     * // Get one EscalaEquipePeriodo
     * const escalaEquipePeriodo = await prisma.escalaEquipePeriodo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EscalaEquipePeriodoFindFirstOrThrowArgs>(args?: SelectSubset<T, EscalaEquipePeriodoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EscalaEquipePeriodoClient<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EscalaEquipePeriodos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscalaEquipePeriodoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EscalaEquipePeriodos
     * const escalaEquipePeriodos = await prisma.escalaEquipePeriodo.findMany()
     * 
     * // Get first 10 EscalaEquipePeriodos
     * const escalaEquipePeriodos = await prisma.escalaEquipePeriodo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const escalaEquipePeriodoWithIdOnly = await prisma.escalaEquipePeriodo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EscalaEquipePeriodoFindManyArgs>(args?: SelectSubset<T, EscalaEquipePeriodoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EscalaEquipePeriodo.
     * @param {EscalaEquipePeriodoCreateArgs} args - Arguments to create a EscalaEquipePeriodo.
     * @example
     * // Create one EscalaEquipePeriodo
     * const EscalaEquipePeriodo = await prisma.escalaEquipePeriodo.create({
     *   data: {
     *     // ... data to create a EscalaEquipePeriodo
     *   }
     * })
     * 
     */
    create<T extends EscalaEquipePeriodoCreateArgs>(args: SelectSubset<T, EscalaEquipePeriodoCreateArgs<ExtArgs>>): Prisma__EscalaEquipePeriodoClient<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EscalaEquipePeriodos.
     * @param {EscalaEquipePeriodoCreateManyArgs} args - Arguments to create many EscalaEquipePeriodos.
     * @example
     * // Create many EscalaEquipePeriodos
     * const escalaEquipePeriodo = await prisma.escalaEquipePeriodo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EscalaEquipePeriodoCreateManyArgs>(args?: SelectSubset<T, EscalaEquipePeriodoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EscalaEquipePeriodo.
     * @param {EscalaEquipePeriodoDeleteArgs} args - Arguments to delete one EscalaEquipePeriodo.
     * @example
     * // Delete one EscalaEquipePeriodo
     * const EscalaEquipePeriodo = await prisma.escalaEquipePeriodo.delete({
     *   where: {
     *     // ... filter to delete one EscalaEquipePeriodo
     *   }
     * })
     * 
     */
    delete<T extends EscalaEquipePeriodoDeleteArgs>(args: SelectSubset<T, EscalaEquipePeriodoDeleteArgs<ExtArgs>>): Prisma__EscalaEquipePeriodoClient<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EscalaEquipePeriodo.
     * @param {EscalaEquipePeriodoUpdateArgs} args - Arguments to update one EscalaEquipePeriodo.
     * @example
     * // Update one EscalaEquipePeriodo
     * const escalaEquipePeriodo = await prisma.escalaEquipePeriodo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EscalaEquipePeriodoUpdateArgs>(args: SelectSubset<T, EscalaEquipePeriodoUpdateArgs<ExtArgs>>): Prisma__EscalaEquipePeriodoClient<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EscalaEquipePeriodos.
     * @param {EscalaEquipePeriodoDeleteManyArgs} args - Arguments to filter EscalaEquipePeriodos to delete.
     * @example
     * // Delete a few EscalaEquipePeriodos
     * const { count } = await prisma.escalaEquipePeriodo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EscalaEquipePeriodoDeleteManyArgs>(args?: SelectSubset<T, EscalaEquipePeriodoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EscalaEquipePeriodos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscalaEquipePeriodoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EscalaEquipePeriodos
     * const escalaEquipePeriodo = await prisma.escalaEquipePeriodo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EscalaEquipePeriodoUpdateManyArgs>(args: SelectSubset<T, EscalaEquipePeriodoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EscalaEquipePeriodo.
     * @param {EscalaEquipePeriodoUpsertArgs} args - Arguments to update or create a EscalaEquipePeriodo.
     * @example
     * // Update or create a EscalaEquipePeriodo
     * const escalaEquipePeriodo = await prisma.escalaEquipePeriodo.upsert({
     *   create: {
     *     // ... data to create a EscalaEquipePeriodo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EscalaEquipePeriodo we want to update
     *   }
     * })
     */
    upsert<T extends EscalaEquipePeriodoUpsertArgs>(args: SelectSubset<T, EscalaEquipePeriodoUpsertArgs<ExtArgs>>): Prisma__EscalaEquipePeriodoClient<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EscalaEquipePeriodos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscalaEquipePeriodoCountArgs} args - Arguments to filter EscalaEquipePeriodos to count.
     * @example
     * // Count the number of EscalaEquipePeriodos
     * const count = await prisma.escalaEquipePeriodo.count({
     *   where: {
     *     // ... the filter for the EscalaEquipePeriodos we want to count
     *   }
     * })
    **/
    count<T extends EscalaEquipePeriodoCountArgs>(
      args?: Subset<T, EscalaEquipePeriodoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EscalaEquipePeriodoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EscalaEquipePeriodo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscalaEquipePeriodoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EscalaEquipePeriodoAggregateArgs>(args: Subset<T, EscalaEquipePeriodoAggregateArgs>): Prisma.PrismaPromise<GetEscalaEquipePeriodoAggregateType<T>>

    /**
     * Group by EscalaEquipePeriodo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscalaEquipePeriodoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EscalaEquipePeriodoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EscalaEquipePeriodoGroupByArgs['orderBy'] }
        : { orderBy?: EscalaEquipePeriodoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EscalaEquipePeriodoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEscalaEquipePeriodoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EscalaEquipePeriodo model
   */
  readonly fields: EscalaEquipePeriodoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EscalaEquipePeriodo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EscalaEquipePeriodoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    equipe<T extends EquipeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipeDefaultArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tipoEscala<T extends TipoEscalaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoEscalaDefaultArgs<ExtArgs>>): Prisma__TipoEscalaClient<$Result.GetResult<Prisma.$TipoEscalaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Slots<T extends EscalaEquipePeriodo$SlotsArgs<ExtArgs> = {}>(args?: Subset<T, EscalaEquipePeriodo$SlotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EscalaEquipePeriodo model
   */
  interface EscalaEquipePeriodoFieldRefs {
    readonly id: FieldRef<"EscalaEquipePeriodo", 'Int'>
    readonly equipeId: FieldRef<"EscalaEquipePeriodo", 'Int'>
    readonly periodoInicio: FieldRef<"EscalaEquipePeriodo", 'DateTime'>
    readonly periodoFim: FieldRef<"EscalaEquipePeriodo", 'DateTime'>
    readonly tipoEscalaId: FieldRef<"EscalaEquipePeriodo", 'Int'>
    readonly status: FieldRef<"EscalaEquipePeriodo", 'StatusEscalaEquipePeriodo'>
    readonly versao: FieldRef<"EscalaEquipePeriodo", 'Int'>
    readonly observacoes: FieldRef<"EscalaEquipePeriodo", 'String'>
    readonly createdAt: FieldRef<"EscalaEquipePeriodo", 'DateTime'>
    readonly createdBy: FieldRef<"EscalaEquipePeriodo", 'String'>
    readonly updatedAt: FieldRef<"EscalaEquipePeriodo", 'DateTime'>
    readonly updatedBy: FieldRef<"EscalaEquipePeriodo", 'String'>
    readonly deletedAt: FieldRef<"EscalaEquipePeriodo", 'DateTime'>
    readonly deletedBy: FieldRef<"EscalaEquipePeriodo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EscalaEquipePeriodo findUnique
   */
  export type EscalaEquipePeriodoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    /**
     * Filter, which EscalaEquipePeriodo to fetch.
     */
    where: EscalaEquipePeriodoWhereUniqueInput
  }

  /**
   * EscalaEquipePeriodo findUniqueOrThrow
   */
  export type EscalaEquipePeriodoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    /**
     * Filter, which EscalaEquipePeriodo to fetch.
     */
    where: EscalaEquipePeriodoWhereUniqueInput
  }

  /**
   * EscalaEquipePeriodo findFirst
   */
  export type EscalaEquipePeriodoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    /**
     * Filter, which EscalaEquipePeriodo to fetch.
     */
    where?: EscalaEquipePeriodoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EscalaEquipePeriodos to fetch.
     */
    orderBy?: EscalaEquipePeriodoOrderByWithRelationInput | EscalaEquipePeriodoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EscalaEquipePeriodos.
     */
    cursor?: EscalaEquipePeriodoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EscalaEquipePeriodos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EscalaEquipePeriodos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EscalaEquipePeriodos.
     */
    distinct?: EscalaEquipePeriodoScalarFieldEnum | EscalaEquipePeriodoScalarFieldEnum[]
  }

  /**
   * EscalaEquipePeriodo findFirstOrThrow
   */
  export type EscalaEquipePeriodoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    /**
     * Filter, which EscalaEquipePeriodo to fetch.
     */
    where?: EscalaEquipePeriodoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EscalaEquipePeriodos to fetch.
     */
    orderBy?: EscalaEquipePeriodoOrderByWithRelationInput | EscalaEquipePeriodoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EscalaEquipePeriodos.
     */
    cursor?: EscalaEquipePeriodoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EscalaEquipePeriodos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EscalaEquipePeriodos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EscalaEquipePeriodos.
     */
    distinct?: EscalaEquipePeriodoScalarFieldEnum | EscalaEquipePeriodoScalarFieldEnum[]
  }

  /**
   * EscalaEquipePeriodo findMany
   */
  export type EscalaEquipePeriodoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    /**
     * Filter, which EscalaEquipePeriodos to fetch.
     */
    where?: EscalaEquipePeriodoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EscalaEquipePeriodos to fetch.
     */
    orderBy?: EscalaEquipePeriodoOrderByWithRelationInput | EscalaEquipePeriodoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EscalaEquipePeriodos.
     */
    cursor?: EscalaEquipePeriodoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EscalaEquipePeriodos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EscalaEquipePeriodos.
     */
    skip?: number
    distinct?: EscalaEquipePeriodoScalarFieldEnum | EscalaEquipePeriodoScalarFieldEnum[]
  }

  /**
   * EscalaEquipePeriodo create
   */
  export type EscalaEquipePeriodoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    /**
     * The data needed to create a EscalaEquipePeriodo.
     */
    data: XOR<EscalaEquipePeriodoCreateInput, EscalaEquipePeriodoUncheckedCreateInput>
  }

  /**
   * EscalaEquipePeriodo createMany
   */
  export type EscalaEquipePeriodoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EscalaEquipePeriodos.
     */
    data: EscalaEquipePeriodoCreateManyInput | EscalaEquipePeriodoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EscalaEquipePeriodo update
   */
  export type EscalaEquipePeriodoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    /**
     * The data needed to update a EscalaEquipePeriodo.
     */
    data: XOR<EscalaEquipePeriodoUpdateInput, EscalaEquipePeriodoUncheckedUpdateInput>
    /**
     * Choose, which EscalaEquipePeriodo to update.
     */
    where: EscalaEquipePeriodoWhereUniqueInput
  }

  /**
   * EscalaEquipePeriodo updateMany
   */
  export type EscalaEquipePeriodoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EscalaEquipePeriodos.
     */
    data: XOR<EscalaEquipePeriodoUpdateManyMutationInput, EscalaEquipePeriodoUncheckedUpdateManyInput>
    /**
     * Filter which EscalaEquipePeriodos to update
     */
    where?: EscalaEquipePeriodoWhereInput
    /**
     * Limit how many EscalaEquipePeriodos to update.
     */
    limit?: number
  }

  /**
   * EscalaEquipePeriodo upsert
   */
  export type EscalaEquipePeriodoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    /**
     * The filter to search for the EscalaEquipePeriodo to update in case it exists.
     */
    where: EscalaEquipePeriodoWhereUniqueInput
    /**
     * In case the EscalaEquipePeriodo found by the `where` argument doesn't exist, create a new EscalaEquipePeriodo with this data.
     */
    create: XOR<EscalaEquipePeriodoCreateInput, EscalaEquipePeriodoUncheckedCreateInput>
    /**
     * In case the EscalaEquipePeriodo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EscalaEquipePeriodoUpdateInput, EscalaEquipePeriodoUncheckedUpdateInput>
  }

  /**
   * EscalaEquipePeriodo delete
   */
  export type EscalaEquipePeriodoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
    /**
     * Filter which EscalaEquipePeriodo to delete.
     */
    where: EscalaEquipePeriodoWhereUniqueInput
  }

  /**
   * EscalaEquipePeriodo deleteMany
   */
  export type EscalaEquipePeriodoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EscalaEquipePeriodos to delete
     */
    where?: EscalaEquipePeriodoWhereInput
    /**
     * Limit how many EscalaEquipePeriodos to delete.
     */
    limit?: number
  }

  /**
   * EscalaEquipePeriodo.Slots
   */
  export type EscalaEquipePeriodo$SlotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    where?: SlotEscalaWhereInput
    orderBy?: SlotEscalaOrderByWithRelationInput | SlotEscalaOrderByWithRelationInput[]
    cursor?: SlotEscalaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SlotEscalaScalarFieldEnum | SlotEscalaScalarFieldEnum[]
  }

  /**
   * EscalaEquipePeriodo without action
   */
  export type EscalaEquipePeriodoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscalaEquipePeriodo
     */
    select?: EscalaEquipePeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EscalaEquipePeriodo
     */
    omit?: EscalaEquipePeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscalaEquipePeriodoInclude<ExtArgs> | null
  }


  /**
   * Model SlotEscala
   */

  export type AggregateSlotEscala = {
    _count: SlotEscalaCountAggregateOutputType | null
    _avg: SlotEscalaAvgAggregateOutputType | null
    _sum: SlotEscalaSumAggregateOutputType | null
    _min: SlotEscalaMinAggregateOutputType | null
    _max: SlotEscalaMaxAggregateOutputType | null
  }

  export type SlotEscalaAvgAggregateOutputType = {
    id: number | null
    escalaEquipePeriodoId: number | null
    eletricistaId: number | null
  }

  export type SlotEscalaSumAggregateOutputType = {
    id: number | null
    escalaEquipePeriodoId: number | null
    eletricistaId: number | null
  }

  export type SlotEscalaMinAggregateOutputType = {
    id: number | null
    escalaEquipePeriodoId: number | null
    eletricistaId: number | null
    data: Date | null
    estado: $Enums.EstadoSlot | null
    inicioPrevisto: string | null
    fimPrevisto: string | null
    anotacoesDia: string | null
    origem: $Enums.OrigemAtribuicao | null
    observacoes: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type SlotEscalaMaxAggregateOutputType = {
    id: number | null
    escalaEquipePeriodoId: number | null
    eletricistaId: number | null
    data: Date | null
    estado: $Enums.EstadoSlot | null
    inicioPrevisto: string | null
    fimPrevisto: string | null
    anotacoesDia: string | null
    origem: $Enums.OrigemAtribuicao | null
    observacoes: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type SlotEscalaCountAggregateOutputType = {
    id: number
    escalaEquipePeriodoId: number
    eletricistaId: number
    data: number
    estado: number
    inicioPrevisto: number
    fimPrevisto: number
    anotacoesDia: number
    origem: number
    observacoes: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type SlotEscalaAvgAggregateInputType = {
    id?: true
    escalaEquipePeriodoId?: true
    eletricistaId?: true
  }

  export type SlotEscalaSumAggregateInputType = {
    id?: true
    escalaEquipePeriodoId?: true
    eletricistaId?: true
  }

  export type SlotEscalaMinAggregateInputType = {
    id?: true
    escalaEquipePeriodoId?: true
    eletricistaId?: true
    data?: true
    estado?: true
    inicioPrevisto?: true
    fimPrevisto?: true
    anotacoesDia?: true
    origem?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type SlotEscalaMaxAggregateInputType = {
    id?: true
    escalaEquipePeriodoId?: true
    eletricistaId?: true
    data?: true
    estado?: true
    inicioPrevisto?: true
    fimPrevisto?: true
    anotacoesDia?: true
    origem?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type SlotEscalaCountAggregateInputType = {
    id?: true
    escalaEquipePeriodoId?: true
    eletricistaId?: true
    data?: true
    estado?: true
    inicioPrevisto?: true
    fimPrevisto?: true
    anotacoesDia?: true
    origem?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type SlotEscalaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SlotEscala to aggregate.
     */
    where?: SlotEscalaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SlotEscalas to fetch.
     */
    orderBy?: SlotEscalaOrderByWithRelationInput | SlotEscalaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SlotEscalaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SlotEscalas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SlotEscalas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SlotEscalas
    **/
    _count?: true | SlotEscalaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SlotEscalaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SlotEscalaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SlotEscalaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SlotEscalaMaxAggregateInputType
  }

  export type GetSlotEscalaAggregateType<T extends SlotEscalaAggregateArgs> = {
        [P in keyof T & keyof AggregateSlotEscala]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSlotEscala[P]>
      : GetScalarType<T[P], AggregateSlotEscala[P]>
  }




  export type SlotEscalaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SlotEscalaWhereInput
    orderBy?: SlotEscalaOrderByWithAggregationInput | SlotEscalaOrderByWithAggregationInput[]
    by: SlotEscalaScalarFieldEnum[] | SlotEscalaScalarFieldEnum
    having?: SlotEscalaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SlotEscalaCountAggregateInputType | true
    _avg?: SlotEscalaAvgAggregateInputType
    _sum?: SlotEscalaSumAggregateInputType
    _min?: SlotEscalaMinAggregateInputType
    _max?: SlotEscalaMaxAggregateInputType
  }

  export type SlotEscalaGroupByOutputType = {
    id: number
    escalaEquipePeriodoId: number
    eletricistaId: number
    data: Date
    estado: $Enums.EstadoSlot
    inicioPrevisto: string | null
    fimPrevisto: string | null
    anotacoesDia: string | null
    origem: $Enums.OrigemAtribuicao
    observacoes: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: SlotEscalaCountAggregateOutputType | null
    _avg: SlotEscalaAvgAggregateOutputType | null
    _sum: SlotEscalaSumAggregateOutputType | null
    _min: SlotEscalaMinAggregateOutputType | null
    _max: SlotEscalaMaxAggregateOutputType | null
  }

  type GetSlotEscalaGroupByPayload<T extends SlotEscalaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SlotEscalaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SlotEscalaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SlotEscalaGroupByOutputType[P]>
            : GetScalarType<T[P], SlotEscalaGroupByOutputType[P]>
        }
      >
    >


  export type SlotEscalaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    escalaEquipePeriodoId?: boolean
    eletricistaId?: boolean
    data?: boolean
    estado?: boolean
    inicioPrevisto?: boolean
    fimPrevisto?: boolean
    anotacoesDia?: boolean
    origem?: boolean
    observacoes?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    escalaEquipePeriodo?: boolean | EscalaEquipePeriodoDefaultArgs<ExtArgs>
    eletricista?: boolean | EletricistaDefaultArgs<ExtArgs>
    Coberturas?: boolean | SlotEscala$CoberturasArgs<ExtArgs>
    _count?: boolean | SlotEscalaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["slotEscala"]>



  export type SlotEscalaSelectScalar = {
    id?: boolean
    escalaEquipePeriodoId?: boolean
    eletricistaId?: boolean
    data?: boolean
    estado?: boolean
    inicioPrevisto?: boolean
    fimPrevisto?: boolean
    anotacoesDia?: boolean
    origem?: boolean
    observacoes?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type SlotEscalaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "escalaEquipePeriodoId" | "eletricistaId" | "data" | "estado" | "inicioPrevisto" | "fimPrevisto" | "anotacoesDia" | "origem" | "observacoes" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["slotEscala"]>
  export type SlotEscalaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    escalaEquipePeriodo?: boolean | EscalaEquipePeriodoDefaultArgs<ExtArgs>
    eletricista?: boolean | EletricistaDefaultArgs<ExtArgs>
    Coberturas?: boolean | SlotEscala$CoberturasArgs<ExtArgs>
    _count?: boolean | SlotEscalaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SlotEscalaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SlotEscala"
    objects: {
      escalaEquipePeriodo: Prisma.$EscalaEquipePeriodoPayload<ExtArgs>
      eletricista: Prisma.$EletricistaPayload<ExtArgs>
      Coberturas: Prisma.$EventoCoberturaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      escalaEquipePeriodoId: number
      eletricistaId: number
      data: Date
      estado: $Enums.EstadoSlot
      inicioPrevisto: string | null
      fimPrevisto: string | null
      anotacoesDia: string | null
      origem: $Enums.OrigemAtribuicao
      observacoes: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["slotEscala"]>
    composites: {}
  }

  type SlotEscalaGetPayload<S extends boolean | null | undefined | SlotEscalaDefaultArgs> = $Result.GetResult<Prisma.$SlotEscalaPayload, S>

  type SlotEscalaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SlotEscalaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SlotEscalaCountAggregateInputType | true
    }

  export interface SlotEscalaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SlotEscala'], meta: { name: 'SlotEscala' } }
    /**
     * Find zero or one SlotEscala that matches the filter.
     * @param {SlotEscalaFindUniqueArgs} args - Arguments to find a SlotEscala
     * @example
     * // Get one SlotEscala
     * const slotEscala = await prisma.slotEscala.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SlotEscalaFindUniqueArgs>(args: SelectSubset<T, SlotEscalaFindUniqueArgs<ExtArgs>>): Prisma__SlotEscalaClient<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SlotEscala that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SlotEscalaFindUniqueOrThrowArgs} args - Arguments to find a SlotEscala
     * @example
     * // Get one SlotEscala
     * const slotEscala = await prisma.slotEscala.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SlotEscalaFindUniqueOrThrowArgs>(args: SelectSubset<T, SlotEscalaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SlotEscalaClient<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SlotEscala that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlotEscalaFindFirstArgs} args - Arguments to find a SlotEscala
     * @example
     * // Get one SlotEscala
     * const slotEscala = await prisma.slotEscala.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SlotEscalaFindFirstArgs>(args?: SelectSubset<T, SlotEscalaFindFirstArgs<ExtArgs>>): Prisma__SlotEscalaClient<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SlotEscala that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlotEscalaFindFirstOrThrowArgs} args - Arguments to find a SlotEscala
     * @example
     * // Get one SlotEscala
     * const slotEscala = await prisma.slotEscala.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SlotEscalaFindFirstOrThrowArgs>(args?: SelectSubset<T, SlotEscalaFindFirstOrThrowArgs<ExtArgs>>): Prisma__SlotEscalaClient<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SlotEscalas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlotEscalaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SlotEscalas
     * const slotEscalas = await prisma.slotEscala.findMany()
     * 
     * // Get first 10 SlotEscalas
     * const slotEscalas = await prisma.slotEscala.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const slotEscalaWithIdOnly = await prisma.slotEscala.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SlotEscalaFindManyArgs>(args?: SelectSubset<T, SlotEscalaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SlotEscala.
     * @param {SlotEscalaCreateArgs} args - Arguments to create a SlotEscala.
     * @example
     * // Create one SlotEscala
     * const SlotEscala = await prisma.slotEscala.create({
     *   data: {
     *     // ... data to create a SlotEscala
     *   }
     * })
     * 
     */
    create<T extends SlotEscalaCreateArgs>(args: SelectSubset<T, SlotEscalaCreateArgs<ExtArgs>>): Prisma__SlotEscalaClient<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SlotEscalas.
     * @param {SlotEscalaCreateManyArgs} args - Arguments to create many SlotEscalas.
     * @example
     * // Create many SlotEscalas
     * const slotEscala = await prisma.slotEscala.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SlotEscalaCreateManyArgs>(args?: SelectSubset<T, SlotEscalaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SlotEscala.
     * @param {SlotEscalaDeleteArgs} args - Arguments to delete one SlotEscala.
     * @example
     * // Delete one SlotEscala
     * const SlotEscala = await prisma.slotEscala.delete({
     *   where: {
     *     // ... filter to delete one SlotEscala
     *   }
     * })
     * 
     */
    delete<T extends SlotEscalaDeleteArgs>(args: SelectSubset<T, SlotEscalaDeleteArgs<ExtArgs>>): Prisma__SlotEscalaClient<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SlotEscala.
     * @param {SlotEscalaUpdateArgs} args - Arguments to update one SlotEscala.
     * @example
     * // Update one SlotEscala
     * const slotEscala = await prisma.slotEscala.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SlotEscalaUpdateArgs>(args: SelectSubset<T, SlotEscalaUpdateArgs<ExtArgs>>): Prisma__SlotEscalaClient<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SlotEscalas.
     * @param {SlotEscalaDeleteManyArgs} args - Arguments to filter SlotEscalas to delete.
     * @example
     * // Delete a few SlotEscalas
     * const { count } = await prisma.slotEscala.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SlotEscalaDeleteManyArgs>(args?: SelectSubset<T, SlotEscalaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SlotEscalas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlotEscalaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SlotEscalas
     * const slotEscala = await prisma.slotEscala.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SlotEscalaUpdateManyArgs>(args: SelectSubset<T, SlotEscalaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SlotEscala.
     * @param {SlotEscalaUpsertArgs} args - Arguments to update or create a SlotEscala.
     * @example
     * // Update or create a SlotEscala
     * const slotEscala = await prisma.slotEscala.upsert({
     *   create: {
     *     // ... data to create a SlotEscala
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SlotEscala we want to update
     *   }
     * })
     */
    upsert<T extends SlotEscalaUpsertArgs>(args: SelectSubset<T, SlotEscalaUpsertArgs<ExtArgs>>): Prisma__SlotEscalaClient<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SlotEscalas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlotEscalaCountArgs} args - Arguments to filter SlotEscalas to count.
     * @example
     * // Count the number of SlotEscalas
     * const count = await prisma.slotEscala.count({
     *   where: {
     *     // ... the filter for the SlotEscalas we want to count
     *   }
     * })
    **/
    count<T extends SlotEscalaCountArgs>(
      args?: Subset<T, SlotEscalaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SlotEscalaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SlotEscala.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlotEscalaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SlotEscalaAggregateArgs>(args: Subset<T, SlotEscalaAggregateArgs>): Prisma.PrismaPromise<GetSlotEscalaAggregateType<T>>

    /**
     * Group by SlotEscala.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SlotEscalaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SlotEscalaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SlotEscalaGroupByArgs['orderBy'] }
        : { orderBy?: SlotEscalaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SlotEscalaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSlotEscalaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SlotEscala model
   */
  readonly fields: SlotEscalaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SlotEscala.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SlotEscalaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    escalaEquipePeriodo<T extends EscalaEquipePeriodoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EscalaEquipePeriodoDefaultArgs<ExtArgs>>): Prisma__EscalaEquipePeriodoClient<$Result.GetResult<Prisma.$EscalaEquipePeriodoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    eletricista<T extends EletricistaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EletricistaDefaultArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Coberturas<T extends SlotEscala$CoberturasArgs<ExtArgs> = {}>(args?: Subset<T, SlotEscala$CoberturasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SlotEscala model
   */
  interface SlotEscalaFieldRefs {
    readonly id: FieldRef<"SlotEscala", 'Int'>
    readonly escalaEquipePeriodoId: FieldRef<"SlotEscala", 'Int'>
    readonly eletricistaId: FieldRef<"SlotEscala", 'Int'>
    readonly data: FieldRef<"SlotEscala", 'DateTime'>
    readonly estado: FieldRef<"SlotEscala", 'EstadoSlot'>
    readonly inicioPrevisto: FieldRef<"SlotEscala", 'String'>
    readonly fimPrevisto: FieldRef<"SlotEscala", 'String'>
    readonly anotacoesDia: FieldRef<"SlotEscala", 'String'>
    readonly origem: FieldRef<"SlotEscala", 'OrigemAtribuicao'>
    readonly observacoes: FieldRef<"SlotEscala", 'String'>
    readonly createdAt: FieldRef<"SlotEscala", 'DateTime'>
    readonly createdBy: FieldRef<"SlotEscala", 'String'>
    readonly updatedAt: FieldRef<"SlotEscala", 'DateTime'>
    readonly updatedBy: FieldRef<"SlotEscala", 'String'>
    readonly deletedAt: FieldRef<"SlotEscala", 'DateTime'>
    readonly deletedBy: FieldRef<"SlotEscala", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SlotEscala findUnique
   */
  export type SlotEscalaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    /**
     * Filter, which SlotEscala to fetch.
     */
    where: SlotEscalaWhereUniqueInput
  }

  /**
   * SlotEscala findUniqueOrThrow
   */
  export type SlotEscalaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    /**
     * Filter, which SlotEscala to fetch.
     */
    where: SlotEscalaWhereUniqueInput
  }

  /**
   * SlotEscala findFirst
   */
  export type SlotEscalaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    /**
     * Filter, which SlotEscala to fetch.
     */
    where?: SlotEscalaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SlotEscalas to fetch.
     */
    orderBy?: SlotEscalaOrderByWithRelationInput | SlotEscalaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SlotEscalas.
     */
    cursor?: SlotEscalaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SlotEscalas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SlotEscalas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SlotEscalas.
     */
    distinct?: SlotEscalaScalarFieldEnum | SlotEscalaScalarFieldEnum[]
  }

  /**
   * SlotEscala findFirstOrThrow
   */
  export type SlotEscalaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    /**
     * Filter, which SlotEscala to fetch.
     */
    where?: SlotEscalaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SlotEscalas to fetch.
     */
    orderBy?: SlotEscalaOrderByWithRelationInput | SlotEscalaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SlotEscalas.
     */
    cursor?: SlotEscalaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SlotEscalas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SlotEscalas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SlotEscalas.
     */
    distinct?: SlotEscalaScalarFieldEnum | SlotEscalaScalarFieldEnum[]
  }

  /**
   * SlotEscala findMany
   */
  export type SlotEscalaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    /**
     * Filter, which SlotEscalas to fetch.
     */
    where?: SlotEscalaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SlotEscalas to fetch.
     */
    orderBy?: SlotEscalaOrderByWithRelationInput | SlotEscalaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SlotEscalas.
     */
    cursor?: SlotEscalaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SlotEscalas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SlotEscalas.
     */
    skip?: number
    distinct?: SlotEscalaScalarFieldEnum | SlotEscalaScalarFieldEnum[]
  }

  /**
   * SlotEscala create
   */
  export type SlotEscalaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    /**
     * The data needed to create a SlotEscala.
     */
    data: XOR<SlotEscalaCreateInput, SlotEscalaUncheckedCreateInput>
  }

  /**
   * SlotEscala createMany
   */
  export type SlotEscalaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SlotEscalas.
     */
    data: SlotEscalaCreateManyInput | SlotEscalaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SlotEscala update
   */
  export type SlotEscalaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    /**
     * The data needed to update a SlotEscala.
     */
    data: XOR<SlotEscalaUpdateInput, SlotEscalaUncheckedUpdateInput>
    /**
     * Choose, which SlotEscala to update.
     */
    where: SlotEscalaWhereUniqueInput
  }

  /**
   * SlotEscala updateMany
   */
  export type SlotEscalaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SlotEscalas.
     */
    data: XOR<SlotEscalaUpdateManyMutationInput, SlotEscalaUncheckedUpdateManyInput>
    /**
     * Filter which SlotEscalas to update
     */
    where?: SlotEscalaWhereInput
    /**
     * Limit how many SlotEscalas to update.
     */
    limit?: number
  }

  /**
   * SlotEscala upsert
   */
  export type SlotEscalaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    /**
     * The filter to search for the SlotEscala to update in case it exists.
     */
    where: SlotEscalaWhereUniqueInput
    /**
     * In case the SlotEscala found by the `where` argument doesn't exist, create a new SlotEscala with this data.
     */
    create: XOR<SlotEscalaCreateInput, SlotEscalaUncheckedCreateInput>
    /**
     * In case the SlotEscala was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SlotEscalaUpdateInput, SlotEscalaUncheckedUpdateInput>
  }

  /**
   * SlotEscala delete
   */
  export type SlotEscalaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
    /**
     * Filter which SlotEscala to delete.
     */
    where: SlotEscalaWhereUniqueInput
  }

  /**
   * SlotEscala deleteMany
   */
  export type SlotEscalaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SlotEscalas to delete
     */
    where?: SlotEscalaWhereInput
    /**
     * Limit how many SlotEscalas to delete.
     */
    limit?: number
  }

  /**
   * SlotEscala.Coberturas
   */
  export type SlotEscala$CoberturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    where?: EventoCoberturaWhereInput
    orderBy?: EventoCoberturaOrderByWithRelationInput | EventoCoberturaOrderByWithRelationInput[]
    cursor?: EventoCoberturaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventoCoberturaScalarFieldEnum | EventoCoberturaScalarFieldEnum[]
  }

  /**
   * SlotEscala without action
   */
  export type SlotEscalaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SlotEscala
     */
    select?: SlotEscalaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SlotEscala
     */
    omit?: SlotEscalaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SlotEscalaInclude<ExtArgs> | null
  }


  /**
   * Model EventoCobertura
   */

  export type AggregateEventoCobertura = {
    _count: EventoCoberturaCountAggregateOutputType | null
    _avg: EventoCoberturaAvgAggregateOutputType | null
    _sum: EventoCoberturaSumAggregateOutputType | null
    _min: EventoCoberturaMinAggregateOutputType | null
    _max: EventoCoberturaMaxAggregateOutputType | null
  }

  export type EventoCoberturaAvgAggregateOutputType = {
    id: number | null
    slotEscalaId: number | null
    eletricistaCobrindoId: number | null
  }

  export type EventoCoberturaSumAggregateOutputType = {
    id: number | null
    slotEscalaId: number | null
    eletricistaCobrindoId: number | null
  }

  export type EventoCoberturaMinAggregateOutputType = {
    id: number | null
    slotEscalaId: number | null
    eletricistaCobrindoId: number | null
    tipo: $Enums.EventoCoberturaTipo | null
    resultado: $Enums.EventoCoberturaResultado | null
    justificativa: string | null
    registradoEm: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EventoCoberturaMaxAggregateOutputType = {
    id: number | null
    slotEscalaId: number | null
    eletricistaCobrindoId: number | null
    tipo: $Enums.EventoCoberturaTipo | null
    resultado: $Enums.EventoCoberturaResultado | null
    justificativa: string | null
    registradoEm: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EventoCoberturaCountAggregateOutputType = {
    id: number
    slotEscalaId: number
    eletricistaCobrindoId: number
    tipo: number
    resultado: number
    justificativa: number
    registradoEm: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type EventoCoberturaAvgAggregateInputType = {
    id?: true
    slotEscalaId?: true
    eletricistaCobrindoId?: true
  }

  export type EventoCoberturaSumAggregateInputType = {
    id?: true
    slotEscalaId?: true
    eletricistaCobrindoId?: true
  }

  export type EventoCoberturaMinAggregateInputType = {
    id?: true
    slotEscalaId?: true
    eletricistaCobrindoId?: true
    tipo?: true
    resultado?: true
    justificativa?: true
    registradoEm?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EventoCoberturaMaxAggregateInputType = {
    id?: true
    slotEscalaId?: true
    eletricistaCobrindoId?: true
    tipo?: true
    resultado?: true
    justificativa?: true
    registradoEm?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EventoCoberturaCountAggregateInputType = {
    id?: true
    slotEscalaId?: true
    eletricistaCobrindoId?: true
    tipo?: true
    resultado?: true
    justificativa?: true
    registradoEm?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type EventoCoberturaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventoCobertura to aggregate.
     */
    where?: EventoCoberturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventoCoberturas to fetch.
     */
    orderBy?: EventoCoberturaOrderByWithRelationInput | EventoCoberturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventoCoberturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventoCoberturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventoCoberturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EventoCoberturas
    **/
    _count?: true | EventoCoberturaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventoCoberturaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventoCoberturaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventoCoberturaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventoCoberturaMaxAggregateInputType
  }

  export type GetEventoCoberturaAggregateType<T extends EventoCoberturaAggregateArgs> = {
        [P in keyof T & keyof AggregateEventoCobertura]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEventoCobertura[P]>
      : GetScalarType<T[P], AggregateEventoCobertura[P]>
  }




  export type EventoCoberturaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventoCoberturaWhereInput
    orderBy?: EventoCoberturaOrderByWithAggregationInput | EventoCoberturaOrderByWithAggregationInput[]
    by: EventoCoberturaScalarFieldEnum[] | EventoCoberturaScalarFieldEnum
    having?: EventoCoberturaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventoCoberturaCountAggregateInputType | true
    _avg?: EventoCoberturaAvgAggregateInputType
    _sum?: EventoCoberturaSumAggregateInputType
    _min?: EventoCoberturaMinAggregateInputType
    _max?: EventoCoberturaMaxAggregateInputType
  }

  export type EventoCoberturaGroupByOutputType = {
    id: number
    slotEscalaId: number
    eletricistaCobrindoId: number | null
    tipo: $Enums.EventoCoberturaTipo
    resultado: $Enums.EventoCoberturaResultado
    justificativa: string | null
    registradoEm: Date
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: EventoCoberturaCountAggregateOutputType | null
    _avg: EventoCoberturaAvgAggregateOutputType | null
    _sum: EventoCoberturaSumAggregateOutputType | null
    _min: EventoCoberturaMinAggregateOutputType | null
    _max: EventoCoberturaMaxAggregateOutputType | null
  }

  type GetEventoCoberturaGroupByPayload<T extends EventoCoberturaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventoCoberturaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventoCoberturaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventoCoberturaGroupByOutputType[P]>
            : GetScalarType<T[P], EventoCoberturaGroupByOutputType[P]>
        }
      >
    >


  export type EventoCoberturaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slotEscalaId?: boolean
    eletricistaCobrindoId?: boolean
    tipo?: boolean
    resultado?: boolean
    justificativa?: boolean
    registradoEm?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    slotEscala?: boolean | SlotEscalaDefaultArgs<ExtArgs>
    eletricistaCobrindo?: boolean | EventoCobertura$eletricistaCobrindoArgs<ExtArgs>
  }, ExtArgs["result"]["eventoCobertura"]>



  export type EventoCoberturaSelectScalar = {
    id?: boolean
    slotEscalaId?: boolean
    eletricistaCobrindoId?: boolean
    tipo?: boolean
    resultado?: boolean
    justificativa?: boolean
    registradoEm?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type EventoCoberturaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "slotEscalaId" | "eletricistaCobrindoId" | "tipo" | "resultado" | "justificativa" | "registradoEm" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["eventoCobertura"]>
  export type EventoCoberturaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    slotEscala?: boolean | SlotEscalaDefaultArgs<ExtArgs>
    eletricistaCobrindo?: boolean | EventoCobertura$eletricistaCobrindoArgs<ExtArgs>
  }

  export type $EventoCoberturaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EventoCobertura"
    objects: {
      slotEscala: Prisma.$SlotEscalaPayload<ExtArgs>
      eletricistaCobrindo: Prisma.$EletricistaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      slotEscalaId: number
      eletricistaCobrindoId: number | null
      tipo: $Enums.EventoCoberturaTipo
      resultado: $Enums.EventoCoberturaResultado
      justificativa: string | null
      registradoEm: Date
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["eventoCobertura"]>
    composites: {}
  }

  type EventoCoberturaGetPayload<S extends boolean | null | undefined | EventoCoberturaDefaultArgs> = $Result.GetResult<Prisma.$EventoCoberturaPayload, S>

  type EventoCoberturaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EventoCoberturaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventoCoberturaCountAggregateInputType | true
    }

  export interface EventoCoberturaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EventoCobertura'], meta: { name: 'EventoCobertura' } }
    /**
     * Find zero or one EventoCobertura that matches the filter.
     * @param {EventoCoberturaFindUniqueArgs} args - Arguments to find a EventoCobertura
     * @example
     * // Get one EventoCobertura
     * const eventoCobertura = await prisma.eventoCobertura.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventoCoberturaFindUniqueArgs>(args: SelectSubset<T, EventoCoberturaFindUniqueArgs<ExtArgs>>): Prisma__EventoCoberturaClient<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EventoCobertura that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EventoCoberturaFindUniqueOrThrowArgs} args - Arguments to find a EventoCobertura
     * @example
     * // Get one EventoCobertura
     * const eventoCobertura = await prisma.eventoCobertura.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventoCoberturaFindUniqueOrThrowArgs>(args: SelectSubset<T, EventoCoberturaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventoCoberturaClient<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventoCobertura that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventoCoberturaFindFirstArgs} args - Arguments to find a EventoCobertura
     * @example
     * // Get one EventoCobertura
     * const eventoCobertura = await prisma.eventoCobertura.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventoCoberturaFindFirstArgs>(args?: SelectSubset<T, EventoCoberturaFindFirstArgs<ExtArgs>>): Prisma__EventoCoberturaClient<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventoCobertura that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventoCoberturaFindFirstOrThrowArgs} args - Arguments to find a EventoCobertura
     * @example
     * // Get one EventoCobertura
     * const eventoCobertura = await prisma.eventoCobertura.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventoCoberturaFindFirstOrThrowArgs>(args?: SelectSubset<T, EventoCoberturaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventoCoberturaClient<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EventoCoberturas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventoCoberturaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EventoCoberturas
     * const eventoCoberturas = await prisma.eventoCobertura.findMany()
     * 
     * // Get first 10 EventoCoberturas
     * const eventoCoberturas = await prisma.eventoCobertura.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventoCoberturaWithIdOnly = await prisma.eventoCobertura.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventoCoberturaFindManyArgs>(args?: SelectSubset<T, EventoCoberturaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EventoCobertura.
     * @param {EventoCoberturaCreateArgs} args - Arguments to create a EventoCobertura.
     * @example
     * // Create one EventoCobertura
     * const EventoCobertura = await prisma.eventoCobertura.create({
     *   data: {
     *     // ... data to create a EventoCobertura
     *   }
     * })
     * 
     */
    create<T extends EventoCoberturaCreateArgs>(args: SelectSubset<T, EventoCoberturaCreateArgs<ExtArgs>>): Prisma__EventoCoberturaClient<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EventoCoberturas.
     * @param {EventoCoberturaCreateManyArgs} args - Arguments to create many EventoCoberturas.
     * @example
     * // Create many EventoCoberturas
     * const eventoCobertura = await prisma.eventoCobertura.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventoCoberturaCreateManyArgs>(args?: SelectSubset<T, EventoCoberturaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EventoCobertura.
     * @param {EventoCoberturaDeleteArgs} args - Arguments to delete one EventoCobertura.
     * @example
     * // Delete one EventoCobertura
     * const EventoCobertura = await prisma.eventoCobertura.delete({
     *   where: {
     *     // ... filter to delete one EventoCobertura
     *   }
     * })
     * 
     */
    delete<T extends EventoCoberturaDeleteArgs>(args: SelectSubset<T, EventoCoberturaDeleteArgs<ExtArgs>>): Prisma__EventoCoberturaClient<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EventoCobertura.
     * @param {EventoCoberturaUpdateArgs} args - Arguments to update one EventoCobertura.
     * @example
     * // Update one EventoCobertura
     * const eventoCobertura = await prisma.eventoCobertura.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventoCoberturaUpdateArgs>(args: SelectSubset<T, EventoCoberturaUpdateArgs<ExtArgs>>): Prisma__EventoCoberturaClient<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EventoCoberturas.
     * @param {EventoCoberturaDeleteManyArgs} args - Arguments to filter EventoCoberturas to delete.
     * @example
     * // Delete a few EventoCoberturas
     * const { count } = await prisma.eventoCobertura.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventoCoberturaDeleteManyArgs>(args?: SelectSubset<T, EventoCoberturaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventoCoberturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventoCoberturaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EventoCoberturas
     * const eventoCobertura = await prisma.eventoCobertura.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventoCoberturaUpdateManyArgs>(args: SelectSubset<T, EventoCoberturaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EventoCobertura.
     * @param {EventoCoberturaUpsertArgs} args - Arguments to update or create a EventoCobertura.
     * @example
     * // Update or create a EventoCobertura
     * const eventoCobertura = await prisma.eventoCobertura.upsert({
     *   create: {
     *     // ... data to create a EventoCobertura
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EventoCobertura we want to update
     *   }
     * })
     */
    upsert<T extends EventoCoberturaUpsertArgs>(args: SelectSubset<T, EventoCoberturaUpsertArgs<ExtArgs>>): Prisma__EventoCoberturaClient<$Result.GetResult<Prisma.$EventoCoberturaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EventoCoberturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventoCoberturaCountArgs} args - Arguments to filter EventoCoberturas to count.
     * @example
     * // Count the number of EventoCoberturas
     * const count = await prisma.eventoCobertura.count({
     *   where: {
     *     // ... the filter for the EventoCoberturas we want to count
     *   }
     * })
    **/
    count<T extends EventoCoberturaCountArgs>(
      args?: Subset<T, EventoCoberturaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventoCoberturaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EventoCobertura.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventoCoberturaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventoCoberturaAggregateArgs>(args: Subset<T, EventoCoberturaAggregateArgs>): Prisma.PrismaPromise<GetEventoCoberturaAggregateType<T>>

    /**
     * Group by EventoCobertura.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventoCoberturaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventoCoberturaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventoCoberturaGroupByArgs['orderBy'] }
        : { orderBy?: EventoCoberturaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventoCoberturaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventoCoberturaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EventoCobertura model
   */
  readonly fields: EventoCoberturaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EventoCobertura.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventoCoberturaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    slotEscala<T extends SlotEscalaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SlotEscalaDefaultArgs<ExtArgs>>): Prisma__SlotEscalaClient<$Result.GetResult<Prisma.$SlotEscalaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    eletricistaCobrindo<T extends EventoCobertura$eletricistaCobrindoArgs<ExtArgs> = {}>(args?: Subset<T, EventoCobertura$eletricistaCobrindoArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EventoCobertura model
   */
  interface EventoCoberturaFieldRefs {
    readonly id: FieldRef<"EventoCobertura", 'Int'>
    readonly slotEscalaId: FieldRef<"EventoCobertura", 'Int'>
    readonly eletricistaCobrindoId: FieldRef<"EventoCobertura", 'Int'>
    readonly tipo: FieldRef<"EventoCobertura", 'EventoCoberturaTipo'>
    readonly resultado: FieldRef<"EventoCobertura", 'EventoCoberturaResultado'>
    readonly justificativa: FieldRef<"EventoCobertura", 'String'>
    readonly registradoEm: FieldRef<"EventoCobertura", 'DateTime'>
    readonly createdAt: FieldRef<"EventoCobertura", 'DateTime'>
    readonly createdBy: FieldRef<"EventoCobertura", 'String'>
    readonly updatedAt: FieldRef<"EventoCobertura", 'DateTime'>
    readonly updatedBy: FieldRef<"EventoCobertura", 'String'>
    readonly deletedAt: FieldRef<"EventoCobertura", 'DateTime'>
    readonly deletedBy: FieldRef<"EventoCobertura", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EventoCobertura findUnique
   */
  export type EventoCoberturaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    /**
     * Filter, which EventoCobertura to fetch.
     */
    where: EventoCoberturaWhereUniqueInput
  }

  /**
   * EventoCobertura findUniqueOrThrow
   */
  export type EventoCoberturaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    /**
     * Filter, which EventoCobertura to fetch.
     */
    where: EventoCoberturaWhereUniqueInput
  }

  /**
   * EventoCobertura findFirst
   */
  export type EventoCoberturaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    /**
     * Filter, which EventoCobertura to fetch.
     */
    where?: EventoCoberturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventoCoberturas to fetch.
     */
    orderBy?: EventoCoberturaOrderByWithRelationInput | EventoCoberturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventoCoberturas.
     */
    cursor?: EventoCoberturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventoCoberturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventoCoberturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventoCoberturas.
     */
    distinct?: EventoCoberturaScalarFieldEnum | EventoCoberturaScalarFieldEnum[]
  }

  /**
   * EventoCobertura findFirstOrThrow
   */
  export type EventoCoberturaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    /**
     * Filter, which EventoCobertura to fetch.
     */
    where?: EventoCoberturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventoCoberturas to fetch.
     */
    orderBy?: EventoCoberturaOrderByWithRelationInput | EventoCoberturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventoCoberturas.
     */
    cursor?: EventoCoberturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventoCoberturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventoCoberturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventoCoberturas.
     */
    distinct?: EventoCoberturaScalarFieldEnum | EventoCoberturaScalarFieldEnum[]
  }

  /**
   * EventoCobertura findMany
   */
  export type EventoCoberturaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    /**
     * Filter, which EventoCoberturas to fetch.
     */
    where?: EventoCoberturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventoCoberturas to fetch.
     */
    orderBy?: EventoCoberturaOrderByWithRelationInput | EventoCoberturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EventoCoberturas.
     */
    cursor?: EventoCoberturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventoCoberturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventoCoberturas.
     */
    skip?: number
    distinct?: EventoCoberturaScalarFieldEnum | EventoCoberturaScalarFieldEnum[]
  }

  /**
   * EventoCobertura create
   */
  export type EventoCoberturaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    /**
     * The data needed to create a EventoCobertura.
     */
    data: XOR<EventoCoberturaCreateInput, EventoCoberturaUncheckedCreateInput>
  }

  /**
   * EventoCobertura createMany
   */
  export type EventoCoberturaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EventoCoberturas.
     */
    data: EventoCoberturaCreateManyInput | EventoCoberturaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EventoCobertura update
   */
  export type EventoCoberturaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    /**
     * The data needed to update a EventoCobertura.
     */
    data: XOR<EventoCoberturaUpdateInput, EventoCoberturaUncheckedUpdateInput>
    /**
     * Choose, which EventoCobertura to update.
     */
    where: EventoCoberturaWhereUniqueInput
  }

  /**
   * EventoCobertura updateMany
   */
  export type EventoCoberturaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EventoCoberturas.
     */
    data: XOR<EventoCoberturaUpdateManyMutationInput, EventoCoberturaUncheckedUpdateManyInput>
    /**
     * Filter which EventoCoberturas to update
     */
    where?: EventoCoberturaWhereInput
    /**
     * Limit how many EventoCoberturas to update.
     */
    limit?: number
  }

  /**
   * EventoCobertura upsert
   */
  export type EventoCoberturaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    /**
     * The filter to search for the EventoCobertura to update in case it exists.
     */
    where: EventoCoberturaWhereUniqueInput
    /**
     * In case the EventoCobertura found by the `where` argument doesn't exist, create a new EventoCobertura with this data.
     */
    create: XOR<EventoCoberturaCreateInput, EventoCoberturaUncheckedCreateInput>
    /**
     * In case the EventoCobertura was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventoCoberturaUpdateInput, EventoCoberturaUncheckedUpdateInput>
  }

  /**
   * EventoCobertura delete
   */
  export type EventoCoberturaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
    /**
     * Filter which EventoCobertura to delete.
     */
    where: EventoCoberturaWhereUniqueInput
  }

  /**
   * EventoCobertura deleteMany
   */
  export type EventoCoberturaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventoCoberturas to delete
     */
    where?: EventoCoberturaWhereInput
    /**
     * Limit how many EventoCoberturas to delete.
     */
    limit?: number
  }

  /**
   * EventoCobertura.eletricistaCobrindo
   */
  export type EventoCobertura$eletricistaCobrindoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eletricista
     */
    select?: EletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Eletricista
     */
    omit?: EletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EletricistaInclude<ExtArgs> | null
    where?: EletricistaWhereInput
  }

  /**
   * EventoCobertura without action
   */
  export type EventoCoberturaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventoCobertura
     */
    select?: EventoCoberturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventoCobertura
     */
    omit?: EventoCoberturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventoCoberturaInclude<ExtArgs> | null
  }


  /**
   * Model EquipeHorarioVigencia
   */

  export type AggregateEquipeHorarioVigencia = {
    _count: EquipeHorarioVigenciaCountAggregateOutputType | null
    _avg: EquipeHorarioVigenciaAvgAggregateOutputType | null
    _sum: EquipeHorarioVigenciaSumAggregateOutputType | null
    _min: EquipeHorarioVigenciaMinAggregateOutputType | null
    _max: EquipeHorarioVigenciaMaxAggregateOutputType | null
  }

  export type EquipeHorarioVigenciaAvgAggregateOutputType = {
    id: number | null
    equipeId: number | null
    duracaoHoras: Decimal | null
  }

  export type EquipeHorarioVigenciaSumAggregateOutputType = {
    id: number | null
    equipeId: number | null
    duracaoHoras: Decimal | null
  }

  export type EquipeHorarioVigenciaMinAggregateOutputType = {
    id: number | null
    equipeId: number | null
    inicioTurnoHora: string | null
    duracaoHoras: Decimal | null
    vigenciaInicio: Date | null
    vigenciaFim: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EquipeHorarioVigenciaMaxAggregateOutputType = {
    id: number | null
    equipeId: number | null
    inicioTurnoHora: string | null
    duracaoHoras: Decimal | null
    vigenciaInicio: Date | null
    vigenciaFim: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EquipeHorarioVigenciaCountAggregateOutputType = {
    id: number
    equipeId: number
    inicioTurnoHora: number
    duracaoHoras: number
    vigenciaInicio: number
    vigenciaFim: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type EquipeHorarioVigenciaAvgAggregateInputType = {
    id?: true
    equipeId?: true
    duracaoHoras?: true
  }

  export type EquipeHorarioVigenciaSumAggregateInputType = {
    id?: true
    equipeId?: true
    duracaoHoras?: true
  }

  export type EquipeHorarioVigenciaMinAggregateInputType = {
    id?: true
    equipeId?: true
    inicioTurnoHora?: true
    duracaoHoras?: true
    vigenciaInicio?: true
    vigenciaFim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EquipeHorarioVigenciaMaxAggregateInputType = {
    id?: true
    equipeId?: true
    inicioTurnoHora?: true
    duracaoHoras?: true
    vigenciaInicio?: true
    vigenciaFim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EquipeHorarioVigenciaCountAggregateInputType = {
    id?: true
    equipeId?: true
    inicioTurnoHora?: true
    duracaoHoras?: true
    vigenciaInicio?: true
    vigenciaFim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type EquipeHorarioVigenciaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipeHorarioVigencia to aggregate.
     */
    where?: EquipeHorarioVigenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeHorarioVigencias to fetch.
     */
    orderBy?: EquipeHorarioVigenciaOrderByWithRelationInput | EquipeHorarioVigenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipeHorarioVigenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeHorarioVigencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeHorarioVigencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EquipeHorarioVigencias
    **/
    _count?: true | EquipeHorarioVigenciaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipeHorarioVigenciaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipeHorarioVigenciaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipeHorarioVigenciaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipeHorarioVigenciaMaxAggregateInputType
  }

  export type GetEquipeHorarioVigenciaAggregateType<T extends EquipeHorarioVigenciaAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipeHorarioVigencia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipeHorarioVigencia[P]>
      : GetScalarType<T[P], AggregateEquipeHorarioVigencia[P]>
  }




  export type EquipeHorarioVigenciaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeHorarioVigenciaWhereInput
    orderBy?: EquipeHorarioVigenciaOrderByWithAggregationInput | EquipeHorarioVigenciaOrderByWithAggregationInput[]
    by: EquipeHorarioVigenciaScalarFieldEnum[] | EquipeHorarioVigenciaScalarFieldEnum
    having?: EquipeHorarioVigenciaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipeHorarioVigenciaCountAggregateInputType | true
    _avg?: EquipeHorarioVigenciaAvgAggregateInputType
    _sum?: EquipeHorarioVigenciaSumAggregateInputType
    _min?: EquipeHorarioVigenciaMinAggregateInputType
    _max?: EquipeHorarioVigenciaMaxAggregateInputType
  }

  export type EquipeHorarioVigenciaGroupByOutputType = {
    id: number
    equipeId: number
    inicioTurnoHora: string
    duracaoHoras: Decimal
    vigenciaInicio: Date
    vigenciaFim: Date | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: EquipeHorarioVigenciaCountAggregateOutputType | null
    _avg: EquipeHorarioVigenciaAvgAggregateOutputType | null
    _sum: EquipeHorarioVigenciaSumAggregateOutputType | null
    _min: EquipeHorarioVigenciaMinAggregateOutputType | null
    _max: EquipeHorarioVigenciaMaxAggregateOutputType | null
  }

  type GetEquipeHorarioVigenciaGroupByPayload<T extends EquipeHorarioVigenciaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipeHorarioVigenciaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipeHorarioVigenciaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipeHorarioVigenciaGroupByOutputType[P]>
            : GetScalarType<T[P], EquipeHorarioVigenciaGroupByOutputType[P]>
        }
      >
    >


  export type EquipeHorarioVigenciaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    equipeId?: boolean
    inicioTurnoHora?: boolean
    duracaoHoras?: boolean
    vigenciaInicio?: boolean
    vigenciaFim?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipeHorarioVigencia"]>



  export type EquipeHorarioVigenciaSelectScalar = {
    id?: boolean
    equipeId?: boolean
    inicioTurnoHora?: boolean
    duracaoHoras?: boolean
    vigenciaInicio?: boolean
    vigenciaFim?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type EquipeHorarioVigenciaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "equipeId" | "inicioTurnoHora" | "duracaoHoras" | "vigenciaInicio" | "vigenciaFim" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["equipeHorarioVigencia"]>
  export type EquipeHorarioVigenciaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
  }

  export type $EquipeHorarioVigenciaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EquipeHorarioVigencia"
    objects: {
      equipe: Prisma.$EquipePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      equipeId: number
      inicioTurnoHora: string
      duracaoHoras: Prisma.Decimal
      vigenciaInicio: Date
      vigenciaFim: Date | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["equipeHorarioVigencia"]>
    composites: {}
  }

  type EquipeHorarioVigenciaGetPayload<S extends boolean | null | undefined | EquipeHorarioVigenciaDefaultArgs> = $Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload, S>

  type EquipeHorarioVigenciaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EquipeHorarioVigenciaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EquipeHorarioVigenciaCountAggregateInputType | true
    }

  export interface EquipeHorarioVigenciaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EquipeHorarioVigencia'], meta: { name: 'EquipeHorarioVigencia' } }
    /**
     * Find zero or one EquipeHorarioVigencia that matches the filter.
     * @param {EquipeHorarioVigenciaFindUniqueArgs} args - Arguments to find a EquipeHorarioVigencia
     * @example
     * // Get one EquipeHorarioVigencia
     * const equipeHorarioVigencia = await prisma.equipeHorarioVigencia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipeHorarioVigenciaFindUniqueArgs>(args: SelectSubset<T, EquipeHorarioVigenciaFindUniqueArgs<ExtArgs>>): Prisma__EquipeHorarioVigenciaClient<$Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EquipeHorarioVigencia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EquipeHorarioVigenciaFindUniqueOrThrowArgs} args - Arguments to find a EquipeHorarioVigencia
     * @example
     * // Get one EquipeHorarioVigencia
     * const equipeHorarioVigencia = await prisma.equipeHorarioVigencia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipeHorarioVigenciaFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipeHorarioVigenciaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipeHorarioVigenciaClient<$Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipeHorarioVigencia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeHorarioVigenciaFindFirstArgs} args - Arguments to find a EquipeHorarioVigencia
     * @example
     * // Get one EquipeHorarioVigencia
     * const equipeHorarioVigencia = await prisma.equipeHorarioVigencia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipeHorarioVigenciaFindFirstArgs>(args?: SelectSubset<T, EquipeHorarioVigenciaFindFirstArgs<ExtArgs>>): Prisma__EquipeHorarioVigenciaClient<$Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipeHorarioVigencia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeHorarioVigenciaFindFirstOrThrowArgs} args - Arguments to find a EquipeHorarioVigencia
     * @example
     * // Get one EquipeHorarioVigencia
     * const equipeHorarioVigencia = await prisma.equipeHorarioVigencia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipeHorarioVigenciaFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipeHorarioVigenciaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipeHorarioVigenciaClient<$Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EquipeHorarioVigencias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeHorarioVigenciaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EquipeHorarioVigencias
     * const equipeHorarioVigencias = await prisma.equipeHorarioVigencia.findMany()
     * 
     * // Get first 10 EquipeHorarioVigencias
     * const equipeHorarioVigencias = await prisma.equipeHorarioVigencia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipeHorarioVigenciaWithIdOnly = await prisma.equipeHorarioVigencia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipeHorarioVigenciaFindManyArgs>(args?: SelectSubset<T, EquipeHorarioVigenciaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EquipeHorarioVigencia.
     * @param {EquipeHorarioVigenciaCreateArgs} args - Arguments to create a EquipeHorarioVigencia.
     * @example
     * // Create one EquipeHorarioVigencia
     * const EquipeHorarioVigencia = await prisma.equipeHorarioVigencia.create({
     *   data: {
     *     // ... data to create a EquipeHorarioVigencia
     *   }
     * })
     * 
     */
    create<T extends EquipeHorarioVigenciaCreateArgs>(args: SelectSubset<T, EquipeHorarioVigenciaCreateArgs<ExtArgs>>): Prisma__EquipeHorarioVigenciaClient<$Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EquipeHorarioVigencias.
     * @param {EquipeHorarioVigenciaCreateManyArgs} args - Arguments to create many EquipeHorarioVigencias.
     * @example
     * // Create many EquipeHorarioVigencias
     * const equipeHorarioVigencia = await prisma.equipeHorarioVigencia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipeHorarioVigenciaCreateManyArgs>(args?: SelectSubset<T, EquipeHorarioVigenciaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EquipeHorarioVigencia.
     * @param {EquipeHorarioVigenciaDeleteArgs} args - Arguments to delete one EquipeHorarioVigencia.
     * @example
     * // Delete one EquipeHorarioVigencia
     * const EquipeHorarioVigencia = await prisma.equipeHorarioVigencia.delete({
     *   where: {
     *     // ... filter to delete one EquipeHorarioVigencia
     *   }
     * })
     * 
     */
    delete<T extends EquipeHorarioVigenciaDeleteArgs>(args: SelectSubset<T, EquipeHorarioVigenciaDeleteArgs<ExtArgs>>): Prisma__EquipeHorarioVigenciaClient<$Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EquipeHorarioVigencia.
     * @param {EquipeHorarioVigenciaUpdateArgs} args - Arguments to update one EquipeHorarioVigencia.
     * @example
     * // Update one EquipeHorarioVigencia
     * const equipeHorarioVigencia = await prisma.equipeHorarioVigencia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipeHorarioVigenciaUpdateArgs>(args: SelectSubset<T, EquipeHorarioVigenciaUpdateArgs<ExtArgs>>): Prisma__EquipeHorarioVigenciaClient<$Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EquipeHorarioVigencias.
     * @param {EquipeHorarioVigenciaDeleteManyArgs} args - Arguments to filter EquipeHorarioVigencias to delete.
     * @example
     * // Delete a few EquipeHorarioVigencias
     * const { count } = await prisma.equipeHorarioVigencia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipeHorarioVigenciaDeleteManyArgs>(args?: SelectSubset<T, EquipeHorarioVigenciaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipeHorarioVigencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeHorarioVigenciaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EquipeHorarioVigencias
     * const equipeHorarioVigencia = await prisma.equipeHorarioVigencia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipeHorarioVigenciaUpdateManyArgs>(args: SelectSubset<T, EquipeHorarioVigenciaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EquipeHorarioVigencia.
     * @param {EquipeHorarioVigenciaUpsertArgs} args - Arguments to update or create a EquipeHorarioVigencia.
     * @example
     * // Update or create a EquipeHorarioVigencia
     * const equipeHorarioVigencia = await prisma.equipeHorarioVigencia.upsert({
     *   create: {
     *     // ... data to create a EquipeHorarioVigencia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EquipeHorarioVigencia we want to update
     *   }
     * })
     */
    upsert<T extends EquipeHorarioVigenciaUpsertArgs>(args: SelectSubset<T, EquipeHorarioVigenciaUpsertArgs<ExtArgs>>): Prisma__EquipeHorarioVigenciaClient<$Result.GetResult<Prisma.$EquipeHorarioVigenciaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EquipeHorarioVigencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeHorarioVigenciaCountArgs} args - Arguments to filter EquipeHorarioVigencias to count.
     * @example
     * // Count the number of EquipeHorarioVigencias
     * const count = await prisma.equipeHorarioVigencia.count({
     *   where: {
     *     // ... the filter for the EquipeHorarioVigencias we want to count
     *   }
     * })
    **/
    count<T extends EquipeHorarioVigenciaCountArgs>(
      args?: Subset<T, EquipeHorarioVigenciaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipeHorarioVigenciaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EquipeHorarioVigencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeHorarioVigenciaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipeHorarioVigenciaAggregateArgs>(args: Subset<T, EquipeHorarioVigenciaAggregateArgs>): Prisma.PrismaPromise<GetEquipeHorarioVigenciaAggregateType<T>>

    /**
     * Group by EquipeHorarioVigencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeHorarioVigenciaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipeHorarioVigenciaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipeHorarioVigenciaGroupByArgs['orderBy'] }
        : { orderBy?: EquipeHorarioVigenciaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipeHorarioVigenciaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipeHorarioVigenciaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EquipeHorarioVigencia model
   */
  readonly fields: EquipeHorarioVigenciaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EquipeHorarioVigencia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipeHorarioVigenciaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    equipe<T extends EquipeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipeDefaultArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EquipeHorarioVigencia model
   */
  interface EquipeHorarioVigenciaFieldRefs {
    readonly id: FieldRef<"EquipeHorarioVigencia", 'Int'>
    readonly equipeId: FieldRef<"EquipeHorarioVigencia", 'Int'>
    readonly inicioTurnoHora: FieldRef<"EquipeHorarioVigencia", 'String'>
    readonly duracaoHoras: FieldRef<"EquipeHorarioVigencia", 'Decimal'>
    readonly vigenciaInicio: FieldRef<"EquipeHorarioVigencia", 'DateTime'>
    readonly vigenciaFim: FieldRef<"EquipeHorarioVigencia", 'DateTime'>
    readonly createdAt: FieldRef<"EquipeHorarioVigencia", 'DateTime'>
    readonly createdBy: FieldRef<"EquipeHorarioVigencia", 'String'>
    readonly updatedAt: FieldRef<"EquipeHorarioVigencia", 'DateTime'>
    readonly updatedBy: FieldRef<"EquipeHorarioVigencia", 'String'>
    readonly deletedAt: FieldRef<"EquipeHorarioVigencia", 'DateTime'>
    readonly deletedBy: FieldRef<"EquipeHorarioVigencia", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EquipeHorarioVigencia findUnique
   */
  export type EquipeHorarioVigenciaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
    /**
     * Filter, which EquipeHorarioVigencia to fetch.
     */
    where: EquipeHorarioVigenciaWhereUniqueInput
  }

  /**
   * EquipeHorarioVigencia findUniqueOrThrow
   */
  export type EquipeHorarioVigenciaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
    /**
     * Filter, which EquipeHorarioVigencia to fetch.
     */
    where: EquipeHorarioVigenciaWhereUniqueInput
  }

  /**
   * EquipeHorarioVigencia findFirst
   */
  export type EquipeHorarioVigenciaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
    /**
     * Filter, which EquipeHorarioVigencia to fetch.
     */
    where?: EquipeHorarioVigenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeHorarioVigencias to fetch.
     */
    orderBy?: EquipeHorarioVigenciaOrderByWithRelationInput | EquipeHorarioVigenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipeHorarioVigencias.
     */
    cursor?: EquipeHorarioVigenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeHorarioVigencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeHorarioVigencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipeHorarioVigencias.
     */
    distinct?: EquipeHorarioVigenciaScalarFieldEnum | EquipeHorarioVigenciaScalarFieldEnum[]
  }

  /**
   * EquipeHorarioVigencia findFirstOrThrow
   */
  export type EquipeHorarioVigenciaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
    /**
     * Filter, which EquipeHorarioVigencia to fetch.
     */
    where?: EquipeHorarioVigenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeHorarioVigencias to fetch.
     */
    orderBy?: EquipeHorarioVigenciaOrderByWithRelationInput | EquipeHorarioVigenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipeHorarioVigencias.
     */
    cursor?: EquipeHorarioVigenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeHorarioVigencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeHorarioVigencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipeHorarioVigencias.
     */
    distinct?: EquipeHorarioVigenciaScalarFieldEnum | EquipeHorarioVigenciaScalarFieldEnum[]
  }

  /**
   * EquipeHorarioVigencia findMany
   */
  export type EquipeHorarioVigenciaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
    /**
     * Filter, which EquipeHorarioVigencias to fetch.
     */
    where?: EquipeHorarioVigenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeHorarioVigencias to fetch.
     */
    orderBy?: EquipeHorarioVigenciaOrderByWithRelationInput | EquipeHorarioVigenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EquipeHorarioVigencias.
     */
    cursor?: EquipeHorarioVigenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeHorarioVigencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeHorarioVigencias.
     */
    skip?: number
    distinct?: EquipeHorarioVigenciaScalarFieldEnum | EquipeHorarioVigenciaScalarFieldEnum[]
  }

  /**
   * EquipeHorarioVigencia create
   */
  export type EquipeHorarioVigenciaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
    /**
     * The data needed to create a EquipeHorarioVigencia.
     */
    data: XOR<EquipeHorarioVigenciaCreateInput, EquipeHorarioVigenciaUncheckedCreateInput>
  }

  /**
   * EquipeHorarioVigencia createMany
   */
  export type EquipeHorarioVigenciaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EquipeHorarioVigencias.
     */
    data: EquipeHorarioVigenciaCreateManyInput | EquipeHorarioVigenciaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipeHorarioVigencia update
   */
  export type EquipeHorarioVigenciaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
    /**
     * The data needed to update a EquipeHorarioVigencia.
     */
    data: XOR<EquipeHorarioVigenciaUpdateInput, EquipeHorarioVigenciaUncheckedUpdateInput>
    /**
     * Choose, which EquipeHorarioVigencia to update.
     */
    where: EquipeHorarioVigenciaWhereUniqueInput
  }

  /**
   * EquipeHorarioVigencia updateMany
   */
  export type EquipeHorarioVigenciaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EquipeHorarioVigencias.
     */
    data: XOR<EquipeHorarioVigenciaUpdateManyMutationInput, EquipeHorarioVigenciaUncheckedUpdateManyInput>
    /**
     * Filter which EquipeHorarioVigencias to update
     */
    where?: EquipeHorarioVigenciaWhereInput
    /**
     * Limit how many EquipeHorarioVigencias to update.
     */
    limit?: number
  }

  /**
   * EquipeHorarioVigencia upsert
   */
  export type EquipeHorarioVigenciaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
    /**
     * The filter to search for the EquipeHorarioVigencia to update in case it exists.
     */
    where: EquipeHorarioVigenciaWhereUniqueInput
    /**
     * In case the EquipeHorarioVigencia found by the `where` argument doesn't exist, create a new EquipeHorarioVigencia with this data.
     */
    create: XOR<EquipeHorarioVigenciaCreateInput, EquipeHorarioVigenciaUncheckedCreateInput>
    /**
     * In case the EquipeHorarioVigencia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipeHorarioVigenciaUpdateInput, EquipeHorarioVigenciaUncheckedUpdateInput>
  }

  /**
   * EquipeHorarioVigencia delete
   */
  export type EquipeHorarioVigenciaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
    /**
     * Filter which EquipeHorarioVigencia to delete.
     */
    where: EquipeHorarioVigenciaWhereUniqueInput
  }

  /**
   * EquipeHorarioVigencia deleteMany
   */
  export type EquipeHorarioVigenciaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipeHorarioVigencias to delete
     */
    where?: EquipeHorarioVigenciaWhereInput
    /**
     * Limit how many EquipeHorarioVigencias to delete.
     */
    limit?: number
  }

  /**
   * EquipeHorarioVigencia without action
   */
  export type EquipeHorarioVigenciaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeHorarioVigencia
     */
    select?: EquipeHorarioVigenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeHorarioVigencia
     */
    omit?: EquipeHorarioVigenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeHorarioVigenciaInclude<ExtArgs> | null
  }


  /**
   * Model HorarioAberturaCatalogo
   */

  export type AggregateHorarioAberturaCatalogo = {
    _count: HorarioAberturaCatalogoCountAggregateOutputType | null
    _avg: HorarioAberturaCatalogoAvgAggregateOutputType | null
    _sum: HorarioAberturaCatalogoSumAggregateOutputType | null
    _min: HorarioAberturaCatalogoMinAggregateOutputType | null
    _max: HorarioAberturaCatalogoMaxAggregateOutputType | null
  }

  export type HorarioAberturaCatalogoAvgAggregateOutputType = {
    id: number | null
    duracaoHoras: Decimal | null
    duracaoIntervaloHoras: Decimal | null
  }

  export type HorarioAberturaCatalogoSumAggregateOutputType = {
    id: number | null
    duracaoHoras: Decimal | null
    duracaoIntervaloHoras: Decimal | null
  }

  export type HorarioAberturaCatalogoMinAggregateOutputType = {
    id: number | null
    nome: string | null
    inicioTurnoHora: string | null
    duracaoHoras: Decimal | null
    duracaoIntervaloHoras: Decimal | null
    ativo: boolean | null
    observacoes: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type HorarioAberturaCatalogoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    inicioTurnoHora: string | null
    duracaoHoras: Decimal | null
    duracaoIntervaloHoras: Decimal | null
    ativo: boolean | null
    observacoes: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type HorarioAberturaCatalogoCountAggregateOutputType = {
    id: number
    nome: number
    inicioTurnoHora: number
    duracaoHoras: number
    duracaoIntervaloHoras: number
    ativo: number
    observacoes: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type HorarioAberturaCatalogoAvgAggregateInputType = {
    id?: true
    duracaoHoras?: true
    duracaoIntervaloHoras?: true
  }

  export type HorarioAberturaCatalogoSumAggregateInputType = {
    id?: true
    duracaoHoras?: true
    duracaoIntervaloHoras?: true
  }

  export type HorarioAberturaCatalogoMinAggregateInputType = {
    id?: true
    nome?: true
    inicioTurnoHora?: true
    duracaoHoras?: true
    duracaoIntervaloHoras?: true
    ativo?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type HorarioAberturaCatalogoMaxAggregateInputType = {
    id?: true
    nome?: true
    inicioTurnoHora?: true
    duracaoHoras?: true
    duracaoIntervaloHoras?: true
    ativo?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type HorarioAberturaCatalogoCountAggregateInputType = {
    id?: true
    nome?: true
    inicioTurnoHora?: true
    duracaoHoras?: true
    duracaoIntervaloHoras?: true
    ativo?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type HorarioAberturaCatalogoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HorarioAberturaCatalogo to aggregate.
     */
    where?: HorarioAberturaCatalogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HorarioAberturaCatalogos to fetch.
     */
    orderBy?: HorarioAberturaCatalogoOrderByWithRelationInput | HorarioAberturaCatalogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HorarioAberturaCatalogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HorarioAberturaCatalogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HorarioAberturaCatalogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HorarioAberturaCatalogos
    **/
    _count?: true | HorarioAberturaCatalogoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HorarioAberturaCatalogoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HorarioAberturaCatalogoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HorarioAberturaCatalogoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HorarioAberturaCatalogoMaxAggregateInputType
  }

  export type GetHorarioAberturaCatalogoAggregateType<T extends HorarioAberturaCatalogoAggregateArgs> = {
        [P in keyof T & keyof AggregateHorarioAberturaCatalogo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHorarioAberturaCatalogo[P]>
      : GetScalarType<T[P], AggregateHorarioAberturaCatalogo[P]>
  }




  export type HorarioAberturaCatalogoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorarioAberturaCatalogoWhereInput
    orderBy?: HorarioAberturaCatalogoOrderByWithAggregationInput | HorarioAberturaCatalogoOrderByWithAggregationInput[]
    by: HorarioAberturaCatalogoScalarFieldEnum[] | HorarioAberturaCatalogoScalarFieldEnum
    having?: HorarioAberturaCatalogoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HorarioAberturaCatalogoCountAggregateInputType | true
    _avg?: HorarioAberturaCatalogoAvgAggregateInputType
    _sum?: HorarioAberturaCatalogoSumAggregateInputType
    _min?: HorarioAberturaCatalogoMinAggregateInputType
    _max?: HorarioAberturaCatalogoMaxAggregateInputType
  }

  export type HorarioAberturaCatalogoGroupByOutputType = {
    id: number
    nome: string
    inicioTurnoHora: string
    duracaoHoras: Decimal
    duracaoIntervaloHoras: Decimal
    ativo: boolean
    observacoes: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: HorarioAberturaCatalogoCountAggregateOutputType | null
    _avg: HorarioAberturaCatalogoAvgAggregateOutputType | null
    _sum: HorarioAberturaCatalogoSumAggregateOutputType | null
    _min: HorarioAberturaCatalogoMinAggregateOutputType | null
    _max: HorarioAberturaCatalogoMaxAggregateOutputType | null
  }

  type GetHorarioAberturaCatalogoGroupByPayload<T extends HorarioAberturaCatalogoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HorarioAberturaCatalogoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HorarioAberturaCatalogoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HorarioAberturaCatalogoGroupByOutputType[P]>
            : GetScalarType<T[P], HorarioAberturaCatalogoGroupByOutputType[P]>
        }
      >
    >


  export type HorarioAberturaCatalogoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    inicioTurnoHora?: boolean
    duracaoHoras?: boolean
    duracaoIntervaloHoras?: boolean
    ativo?: boolean
    observacoes?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    Historicos?: boolean | HorarioAberturaCatalogo$HistoricosArgs<ExtArgs>
    _count?: boolean | HorarioAberturaCatalogoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["horarioAberturaCatalogo"]>



  export type HorarioAberturaCatalogoSelectScalar = {
    id?: boolean
    nome?: boolean
    inicioTurnoHora?: boolean
    duracaoHoras?: boolean
    duracaoIntervaloHoras?: boolean
    ativo?: boolean
    observacoes?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type HorarioAberturaCatalogoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "inicioTurnoHora" | "duracaoHoras" | "duracaoIntervaloHoras" | "ativo" | "observacoes" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["horarioAberturaCatalogo"]>
  export type HorarioAberturaCatalogoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Historicos?: boolean | HorarioAberturaCatalogo$HistoricosArgs<ExtArgs>
    _count?: boolean | HorarioAberturaCatalogoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $HorarioAberturaCatalogoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HorarioAberturaCatalogo"
    objects: {
      Historicos: Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      inicioTurnoHora: string
      duracaoHoras: Prisma.Decimal
      duracaoIntervaloHoras: Prisma.Decimal
      ativo: boolean
      observacoes: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["horarioAberturaCatalogo"]>
    composites: {}
  }

  type HorarioAberturaCatalogoGetPayload<S extends boolean | null | undefined | HorarioAberturaCatalogoDefaultArgs> = $Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload, S>

  type HorarioAberturaCatalogoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HorarioAberturaCatalogoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HorarioAberturaCatalogoCountAggregateInputType | true
    }

  export interface HorarioAberturaCatalogoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HorarioAberturaCatalogo'], meta: { name: 'HorarioAberturaCatalogo' } }
    /**
     * Find zero or one HorarioAberturaCatalogo that matches the filter.
     * @param {HorarioAberturaCatalogoFindUniqueArgs} args - Arguments to find a HorarioAberturaCatalogo
     * @example
     * // Get one HorarioAberturaCatalogo
     * const horarioAberturaCatalogo = await prisma.horarioAberturaCatalogo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HorarioAberturaCatalogoFindUniqueArgs>(args: SelectSubset<T, HorarioAberturaCatalogoFindUniqueArgs<ExtArgs>>): Prisma__HorarioAberturaCatalogoClient<$Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HorarioAberturaCatalogo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HorarioAberturaCatalogoFindUniqueOrThrowArgs} args - Arguments to find a HorarioAberturaCatalogo
     * @example
     * // Get one HorarioAberturaCatalogo
     * const horarioAberturaCatalogo = await prisma.horarioAberturaCatalogo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HorarioAberturaCatalogoFindUniqueOrThrowArgs>(args: SelectSubset<T, HorarioAberturaCatalogoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HorarioAberturaCatalogoClient<$Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HorarioAberturaCatalogo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioAberturaCatalogoFindFirstArgs} args - Arguments to find a HorarioAberturaCatalogo
     * @example
     * // Get one HorarioAberturaCatalogo
     * const horarioAberturaCatalogo = await prisma.horarioAberturaCatalogo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HorarioAberturaCatalogoFindFirstArgs>(args?: SelectSubset<T, HorarioAberturaCatalogoFindFirstArgs<ExtArgs>>): Prisma__HorarioAberturaCatalogoClient<$Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HorarioAberturaCatalogo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioAberturaCatalogoFindFirstOrThrowArgs} args - Arguments to find a HorarioAberturaCatalogo
     * @example
     * // Get one HorarioAberturaCatalogo
     * const horarioAberturaCatalogo = await prisma.horarioAberturaCatalogo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HorarioAberturaCatalogoFindFirstOrThrowArgs>(args?: SelectSubset<T, HorarioAberturaCatalogoFindFirstOrThrowArgs<ExtArgs>>): Prisma__HorarioAberturaCatalogoClient<$Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HorarioAberturaCatalogos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioAberturaCatalogoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HorarioAberturaCatalogos
     * const horarioAberturaCatalogos = await prisma.horarioAberturaCatalogo.findMany()
     * 
     * // Get first 10 HorarioAberturaCatalogos
     * const horarioAberturaCatalogos = await prisma.horarioAberturaCatalogo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const horarioAberturaCatalogoWithIdOnly = await prisma.horarioAberturaCatalogo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HorarioAberturaCatalogoFindManyArgs>(args?: SelectSubset<T, HorarioAberturaCatalogoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HorarioAberturaCatalogo.
     * @param {HorarioAberturaCatalogoCreateArgs} args - Arguments to create a HorarioAberturaCatalogo.
     * @example
     * // Create one HorarioAberturaCatalogo
     * const HorarioAberturaCatalogo = await prisma.horarioAberturaCatalogo.create({
     *   data: {
     *     // ... data to create a HorarioAberturaCatalogo
     *   }
     * })
     * 
     */
    create<T extends HorarioAberturaCatalogoCreateArgs>(args: SelectSubset<T, HorarioAberturaCatalogoCreateArgs<ExtArgs>>): Prisma__HorarioAberturaCatalogoClient<$Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HorarioAberturaCatalogos.
     * @param {HorarioAberturaCatalogoCreateManyArgs} args - Arguments to create many HorarioAberturaCatalogos.
     * @example
     * // Create many HorarioAberturaCatalogos
     * const horarioAberturaCatalogo = await prisma.horarioAberturaCatalogo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HorarioAberturaCatalogoCreateManyArgs>(args?: SelectSubset<T, HorarioAberturaCatalogoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a HorarioAberturaCatalogo.
     * @param {HorarioAberturaCatalogoDeleteArgs} args - Arguments to delete one HorarioAberturaCatalogo.
     * @example
     * // Delete one HorarioAberturaCatalogo
     * const HorarioAberturaCatalogo = await prisma.horarioAberturaCatalogo.delete({
     *   where: {
     *     // ... filter to delete one HorarioAberturaCatalogo
     *   }
     * })
     * 
     */
    delete<T extends HorarioAberturaCatalogoDeleteArgs>(args: SelectSubset<T, HorarioAberturaCatalogoDeleteArgs<ExtArgs>>): Prisma__HorarioAberturaCatalogoClient<$Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HorarioAberturaCatalogo.
     * @param {HorarioAberturaCatalogoUpdateArgs} args - Arguments to update one HorarioAberturaCatalogo.
     * @example
     * // Update one HorarioAberturaCatalogo
     * const horarioAberturaCatalogo = await prisma.horarioAberturaCatalogo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HorarioAberturaCatalogoUpdateArgs>(args: SelectSubset<T, HorarioAberturaCatalogoUpdateArgs<ExtArgs>>): Prisma__HorarioAberturaCatalogoClient<$Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HorarioAberturaCatalogos.
     * @param {HorarioAberturaCatalogoDeleteManyArgs} args - Arguments to filter HorarioAberturaCatalogos to delete.
     * @example
     * // Delete a few HorarioAberturaCatalogos
     * const { count } = await prisma.horarioAberturaCatalogo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HorarioAberturaCatalogoDeleteManyArgs>(args?: SelectSubset<T, HorarioAberturaCatalogoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HorarioAberturaCatalogos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioAberturaCatalogoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HorarioAberturaCatalogos
     * const horarioAberturaCatalogo = await prisma.horarioAberturaCatalogo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HorarioAberturaCatalogoUpdateManyArgs>(args: SelectSubset<T, HorarioAberturaCatalogoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HorarioAberturaCatalogo.
     * @param {HorarioAberturaCatalogoUpsertArgs} args - Arguments to update or create a HorarioAberturaCatalogo.
     * @example
     * // Update or create a HorarioAberturaCatalogo
     * const horarioAberturaCatalogo = await prisma.horarioAberturaCatalogo.upsert({
     *   create: {
     *     // ... data to create a HorarioAberturaCatalogo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HorarioAberturaCatalogo we want to update
     *   }
     * })
     */
    upsert<T extends HorarioAberturaCatalogoUpsertArgs>(args: SelectSubset<T, HorarioAberturaCatalogoUpsertArgs<ExtArgs>>): Prisma__HorarioAberturaCatalogoClient<$Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HorarioAberturaCatalogos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioAberturaCatalogoCountArgs} args - Arguments to filter HorarioAberturaCatalogos to count.
     * @example
     * // Count the number of HorarioAberturaCatalogos
     * const count = await prisma.horarioAberturaCatalogo.count({
     *   where: {
     *     // ... the filter for the HorarioAberturaCatalogos we want to count
     *   }
     * })
    **/
    count<T extends HorarioAberturaCatalogoCountArgs>(
      args?: Subset<T, HorarioAberturaCatalogoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HorarioAberturaCatalogoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HorarioAberturaCatalogo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioAberturaCatalogoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HorarioAberturaCatalogoAggregateArgs>(args: Subset<T, HorarioAberturaCatalogoAggregateArgs>): Prisma.PrismaPromise<GetHorarioAberturaCatalogoAggregateType<T>>

    /**
     * Group by HorarioAberturaCatalogo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioAberturaCatalogoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HorarioAberturaCatalogoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HorarioAberturaCatalogoGroupByArgs['orderBy'] }
        : { orderBy?: HorarioAberturaCatalogoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HorarioAberturaCatalogoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHorarioAberturaCatalogoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HorarioAberturaCatalogo model
   */
  readonly fields: HorarioAberturaCatalogoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HorarioAberturaCatalogo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HorarioAberturaCatalogoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Historicos<T extends HorarioAberturaCatalogo$HistoricosArgs<ExtArgs> = {}>(args?: Subset<T, HorarioAberturaCatalogo$HistoricosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HorarioAberturaCatalogo model
   */
  interface HorarioAberturaCatalogoFieldRefs {
    readonly id: FieldRef<"HorarioAberturaCatalogo", 'Int'>
    readonly nome: FieldRef<"HorarioAberturaCatalogo", 'String'>
    readonly inicioTurnoHora: FieldRef<"HorarioAberturaCatalogo", 'String'>
    readonly duracaoHoras: FieldRef<"HorarioAberturaCatalogo", 'Decimal'>
    readonly duracaoIntervaloHoras: FieldRef<"HorarioAberturaCatalogo", 'Decimal'>
    readonly ativo: FieldRef<"HorarioAberturaCatalogo", 'Boolean'>
    readonly observacoes: FieldRef<"HorarioAberturaCatalogo", 'String'>
    readonly createdAt: FieldRef<"HorarioAberturaCatalogo", 'DateTime'>
    readonly createdBy: FieldRef<"HorarioAberturaCatalogo", 'String'>
    readonly updatedAt: FieldRef<"HorarioAberturaCatalogo", 'DateTime'>
    readonly updatedBy: FieldRef<"HorarioAberturaCatalogo", 'String'>
    readonly deletedAt: FieldRef<"HorarioAberturaCatalogo", 'DateTime'>
    readonly deletedBy: FieldRef<"HorarioAberturaCatalogo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * HorarioAberturaCatalogo findUnique
   */
  export type HorarioAberturaCatalogoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
    /**
     * Filter, which HorarioAberturaCatalogo to fetch.
     */
    where: HorarioAberturaCatalogoWhereUniqueInput
  }

  /**
   * HorarioAberturaCatalogo findUniqueOrThrow
   */
  export type HorarioAberturaCatalogoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
    /**
     * Filter, which HorarioAberturaCatalogo to fetch.
     */
    where: HorarioAberturaCatalogoWhereUniqueInput
  }

  /**
   * HorarioAberturaCatalogo findFirst
   */
  export type HorarioAberturaCatalogoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
    /**
     * Filter, which HorarioAberturaCatalogo to fetch.
     */
    where?: HorarioAberturaCatalogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HorarioAberturaCatalogos to fetch.
     */
    orderBy?: HorarioAberturaCatalogoOrderByWithRelationInput | HorarioAberturaCatalogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HorarioAberturaCatalogos.
     */
    cursor?: HorarioAberturaCatalogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HorarioAberturaCatalogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HorarioAberturaCatalogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HorarioAberturaCatalogos.
     */
    distinct?: HorarioAberturaCatalogoScalarFieldEnum | HorarioAberturaCatalogoScalarFieldEnum[]
  }

  /**
   * HorarioAberturaCatalogo findFirstOrThrow
   */
  export type HorarioAberturaCatalogoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
    /**
     * Filter, which HorarioAberturaCatalogo to fetch.
     */
    where?: HorarioAberturaCatalogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HorarioAberturaCatalogos to fetch.
     */
    orderBy?: HorarioAberturaCatalogoOrderByWithRelationInput | HorarioAberturaCatalogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HorarioAberturaCatalogos.
     */
    cursor?: HorarioAberturaCatalogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HorarioAberturaCatalogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HorarioAberturaCatalogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HorarioAberturaCatalogos.
     */
    distinct?: HorarioAberturaCatalogoScalarFieldEnum | HorarioAberturaCatalogoScalarFieldEnum[]
  }

  /**
   * HorarioAberturaCatalogo findMany
   */
  export type HorarioAberturaCatalogoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
    /**
     * Filter, which HorarioAberturaCatalogos to fetch.
     */
    where?: HorarioAberturaCatalogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HorarioAberturaCatalogos to fetch.
     */
    orderBy?: HorarioAberturaCatalogoOrderByWithRelationInput | HorarioAberturaCatalogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HorarioAberturaCatalogos.
     */
    cursor?: HorarioAberturaCatalogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HorarioAberturaCatalogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HorarioAberturaCatalogos.
     */
    skip?: number
    distinct?: HorarioAberturaCatalogoScalarFieldEnum | HorarioAberturaCatalogoScalarFieldEnum[]
  }

  /**
   * HorarioAberturaCatalogo create
   */
  export type HorarioAberturaCatalogoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
    /**
     * The data needed to create a HorarioAberturaCatalogo.
     */
    data: XOR<HorarioAberturaCatalogoCreateInput, HorarioAberturaCatalogoUncheckedCreateInput>
  }

  /**
   * HorarioAberturaCatalogo createMany
   */
  export type HorarioAberturaCatalogoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HorarioAberturaCatalogos.
     */
    data: HorarioAberturaCatalogoCreateManyInput | HorarioAberturaCatalogoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HorarioAberturaCatalogo update
   */
  export type HorarioAberturaCatalogoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
    /**
     * The data needed to update a HorarioAberturaCatalogo.
     */
    data: XOR<HorarioAberturaCatalogoUpdateInput, HorarioAberturaCatalogoUncheckedUpdateInput>
    /**
     * Choose, which HorarioAberturaCatalogo to update.
     */
    where: HorarioAberturaCatalogoWhereUniqueInput
  }

  /**
   * HorarioAberturaCatalogo updateMany
   */
  export type HorarioAberturaCatalogoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HorarioAberturaCatalogos.
     */
    data: XOR<HorarioAberturaCatalogoUpdateManyMutationInput, HorarioAberturaCatalogoUncheckedUpdateManyInput>
    /**
     * Filter which HorarioAberturaCatalogos to update
     */
    where?: HorarioAberturaCatalogoWhereInput
    /**
     * Limit how many HorarioAberturaCatalogos to update.
     */
    limit?: number
  }

  /**
   * HorarioAberturaCatalogo upsert
   */
  export type HorarioAberturaCatalogoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
    /**
     * The filter to search for the HorarioAberturaCatalogo to update in case it exists.
     */
    where: HorarioAberturaCatalogoWhereUniqueInput
    /**
     * In case the HorarioAberturaCatalogo found by the `where` argument doesn't exist, create a new HorarioAberturaCatalogo with this data.
     */
    create: XOR<HorarioAberturaCatalogoCreateInput, HorarioAberturaCatalogoUncheckedCreateInput>
    /**
     * In case the HorarioAberturaCatalogo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HorarioAberturaCatalogoUpdateInput, HorarioAberturaCatalogoUncheckedUpdateInput>
  }

  /**
   * HorarioAberturaCatalogo delete
   */
  export type HorarioAberturaCatalogoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
    /**
     * Filter which HorarioAberturaCatalogo to delete.
     */
    where: HorarioAberturaCatalogoWhereUniqueInput
  }

  /**
   * HorarioAberturaCatalogo deleteMany
   */
  export type HorarioAberturaCatalogoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HorarioAberturaCatalogos to delete
     */
    where?: HorarioAberturaCatalogoWhereInput
    /**
     * Limit how many HorarioAberturaCatalogos to delete.
     */
    limit?: number
  }

  /**
   * HorarioAberturaCatalogo.Historicos
   */
  export type HorarioAberturaCatalogo$HistoricosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    where?: EquipeTurnoHistoricoWhereInput
    orderBy?: EquipeTurnoHistoricoOrderByWithRelationInput | EquipeTurnoHistoricoOrderByWithRelationInput[]
    cursor?: EquipeTurnoHistoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipeTurnoHistoricoScalarFieldEnum | EquipeTurnoHistoricoScalarFieldEnum[]
  }

  /**
   * HorarioAberturaCatalogo without action
   */
  export type HorarioAberturaCatalogoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
  }


  /**
   * Model EquipeTurnoHistorico
   */

  export type AggregateEquipeTurnoHistorico = {
    _count: EquipeTurnoHistoricoCountAggregateOutputType | null
    _avg: EquipeTurnoHistoricoAvgAggregateOutputType | null
    _sum: EquipeTurnoHistoricoSumAggregateOutputType | null
    _min: EquipeTurnoHistoricoMinAggregateOutputType | null
    _max: EquipeTurnoHistoricoMaxAggregateOutputType | null
  }

  export type EquipeTurnoHistoricoAvgAggregateOutputType = {
    id: number | null
    equipeId: number | null
    horarioAberturaCatalogoId: number | null
    duracaoHoras: Decimal | null
    duracaoIntervaloHoras: Decimal | null
  }

  export type EquipeTurnoHistoricoSumAggregateOutputType = {
    id: number | null
    equipeId: number | null
    horarioAberturaCatalogoId: number | null
    duracaoHoras: Decimal | null
    duracaoIntervaloHoras: Decimal | null
  }

  export type EquipeTurnoHistoricoMinAggregateOutputType = {
    id: number | null
    equipeId: number | null
    horarioAberturaCatalogoId: number | null
    dataInicio: Date | null
    dataFim: Date | null
    inicioTurnoHora: string | null
    duracaoHoras: Decimal | null
    duracaoIntervaloHoras: Decimal | null
    fimTurnoHora: string | null
    motivo: string | null
    observacoes: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EquipeTurnoHistoricoMaxAggregateOutputType = {
    id: number | null
    equipeId: number | null
    horarioAberturaCatalogoId: number | null
    dataInicio: Date | null
    dataFim: Date | null
    inicioTurnoHora: string | null
    duracaoHoras: Decimal | null
    duracaoIntervaloHoras: Decimal | null
    fimTurnoHora: string | null
    motivo: string | null
    observacoes: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type EquipeTurnoHistoricoCountAggregateOutputType = {
    id: number
    equipeId: number
    horarioAberturaCatalogoId: number
    dataInicio: number
    dataFim: number
    inicioTurnoHora: number
    duracaoHoras: number
    duracaoIntervaloHoras: number
    fimTurnoHora: number
    motivo: number
    observacoes: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type EquipeTurnoHistoricoAvgAggregateInputType = {
    id?: true
    equipeId?: true
    horarioAberturaCatalogoId?: true
    duracaoHoras?: true
    duracaoIntervaloHoras?: true
  }

  export type EquipeTurnoHistoricoSumAggregateInputType = {
    id?: true
    equipeId?: true
    horarioAberturaCatalogoId?: true
    duracaoHoras?: true
    duracaoIntervaloHoras?: true
  }

  export type EquipeTurnoHistoricoMinAggregateInputType = {
    id?: true
    equipeId?: true
    horarioAberturaCatalogoId?: true
    dataInicio?: true
    dataFim?: true
    inicioTurnoHora?: true
    duracaoHoras?: true
    duracaoIntervaloHoras?: true
    fimTurnoHora?: true
    motivo?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EquipeTurnoHistoricoMaxAggregateInputType = {
    id?: true
    equipeId?: true
    horarioAberturaCatalogoId?: true
    dataInicio?: true
    dataFim?: true
    inicioTurnoHora?: true
    duracaoHoras?: true
    duracaoIntervaloHoras?: true
    fimTurnoHora?: true
    motivo?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type EquipeTurnoHistoricoCountAggregateInputType = {
    id?: true
    equipeId?: true
    horarioAberturaCatalogoId?: true
    dataInicio?: true
    dataFim?: true
    inicioTurnoHora?: true
    duracaoHoras?: true
    duracaoIntervaloHoras?: true
    fimTurnoHora?: true
    motivo?: true
    observacoes?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type EquipeTurnoHistoricoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipeTurnoHistorico to aggregate.
     */
    where?: EquipeTurnoHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeTurnoHistoricos to fetch.
     */
    orderBy?: EquipeTurnoHistoricoOrderByWithRelationInput | EquipeTurnoHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipeTurnoHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeTurnoHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeTurnoHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EquipeTurnoHistoricos
    **/
    _count?: true | EquipeTurnoHistoricoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipeTurnoHistoricoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipeTurnoHistoricoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipeTurnoHistoricoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipeTurnoHistoricoMaxAggregateInputType
  }

  export type GetEquipeTurnoHistoricoAggregateType<T extends EquipeTurnoHistoricoAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipeTurnoHistorico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipeTurnoHistorico[P]>
      : GetScalarType<T[P], AggregateEquipeTurnoHistorico[P]>
  }




  export type EquipeTurnoHistoricoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipeTurnoHistoricoWhereInput
    orderBy?: EquipeTurnoHistoricoOrderByWithAggregationInput | EquipeTurnoHistoricoOrderByWithAggregationInput[]
    by: EquipeTurnoHistoricoScalarFieldEnum[] | EquipeTurnoHistoricoScalarFieldEnum
    having?: EquipeTurnoHistoricoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipeTurnoHistoricoCountAggregateInputType | true
    _avg?: EquipeTurnoHistoricoAvgAggregateInputType
    _sum?: EquipeTurnoHistoricoSumAggregateInputType
    _min?: EquipeTurnoHistoricoMinAggregateInputType
    _max?: EquipeTurnoHistoricoMaxAggregateInputType
  }

  export type EquipeTurnoHistoricoGroupByOutputType = {
    id: number
    equipeId: number
    horarioAberturaCatalogoId: number | null
    dataInicio: Date
    dataFim: Date | null
    inicioTurnoHora: string
    duracaoHoras: Decimal
    duracaoIntervaloHoras: Decimal
    fimTurnoHora: string | null
    motivo: string | null
    observacoes: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: EquipeTurnoHistoricoCountAggregateOutputType | null
    _avg: EquipeTurnoHistoricoAvgAggregateOutputType | null
    _sum: EquipeTurnoHistoricoSumAggregateOutputType | null
    _min: EquipeTurnoHistoricoMinAggregateOutputType | null
    _max: EquipeTurnoHistoricoMaxAggregateOutputType | null
  }

  type GetEquipeTurnoHistoricoGroupByPayload<T extends EquipeTurnoHistoricoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipeTurnoHistoricoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipeTurnoHistoricoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipeTurnoHistoricoGroupByOutputType[P]>
            : GetScalarType<T[P], EquipeTurnoHistoricoGroupByOutputType[P]>
        }
      >
    >


  export type EquipeTurnoHistoricoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    equipeId?: boolean
    horarioAberturaCatalogoId?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    inicioTurnoHora?: boolean
    duracaoHoras?: boolean
    duracaoIntervaloHoras?: boolean
    fimTurnoHora?: boolean
    motivo?: boolean
    observacoes?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
    horarioAberturaCatalogo?: boolean | EquipeTurnoHistorico$horarioAberturaCatalogoArgs<ExtArgs>
  }, ExtArgs["result"]["equipeTurnoHistorico"]>



  export type EquipeTurnoHistoricoSelectScalar = {
    id?: boolean
    equipeId?: boolean
    horarioAberturaCatalogoId?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    inicioTurnoHora?: boolean
    duracaoHoras?: boolean
    duracaoIntervaloHoras?: boolean
    fimTurnoHora?: boolean
    motivo?: boolean
    observacoes?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type EquipeTurnoHistoricoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "equipeId" | "horarioAberturaCatalogoId" | "dataInicio" | "dataFim" | "inicioTurnoHora" | "duracaoHoras" | "duracaoIntervaloHoras" | "fimTurnoHora" | "motivo" | "observacoes" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["equipeTurnoHistorico"]>
  export type EquipeTurnoHistoricoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
    horarioAberturaCatalogo?: boolean | EquipeTurnoHistorico$horarioAberturaCatalogoArgs<ExtArgs>
  }

  export type $EquipeTurnoHistoricoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EquipeTurnoHistorico"
    objects: {
      equipe: Prisma.$EquipePayload<ExtArgs>
      horarioAberturaCatalogo: Prisma.$HorarioAberturaCatalogoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      equipeId: number
      horarioAberturaCatalogoId: number | null
      dataInicio: Date
      dataFim: Date | null
      inicioTurnoHora: string
      duracaoHoras: Prisma.Decimal
      duracaoIntervaloHoras: Prisma.Decimal
      fimTurnoHora: string | null
      motivo: string | null
      observacoes: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["equipeTurnoHistorico"]>
    composites: {}
  }

  type EquipeTurnoHistoricoGetPayload<S extends boolean | null | undefined | EquipeTurnoHistoricoDefaultArgs> = $Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload, S>

  type EquipeTurnoHistoricoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EquipeTurnoHistoricoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EquipeTurnoHistoricoCountAggregateInputType | true
    }

  export interface EquipeTurnoHistoricoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EquipeTurnoHistorico'], meta: { name: 'EquipeTurnoHistorico' } }
    /**
     * Find zero or one EquipeTurnoHistorico that matches the filter.
     * @param {EquipeTurnoHistoricoFindUniqueArgs} args - Arguments to find a EquipeTurnoHistorico
     * @example
     * // Get one EquipeTurnoHistorico
     * const equipeTurnoHistorico = await prisma.equipeTurnoHistorico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipeTurnoHistoricoFindUniqueArgs>(args: SelectSubset<T, EquipeTurnoHistoricoFindUniqueArgs<ExtArgs>>): Prisma__EquipeTurnoHistoricoClient<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EquipeTurnoHistorico that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EquipeTurnoHistoricoFindUniqueOrThrowArgs} args - Arguments to find a EquipeTurnoHistorico
     * @example
     * // Get one EquipeTurnoHistorico
     * const equipeTurnoHistorico = await prisma.equipeTurnoHistorico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipeTurnoHistoricoFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipeTurnoHistoricoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipeTurnoHistoricoClient<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipeTurnoHistorico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeTurnoHistoricoFindFirstArgs} args - Arguments to find a EquipeTurnoHistorico
     * @example
     * // Get one EquipeTurnoHistorico
     * const equipeTurnoHistorico = await prisma.equipeTurnoHistorico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipeTurnoHistoricoFindFirstArgs>(args?: SelectSubset<T, EquipeTurnoHistoricoFindFirstArgs<ExtArgs>>): Prisma__EquipeTurnoHistoricoClient<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipeTurnoHistorico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeTurnoHistoricoFindFirstOrThrowArgs} args - Arguments to find a EquipeTurnoHistorico
     * @example
     * // Get one EquipeTurnoHistorico
     * const equipeTurnoHistorico = await prisma.equipeTurnoHistorico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipeTurnoHistoricoFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipeTurnoHistoricoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipeTurnoHistoricoClient<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EquipeTurnoHistoricos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeTurnoHistoricoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EquipeTurnoHistoricos
     * const equipeTurnoHistoricos = await prisma.equipeTurnoHistorico.findMany()
     * 
     * // Get first 10 EquipeTurnoHistoricos
     * const equipeTurnoHistoricos = await prisma.equipeTurnoHistorico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipeTurnoHistoricoWithIdOnly = await prisma.equipeTurnoHistorico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipeTurnoHistoricoFindManyArgs>(args?: SelectSubset<T, EquipeTurnoHistoricoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EquipeTurnoHistorico.
     * @param {EquipeTurnoHistoricoCreateArgs} args - Arguments to create a EquipeTurnoHistorico.
     * @example
     * // Create one EquipeTurnoHistorico
     * const EquipeTurnoHistorico = await prisma.equipeTurnoHistorico.create({
     *   data: {
     *     // ... data to create a EquipeTurnoHistorico
     *   }
     * })
     * 
     */
    create<T extends EquipeTurnoHistoricoCreateArgs>(args: SelectSubset<T, EquipeTurnoHistoricoCreateArgs<ExtArgs>>): Prisma__EquipeTurnoHistoricoClient<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EquipeTurnoHistoricos.
     * @param {EquipeTurnoHistoricoCreateManyArgs} args - Arguments to create many EquipeTurnoHistoricos.
     * @example
     * // Create many EquipeTurnoHistoricos
     * const equipeTurnoHistorico = await prisma.equipeTurnoHistorico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipeTurnoHistoricoCreateManyArgs>(args?: SelectSubset<T, EquipeTurnoHistoricoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EquipeTurnoHistorico.
     * @param {EquipeTurnoHistoricoDeleteArgs} args - Arguments to delete one EquipeTurnoHistorico.
     * @example
     * // Delete one EquipeTurnoHistorico
     * const EquipeTurnoHistorico = await prisma.equipeTurnoHistorico.delete({
     *   where: {
     *     // ... filter to delete one EquipeTurnoHistorico
     *   }
     * })
     * 
     */
    delete<T extends EquipeTurnoHistoricoDeleteArgs>(args: SelectSubset<T, EquipeTurnoHistoricoDeleteArgs<ExtArgs>>): Prisma__EquipeTurnoHistoricoClient<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EquipeTurnoHistorico.
     * @param {EquipeTurnoHistoricoUpdateArgs} args - Arguments to update one EquipeTurnoHistorico.
     * @example
     * // Update one EquipeTurnoHistorico
     * const equipeTurnoHistorico = await prisma.equipeTurnoHistorico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipeTurnoHistoricoUpdateArgs>(args: SelectSubset<T, EquipeTurnoHistoricoUpdateArgs<ExtArgs>>): Prisma__EquipeTurnoHistoricoClient<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EquipeTurnoHistoricos.
     * @param {EquipeTurnoHistoricoDeleteManyArgs} args - Arguments to filter EquipeTurnoHistoricos to delete.
     * @example
     * // Delete a few EquipeTurnoHistoricos
     * const { count } = await prisma.equipeTurnoHistorico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipeTurnoHistoricoDeleteManyArgs>(args?: SelectSubset<T, EquipeTurnoHistoricoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipeTurnoHistoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeTurnoHistoricoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EquipeTurnoHistoricos
     * const equipeTurnoHistorico = await prisma.equipeTurnoHistorico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipeTurnoHistoricoUpdateManyArgs>(args: SelectSubset<T, EquipeTurnoHistoricoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EquipeTurnoHistorico.
     * @param {EquipeTurnoHistoricoUpsertArgs} args - Arguments to update or create a EquipeTurnoHistorico.
     * @example
     * // Update or create a EquipeTurnoHistorico
     * const equipeTurnoHistorico = await prisma.equipeTurnoHistorico.upsert({
     *   create: {
     *     // ... data to create a EquipeTurnoHistorico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EquipeTurnoHistorico we want to update
     *   }
     * })
     */
    upsert<T extends EquipeTurnoHistoricoUpsertArgs>(args: SelectSubset<T, EquipeTurnoHistoricoUpsertArgs<ExtArgs>>): Prisma__EquipeTurnoHistoricoClient<$Result.GetResult<Prisma.$EquipeTurnoHistoricoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EquipeTurnoHistoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeTurnoHistoricoCountArgs} args - Arguments to filter EquipeTurnoHistoricos to count.
     * @example
     * // Count the number of EquipeTurnoHistoricos
     * const count = await prisma.equipeTurnoHistorico.count({
     *   where: {
     *     // ... the filter for the EquipeTurnoHistoricos we want to count
     *   }
     * })
    **/
    count<T extends EquipeTurnoHistoricoCountArgs>(
      args?: Subset<T, EquipeTurnoHistoricoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipeTurnoHistoricoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EquipeTurnoHistorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeTurnoHistoricoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipeTurnoHistoricoAggregateArgs>(args: Subset<T, EquipeTurnoHistoricoAggregateArgs>): Prisma.PrismaPromise<GetEquipeTurnoHistoricoAggregateType<T>>

    /**
     * Group by EquipeTurnoHistorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipeTurnoHistoricoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipeTurnoHistoricoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipeTurnoHistoricoGroupByArgs['orderBy'] }
        : { orderBy?: EquipeTurnoHistoricoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipeTurnoHistoricoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipeTurnoHistoricoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EquipeTurnoHistorico model
   */
  readonly fields: EquipeTurnoHistoricoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EquipeTurnoHistorico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipeTurnoHistoricoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    equipe<T extends EquipeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipeDefaultArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    horarioAberturaCatalogo<T extends EquipeTurnoHistorico$horarioAberturaCatalogoArgs<ExtArgs> = {}>(args?: Subset<T, EquipeTurnoHistorico$horarioAberturaCatalogoArgs<ExtArgs>>): Prisma__HorarioAberturaCatalogoClient<$Result.GetResult<Prisma.$HorarioAberturaCatalogoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EquipeTurnoHistorico model
   */
  interface EquipeTurnoHistoricoFieldRefs {
    readonly id: FieldRef<"EquipeTurnoHistorico", 'Int'>
    readonly equipeId: FieldRef<"EquipeTurnoHistorico", 'Int'>
    readonly horarioAberturaCatalogoId: FieldRef<"EquipeTurnoHistorico", 'Int'>
    readonly dataInicio: FieldRef<"EquipeTurnoHistorico", 'DateTime'>
    readonly dataFim: FieldRef<"EquipeTurnoHistorico", 'DateTime'>
    readonly inicioTurnoHora: FieldRef<"EquipeTurnoHistorico", 'String'>
    readonly duracaoHoras: FieldRef<"EquipeTurnoHistorico", 'Decimal'>
    readonly duracaoIntervaloHoras: FieldRef<"EquipeTurnoHistorico", 'Decimal'>
    readonly fimTurnoHora: FieldRef<"EquipeTurnoHistorico", 'String'>
    readonly motivo: FieldRef<"EquipeTurnoHistorico", 'String'>
    readonly observacoes: FieldRef<"EquipeTurnoHistorico", 'String'>
    readonly createdAt: FieldRef<"EquipeTurnoHistorico", 'DateTime'>
    readonly createdBy: FieldRef<"EquipeTurnoHistorico", 'String'>
    readonly updatedAt: FieldRef<"EquipeTurnoHistorico", 'DateTime'>
    readonly updatedBy: FieldRef<"EquipeTurnoHistorico", 'String'>
    readonly deletedAt: FieldRef<"EquipeTurnoHistorico", 'DateTime'>
    readonly deletedBy: FieldRef<"EquipeTurnoHistorico", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EquipeTurnoHistorico findUnique
   */
  export type EquipeTurnoHistoricoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EquipeTurnoHistorico to fetch.
     */
    where: EquipeTurnoHistoricoWhereUniqueInput
  }

  /**
   * EquipeTurnoHistorico findUniqueOrThrow
   */
  export type EquipeTurnoHistoricoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EquipeTurnoHistorico to fetch.
     */
    where: EquipeTurnoHistoricoWhereUniqueInput
  }

  /**
   * EquipeTurnoHistorico findFirst
   */
  export type EquipeTurnoHistoricoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EquipeTurnoHistorico to fetch.
     */
    where?: EquipeTurnoHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeTurnoHistoricos to fetch.
     */
    orderBy?: EquipeTurnoHistoricoOrderByWithRelationInput | EquipeTurnoHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipeTurnoHistoricos.
     */
    cursor?: EquipeTurnoHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeTurnoHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeTurnoHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipeTurnoHistoricos.
     */
    distinct?: EquipeTurnoHistoricoScalarFieldEnum | EquipeTurnoHistoricoScalarFieldEnum[]
  }

  /**
   * EquipeTurnoHistorico findFirstOrThrow
   */
  export type EquipeTurnoHistoricoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EquipeTurnoHistorico to fetch.
     */
    where?: EquipeTurnoHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeTurnoHistoricos to fetch.
     */
    orderBy?: EquipeTurnoHistoricoOrderByWithRelationInput | EquipeTurnoHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipeTurnoHistoricos.
     */
    cursor?: EquipeTurnoHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeTurnoHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeTurnoHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipeTurnoHistoricos.
     */
    distinct?: EquipeTurnoHistoricoScalarFieldEnum | EquipeTurnoHistoricoScalarFieldEnum[]
  }

  /**
   * EquipeTurnoHistorico findMany
   */
  export type EquipeTurnoHistoricoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which EquipeTurnoHistoricos to fetch.
     */
    where?: EquipeTurnoHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipeTurnoHistoricos to fetch.
     */
    orderBy?: EquipeTurnoHistoricoOrderByWithRelationInput | EquipeTurnoHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EquipeTurnoHistoricos.
     */
    cursor?: EquipeTurnoHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipeTurnoHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipeTurnoHistoricos.
     */
    skip?: number
    distinct?: EquipeTurnoHistoricoScalarFieldEnum | EquipeTurnoHistoricoScalarFieldEnum[]
  }

  /**
   * EquipeTurnoHistorico create
   */
  export type EquipeTurnoHistoricoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    /**
     * The data needed to create a EquipeTurnoHistorico.
     */
    data: XOR<EquipeTurnoHistoricoCreateInput, EquipeTurnoHistoricoUncheckedCreateInput>
  }

  /**
   * EquipeTurnoHistorico createMany
   */
  export type EquipeTurnoHistoricoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EquipeTurnoHistoricos.
     */
    data: EquipeTurnoHistoricoCreateManyInput | EquipeTurnoHistoricoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipeTurnoHistorico update
   */
  export type EquipeTurnoHistoricoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    /**
     * The data needed to update a EquipeTurnoHistorico.
     */
    data: XOR<EquipeTurnoHistoricoUpdateInput, EquipeTurnoHistoricoUncheckedUpdateInput>
    /**
     * Choose, which EquipeTurnoHistorico to update.
     */
    where: EquipeTurnoHistoricoWhereUniqueInput
  }

  /**
   * EquipeTurnoHistorico updateMany
   */
  export type EquipeTurnoHistoricoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EquipeTurnoHistoricos.
     */
    data: XOR<EquipeTurnoHistoricoUpdateManyMutationInput, EquipeTurnoHistoricoUncheckedUpdateManyInput>
    /**
     * Filter which EquipeTurnoHistoricos to update
     */
    where?: EquipeTurnoHistoricoWhereInput
    /**
     * Limit how many EquipeTurnoHistoricos to update.
     */
    limit?: number
  }

  /**
   * EquipeTurnoHistorico upsert
   */
  export type EquipeTurnoHistoricoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    /**
     * The filter to search for the EquipeTurnoHistorico to update in case it exists.
     */
    where: EquipeTurnoHistoricoWhereUniqueInput
    /**
     * In case the EquipeTurnoHistorico found by the `where` argument doesn't exist, create a new EquipeTurnoHistorico with this data.
     */
    create: XOR<EquipeTurnoHistoricoCreateInput, EquipeTurnoHistoricoUncheckedCreateInput>
    /**
     * In case the EquipeTurnoHistorico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipeTurnoHistoricoUpdateInput, EquipeTurnoHistoricoUncheckedUpdateInput>
  }

  /**
   * EquipeTurnoHistorico delete
   */
  export type EquipeTurnoHistoricoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
    /**
     * Filter which EquipeTurnoHistorico to delete.
     */
    where: EquipeTurnoHistoricoWhereUniqueInput
  }

  /**
   * EquipeTurnoHistorico deleteMany
   */
  export type EquipeTurnoHistoricoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipeTurnoHistoricos to delete
     */
    where?: EquipeTurnoHistoricoWhereInput
    /**
     * Limit how many EquipeTurnoHistoricos to delete.
     */
    limit?: number
  }

  /**
   * EquipeTurnoHistorico.horarioAberturaCatalogo
   */
  export type EquipeTurnoHistorico$horarioAberturaCatalogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioAberturaCatalogo
     */
    select?: HorarioAberturaCatalogoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorarioAberturaCatalogo
     */
    omit?: HorarioAberturaCatalogoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioAberturaCatalogoInclude<ExtArgs> | null
    where?: HorarioAberturaCatalogoWhereInput
  }

  /**
   * EquipeTurnoHistorico without action
   */
  export type EquipeTurnoHistoricoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeTurnoHistorico
     */
    select?: EquipeTurnoHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeTurnoHistorico
     */
    omit?: EquipeTurnoHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeTurnoHistoricoInclude<ExtArgs> | null
  }


  /**
   * Model Supervisor
   */

  export type AggregateSupervisor = {
    _count: SupervisorCountAggregateOutputType | null
    _avg: SupervisorAvgAggregateOutputType | null
    _sum: SupervisorSumAggregateOutputType | null
    _min: SupervisorMinAggregateOutputType | null
    _max: SupervisorMaxAggregateOutputType | null
  }

  export type SupervisorAvgAggregateOutputType = {
    id: number | null
    contratoId: number | null
  }

  export type SupervisorSumAggregateOutputType = {
    id: number | null
    contratoId: number | null
  }

  export type SupervisorMinAggregateOutputType = {
    id: number | null
    nome: string | null
    contratoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type SupervisorMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    contratoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type SupervisorCountAggregateOutputType = {
    id: number
    nome: number
    contratoId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type SupervisorAvgAggregateInputType = {
    id?: true
    contratoId?: true
  }

  export type SupervisorSumAggregateInputType = {
    id?: true
    contratoId?: true
  }

  export type SupervisorMinAggregateInputType = {
    id?: true
    nome?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type SupervisorMaxAggregateInputType = {
    id?: true
    nome?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type SupervisorCountAggregateInputType = {
    id?: true
    nome?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type SupervisorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Supervisor to aggregate.
     */
    where?: SupervisorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Supervisors to fetch.
     */
    orderBy?: SupervisorOrderByWithRelationInput | SupervisorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupervisorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Supervisors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Supervisors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Supervisors
    **/
    _count?: true | SupervisorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupervisorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupervisorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupervisorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupervisorMaxAggregateInputType
  }

  export type GetSupervisorAggregateType<T extends SupervisorAggregateArgs> = {
        [P in keyof T & keyof AggregateSupervisor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupervisor[P]>
      : GetScalarType<T[P], AggregateSupervisor[P]>
  }




  export type SupervisorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupervisorWhereInput
    orderBy?: SupervisorOrderByWithAggregationInput | SupervisorOrderByWithAggregationInput[]
    by: SupervisorScalarFieldEnum[] | SupervisorScalarFieldEnum
    having?: SupervisorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupervisorCountAggregateInputType | true
    _avg?: SupervisorAvgAggregateInputType
    _sum?: SupervisorSumAggregateInputType
    _min?: SupervisorMinAggregateInputType
    _max?: SupervisorMaxAggregateInputType
  }

  export type SupervisorGroupByOutputType = {
    id: number
    nome: string
    contratoId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: SupervisorCountAggregateOutputType | null
    _avg: SupervisorAvgAggregateOutputType | null
    _sum: SupervisorSumAggregateOutputType | null
    _min: SupervisorMinAggregateOutputType | null
    _max: SupervisorMaxAggregateOutputType | null
  }

  type GetSupervisorGroupByPayload<T extends SupervisorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupervisorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupervisorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupervisorGroupByOutputType[P]>
            : GetScalarType<T[P], SupervisorGroupByOutputType[P]>
        }
      >
    >


  export type SupervisorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    contratoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    EquipeSupervisor?: boolean | Supervisor$EquipeSupervisorArgs<ExtArgs>
    _count?: boolean | SupervisorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supervisor"]>



  export type SupervisorSelectScalar = {
    id?: boolean
    nome?: boolean
    contratoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type SupervisorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "contratoId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["supervisor"]>
  export type SupervisorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    EquipeSupervisor?: boolean | Supervisor$EquipeSupervisorArgs<ExtArgs>
    _count?: boolean | SupervisorCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SupervisorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Supervisor"
    objects: {
      contrato: Prisma.$ContratoPayload<ExtArgs>
      EquipeSupervisor: Prisma.$EquipeSupervisorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      contratoId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["supervisor"]>
    composites: {}
  }

  type SupervisorGetPayload<S extends boolean | null | undefined | SupervisorDefaultArgs> = $Result.GetResult<Prisma.$SupervisorPayload, S>

  type SupervisorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupervisorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupervisorCountAggregateInputType | true
    }

  export interface SupervisorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Supervisor'], meta: { name: 'Supervisor' } }
    /**
     * Find zero or one Supervisor that matches the filter.
     * @param {SupervisorFindUniqueArgs} args - Arguments to find a Supervisor
     * @example
     * // Get one Supervisor
     * const supervisor = await prisma.supervisor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupervisorFindUniqueArgs>(args: SelectSubset<T, SupervisorFindUniqueArgs<ExtArgs>>): Prisma__SupervisorClient<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Supervisor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupervisorFindUniqueOrThrowArgs} args - Arguments to find a Supervisor
     * @example
     * // Get one Supervisor
     * const supervisor = await prisma.supervisor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupervisorFindUniqueOrThrowArgs>(args: SelectSubset<T, SupervisorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupervisorClient<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Supervisor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupervisorFindFirstArgs} args - Arguments to find a Supervisor
     * @example
     * // Get one Supervisor
     * const supervisor = await prisma.supervisor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupervisorFindFirstArgs>(args?: SelectSubset<T, SupervisorFindFirstArgs<ExtArgs>>): Prisma__SupervisorClient<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Supervisor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupervisorFindFirstOrThrowArgs} args - Arguments to find a Supervisor
     * @example
     * // Get one Supervisor
     * const supervisor = await prisma.supervisor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupervisorFindFirstOrThrowArgs>(args?: SelectSubset<T, SupervisorFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupervisorClient<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Supervisors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupervisorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Supervisors
     * const supervisors = await prisma.supervisor.findMany()
     * 
     * // Get first 10 Supervisors
     * const supervisors = await prisma.supervisor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supervisorWithIdOnly = await prisma.supervisor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupervisorFindManyArgs>(args?: SelectSubset<T, SupervisorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Supervisor.
     * @param {SupervisorCreateArgs} args - Arguments to create a Supervisor.
     * @example
     * // Create one Supervisor
     * const Supervisor = await prisma.supervisor.create({
     *   data: {
     *     // ... data to create a Supervisor
     *   }
     * })
     * 
     */
    create<T extends SupervisorCreateArgs>(args: SelectSubset<T, SupervisorCreateArgs<ExtArgs>>): Prisma__SupervisorClient<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Supervisors.
     * @param {SupervisorCreateManyArgs} args - Arguments to create many Supervisors.
     * @example
     * // Create many Supervisors
     * const supervisor = await prisma.supervisor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupervisorCreateManyArgs>(args?: SelectSubset<T, SupervisorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Supervisor.
     * @param {SupervisorDeleteArgs} args - Arguments to delete one Supervisor.
     * @example
     * // Delete one Supervisor
     * const Supervisor = await prisma.supervisor.delete({
     *   where: {
     *     // ... filter to delete one Supervisor
     *   }
     * })
     * 
     */
    delete<T extends SupervisorDeleteArgs>(args: SelectSubset<T, SupervisorDeleteArgs<ExtArgs>>): Prisma__SupervisorClient<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Supervisor.
     * @param {SupervisorUpdateArgs} args - Arguments to update one Supervisor.
     * @example
     * // Update one Supervisor
     * const supervisor = await prisma.supervisor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupervisorUpdateArgs>(args: SelectSubset<T, SupervisorUpdateArgs<ExtArgs>>): Prisma__SupervisorClient<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Supervisors.
     * @param {SupervisorDeleteManyArgs} args - Arguments to filter Supervisors to delete.
     * @example
     * // Delete a few Supervisors
     * const { count } = await prisma.supervisor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupervisorDeleteManyArgs>(args?: SelectSubset<T, SupervisorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Supervisors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupervisorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Supervisors
     * const supervisor = await prisma.supervisor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupervisorUpdateManyArgs>(args: SelectSubset<T, SupervisorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Supervisor.
     * @param {SupervisorUpsertArgs} args - Arguments to update or create a Supervisor.
     * @example
     * // Update or create a Supervisor
     * const supervisor = await prisma.supervisor.upsert({
     *   create: {
     *     // ... data to create a Supervisor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Supervisor we want to update
     *   }
     * })
     */
    upsert<T extends SupervisorUpsertArgs>(args: SelectSubset<T, SupervisorUpsertArgs<ExtArgs>>): Prisma__SupervisorClient<$Result.GetResult<Prisma.$SupervisorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Supervisors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupervisorCountArgs} args - Arguments to filter Supervisors to count.
     * @example
     * // Count the number of Supervisors
     * const count = await prisma.supervisor.count({
     *   where: {
     *     // ... the filter for the Supervisors we want to count
     *   }
     * })
    **/
    count<T extends SupervisorCountArgs>(
      args?: Subset<T, SupervisorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupervisorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Supervisor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupervisorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupervisorAggregateArgs>(args: Subset<T, SupervisorAggregateArgs>): Prisma.PrismaPromise<GetSupervisorAggregateType<T>>

    /**
     * Group by Supervisor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupervisorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupervisorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupervisorGroupByArgs['orderBy'] }
        : { orderBy?: SupervisorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupervisorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupervisorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Supervisor model
   */
  readonly fields: SupervisorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Supervisor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupervisorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    contrato<T extends ContratoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContratoDefaultArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    EquipeSupervisor<T extends Supervisor$EquipeSupervisorArgs<ExtArgs> = {}>(args?: Subset<T, Supervisor$EquipeSupervisorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipeSupervisorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Supervisor model
   */
  interface SupervisorFieldRefs {
    readonly id: FieldRef<"Supervisor", 'Int'>
    readonly nome: FieldRef<"Supervisor", 'String'>
    readonly contratoId: FieldRef<"Supervisor", 'Int'>
    readonly createdAt: FieldRef<"Supervisor", 'DateTime'>
    readonly createdBy: FieldRef<"Supervisor", 'String'>
    readonly updatedAt: FieldRef<"Supervisor", 'DateTime'>
    readonly updatedBy: FieldRef<"Supervisor", 'String'>
    readonly deletedAt: FieldRef<"Supervisor", 'DateTime'>
    readonly deletedBy: FieldRef<"Supervisor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Supervisor findUnique
   */
  export type SupervisorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
    /**
     * Filter, which Supervisor to fetch.
     */
    where: SupervisorWhereUniqueInput
  }

  /**
   * Supervisor findUniqueOrThrow
   */
  export type SupervisorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
    /**
     * Filter, which Supervisor to fetch.
     */
    where: SupervisorWhereUniqueInput
  }

  /**
   * Supervisor findFirst
   */
  export type SupervisorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
    /**
     * Filter, which Supervisor to fetch.
     */
    where?: SupervisorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Supervisors to fetch.
     */
    orderBy?: SupervisorOrderByWithRelationInput | SupervisorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Supervisors.
     */
    cursor?: SupervisorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Supervisors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Supervisors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Supervisors.
     */
    distinct?: SupervisorScalarFieldEnum | SupervisorScalarFieldEnum[]
  }

  /**
   * Supervisor findFirstOrThrow
   */
  export type SupervisorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
    /**
     * Filter, which Supervisor to fetch.
     */
    where?: SupervisorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Supervisors to fetch.
     */
    orderBy?: SupervisorOrderByWithRelationInput | SupervisorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Supervisors.
     */
    cursor?: SupervisorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Supervisors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Supervisors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Supervisors.
     */
    distinct?: SupervisorScalarFieldEnum | SupervisorScalarFieldEnum[]
  }

  /**
   * Supervisor findMany
   */
  export type SupervisorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
    /**
     * Filter, which Supervisors to fetch.
     */
    where?: SupervisorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Supervisors to fetch.
     */
    orderBy?: SupervisorOrderByWithRelationInput | SupervisorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Supervisors.
     */
    cursor?: SupervisorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Supervisors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Supervisors.
     */
    skip?: number
    distinct?: SupervisorScalarFieldEnum | SupervisorScalarFieldEnum[]
  }

  /**
   * Supervisor create
   */
  export type SupervisorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
    /**
     * The data needed to create a Supervisor.
     */
    data: XOR<SupervisorCreateInput, SupervisorUncheckedCreateInput>
  }

  /**
   * Supervisor createMany
   */
  export type SupervisorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Supervisors.
     */
    data: SupervisorCreateManyInput | SupervisorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Supervisor update
   */
  export type SupervisorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
    /**
     * The data needed to update a Supervisor.
     */
    data: XOR<SupervisorUpdateInput, SupervisorUncheckedUpdateInput>
    /**
     * Choose, which Supervisor to update.
     */
    where: SupervisorWhereUniqueInput
  }

  /**
   * Supervisor updateMany
   */
  export type SupervisorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Supervisors.
     */
    data: XOR<SupervisorUpdateManyMutationInput, SupervisorUncheckedUpdateManyInput>
    /**
     * Filter which Supervisors to update
     */
    where?: SupervisorWhereInput
    /**
     * Limit how many Supervisors to update.
     */
    limit?: number
  }

  /**
   * Supervisor upsert
   */
  export type SupervisorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
    /**
     * The filter to search for the Supervisor to update in case it exists.
     */
    where: SupervisorWhereUniqueInput
    /**
     * In case the Supervisor found by the `where` argument doesn't exist, create a new Supervisor with this data.
     */
    create: XOR<SupervisorCreateInput, SupervisorUncheckedCreateInput>
    /**
     * In case the Supervisor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupervisorUpdateInput, SupervisorUncheckedUpdateInput>
  }

  /**
   * Supervisor delete
   */
  export type SupervisorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
    /**
     * Filter which Supervisor to delete.
     */
    where: SupervisorWhereUniqueInput
  }

  /**
   * Supervisor deleteMany
   */
  export type SupervisorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Supervisors to delete
     */
    where?: SupervisorWhereInput
    /**
     * Limit how many Supervisors to delete.
     */
    limit?: number
  }

  /**
   * Supervisor.EquipeSupervisor
   */
  export type Supervisor$EquipeSupervisorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipeSupervisor
     */
    select?: EquipeSupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipeSupervisor
     */
    omit?: EquipeSupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipeSupervisorInclude<ExtArgs> | null
    where?: EquipeSupervisorWhereInput
    orderBy?: EquipeSupervisorOrderByWithRelationInput | EquipeSupervisorOrderByWithRelationInput[]
    cursor?: EquipeSupervisorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipeSupervisorScalarFieldEnum | EquipeSupervisorScalarFieldEnum[]
  }

  /**
   * Supervisor without action
   */
  export type SupervisorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supervisor
     */
    select?: SupervisorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supervisor
     */
    omit?: SupervisorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupervisorInclude<ExtArgs> | null
  }


  /**
   * Model Test
   */

  export type AggregateTest = {
    _count: TestCountAggregateOutputType | null
    _avg: TestAvgAggregateOutputType | null
    _sum: TestSumAggregateOutputType | null
    _min: TestMinAggregateOutputType | null
    _max: TestMaxAggregateOutputType | null
  }

  export type TestAvgAggregateOutputType = {
    id: number | null
  }

  export type TestSumAggregateOutputType = {
    id: number | null
  }

  export type TestMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type TestMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type TestCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type TestAvgAggregateInputType = {
    id?: true
  }

  export type TestSumAggregateInputType = {
    id?: true
  }

  export type TestMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type TestMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type TestCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type TestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Test to aggregate.
     */
    where?: TestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tests to fetch.
     */
    orderBy?: TestOrderByWithRelationInput | TestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tests
    **/
    _count?: true | TestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TestMaxAggregateInputType
  }

  export type GetTestAggregateType<T extends TestAggregateArgs> = {
        [P in keyof T & keyof AggregateTest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTest[P]>
      : GetScalarType<T[P], AggregateTest[P]>
  }




  export type TestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TestWhereInput
    orderBy?: TestOrderByWithAggregationInput | TestOrderByWithAggregationInput[]
    by: TestScalarFieldEnum[] | TestScalarFieldEnum
    having?: TestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TestCountAggregateInputType | true
    _avg?: TestAvgAggregateInputType
    _sum?: TestSumAggregateInputType
    _min?: TestMinAggregateInputType
    _max?: TestMaxAggregateInputType
  }

  export type TestGroupByOutputType = {
    id: number
    name: string
    _count: TestCountAggregateOutputType | null
    _avg: TestAvgAggregateOutputType | null
    _sum: TestSumAggregateOutputType | null
    _min: TestMinAggregateOutputType | null
    _max: TestMaxAggregateOutputType | null
  }

  type GetTestGroupByPayload<T extends TestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TestGroupByOutputType[P]>
            : GetScalarType<T[P], TestGroupByOutputType[P]>
        }
      >
    >


  export type TestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["test"]>



  export type TestSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type TestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["test"]>

  export type $TestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Test"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["test"]>
    composites: {}
  }

  type TestGetPayload<S extends boolean | null | undefined | TestDefaultArgs> = $Result.GetResult<Prisma.$TestPayload, S>

  type TestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TestCountAggregateInputType | true
    }

  export interface TestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Test'], meta: { name: 'Test' } }
    /**
     * Find zero or one Test that matches the filter.
     * @param {TestFindUniqueArgs} args - Arguments to find a Test
     * @example
     * // Get one Test
     * const test = await prisma.test.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TestFindUniqueArgs>(args: SelectSubset<T, TestFindUniqueArgs<ExtArgs>>): Prisma__TestClient<$Result.GetResult<Prisma.$TestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Test that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TestFindUniqueOrThrowArgs} args - Arguments to find a Test
     * @example
     * // Get one Test
     * const test = await prisma.test.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TestFindUniqueOrThrowArgs>(args: SelectSubset<T, TestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TestClient<$Result.GetResult<Prisma.$TestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Test that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestFindFirstArgs} args - Arguments to find a Test
     * @example
     * // Get one Test
     * const test = await prisma.test.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TestFindFirstArgs>(args?: SelectSubset<T, TestFindFirstArgs<ExtArgs>>): Prisma__TestClient<$Result.GetResult<Prisma.$TestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Test that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestFindFirstOrThrowArgs} args - Arguments to find a Test
     * @example
     * // Get one Test
     * const test = await prisma.test.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TestFindFirstOrThrowArgs>(args?: SelectSubset<T, TestFindFirstOrThrowArgs<ExtArgs>>): Prisma__TestClient<$Result.GetResult<Prisma.$TestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tests
     * const tests = await prisma.test.findMany()
     * 
     * // Get first 10 Tests
     * const tests = await prisma.test.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const testWithIdOnly = await prisma.test.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TestFindManyArgs>(args?: SelectSubset<T, TestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Test.
     * @param {TestCreateArgs} args - Arguments to create a Test.
     * @example
     * // Create one Test
     * const Test = await prisma.test.create({
     *   data: {
     *     // ... data to create a Test
     *   }
     * })
     * 
     */
    create<T extends TestCreateArgs>(args: SelectSubset<T, TestCreateArgs<ExtArgs>>): Prisma__TestClient<$Result.GetResult<Prisma.$TestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tests.
     * @param {TestCreateManyArgs} args - Arguments to create many Tests.
     * @example
     * // Create many Tests
     * const test = await prisma.test.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TestCreateManyArgs>(args?: SelectSubset<T, TestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Test.
     * @param {TestDeleteArgs} args - Arguments to delete one Test.
     * @example
     * // Delete one Test
     * const Test = await prisma.test.delete({
     *   where: {
     *     // ... filter to delete one Test
     *   }
     * })
     * 
     */
    delete<T extends TestDeleteArgs>(args: SelectSubset<T, TestDeleteArgs<ExtArgs>>): Prisma__TestClient<$Result.GetResult<Prisma.$TestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Test.
     * @param {TestUpdateArgs} args - Arguments to update one Test.
     * @example
     * // Update one Test
     * const test = await prisma.test.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TestUpdateArgs>(args: SelectSubset<T, TestUpdateArgs<ExtArgs>>): Prisma__TestClient<$Result.GetResult<Prisma.$TestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tests.
     * @param {TestDeleteManyArgs} args - Arguments to filter Tests to delete.
     * @example
     * // Delete a few Tests
     * const { count } = await prisma.test.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TestDeleteManyArgs>(args?: SelectSubset<T, TestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tests
     * const test = await prisma.test.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TestUpdateManyArgs>(args: SelectSubset<T, TestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Test.
     * @param {TestUpsertArgs} args - Arguments to update or create a Test.
     * @example
     * // Update or create a Test
     * const test = await prisma.test.upsert({
     *   create: {
     *     // ... data to create a Test
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Test we want to update
     *   }
     * })
     */
    upsert<T extends TestUpsertArgs>(args: SelectSubset<T, TestUpsertArgs<ExtArgs>>): Prisma__TestClient<$Result.GetResult<Prisma.$TestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestCountArgs} args - Arguments to filter Tests to count.
     * @example
     * // Count the number of Tests
     * const count = await prisma.test.count({
     *   where: {
     *     // ... the filter for the Tests we want to count
     *   }
     * })
    **/
    count<T extends TestCountArgs>(
      args?: Subset<T, TestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Test.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TestAggregateArgs>(args: Subset<T, TestAggregateArgs>): Prisma.PrismaPromise<GetTestAggregateType<T>>

    /**
     * Group by Test.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TestGroupByArgs['orderBy'] }
        : { orderBy?: TestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Test model
   */
  readonly fields: TestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Test.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Test model
   */
  interface TestFieldRefs {
    readonly id: FieldRef<"Test", 'Int'>
    readonly name: FieldRef<"Test", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Test findUnique
   */
  export type TestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test
     */
    select?: TestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Test
     */
    omit?: TestOmit<ExtArgs> | null
    /**
     * Filter, which Test to fetch.
     */
    where: TestWhereUniqueInput
  }

  /**
   * Test findUniqueOrThrow
   */
  export type TestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test
     */
    select?: TestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Test
     */
    omit?: TestOmit<ExtArgs> | null
    /**
     * Filter, which Test to fetch.
     */
    where: TestWhereUniqueInput
  }

  /**
   * Test findFirst
   */
  export type TestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test
     */
    select?: TestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Test
     */
    omit?: TestOmit<ExtArgs> | null
    /**
     * Filter, which Test to fetch.
     */
    where?: TestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tests to fetch.
     */
    orderBy?: TestOrderByWithRelationInput | TestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tests.
     */
    cursor?: TestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tests.
     */
    distinct?: TestScalarFieldEnum | TestScalarFieldEnum[]
  }

  /**
   * Test findFirstOrThrow
   */
  export type TestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test
     */
    select?: TestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Test
     */
    omit?: TestOmit<ExtArgs> | null
    /**
     * Filter, which Test to fetch.
     */
    where?: TestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tests to fetch.
     */
    orderBy?: TestOrderByWithRelationInput | TestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tests.
     */
    cursor?: TestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tests.
     */
    distinct?: TestScalarFieldEnum | TestScalarFieldEnum[]
  }

  /**
   * Test findMany
   */
  export type TestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test
     */
    select?: TestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Test
     */
    omit?: TestOmit<ExtArgs> | null
    /**
     * Filter, which Tests to fetch.
     */
    where?: TestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tests to fetch.
     */
    orderBy?: TestOrderByWithRelationInput | TestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tests.
     */
    cursor?: TestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tests.
     */
    skip?: number
    distinct?: TestScalarFieldEnum | TestScalarFieldEnum[]
  }

  /**
   * Test create
   */
  export type TestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test
     */
    select?: TestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Test
     */
    omit?: TestOmit<ExtArgs> | null
    /**
     * The data needed to create a Test.
     */
    data: XOR<TestCreateInput, TestUncheckedCreateInput>
  }

  /**
   * Test createMany
   */
  export type TestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tests.
     */
    data: TestCreateManyInput | TestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Test update
   */
  export type TestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test
     */
    select?: TestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Test
     */
    omit?: TestOmit<ExtArgs> | null
    /**
     * The data needed to update a Test.
     */
    data: XOR<TestUpdateInput, TestUncheckedUpdateInput>
    /**
     * Choose, which Test to update.
     */
    where: TestWhereUniqueInput
  }

  /**
   * Test updateMany
   */
  export type TestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tests.
     */
    data: XOR<TestUpdateManyMutationInput, TestUncheckedUpdateManyInput>
    /**
     * Filter which Tests to update
     */
    where?: TestWhereInput
    /**
     * Limit how many Tests to update.
     */
    limit?: number
  }

  /**
   * Test upsert
   */
  export type TestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test
     */
    select?: TestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Test
     */
    omit?: TestOmit<ExtArgs> | null
    /**
     * The filter to search for the Test to update in case it exists.
     */
    where: TestWhereUniqueInput
    /**
     * In case the Test found by the `where` argument doesn't exist, create a new Test with this data.
     */
    create: XOR<TestCreateInput, TestUncheckedCreateInput>
    /**
     * In case the Test was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TestUpdateInput, TestUncheckedUpdateInput>
  }

  /**
   * Test delete
   */
  export type TestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test
     */
    select?: TestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Test
     */
    omit?: TestOmit<ExtArgs> | null
    /**
     * Filter which Test to delete.
     */
    where: TestWhereUniqueInput
  }

  /**
   * Test deleteMany
   */
  export type TestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tests to delete
     */
    where?: TestWhereInput
    /**
     * Limit how many Tests to delete.
     */
    limit?: number
  }

  /**
   * Test without action
   */
  export type TestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test
     */
    select?: TestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Test
     */
    omit?: TestOmit<ExtArgs> | null
  }


  /**
   * Model Turno
   */

  export type AggregateTurno = {
    _count: TurnoCountAggregateOutputType | null
    _avg: TurnoAvgAggregateOutputType | null
    _sum: TurnoSumAggregateOutputType | null
    _min: TurnoMinAggregateOutputType | null
    _max: TurnoMaxAggregateOutputType | null
  }

  export type TurnoAvgAggregateOutputType = {
    id: number | null
    veiculoId: number | null
    equipeId: number | null
    kmInicio: number | null
    KmFim: number | null
  }

  export type TurnoSumAggregateOutputType = {
    id: number | null
    veiculoId: number | null
    equipeId: number | null
    kmInicio: number | null
    KmFim: number | null
  }

  export type TurnoMinAggregateOutputType = {
    id: number | null
    dataSolicitacao: Date | null
    dataInicio: Date | null
    dataFim: Date | null
    veiculoId: number | null
    equipeId: number | null
    dispositivo: string | null
    kmInicio: number | null
    KmFim: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TurnoMaxAggregateOutputType = {
    id: number | null
    dataSolicitacao: Date | null
    dataInicio: Date | null
    dataFim: Date | null
    veiculoId: number | null
    equipeId: number | null
    dispositivo: string | null
    kmInicio: number | null
    KmFim: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TurnoCountAggregateOutputType = {
    id: number
    dataSolicitacao: number
    dataInicio: number
    dataFim: number
    veiculoId: number
    equipeId: number
    dispositivo: number
    kmInicio: number
    KmFim: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type TurnoAvgAggregateInputType = {
    id?: true
    veiculoId?: true
    equipeId?: true
    kmInicio?: true
    KmFim?: true
  }

  export type TurnoSumAggregateInputType = {
    id?: true
    veiculoId?: true
    equipeId?: true
    kmInicio?: true
    KmFim?: true
  }

  export type TurnoMinAggregateInputType = {
    id?: true
    dataSolicitacao?: true
    dataInicio?: true
    dataFim?: true
    veiculoId?: true
    equipeId?: true
    dispositivo?: true
    kmInicio?: true
    KmFim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TurnoMaxAggregateInputType = {
    id?: true
    dataSolicitacao?: true
    dataInicio?: true
    dataFim?: true
    veiculoId?: true
    equipeId?: true
    dispositivo?: true
    kmInicio?: true
    KmFim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TurnoCountAggregateInputType = {
    id?: true
    dataSolicitacao?: true
    dataInicio?: true
    dataFim?: true
    veiculoId?: true
    equipeId?: true
    dispositivo?: true
    kmInicio?: true
    KmFim?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type TurnoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Turno to aggregate.
     */
    where?: TurnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Turnos to fetch.
     */
    orderBy?: TurnoOrderByWithRelationInput | TurnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TurnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Turnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Turnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Turnos
    **/
    _count?: true | TurnoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TurnoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TurnoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TurnoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TurnoMaxAggregateInputType
  }

  export type GetTurnoAggregateType<T extends TurnoAggregateArgs> = {
        [P in keyof T & keyof AggregateTurno]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTurno[P]>
      : GetScalarType<T[P], AggregateTurno[P]>
  }




  export type TurnoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TurnoWhereInput
    orderBy?: TurnoOrderByWithAggregationInput | TurnoOrderByWithAggregationInput[]
    by: TurnoScalarFieldEnum[] | TurnoScalarFieldEnum
    having?: TurnoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TurnoCountAggregateInputType | true
    _avg?: TurnoAvgAggregateInputType
    _sum?: TurnoSumAggregateInputType
    _min?: TurnoMinAggregateInputType
    _max?: TurnoMaxAggregateInputType
  }

  export type TurnoGroupByOutputType = {
    id: number
    dataSolicitacao: Date
    dataInicio: Date
    dataFim: Date | null
    veiculoId: number
    equipeId: number
    dispositivo: string
    kmInicio: number
    KmFim: number | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: TurnoCountAggregateOutputType | null
    _avg: TurnoAvgAggregateOutputType | null
    _sum: TurnoSumAggregateOutputType | null
    _min: TurnoMinAggregateOutputType | null
    _max: TurnoMaxAggregateOutputType | null
  }

  type GetTurnoGroupByPayload<T extends TurnoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TurnoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TurnoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TurnoGroupByOutputType[P]>
            : GetScalarType<T[P], TurnoGroupByOutputType[P]>
        }
      >
    >


  export type TurnoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataSolicitacao?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    veiculoId?: boolean
    equipeId?: boolean
    dispositivo?: boolean
    kmInicio?: boolean
    KmFim?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    veiculo?: boolean | VeiculoDefaultArgs<ExtArgs>
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
    TurnoEletricistas?: boolean | Turno$TurnoEletricistasArgs<ExtArgs>
    _count?: boolean | TurnoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["turno"]>



  export type TurnoSelectScalar = {
    id?: boolean
    dataSolicitacao?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    veiculoId?: boolean
    equipeId?: boolean
    dispositivo?: boolean
    kmInicio?: boolean
    KmFim?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type TurnoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataSolicitacao" | "dataInicio" | "dataFim" | "veiculoId" | "equipeId" | "dispositivo" | "kmInicio" | "KmFim" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["turno"]>
  export type TurnoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    veiculo?: boolean | VeiculoDefaultArgs<ExtArgs>
    equipe?: boolean | EquipeDefaultArgs<ExtArgs>
    TurnoEletricistas?: boolean | Turno$TurnoEletricistasArgs<ExtArgs>
    _count?: boolean | TurnoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TurnoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Turno"
    objects: {
      veiculo: Prisma.$VeiculoPayload<ExtArgs>
      equipe: Prisma.$EquipePayload<ExtArgs>
      TurnoEletricistas: Prisma.$TurnoEletricistaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      dataSolicitacao: Date
      dataInicio: Date
      dataFim: Date | null
      veiculoId: number
      equipeId: number
      dispositivo: string
      kmInicio: number
      KmFim: number | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["turno"]>
    composites: {}
  }

  type TurnoGetPayload<S extends boolean | null | undefined | TurnoDefaultArgs> = $Result.GetResult<Prisma.$TurnoPayload, S>

  type TurnoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TurnoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TurnoCountAggregateInputType | true
    }

  export interface TurnoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Turno'], meta: { name: 'Turno' } }
    /**
     * Find zero or one Turno that matches the filter.
     * @param {TurnoFindUniqueArgs} args - Arguments to find a Turno
     * @example
     * // Get one Turno
     * const turno = await prisma.turno.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TurnoFindUniqueArgs>(args: SelectSubset<T, TurnoFindUniqueArgs<ExtArgs>>): Prisma__TurnoClient<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Turno that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TurnoFindUniqueOrThrowArgs} args - Arguments to find a Turno
     * @example
     * // Get one Turno
     * const turno = await prisma.turno.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TurnoFindUniqueOrThrowArgs>(args: SelectSubset<T, TurnoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TurnoClient<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Turno that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoFindFirstArgs} args - Arguments to find a Turno
     * @example
     * // Get one Turno
     * const turno = await prisma.turno.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TurnoFindFirstArgs>(args?: SelectSubset<T, TurnoFindFirstArgs<ExtArgs>>): Prisma__TurnoClient<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Turno that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoFindFirstOrThrowArgs} args - Arguments to find a Turno
     * @example
     * // Get one Turno
     * const turno = await prisma.turno.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TurnoFindFirstOrThrowArgs>(args?: SelectSubset<T, TurnoFindFirstOrThrowArgs<ExtArgs>>): Prisma__TurnoClient<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Turnos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Turnos
     * const turnos = await prisma.turno.findMany()
     * 
     * // Get first 10 Turnos
     * const turnos = await prisma.turno.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const turnoWithIdOnly = await prisma.turno.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TurnoFindManyArgs>(args?: SelectSubset<T, TurnoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Turno.
     * @param {TurnoCreateArgs} args - Arguments to create a Turno.
     * @example
     * // Create one Turno
     * const Turno = await prisma.turno.create({
     *   data: {
     *     // ... data to create a Turno
     *   }
     * })
     * 
     */
    create<T extends TurnoCreateArgs>(args: SelectSubset<T, TurnoCreateArgs<ExtArgs>>): Prisma__TurnoClient<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Turnos.
     * @param {TurnoCreateManyArgs} args - Arguments to create many Turnos.
     * @example
     * // Create many Turnos
     * const turno = await prisma.turno.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TurnoCreateManyArgs>(args?: SelectSubset<T, TurnoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Turno.
     * @param {TurnoDeleteArgs} args - Arguments to delete one Turno.
     * @example
     * // Delete one Turno
     * const Turno = await prisma.turno.delete({
     *   where: {
     *     // ... filter to delete one Turno
     *   }
     * })
     * 
     */
    delete<T extends TurnoDeleteArgs>(args: SelectSubset<T, TurnoDeleteArgs<ExtArgs>>): Prisma__TurnoClient<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Turno.
     * @param {TurnoUpdateArgs} args - Arguments to update one Turno.
     * @example
     * // Update one Turno
     * const turno = await prisma.turno.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TurnoUpdateArgs>(args: SelectSubset<T, TurnoUpdateArgs<ExtArgs>>): Prisma__TurnoClient<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Turnos.
     * @param {TurnoDeleteManyArgs} args - Arguments to filter Turnos to delete.
     * @example
     * // Delete a few Turnos
     * const { count } = await prisma.turno.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TurnoDeleteManyArgs>(args?: SelectSubset<T, TurnoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Turnos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Turnos
     * const turno = await prisma.turno.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TurnoUpdateManyArgs>(args: SelectSubset<T, TurnoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Turno.
     * @param {TurnoUpsertArgs} args - Arguments to update or create a Turno.
     * @example
     * // Update or create a Turno
     * const turno = await prisma.turno.upsert({
     *   create: {
     *     // ... data to create a Turno
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Turno we want to update
     *   }
     * })
     */
    upsert<T extends TurnoUpsertArgs>(args: SelectSubset<T, TurnoUpsertArgs<ExtArgs>>): Prisma__TurnoClient<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Turnos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoCountArgs} args - Arguments to filter Turnos to count.
     * @example
     * // Count the number of Turnos
     * const count = await prisma.turno.count({
     *   where: {
     *     // ... the filter for the Turnos we want to count
     *   }
     * })
    **/
    count<T extends TurnoCountArgs>(
      args?: Subset<T, TurnoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TurnoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Turno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TurnoAggregateArgs>(args: Subset<T, TurnoAggregateArgs>): Prisma.PrismaPromise<GetTurnoAggregateType<T>>

    /**
     * Group by Turno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TurnoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TurnoGroupByArgs['orderBy'] }
        : { orderBy?: TurnoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TurnoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTurnoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Turno model
   */
  readonly fields: TurnoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Turno.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TurnoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    veiculo<T extends VeiculoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VeiculoDefaultArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    equipe<T extends EquipeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipeDefaultArgs<ExtArgs>>): Prisma__EquipeClient<$Result.GetResult<Prisma.$EquipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    TurnoEletricistas<T extends Turno$TurnoEletricistasArgs<ExtArgs> = {}>(args?: Subset<T, Turno$TurnoEletricistasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Turno model
   */
  interface TurnoFieldRefs {
    readonly id: FieldRef<"Turno", 'Int'>
    readonly dataSolicitacao: FieldRef<"Turno", 'DateTime'>
    readonly dataInicio: FieldRef<"Turno", 'DateTime'>
    readonly dataFim: FieldRef<"Turno", 'DateTime'>
    readonly veiculoId: FieldRef<"Turno", 'Int'>
    readonly equipeId: FieldRef<"Turno", 'Int'>
    readonly dispositivo: FieldRef<"Turno", 'String'>
    readonly kmInicio: FieldRef<"Turno", 'Int'>
    readonly KmFim: FieldRef<"Turno", 'Int'>
    readonly createdAt: FieldRef<"Turno", 'DateTime'>
    readonly createdBy: FieldRef<"Turno", 'String'>
    readonly updatedAt: FieldRef<"Turno", 'DateTime'>
    readonly updatedBy: FieldRef<"Turno", 'String'>
    readonly deletedAt: FieldRef<"Turno", 'DateTime'>
    readonly deletedBy: FieldRef<"Turno", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Turno findUnique
   */
  export type TurnoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    /**
     * Filter, which Turno to fetch.
     */
    where: TurnoWhereUniqueInput
  }

  /**
   * Turno findUniqueOrThrow
   */
  export type TurnoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    /**
     * Filter, which Turno to fetch.
     */
    where: TurnoWhereUniqueInput
  }

  /**
   * Turno findFirst
   */
  export type TurnoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    /**
     * Filter, which Turno to fetch.
     */
    where?: TurnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Turnos to fetch.
     */
    orderBy?: TurnoOrderByWithRelationInput | TurnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Turnos.
     */
    cursor?: TurnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Turnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Turnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Turnos.
     */
    distinct?: TurnoScalarFieldEnum | TurnoScalarFieldEnum[]
  }

  /**
   * Turno findFirstOrThrow
   */
  export type TurnoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    /**
     * Filter, which Turno to fetch.
     */
    where?: TurnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Turnos to fetch.
     */
    orderBy?: TurnoOrderByWithRelationInput | TurnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Turnos.
     */
    cursor?: TurnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Turnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Turnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Turnos.
     */
    distinct?: TurnoScalarFieldEnum | TurnoScalarFieldEnum[]
  }

  /**
   * Turno findMany
   */
  export type TurnoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    /**
     * Filter, which Turnos to fetch.
     */
    where?: TurnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Turnos to fetch.
     */
    orderBy?: TurnoOrderByWithRelationInput | TurnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Turnos.
     */
    cursor?: TurnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Turnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Turnos.
     */
    skip?: number
    distinct?: TurnoScalarFieldEnum | TurnoScalarFieldEnum[]
  }

  /**
   * Turno create
   */
  export type TurnoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    /**
     * The data needed to create a Turno.
     */
    data: XOR<TurnoCreateInput, TurnoUncheckedCreateInput>
  }

  /**
   * Turno createMany
   */
  export type TurnoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Turnos.
     */
    data: TurnoCreateManyInput | TurnoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Turno update
   */
  export type TurnoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    /**
     * The data needed to update a Turno.
     */
    data: XOR<TurnoUpdateInput, TurnoUncheckedUpdateInput>
    /**
     * Choose, which Turno to update.
     */
    where: TurnoWhereUniqueInput
  }

  /**
   * Turno updateMany
   */
  export type TurnoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Turnos.
     */
    data: XOR<TurnoUpdateManyMutationInput, TurnoUncheckedUpdateManyInput>
    /**
     * Filter which Turnos to update
     */
    where?: TurnoWhereInput
    /**
     * Limit how many Turnos to update.
     */
    limit?: number
  }

  /**
   * Turno upsert
   */
  export type TurnoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    /**
     * The filter to search for the Turno to update in case it exists.
     */
    where: TurnoWhereUniqueInput
    /**
     * In case the Turno found by the `where` argument doesn't exist, create a new Turno with this data.
     */
    create: XOR<TurnoCreateInput, TurnoUncheckedCreateInput>
    /**
     * In case the Turno was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TurnoUpdateInput, TurnoUncheckedUpdateInput>
  }

  /**
   * Turno delete
   */
  export type TurnoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    /**
     * Filter which Turno to delete.
     */
    where: TurnoWhereUniqueInput
  }

  /**
   * Turno deleteMany
   */
  export type TurnoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Turnos to delete
     */
    where?: TurnoWhereInput
    /**
     * Limit how many Turnos to delete.
     */
    limit?: number
  }

  /**
   * Turno.TurnoEletricistas
   */
  export type Turno$TurnoEletricistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    where?: TurnoEletricistaWhereInput
    orderBy?: TurnoEletricistaOrderByWithRelationInput | TurnoEletricistaOrderByWithRelationInput[]
    cursor?: TurnoEletricistaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TurnoEletricistaScalarFieldEnum | TurnoEletricistaScalarFieldEnum[]
  }

  /**
   * Turno without action
   */
  export type TurnoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
  }


  /**
   * Model TurnoEletricista
   */

  export type AggregateTurnoEletricista = {
    _count: TurnoEletricistaCountAggregateOutputType | null
    _avg: TurnoEletricistaAvgAggregateOutputType | null
    _sum: TurnoEletricistaSumAggregateOutputType | null
    _min: TurnoEletricistaMinAggregateOutputType | null
    _max: TurnoEletricistaMaxAggregateOutputType | null
  }

  export type TurnoEletricistaAvgAggregateOutputType = {
    id: number | null
    turnoId: number | null
    eletricistaId: number | null
  }

  export type TurnoEletricistaSumAggregateOutputType = {
    id: number | null
    turnoId: number | null
    eletricistaId: number | null
  }

  export type TurnoEletricistaMinAggregateOutputType = {
    id: number | null
    turnoId: number | null
    eletricistaId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TurnoEletricistaMaxAggregateOutputType = {
    id: number | null
    turnoId: number | null
    eletricistaId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TurnoEletricistaCountAggregateOutputType = {
    id: number
    turnoId: number
    eletricistaId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type TurnoEletricistaAvgAggregateInputType = {
    id?: true
    turnoId?: true
    eletricistaId?: true
  }

  export type TurnoEletricistaSumAggregateInputType = {
    id?: true
    turnoId?: true
    eletricistaId?: true
  }

  export type TurnoEletricistaMinAggregateInputType = {
    id?: true
    turnoId?: true
    eletricistaId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TurnoEletricistaMaxAggregateInputType = {
    id?: true
    turnoId?: true
    eletricistaId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TurnoEletricistaCountAggregateInputType = {
    id?: true
    turnoId?: true
    eletricistaId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type TurnoEletricistaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TurnoEletricista to aggregate.
     */
    where?: TurnoEletricistaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TurnoEletricistas to fetch.
     */
    orderBy?: TurnoEletricistaOrderByWithRelationInput | TurnoEletricistaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TurnoEletricistaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TurnoEletricistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TurnoEletricistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TurnoEletricistas
    **/
    _count?: true | TurnoEletricistaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TurnoEletricistaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TurnoEletricistaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TurnoEletricistaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TurnoEletricistaMaxAggregateInputType
  }

  export type GetTurnoEletricistaAggregateType<T extends TurnoEletricistaAggregateArgs> = {
        [P in keyof T & keyof AggregateTurnoEletricista]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTurnoEletricista[P]>
      : GetScalarType<T[P], AggregateTurnoEletricista[P]>
  }




  export type TurnoEletricistaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TurnoEletricistaWhereInput
    orderBy?: TurnoEletricistaOrderByWithAggregationInput | TurnoEletricistaOrderByWithAggregationInput[]
    by: TurnoEletricistaScalarFieldEnum[] | TurnoEletricistaScalarFieldEnum
    having?: TurnoEletricistaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TurnoEletricistaCountAggregateInputType | true
    _avg?: TurnoEletricistaAvgAggregateInputType
    _sum?: TurnoEletricistaSumAggregateInputType
    _min?: TurnoEletricistaMinAggregateInputType
    _max?: TurnoEletricistaMaxAggregateInputType
  }

  export type TurnoEletricistaGroupByOutputType = {
    id: number
    turnoId: number
    eletricistaId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: TurnoEletricistaCountAggregateOutputType | null
    _avg: TurnoEletricistaAvgAggregateOutputType | null
    _sum: TurnoEletricistaSumAggregateOutputType | null
    _min: TurnoEletricistaMinAggregateOutputType | null
    _max: TurnoEletricistaMaxAggregateOutputType | null
  }

  type GetTurnoEletricistaGroupByPayload<T extends TurnoEletricistaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TurnoEletricistaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TurnoEletricistaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TurnoEletricistaGroupByOutputType[P]>
            : GetScalarType<T[P], TurnoEletricistaGroupByOutputType[P]>
        }
      >
    >


  export type TurnoEletricistaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    turnoId?: boolean
    eletricistaId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    turno?: boolean | TurnoDefaultArgs<ExtArgs>
    eletricista?: boolean | EletricistaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["turnoEletricista"]>



  export type TurnoEletricistaSelectScalar = {
    id?: boolean
    turnoId?: boolean
    eletricistaId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type TurnoEletricistaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "turnoId" | "eletricistaId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["turnoEletricista"]>
  export type TurnoEletricistaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    turno?: boolean | TurnoDefaultArgs<ExtArgs>
    eletricista?: boolean | EletricistaDefaultArgs<ExtArgs>
  }

  export type $TurnoEletricistaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TurnoEletricista"
    objects: {
      turno: Prisma.$TurnoPayload<ExtArgs>
      eletricista: Prisma.$EletricistaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      turnoId: number
      eletricistaId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["turnoEletricista"]>
    composites: {}
  }

  type TurnoEletricistaGetPayload<S extends boolean | null | undefined | TurnoEletricistaDefaultArgs> = $Result.GetResult<Prisma.$TurnoEletricistaPayload, S>

  type TurnoEletricistaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TurnoEletricistaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TurnoEletricistaCountAggregateInputType | true
    }

  export interface TurnoEletricistaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TurnoEletricista'], meta: { name: 'TurnoEletricista' } }
    /**
     * Find zero or one TurnoEletricista that matches the filter.
     * @param {TurnoEletricistaFindUniqueArgs} args - Arguments to find a TurnoEletricista
     * @example
     * // Get one TurnoEletricista
     * const turnoEletricista = await prisma.turnoEletricista.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TurnoEletricistaFindUniqueArgs>(args: SelectSubset<T, TurnoEletricistaFindUniqueArgs<ExtArgs>>): Prisma__TurnoEletricistaClient<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TurnoEletricista that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TurnoEletricistaFindUniqueOrThrowArgs} args - Arguments to find a TurnoEletricista
     * @example
     * // Get one TurnoEletricista
     * const turnoEletricista = await prisma.turnoEletricista.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TurnoEletricistaFindUniqueOrThrowArgs>(args: SelectSubset<T, TurnoEletricistaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TurnoEletricistaClient<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TurnoEletricista that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoEletricistaFindFirstArgs} args - Arguments to find a TurnoEletricista
     * @example
     * // Get one TurnoEletricista
     * const turnoEletricista = await prisma.turnoEletricista.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TurnoEletricistaFindFirstArgs>(args?: SelectSubset<T, TurnoEletricistaFindFirstArgs<ExtArgs>>): Prisma__TurnoEletricistaClient<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TurnoEletricista that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoEletricistaFindFirstOrThrowArgs} args - Arguments to find a TurnoEletricista
     * @example
     * // Get one TurnoEletricista
     * const turnoEletricista = await prisma.turnoEletricista.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TurnoEletricistaFindFirstOrThrowArgs>(args?: SelectSubset<T, TurnoEletricistaFindFirstOrThrowArgs<ExtArgs>>): Prisma__TurnoEletricistaClient<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TurnoEletricistas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoEletricistaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TurnoEletricistas
     * const turnoEletricistas = await prisma.turnoEletricista.findMany()
     * 
     * // Get first 10 TurnoEletricistas
     * const turnoEletricistas = await prisma.turnoEletricista.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const turnoEletricistaWithIdOnly = await prisma.turnoEletricista.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TurnoEletricistaFindManyArgs>(args?: SelectSubset<T, TurnoEletricistaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TurnoEletricista.
     * @param {TurnoEletricistaCreateArgs} args - Arguments to create a TurnoEletricista.
     * @example
     * // Create one TurnoEletricista
     * const TurnoEletricista = await prisma.turnoEletricista.create({
     *   data: {
     *     // ... data to create a TurnoEletricista
     *   }
     * })
     * 
     */
    create<T extends TurnoEletricistaCreateArgs>(args: SelectSubset<T, TurnoEletricistaCreateArgs<ExtArgs>>): Prisma__TurnoEletricistaClient<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TurnoEletricistas.
     * @param {TurnoEletricistaCreateManyArgs} args - Arguments to create many TurnoEletricistas.
     * @example
     * // Create many TurnoEletricistas
     * const turnoEletricista = await prisma.turnoEletricista.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TurnoEletricistaCreateManyArgs>(args?: SelectSubset<T, TurnoEletricistaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TurnoEletricista.
     * @param {TurnoEletricistaDeleteArgs} args - Arguments to delete one TurnoEletricista.
     * @example
     * // Delete one TurnoEletricista
     * const TurnoEletricista = await prisma.turnoEletricista.delete({
     *   where: {
     *     // ... filter to delete one TurnoEletricista
     *   }
     * })
     * 
     */
    delete<T extends TurnoEletricistaDeleteArgs>(args: SelectSubset<T, TurnoEletricistaDeleteArgs<ExtArgs>>): Prisma__TurnoEletricistaClient<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TurnoEletricista.
     * @param {TurnoEletricistaUpdateArgs} args - Arguments to update one TurnoEletricista.
     * @example
     * // Update one TurnoEletricista
     * const turnoEletricista = await prisma.turnoEletricista.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TurnoEletricistaUpdateArgs>(args: SelectSubset<T, TurnoEletricistaUpdateArgs<ExtArgs>>): Prisma__TurnoEletricistaClient<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TurnoEletricistas.
     * @param {TurnoEletricistaDeleteManyArgs} args - Arguments to filter TurnoEletricistas to delete.
     * @example
     * // Delete a few TurnoEletricistas
     * const { count } = await prisma.turnoEletricista.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TurnoEletricistaDeleteManyArgs>(args?: SelectSubset<T, TurnoEletricistaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TurnoEletricistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoEletricistaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TurnoEletricistas
     * const turnoEletricista = await prisma.turnoEletricista.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TurnoEletricistaUpdateManyArgs>(args: SelectSubset<T, TurnoEletricistaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TurnoEletricista.
     * @param {TurnoEletricistaUpsertArgs} args - Arguments to update or create a TurnoEletricista.
     * @example
     * // Update or create a TurnoEletricista
     * const turnoEletricista = await prisma.turnoEletricista.upsert({
     *   create: {
     *     // ... data to create a TurnoEletricista
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TurnoEletricista we want to update
     *   }
     * })
     */
    upsert<T extends TurnoEletricistaUpsertArgs>(args: SelectSubset<T, TurnoEletricistaUpsertArgs<ExtArgs>>): Prisma__TurnoEletricistaClient<$Result.GetResult<Prisma.$TurnoEletricistaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TurnoEletricistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoEletricistaCountArgs} args - Arguments to filter TurnoEletricistas to count.
     * @example
     * // Count the number of TurnoEletricistas
     * const count = await prisma.turnoEletricista.count({
     *   where: {
     *     // ... the filter for the TurnoEletricistas we want to count
     *   }
     * })
    **/
    count<T extends TurnoEletricistaCountArgs>(
      args?: Subset<T, TurnoEletricistaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TurnoEletricistaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TurnoEletricista.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoEletricistaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TurnoEletricistaAggregateArgs>(args: Subset<T, TurnoEletricistaAggregateArgs>): Prisma.PrismaPromise<GetTurnoEletricistaAggregateType<T>>

    /**
     * Group by TurnoEletricista.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TurnoEletricistaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TurnoEletricistaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TurnoEletricistaGroupByArgs['orderBy'] }
        : { orderBy?: TurnoEletricistaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TurnoEletricistaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTurnoEletricistaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TurnoEletricista model
   */
  readonly fields: TurnoEletricistaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TurnoEletricista.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TurnoEletricistaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    turno<T extends TurnoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TurnoDefaultArgs<ExtArgs>>): Prisma__TurnoClient<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    eletricista<T extends EletricistaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EletricistaDefaultArgs<ExtArgs>>): Prisma__EletricistaClient<$Result.GetResult<Prisma.$EletricistaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TurnoEletricista model
   */
  interface TurnoEletricistaFieldRefs {
    readonly id: FieldRef<"TurnoEletricista", 'Int'>
    readonly turnoId: FieldRef<"TurnoEletricista", 'Int'>
    readonly eletricistaId: FieldRef<"TurnoEletricista", 'Int'>
    readonly createdAt: FieldRef<"TurnoEletricista", 'DateTime'>
    readonly createdBy: FieldRef<"TurnoEletricista", 'String'>
    readonly updatedAt: FieldRef<"TurnoEletricista", 'DateTime'>
    readonly updatedBy: FieldRef<"TurnoEletricista", 'String'>
    readonly deletedAt: FieldRef<"TurnoEletricista", 'DateTime'>
    readonly deletedBy: FieldRef<"TurnoEletricista", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TurnoEletricista findUnique
   */
  export type TurnoEletricistaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    /**
     * Filter, which TurnoEletricista to fetch.
     */
    where: TurnoEletricistaWhereUniqueInput
  }

  /**
   * TurnoEletricista findUniqueOrThrow
   */
  export type TurnoEletricistaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    /**
     * Filter, which TurnoEletricista to fetch.
     */
    where: TurnoEletricistaWhereUniqueInput
  }

  /**
   * TurnoEletricista findFirst
   */
  export type TurnoEletricistaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    /**
     * Filter, which TurnoEletricista to fetch.
     */
    where?: TurnoEletricistaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TurnoEletricistas to fetch.
     */
    orderBy?: TurnoEletricistaOrderByWithRelationInput | TurnoEletricistaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TurnoEletricistas.
     */
    cursor?: TurnoEletricistaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TurnoEletricistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TurnoEletricistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TurnoEletricistas.
     */
    distinct?: TurnoEletricistaScalarFieldEnum | TurnoEletricistaScalarFieldEnum[]
  }

  /**
   * TurnoEletricista findFirstOrThrow
   */
  export type TurnoEletricistaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    /**
     * Filter, which TurnoEletricista to fetch.
     */
    where?: TurnoEletricistaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TurnoEletricistas to fetch.
     */
    orderBy?: TurnoEletricistaOrderByWithRelationInput | TurnoEletricistaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TurnoEletricistas.
     */
    cursor?: TurnoEletricistaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TurnoEletricistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TurnoEletricistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TurnoEletricistas.
     */
    distinct?: TurnoEletricistaScalarFieldEnum | TurnoEletricistaScalarFieldEnum[]
  }

  /**
   * TurnoEletricista findMany
   */
  export type TurnoEletricistaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    /**
     * Filter, which TurnoEletricistas to fetch.
     */
    where?: TurnoEletricistaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TurnoEletricistas to fetch.
     */
    orderBy?: TurnoEletricistaOrderByWithRelationInput | TurnoEletricistaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TurnoEletricistas.
     */
    cursor?: TurnoEletricistaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TurnoEletricistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TurnoEletricistas.
     */
    skip?: number
    distinct?: TurnoEletricistaScalarFieldEnum | TurnoEletricistaScalarFieldEnum[]
  }

  /**
   * TurnoEletricista create
   */
  export type TurnoEletricistaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    /**
     * The data needed to create a TurnoEletricista.
     */
    data: XOR<TurnoEletricistaCreateInput, TurnoEletricistaUncheckedCreateInput>
  }

  /**
   * TurnoEletricista createMany
   */
  export type TurnoEletricistaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TurnoEletricistas.
     */
    data: TurnoEletricistaCreateManyInput | TurnoEletricistaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TurnoEletricista update
   */
  export type TurnoEletricistaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    /**
     * The data needed to update a TurnoEletricista.
     */
    data: XOR<TurnoEletricistaUpdateInput, TurnoEletricistaUncheckedUpdateInput>
    /**
     * Choose, which TurnoEletricista to update.
     */
    where: TurnoEletricistaWhereUniqueInput
  }

  /**
   * TurnoEletricista updateMany
   */
  export type TurnoEletricistaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TurnoEletricistas.
     */
    data: XOR<TurnoEletricistaUpdateManyMutationInput, TurnoEletricistaUncheckedUpdateManyInput>
    /**
     * Filter which TurnoEletricistas to update
     */
    where?: TurnoEletricistaWhereInput
    /**
     * Limit how many TurnoEletricistas to update.
     */
    limit?: number
  }

  /**
   * TurnoEletricista upsert
   */
  export type TurnoEletricistaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    /**
     * The filter to search for the TurnoEletricista to update in case it exists.
     */
    where: TurnoEletricistaWhereUniqueInput
    /**
     * In case the TurnoEletricista found by the `where` argument doesn't exist, create a new TurnoEletricista with this data.
     */
    create: XOR<TurnoEletricistaCreateInput, TurnoEletricistaUncheckedCreateInput>
    /**
     * In case the TurnoEletricista was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TurnoEletricistaUpdateInput, TurnoEletricistaUncheckedUpdateInput>
  }

  /**
   * TurnoEletricista delete
   */
  export type TurnoEletricistaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
    /**
     * Filter which TurnoEletricista to delete.
     */
    where: TurnoEletricistaWhereUniqueInput
  }

  /**
   * TurnoEletricista deleteMany
   */
  export type TurnoEletricistaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TurnoEletricistas to delete
     */
    where?: TurnoEletricistaWhereInput
    /**
     * Limit how many TurnoEletricistas to delete.
     */
    limit?: number
  }

  /**
   * TurnoEletricista without action
   */
  export type TurnoEletricistaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TurnoEletricista
     */
    select?: TurnoEletricistaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TurnoEletricista
     */
    omit?: TurnoEletricistaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoEletricistaInclude<ExtArgs> | null
  }


  /**
   * Model VeiculoBaseHistorico
   */

  export type AggregateVeiculoBaseHistorico = {
    _count: VeiculoBaseHistoricoCountAggregateOutputType | null
    _avg: VeiculoBaseHistoricoAvgAggregateOutputType | null
    _sum: VeiculoBaseHistoricoSumAggregateOutputType | null
    _min: VeiculoBaseHistoricoMinAggregateOutputType | null
    _max: VeiculoBaseHistoricoMaxAggregateOutputType | null
  }

  export type VeiculoBaseHistoricoAvgAggregateOutputType = {
    id: number | null
    veiculoId: number | null
    baseId: number | null
  }

  export type VeiculoBaseHistoricoSumAggregateOutputType = {
    id: number | null
    veiculoId: number | null
    baseId: number | null
  }

  export type VeiculoBaseHistoricoMinAggregateOutputType = {
    id: number | null
    veiculoId: number | null
    baseId: number | null
    dataInicio: Date | null
    dataFim: Date | null
    motivo: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type VeiculoBaseHistoricoMaxAggregateOutputType = {
    id: number | null
    veiculoId: number | null
    baseId: number | null
    dataInicio: Date | null
    dataFim: Date | null
    motivo: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type VeiculoBaseHistoricoCountAggregateOutputType = {
    id: number
    veiculoId: number
    baseId: number
    dataInicio: number
    dataFim: number
    motivo: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type VeiculoBaseHistoricoAvgAggregateInputType = {
    id?: true
    veiculoId?: true
    baseId?: true
  }

  export type VeiculoBaseHistoricoSumAggregateInputType = {
    id?: true
    veiculoId?: true
    baseId?: true
  }

  export type VeiculoBaseHistoricoMinAggregateInputType = {
    id?: true
    veiculoId?: true
    baseId?: true
    dataInicio?: true
    dataFim?: true
    motivo?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type VeiculoBaseHistoricoMaxAggregateInputType = {
    id?: true
    veiculoId?: true
    baseId?: true
    dataInicio?: true
    dataFim?: true
    motivo?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type VeiculoBaseHistoricoCountAggregateInputType = {
    id?: true
    veiculoId?: true
    baseId?: true
    dataInicio?: true
    dataFim?: true
    motivo?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type VeiculoBaseHistoricoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VeiculoBaseHistorico to aggregate.
     */
    where?: VeiculoBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VeiculoBaseHistoricos to fetch.
     */
    orderBy?: VeiculoBaseHistoricoOrderByWithRelationInput | VeiculoBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VeiculoBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VeiculoBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VeiculoBaseHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VeiculoBaseHistoricos
    **/
    _count?: true | VeiculoBaseHistoricoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VeiculoBaseHistoricoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VeiculoBaseHistoricoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VeiculoBaseHistoricoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VeiculoBaseHistoricoMaxAggregateInputType
  }

  export type GetVeiculoBaseHistoricoAggregateType<T extends VeiculoBaseHistoricoAggregateArgs> = {
        [P in keyof T & keyof AggregateVeiculoBaseHistorico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVeiculoBaseHistorico[P]>
      : GetScalarType<T[P], AggregateVeiculoBaseHistorico[P]>
  }




  export type VeiculoBaseHistoricoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VeiculoBaseHistoricoWhereInput
    orderBy?: VeiculoBaseHistoricoOrderByWithAggregationInput | VeiculoBaseHistoricoOrderByWithAggregationInput[]
    by: VeiculoBaseHistoricoScalarFieldEnum[] | VeiculoBaseHistoricoScalarFieldEnum
    having?: VeiculoBaseHistoricoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VeiculoBaseHistoricoCountAggregateInputType | true
    _avg?: VeiculoBaseHistoricoAvgAggregateInputType
    _sum?: VeiculoBaseHistoricoSumAggregateInputType
    _min?: VeiculoBaseHistoricoMinAggregateInputType
    _max?: VeiculoBaseHistoricoMaxAggregateInputType
  }

  export type VeiculoBaseHistoricoGroupByOutputType = {
    id: number
    veiculoId: number
    baseId: number
    dataInicio: Date
    dataFim: Date | null
    motivo: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: VeiculoBaseHistoricoCountAggregateOutputType | null
    _avg: VeiculoBaseHistoricoAvgAggregateOutputType | null
    _sum: VeiculoBaseHistoricoSumAggregateOutputType | null
    _min: VeiculoBaseHistoricoMinAggregateOutputType | null
    _max: VeiculoBaseHistoricoMaxAggregateOutputType | null
  }

  type GetVeiculoBaseHistoricoGroupByPayload<T extends VeiculoBaseHistoricoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VeiculoBaseHistoricoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VeiculoBaseHistoricoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VeiculoBaseHistoricoGroupByOutputType[P]>
            : GetScalarType<T[P], VeiculoBaseHistoricoGroupByOutputType[P]>
        }
      >
    >


  export type VeiculoBaseHistoricoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    veiculoId?: boolean
    baseId?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    motivo?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    veiculo?: boolean | VeiculoDefaultArgs<ExtArgs>
    base?: boolean | BaseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["veiculoBaseHistorico"]>



  export type VeiculoBaseHistoricoSelectScalar = {
    id?: boolean
    veiculoId?: boolean
    baseId?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    motivo?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type VeiculoBaseHistoricoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "veiculoId" | "baseId" | "dataInicio" | "dataFim" | "motivo" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["veiculoBaseHistorico"]>
  export type VeiculoBaseHistoricoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    veiculo?: boolean | VeiculoDefaultArgs<ExtArgs>
    base?: boolean | BaseDefaultArgs<ExtArgs>
  }

  export type $VeiculoBaseHistoricoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VeiculoBaseHistorico"
    objects: {
      veiculo: Prisma.$VeiculoPayload<ExtArgs>
      base: Prisma.$BasePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      veiculoId: number
      baseId: number
      dataInicio: Date
      dataFim: Date | null
      motivo: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["veiculoBaseHistorico"]>
    composites: {}
  }

  type VeiculoBaseHistoricoGetPayload<S extends boolean | null | undefined | VeiculoBaseHistoricoDefaultArgs> = $Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload, S>

  type VeiculoBaseHistoricoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VeiculoBaseHistoricoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VeiculoBaseHistoricoCountAggregateInputType | true
    }

  export interface VeiculoBaseHistoricoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VeiculoBaseHistorico'], meta: { name: 'VeiculoBaseHistorico' } }
    /**
     * Find zero or one VeiculoBaseHistorico that matches the filter.
     * @param {VeiculoBaseHistoricoFindUniqueArgs} args - Arguments to find a VeiculoBaseHistorico
     * @example
     * // Get one VeiculoBaseHistorico
     * const veiculoBaseHistorico = await prisma.veiculoBaseHistorico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VeiculoBaseHistoricoFindUniqueArgs>(args: SelectSubset<T, VeiculoBaseHistoricoFindUniqueArgs<ExtArgs>>): Prisma__VeiculoBaseHistoricoClient<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VeiculoBaseHistorico that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VeiculoBaseHistoricoFindUniqueOrThrowArgs} args - Arguments to find a VeiculoBaseHistorico
     * @example
     * // Get one VeiculoBaseHistorico
     * const veiculoBaseHistorico = await prisma.veiculoBaseHistorico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VeiculoBaseHistoricoFindUniqueOrThrowArgs>(args: SelectSubset<T, VeiculoBaseHistoricoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VeiculoBaseHistoricoClient<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VeiculoBaseHistorico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoBaseHistoricoFindFirstArgs} args - Arguments to find a VeiculoBaseHistorico
     * @example
     * // Get one VeiculoBaseHistorico
     * const veiculoBaseHistorico = await prisma.veiculoBaseHistorico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VeiculoBaseHistoricoFindFirstArgs>(args?: SelectSubset<T, VeiculoBaseHistoricoFindFirstArgs<ExtArgs>>): Prisma__VeiculoBaseHistoricoClient<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VeiculoBaseHistorico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoBaseHistoricoFindFirstOrThrowArgs} args - Arguments to find a VeiculoBaseHistorico
     * @example
     * // Get one VeiculoBaseHistorico
     * const veiculoBaseHistorico = await prisma.veiculoBaseHistorico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VeiculoBaseHistoricoFindFirstOrThrowArgs>(args?: SelectSubset<T, VeiculoBaseHistoricoFindFirstOrThrowArgs<ExtArgs>>): Prisma__VeiculoBaseHistoricoClient<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VeiculoBaseHistoricos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoBaseHistoricoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VeiculoBaseHistoricos
     * const veiculoBaseHistoricos = await prisma.veiculoBaseHistorico.findMany()
     * 
     * // Get first 10 VeiculoBaseHistoricos
     * const veiculoBaseHistoricos = await prisma.veiculoBaseHistorico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const veiculoBaseHistoricoWithIdOnly = await prisma.veiculoBaseHistorico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VeiculoBaseHistoricoFindManyArgs>(args?: SelectSubset<T, VeiculoBaseHistoricoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VeiculoBaseHistorico.
     * @param {VeiculoBaseHistoricoCreateArgs} args - Arguments to create a VeiculoBaseHistorico.
     * @example
     * // Create one VeiculoBaseHistorico
     * const VeiculoBaseHistorico = await prisma.veiculoBaseHistorico.create({
     *   data: {
     *     // ... data to create a VeiculoBaseHistorico
     *   }
     * })
     * 
     */
    create<T extends VeiculoBaseHistoricoCreateArgs>(args: SelectSubset<T, VeiculoBaseHistoricoCreateArgs<ExtArgs>>): Prisma__VeiculoBaseHistoricoClient<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VeiculoBaseHistoricos.
     * @param {VeiculoBaseHistoricoCreateManyArgs} args - Arguments to create many VeiculoBaseHistoricos.
     * @example
     * // Create many VeiculoBaseHistoricos
     * const veiculoBaseHistorico = await prisma.veiculoBaseHistorico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VeiculoBaseHistoricoCreateManyArgs>(args?: SelectSubset<T, VeiculoBaseHistoricoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a VeiculoBaseHistorico.
     * @param {VeiculoBaseHistoricoDeleteArgs} args - Arguments to delete one VeiculoBaseHistorico.
     * @example
     * // Delete one VeiculoBaseHistorico
     * const VeiculoBaseHistorico = await prisma.veiculoBaseHistorico.delete({
     *   where: {
     *     // ... filter to delete one VeiculoBaseHistorico
     *   }
     * })
     * 
     */
    delete<T extends VeiculoBaseHistoricoDeleteArgs>(args: SelectSubset<T, VeiculoBaseHistoricoDeleteArgs<ExtArgs>>): Prisma__VeiculoBaseHistoricoClient<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VeiculoBaseHistorico.
     * @param {VeiculoBaseHistoricoUpdateArgs} args - Arguments to update one VeiculoBaseHistorico.
     * @example
     * // Update one VeiculoBaseHistorico
     * const veiculoBaseHistorico = await prisma.veiculoBaseHistorico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VeiculoBaseHistoricoUpdateArgs>(args: SelectSubset<T, VeiculoBaseHistoricoUpdateArgs<ExtArgs>>): Prisma__VeiculoBaseHistoricoClient<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VeiculoBaseHistoricos.
     * @param {VeiculoBaseHistoricoDeleteManyArgs} args - Arguments to filter VeiculoBaseHistoricos to delete.
     * @example
     * // Delete a few VeiculoBaseHistoricos
     * const { count } = await prisma.veiculoBaseHistorico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VeiculoBaseHistoricoDeleteManyArgs>(args?: SelectSubset<T, VeiculoBaseHistoricoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VeiculoBaseHistoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoBaseHistoricoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VeiculoBaseHistoricos
     * const veiculoBaseHistorico = await prisma.veiculoBaseHistorico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VeiculoBaseHistoricoUpdateManyArgs>(args: SelectSubset<T, VeiculoBaseHistoricoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VeiculoBaseHistorico.
     * @param {VeiculoBaseHistoricoUpsertArgs} args - Arguments to update or create a VeiculoBaseHistorico.
     * @example
     * // Update or create a VeiculoBaseHistorico
     * const veiculoBaseHistorico = await prisma.veiculoBaseHistorico.upsert({
     *   create: {
     *     // ... data to create a VeiculoBaseHistorico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VeiculoBaseHistorico we want to update
     *   }
     * })
     */
    upsert<T extends VeiculoBaseHistoricoUpsertArgs>(args: SelectSubset<T, VeiculoBaseHistoricoUpsertArgs<ExtArgs>>): Prisma__VeiculoBaseHistoricoClient<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VeiculoBaseHistoricos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoBaseHistoricoCountArgs} args - Arguments to filter VeiculoBaseHistoricos to count.
     * @example
     * // Count the number of VeiculoBaseHistoricos
     * const count = await prisma.veiculoBaseHistorico.count({
     *   where: {
     *     // ... the filter for the VeiculoBaseHistoricos we want to count
     *   }
     * })
    **/
    count<T extends VeiculoBaseHistoricoCountArgs>(
      args?: Subset<T, VeiculoBaseHistoricoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VeiculoBaseHistoricoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VeiculoBaseHistorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoBaseHistoricoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VeiculoBaseHistoricoAggregateArgs>(args: Subset<T, VeiculoBaseHistoricoAggregateArgs>): Prisma.PrismaPromise<GetVeiculoBaseHistoricoAggregateType<T>>

    /**
     * Group by VeiculoBaseHistorico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoBaseHistoricoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VeiculoBaseHistoricoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VeiculoBaseHistoricoGroupByArgs['orderBy'] }
        : { orderBy?: VeiculoBaseHistoricoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VeiculoBaseHistoricoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVeiculoBaseHistoricoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VeiculoBaseHistorico model
   */
  readonly fields: VeiculoBaseHistoricoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VeiculoBaseHistorico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VeiculoBaseHistoricoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    veiculo<T extends VeiculoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VeiculoDefaultArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    base<T extends BaseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BaseDefaultArgs<ExtArgs>>): Prisma__BaseClient<$Result.GetResult<Prisma.$BasePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VeiculoBaseHistorico model
   */
  interface VeiculoBaseHistoricoFieldRefs {
    readonly id: FieldRef<"VeiculoBaseHistorico", 'Int'>
    readonly veiculoId: FieldRef<"VeiculoBaseHistorico", 'Int'>
    readonly baseId: FieldRef<"VeiculoBaseHistorico", 'Int'>
    readonly dataInicio: FieldRef<"VeiculoBaseHistorico", 'DateTime'>
    readonly dataFim: FieldRef<"VeiculoBaseHistorico", 'DateTime'>
    readonly motivo: FieldRef<"VeiculoBaseHistorico", 'String'>
    readonly createdAt: FieldRef<"VeiculoBaseHistorico", 'DateTime'>
    readonly createdBy: FieldRef<"VeiculoBaseHistorico", 'String'>
    readonly updatedAt: FieldRef<"VeiculoBaseHistorico", 'DateTime'>
    readonly updatedBy: FieldRef<"VeiculoBaseHistorico", 'String'>
    readonly deletedAt: FieldRef<"VeiculoBaseHistorico", 'DateTime'>
    readonly deletedBy: FieldRef<"VeiculoBaseHistorico", 'String'>
  }
    

  // Custom InputTypes
  /**
   * VeiculoBaseHistorico findUnique
   */
  export type VeiculoBaseHistoricoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which VeiculoBaseHistorico to fetch.
     */
    where: VeiculoBaseHistoricoWhereUniqueInput
  }

  /**
   * VeiculoBaseHistorico findUniqueOrThrow
   */
  export type VeiculoBaseHistoricoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which VeiculoBaseHistorico to fetch.
     */
    where: VeiculoBaseHistoricoWhereUniqueInput
  }

  /**
   * VeiculoBaseHistorico findFirst
   */
  export type VeiculoBaseHistoricoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which VeiculoBaseHistorico to fetch.
     */
    where?: VeiculoBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VeiculoBaseHistoricos to fetch.
     */
    orderBy?: VeiculoBaseHistoricoOrderByWithRelationInput | VeiculoBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VeiculoBaseHistoricos.
     */
    cursor?: VeiculoBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VeiculoBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VeiculoBaseHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VeiculoBaseHistoricos.
     */
    distinct?: VeiculoBaseHistoricoScalarFieldEnum | VeiculoBaseHistoricoScalarFieldEnum[]
  }

  /**
   * VeiculoBaseHistorico findFirstOrThrow
   */
  export type VeiculoBaseHistoricoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which VeiculoBaseHistorico to fetch.
     */
    where?: VeiculoBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VeiculoBaseHistoricos to fetch.
     */
    orderBy?: VeiculoBaseHistoricoOrderByWithRelationInput | VeiculoBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VeiculoBaseHistoricos.
     */
    cursor?: VeiculoBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VeiculoBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VeiculoBaseHistoricos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VeiculoBaseHistoricos.
     */
    distinct?: VeiculoBaseHistoricoScalarFieldEnum | VeiculoBaseHistoricoScalarFieldEnum[]
  }

  /**
   * VeiculoBaseHistorico findMany
   */
  export type VeiculoBaseHistoricoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter, which VeiculoBaseHistoricos to fetch.
     */
    where?: VeiculoBaseHistoricoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VeiculoBaseHistoricos to fetch.
     */
    orderBy?: VeiculoBaseHistoricoOrderByWithRelationInput | VeiculoBaseHistoricoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VeiculoBaseHistoricos.
     */
    cursor?: VeiculoBaseHistoricoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VeiculoBaseHistoricos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VeiculoBaseHistoricos.
     */
    skip?: number
    distinct?: VeiculoBaseHistoricoScalarFieldEnum | VeiculoBaseHistoricoScalarFieldEnum[]
  }

  /**
   * VeiculoBaseHistorico create
   */
  export type VeiculoBaseHistoricoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    /**
     * The data needed to create a VeiculoBaseHistorico.
     */
    data: XOR<VeiculoBaseHistoricoCreateInput, VeiculoBaseHistoricoUncheckedCreateInput>
  }

  /**
   * VeiculoBaseHistorico createMany
   */
  export type VeiculoBaseHistoricoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VeiculoBaseHistoricos.
     */
    data: VeiculoBaseHistoricoCreateManyInput | VeiculoBaseHistoricoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VeiculoBaseHistorico update
   */
  export type VeiculoBaseHistoricoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    /**
     * The data needed to update a VeiculoBaseHistorico.
     */
    data: XOR<VeiculoBaseHistoricoUpdateInput, VeiculoBaseHistoricoUncheckedUpdateInput>
    /**
     * Choose, which VeiculoBaseHistorico to update.
     */
    where: VeiculoBaseHistoricoWhereUniqueInput
  }

  /**
   * VeiculoBaseHistorico updateMany
   */
  export type VeiculoBaseHistoricoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VeiculoBaseHistoricos.
     */
    data: XOR<VeiculoBaseHistoricoUpdateManyMutationInput, VeiculoBaseHistoricoUncheckedUpdateManyInput>
    /**
     * Filter which VeiculoBaseHistoricos to update
     */
    where?: VeiculoBaseHistoricoWhereInput
    /**
     * Limit how many VeiculoBaseHistoricos to update.
     */
    limit?: number
  }

  /**
   * VeiculoBaseHistorico upsert
   */
  export type VeiculoBaseHistoricoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    /**
     * The filter to search for the VeiculoBaseHistorico to update in case it exists.
     */
    where: VeiculoBaseHistoricoWhereUniqueInput
    /**
     * In case the VeiculoBaseHistorico found by the `where` argument doesn't exist, create a new VeiculoBaseHistorico with this data.
     */
    create: XOR<VeiculoBaseHistoricoCreateInput, VeiculoBaseHistoricoUncheckedCreateInput>
    /**
     * In case the VeiculoBaseHistorico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VeiculoBaseHistoricoUpdateInput, VeiculoBaseHistoricoUncheckedUpdateInput>
  }

  /**
   * VeiculoBaseHistorico delete
   */
  export type VeiculoBaseHistoricoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    /**
     * Filter which VeiculoBaseHistorico to delete.
     */
    where: VeiculoBaseHistoricoWhereUniqueInput
  }

  /**
   * VeiculoBaseHistorico deleteMany
   */
  export type VeiculoBaseHistoricoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VeiculoBaseHistoricos to delete
     */
    where?: VeiculoBaseHistoricoWhereInput
    /**
     * Limit how many VeiculoBaseHistoricos to delete.
     */
    limit?: number
  }

  /**
   * VeiculoBaseHistorico without action
   */
  export type VeiculoBaseHistoricoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
  }


  /**
   * Model TipoVeiculo
   */

  export type AggregateTipoVeiculo = {
    _count: TipoVeiculoCountAggregateOutputType | null
    _avg: TipoVeiculoAvgAggregateOutputType | null
    _sum: TipoVeiculoSumAggregateOutputType | null
    _min: TipoVeiculoMinAggregateOutputType | null
    _max: TipoVeiculoMaxAggregateOutputType | null
  }

  export type TipoVeiculoAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoVeiculoSumAggregateOutputType = {
    id: number | null
  }

  export type TipoVeiculoMinAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoVeiculoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type TipoVeiculoCountAggregateOutputType = {
    id: number
    nome: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type TipoVeiculoAvgAggregateInputType = {
    id?: true
  }

  export type TipoVeiculoSumAggregateInputType = {
    id?: true
  }

  export type TipoVeiculoMinAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoVeiculoMaxAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type TipoVeiculoCountAggregateInputType = {
    id?: true
    nome?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type TipoVeiculoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoVeiculo to aggregate.
     */
    where?: TipoVeiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoVeiculos to fetch.
     */
    orderBy?: TipoVeiculoOrderByWithRelationInput | TipoVeiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoVeiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoVeiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoVeiculos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoVeiculos
    **/
    _count?: true | TipoVeiculoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoVeiculoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoVeiculoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoVeiculoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoVeiculoMaxAggregateInputType
  }

  export type GetTipoVeiculoAggregateType<T extends TipoVeiculoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoVeiculo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoVeiculo[P]>
      : GetScalarType<T[P], AggregateTipoVeiculo[P]>
  }




  export type TipoVeiculoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoVeiculoWhereInput
    orderBy?: TipoVeiculoOrderByWithAggregationInput | TipoVeiculoOrderByWithAggregationInput[]
    by: TipoVeiculoScalarFieldEnum[] | TipoVeiculoScalarFieldEnum
    having?: TipoVeiculoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoVeiculoCountAggregateInputType | true
    _avg?: TipoVeiculoAvgAggregateInputType
    _sum?: TipoVeiculoSumAggregateInputType
    _min?: TipoVeiculoMinAggregateInputType
    _max?: TipoVeiculoMaxAggregateInputType
  }

  export type TipoVeiculoGroupByOutputType = {
    id: number
    nome: string
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: TipoVeiculoCountAggregateOutputType | null
    _avg: TipoVeiculoAvgAggregateOutputType | null
    _sum: TipoVeiculoSumAggregateOutputType | null
    _min: TipoVeiculoMinAggregateOutputType | null
    _max: TipoVeiculoMaxAggregateOutputType | null
  }

  type GetTipoVeiculoGroupByPayload<T extends TipoVeiculoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoVeiculoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoVeiculoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoVeiculoGroupByOutputType[P]>
            : GetScalarType<T[P], TipoVeiculoGroupByOutputType[P]>
        }
      >
    >


  export type TipoVeiculoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    Veiculo?: boolean | TipoVeiculo$VeiculoArgs<ExtArgs>
    ChecklistTipoVeiculoRelacao?: boolean | TipoVeiculo$ChecklistTipoVeiculoRelacaoArgs<ExtArgs>
    _count?: boolean | TipoVeiculoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoVeiculo"]>



  export type TipoVeiculoSelectScalar = {
    id?: boolean
    nome?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type TipoVeiculoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["tipoVeiculo"]>
  export type TipoVeiculoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Veiculo?: boolean | TipoVeiculo$VeiculoArgs<ExtArgs>
    ChecklistTipoVeiculoRelacao?: boolean | TipoVeiculo$ChecklistTipoVeiculoRelacaoArgs<ExtArgs>
    _count?: boolean | TipoVeiculoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TipoVeiculoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoVeiculo"
    objects: {
      Veiculo: Prisma.$VeiculoPayload<ExtArgs>[]
      ChecklistTipoVeiculoRelacao: Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["tipoVeiculo"]>
    composites: {}
  }

  type TipoVeiculoGetPayload<S extends boolean | null | undefined | TipoVeiculoDefaultArgs> = $Result.GetResult<Prisma.$TipoVeiculoPayload, S>

  type TipoVeiculoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TipoVeiculoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipoVeiculoCountAggregateInputType | true
    }

  export interface TipoVeiculoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoVeiculo'], meta: { name: 'TipoVeiculo' } }
    /**
     * Find zero or one TipoVeiculo that matches the filter.
     * @param {TipoVeiculoFindUniqueArgs} args - Arguments to find a TipoVeiculo
     * @example
     * // Get one TipoVeiculo
     * const tipoVeiculo = await prisma.tipoVeiculo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoVeiculoFindUniqueArgs>(args: SelectSubset<T, TipoVeiculoFindUniqueArgs<ExtArgs>>): Prisma__TipoVeiculoClient<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TipoVeiculo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TipoVeiculoFindUniqueOrThrowArgs} args - Arguments to find a TipoVeiculo
     * @example
     * // Get one TipoVeiculo
     * const tipoVeiculo = await prisma.tipoVeiculo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoVeiculoFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoVeiculoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoVeiculoClient<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoVeiculo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoVeiculoFindFirstArgs} args - Arguments to find a TipoVeiculo
     * @example
     * // Get one TipoVeiculo
     * const tipoVeiculo = await prisma.tipoVeiculo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoVeiculoFindFirstArgs>(args?: SelectSubset<T, TipoVeiculoFindFirstArgs<ExtArgs>>): Prisma__TipoVeiculoClient<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoVeiculo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoVeiculoFindFirstOrThrowArgs} args - Arguments to find a TipoVeiculo
     * @example
     * // Get one TipoVeiculo
     * const tipoVeiculo = await prisma.tipoVeiculo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoVeiculoFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoVeiculoFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoVeiculoClient<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TipoVeiculos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoVeiculoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoVeiculos
     * const tipoVeiculos = await prisma.tipoVeiculo.findMany()
     * 
     * // Get first 10 TipoVeiculos
     * const tipoVeiculos = await prisma.tipoVeiculo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoVeiculoWithIdOnly = await prisma.tipoVeiculo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoVeiculoFindManyArgs>(args?: SelectSubset<T, TipoVeiculoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TipoVeiculo.
     * @param {TipoVeiculoCreateArgs} args - Arguments to create a TipoVeiculo.
     * @example
     * // Create one TipoVeiculo
     * const TipoVeiculo = await prisma.tipoVeiculo.create({
     *   data: {
     *     // ... data to create a TipoVeiculo
     *   }
     * })
     * 
     */
    create<T extends TipoVeiculoCreateArgs>(args: SelectSubset<T, TipoVeiculoCreateArgs<ExtArgs>>): Prisma__TipoVeiculoClient<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TipoVeiculos.
     * @param {TipoVeiculoCreateManyArgs} args - Arguments to create many TipoVeiculos.
     * @example
     * // Create many TipoVeiculos
     * const tipoVeiculo = await prisma.tipoVeiculo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoVeiculoCreateManyArgs>(args?: SelectSubset<T, TipoVeiculoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TipoVeiculo.
     * @param {TipoVeiculoDeleteArgs} args - Arguments to delete one TipoVeiculo.
     * @example
     * // Delete one TipoVeiculo
     * const TipoVeiculo = await prisma.tipoVeiculo.delete({
     *   where: {
     *     // ... filter to delete one TipoVeiculo
     *   }
     * })
     * 
     */
    delete<T extends TipoVeiculoDeleteArgs>(args: SelectSubset<T, TipoVeiculoDeleteArgs<ExtArgs>>): Prisma__TipoVeiculoClient<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TipoVeiculo.
     * @param {TipoVeiculoUpdateArgs} args - Arguments to update one TipoVeiculo.
     * @example
     * // Update one TipoVeiculo
     * const tipoVeiculo = await prisma.tipoVeiculo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoVeiculoUpdateArgs>(args: SelectSubset<T, TipoVeiculoUpdateArgs<ExtArgs>>): Prisma__TipoVeiculoClient<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TipoVeiculos.
     * @param {TipoVeiculoDeleteManyArgs} args - Arguments to filter TipoVeiculos to delete.
     * @example
     * // Delete a few TipoVeiculos
     * const { count } = await prisma.tipoVeiculo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoVeiculoDeleteManyArgs>(args?: SelectSubset<T, TipoVeiculoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoVeiculos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoVeiculoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoVeiculos
     * const tipoVeiculo = await prisma.tipoVeiculo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoVeiculoUpdateManyArgs>(args: SelectSubset<T, TipoVeiculoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoVeiculo.
     * @param {TipoVeiculoUpsertArgs} args - Arguments to update or create a TipoVeiculo.
     * @example
     * // Update or create a TipoVeiculo
     * const tipoVeiculo = await prisma.tipoVeiculo.upsert({
     *   create: {
     *     // ... data to create a TipoVeiculo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoVeiculo we want to update
     *   }
     * })
     */
    upsert<T extends TipoVeiculoUpsertArgs>(args: SelectSubset<T, TipoVeiculoUpsertArgs<ExtArgs>>): Prisma__TipoVeiculoClient<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TipoVeiculos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoVeiculoCountArgs} args - Arguments to filter TipoVeiculos to count.
     * @example
     * // Count the number of TipoVeiculos
     * const count = await prisma.tipoVeiculo.count({
     *   where: {
     *     // ... the filter for the TipoVeiculos we want to count
     *   }
     * })
    **/
    count<T extends TipoVeiculoCountArgs>(
      args?: Subset<T, TipoVeiculoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoVeiculoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoVeiculo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoVeiculoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoVeiculoAggregateArgs>(args: Subset<T, TipoVeiculoAggregateArgs>): Prisma.PrismaPromise<GetTipoVeiculoAggregateType<T>>

    /**
     * Group by TipoVeiculo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoVeiculoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoVeiculoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoVeiculoGroupByArgs['orderBy'] }
        : { orderBy?: TipoVeiculoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoVeiculoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoVeiculoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoVeiculo model
   */
  readonly fields: TipoVeiculoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoVeiculo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoVeiculoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Veiculo<T extends TipoVeiculo$VeiculoArgs<ExtArgs> = {}>(args?: Subset<T, TipoVeiculo$VeiculoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ChecklistTipoVeiculoRelacao<T extends TipoVeiculo$ChecklistTipoVeiculoRelacaoArgs<ExtArgs> = {}>(args?: Subset<T, TipoVeiculo$ChecklistTipoVeiculoRelacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChecklistTipoVeiculoRelacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoVeiculo model
   */
  interface TipoVeiculoFieldRefs {
    readonly id: FieldRef<"TipoVeiculo", 'Int'>
    readonly nome: FieldRef<"TipoVeiculo", 'String'>
    readonly createdAt: FieldRef<"TipoVeiculo", 'DateTime'>
    readonly createdBy: FieldRef<"TipoVeiculo", 'String'>
    readonly updatedAt: FieldRef<"TipoVeiculo", 'DateTime'>
    readonly updatedBy: FieldRef<"TipoVeiculo", 'String'>
    readonly deletedAt: FieldRef<"TipoVeiculo", 'DateTime'>
    readonly deletedBy: FieldRef<"TipoVeiculo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoVeiculo findUnique
   */
  export type TipoVeiculoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculo
     */
    select?: TipoVeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoVeiculo
     */
    omit?: TipoVeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoVeiculoInclude<ExtArgs> | null
    /**
     * Filter, which TipoVeiculo to fetch.
     */
    where: TipoVeiculoWhereUniqueInput
  }

  /**
   * TipoVeiculo findUniqueOrThrow
   */
  export type TipoVeiculoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculo
     */
    select?: TipoVeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoVeiculo
     */
    omit?: TipoVeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoVeiculoInclude<ExtArgs> | null
    /**
     * Filter, which TipoVeiculo to fetch.
     */
    where: TipoVeiculoWhereUniqueInput
  }

  /**
   * TipoVeiculo findFirst
   */
  export type TipoVeiculoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculo
     */
    select?: TipoVeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoVeiculo
     */
    omit?: TipoVeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoVeiculoInclude<ExtArgs> | null
    /**
     * Filter, which TipoVeiculo to fetch.
     */
    where?: TipoVeiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoVeiculos to fetch.
     */
    orderBy?: TipoVeiculoOrderByWithRelationInput | TipoVeiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoVeiculos.
     */
    cursor?: TipoVeiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoVeiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoVeiculos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoVeiculos.
     */
    distinct?: TipoVeiculoScalarFieldEnum | TipoVeiculoScalarFieldEnum[]
  }

  /**
   * TipoVeiculo findFirstOrThrow
   */
  export type TipoVeiculoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculo
     */
    select?: TipoVeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoVeiculo
     */
    omit?: TipoVeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoVeiculoInclude<ExtArgs> | null
    /**
     * Filter, which TipoVeiculo to fetch.
     */
    where?: TipoVeiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoVeiculos to fetch.
     */
    orderBy?: TipoVeiculoOrderByWithRelationInput | TipoVeiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoVeiculos.
     */
    cursor?: TipoVeiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoVeiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoVeiculos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoVeiculos.
     */
    distinct?: TipoVeiculoScalarFieldEnum | TipoVeiculoScalarFieldEnum[]
  }

  /**
   * TipoVeiculo findMany
   */
  export type TipoVeiculoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculo
     */
    select?: TipoVeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoVeiculo
     */
    omit?: TipoVeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoVeiculoInclude<ExtArgs> | null
    /**
     * Filter, which TipoVeiculos to fetch.
     */
    where?: TipoVeiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoVeiculos to fetch.
     */
    orderBy?: TipoVeiculoOrderByWithRelationInput | TipoVeiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoVeiculos.
     */
    cursor?: TipoVeiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoVeiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoVeiculos.
     */
    skip?: number
    distinct?: TipoVeiculoScalarFieldEnum | TipoVeiculoScalarFieldEnum[]
  }

  /**
   * TipoVeiculo create
   */
  export type TipoVeiculoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculo
     */
    select?: TipoVeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoVeiculo
     */
    omit?: TipoVeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoVeiculoInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoVeiculo.
     */
    data: XOR<TipoVeiculoCreateInput, TipoVeiculoUncheckedCreateInput>
  }

  /**
   * TipoVeiculo createMany
   */
  export type TipoVeiculoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoVeiculos.
     */
    data: TipoVeiculoCreateManyInput | TipoVeiculoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoVeiculo update
   */
  export type TipoVeiculoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculo
     */
    select?: TipoVeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoVeiculo
     */
    omit?: TipoVeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoVeiculoInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoVeiculo.
     */
    data: XOR<TipoVeiculoUpdateInput, TipoVeiculoUncheckedUpdateInput>
    /**
     * Choose, which TipoVeiculo to update.
     */
    where: TipoVeiculoWhereUniqueInput
  }

  /**
   * TipoVeiculo updateMany
   */
  export type TipoVeiculoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoVeiculos.
     */
    data: XOR<TipoVeiculoUpdateManyMutationInput, TipoVeiculoUncheckedUpdateManyInput>
    /**
     * Filter which TipoVeiculos to update
     */
    where?: TipoVeiculoWhereInput
    /**
     * Limit how many TipoVeiculos to update.
     */
    limit?: number
  }

  /**
   * TipoVeiculo upsert
   */
  export type TipoVeiculoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculo
     */
    select?: TipoVeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoVeiculo
     */
    omit?: TipoVeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoVeiculoInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoVeiculo to update in case it exists.
     */
    where: TipoVeiculoWhereUniqueInput
    /**
     * In case the TipoVeiculo found by the `where` argument doesn't exist, create a new TipoVeiculo with this data.
     */
    create: XOR<TipoVeiculoCreateInput, TipoVeiculoUncheckedCreateInput>
    /**
     * In case the TipoVeiculo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoVeiculoUpdateInput, TipoVeiculoUncheckedUpdateInput>
  }

  /**
   * TipoVeiculo delete
   */
  export type TipoVeiculoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculo
     */
    select?: TipoVeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoVeiculo
     */
    omit?: TipoVeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoVeiculoInclude<ExtArgs> | null
    /**
     * Filter which TipoVeiculo to delete.
     */
    where: TipoVeiculoWhereUniqueInput
  }

  /**
   * TipoVeiculo deleteMany
   */
  export type TipoVeiculoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoVeiculos to delete
     */
    where?: TipoVeiculoWhereInput
    /**
     * Limit how many TipoVeiculos to delete.
     */
    limit?: number
  }

  /**
   * TipoVeiculo.Veiculo
   */
  export type TipoVeiculo$VeiculoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    where?: VeiculoWhereInput
    orderBy?: VeiculoOrderByWithRelationInput | VeiculoOrderByWithRelationInput[]
    cursor?: VeiculoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VeiculoScalarFieldEnum | VeiculoScalarFieldEnum[]
  }

  /**
   * TipoVeiculo.ChecklistTipoVeiculoRelacao
   */
  export type TipoVeiculo$ChecklistTipoVeiculoRelacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChecklistTipoVeiculoRelacao
     */
    select?: ChecklistTipoVeiculoRelacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChecklistTipoVeiculoRelacao
     */
    omit?: ChecklistTipoVeiculoRelacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChecklistTipoVeiculoRelacaoInclude<ExtArgs> | null
    where?: ChecklistTipoVeiculoRelacaoWhereInput
    orderBy?: ChecklistTipoVeiculoRelacaoOrderByWithRelationInput | ChecklistTipoVeiculoRelacaoOrderByWithRelationInput[]
    cursor?: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChecklistTipoVeiculoRelacaoScalarFieldEnum | ChecklistTipoVeiculoRelacaoScalarFieldEnum[]
  }

  /**
   * TipoVeiculo without action
   */
  export type TipoVeiculoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoVeiculo
     */
    select?: TipoVeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoVeiculo
     */
    omit?: TipoVeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoVeiculoInclude<ExtArgs> | null
  }


  /**
   * Model Veiculo
   */

  export type AggregateVeiculo = {
    _count: VeiculoCountAggregateOutputType | null
    _avg: VeiculoAvgAggregateOutputType | null
    _sum: VeiculoSumAggregateOutputType | null
    _min: VeiculoMinAggregateOutputType | null
    _max: VeiculoMaxAggregateOutputType | null
  }

  export type VeiculoAvgAggregateOutputType = {
    id: number | null
    ano: number | null
    tipoVeiculoId: number | null
    contratoId: number | null
  }

  export type VeiculoSumAggregateOutputType = {
    id: number | null
    ano: number | null
    tipoVeiculoId: number | null
    contratoId: number | null
  }

  export type VeiculoMinAggregateOutputType = {
    id: number | null
    placa: string | null
    modelo: string | null
    ano: number | null
    tipoVeiculoId: number | null
    contratoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type VeiculoMaxAggregateOutputType = {
    id: number | null
    placa: string | null
    modelo: string | null
    ano: number | null
    tipoVeiculoId: number | null
    contratoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type VeiculoCountAggregateOutputType = {
    id: number
    placa: number
    modelo: number
    ano: number
    tipoVeiculoId: number
    contratoId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type VeiculoAvgAggregateInputType = {
    id?: true
    ano?: true
    tipoVeiculoId?: true
    contratoId?: true
  }

  export type VeiculoSumAggregateInputType = {
    id?: true
    ano?: true
    tipoVeiculoId?: true
    contratoId?: true
  }

  export type VeiculoMinAggregateInputType = {
    id?: true
    placa?: true
    modelo?: true
    ano?: true
    tipoVeiculoId?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type VeiculoMaxAggregateInputType = {
    id?: true
    placa?: true
    modelo?: true
    ano?: true
    tipoVeiculoId?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type VeiculoCountAggregateInputType = {
    id?: true
    placa?: true
    modelo?: true
    ano?: true
    tipoVeiculoId?: true
    contratoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type VeiculoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Veiculo to aggregate.
     */
    where?: VeiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Veiculos to fetch.
     */
    orderBy?: VeiculoOrderByWithRelationInput | VeiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VeiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Veiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Veiculos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Veiculos
    **/
    _count?: true | VeiculoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VeiculoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VeiculoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VeiculoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VeiculoMaxAggregateInputType
  }

  export type GetVeiculoAggregateType<T extends VeiculoAggregateArgs> = {
        [P in keyof T & keyof AggregateVeiculo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVeiculo[P]>
      : GetScalarType<T[P], AggregateVeiculo[P]>
  }




  export type VeiculoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VeiculoWhereInput
    orderBy?: VeiculoOrderByWithAggregationInput | VeiculoOrderByWithAggregationInput[]
    by: VeiculoScalarFieldEnum[] | VeiculoScalarFieldEnum
    having?: VeiculoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VeiculoCountAggregateInputType | true
    _avg?: VeiculoAvgAggregateInputType
    _sum?: VeiculoSumAggregateInputType
    _min?: VeiculoMinAggregateInputType
    _max?: VeiculoMaxAggregateInputType
  }

  export type VeiculoGroupByOutputType = {
    id: number
    placa: string
    modelo: string
    ano: number
    tipoVeiculoId: number
    contratoId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: VeiculoCountAggregateOutputType | null
    _avg: VeiculoAvgAggregateOutputType | null
    _sum: VeiculoSumAggregateOutputType | null
    _min: VeiculoMinAggregateOutputType | null
    _max: VeiculoMaxAggregateOutputType | null
  }

  type GetVeiculoGroupByPayload<T extends VeiculoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VeiculoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VeiculoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VeiculoGroupByOutputType[P]>
            : GetScalarType<T[P], VeiculoGroupByOutputType[P]>
        }
      >
    >


  export type VeiculoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    placa?: boolean
    modelo?: boolean
    ano?: boolean
    tipoVeiculoId?: boolean
    contratoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    tipoVeiculo?: boolean | TipoVeiculoDefaultArgs<ExtArgs>
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    VeiculoOdometro?: boolean | Veiculo$VeiculoOdometroArgs<ExtArgs>
    VeiculoBaseHistorico?: boolean | Veiculo$VeiculoBaseHistoricoArgs<ExtArgs>
    Turno?: boolean | Veiculo$TurnoArgs<ExtArgs>
    _count?: boolean | VeiculoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["veiculo"]>



  export type VeiculoSelectScalar = {
    id?: boolean
    placa?: boolean
    modelo?: boolean
    ano?: boolean
    tipoVeiculoId?: boolean
    contratoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type VeiculoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "placa" | "modelo" | "ano" | "tipoVeiculoId" | "contratoId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["veiculo"]>
  export type VeiculoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipoVeiculo?: boolean | TipoVeiculoDefaultArgs<ExtArgs>
    contrato?: boolean | ContratoDefaultArgs<ExtArgs>
    VeiculoOdometro?: boolean | Veiculo$VeiculoOdometroArgs<ExtArgs>
    VeiculoBaseHistorico?: boolean | Veiculo$VeiculoBaseHistoricoArgs<ExtArgs>
    Turno?: boolean | Veiculo$TurnoArgs<ExtArgs>
    _count?: boolean | VeiculoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $VeiculoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Veiculo"
    objects: {
      tipoVeiculo: Prisma.$TipoVeiculoPayload<ExtArgs>
      contrato: Prisma.$ContratoPayload<ExtArgs>
      VeiculoOdometro: Prisma.$VeiculoOdometroPayload<ExtArgs>[]
      VeiculoBaseHistorico: Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>[]
      Turno: Prisma.$TurnoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      placa: string
      modelo: string
      ano: number
      tipoVeiculoId: number
      contratoId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["veiculo"]>
    composites: {}
  }

  type VeiculoGetPayload<S extends boolean | null | undefined | VeiculoDefaultArgs> = $Result.GetResult<Prisma.$VeiculoPayload, S>

  type VeiculoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VeiculoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VeiculoCountAggregateInputType | true
    }

  export interface VeiculoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Veiculo'], meta: { name: 'Veiculo' } }
    /**
     * Find zero or one Veiculo that matches the filter.
     * @param {VeiculoFindUniqueArgs} args - Arguments to find a Veiculo
     * @example
     * // Get one Veiculo
     * const veiculo = await prisma.veiculo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VeiculoFindUniqueArgs>(args: SelectSubset<T, VeiculoFindUniqueArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Veiculo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VeiculoFindUniqueOrThrowArgs} args - Arguments to find a Veiculo
     * @example
     * // Get one Veiculo
     * const veiculo = await prisma.veiculo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VeiculoFindUniqueOrThrowArgs>(args: SelectSubset<T, VeiculoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Veiculo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoFindFirstArgs} args - Arguments to find a Veiculo
     * @example
     * // Get one Veiculo
     * const veiculo = await prisma.veiculo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VeiculoFindFirstArgs>(args?: SelectSubset<T, VeiculoFindFirstArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Veiculo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoFindFirstOrThrowArgs} args - Arguments to find a Veiculo
     * @example
     * // Get one Veiculo
     * const veiculo = await prisma.veiculo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VeiculoFindFirstOrThrowArgs>(args?: SelectSubset<T, VeiculoFindFirstOrThrowArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Veiculos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Veiculos
     * const veiculos = await prisma.veiculo.findMany()
     * 
     * // Get first 10 Veiculos
     * const veiculos = await prisma.veiculo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const veiculoWithIdOnly = await prisma.veiculo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VeiculoFindManyArgs>(args?: SelectSubset<T, VeiculoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Veiculo.
     * @param {VeiculoCreateArgs} args - Arguments to create a Veiculo.
     * @example
     * // Create one Veiculo
     * const Veiculo = await prisma.veiculo.create({
     *   data: {
     *     // ... data to create a Veiculo
     *   }
     * })
     * 
     */
    create<T extends VeiculoCreateArgs>(args: SelectSubset<T, VeiculoCreateArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Veiculos.
     * @param {VeiculoCreateManyArgs} args - Arguments to create many Veiculos.
     * @example
     * // Create many Veiculos
     * const veiculo = await prisma.veiculo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VeiculoCreateManyArgs>(args?: SelectSubset<T, VeiculoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Veiculo.
     * @param {VeiculoDeleteArgs} args - Arguments to delete one Veiculo.
     * @example
     * // Delete one Veiculo
     * const Veiculo = await prisma.veiculo.delete({
     *   where: {
     *     // ... filter to delete one Veiculo
     *   }
     * })
     * 
     */
    delete<T extends VeiculoDeleteArgs>(args: SelectSubset<T, VeiculoDeleteArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Veiculo.
     * @param {VeiculoUpdateArgs} args - Arguments to update one Veiculo.
     * @example
     * // Update one Veiculo
     * const veiculo = await prisma.veiculo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VeiculoUpdateArgs>(args: SelectSubset<T, VeiculoUpdateArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Veiculos.
     * @param {VeiculoDeleteManyArgs} args - Arguments to filter Veiculos to delete.
     * @example
     * // Delete a few Veiculos
     * const { count } = await prisma.veiculo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VeiculoDeleteManyArgs>(args?: SelectSubset<T, VeiculoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Veiculos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Veiculos
     * const veiculo = await prisma.veiculo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VeiculoUpdateManyArgs>(args: SelectSubset<T, VeiculoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Veiculo.
     * @param {VeiculoUpsertArgs} args - Arguments to update or create a Veiculo.
     * @example
     * // Update or create a Veiculo
     * const veiculo = await prisma.veiculo.upsert({
     *   create: {
     *     // ... data to create a Veiculo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Veiculo we want to update
     *   }
     * })
     */
    upsert<T extends VeiculoUpsertArgs>(args: SelectSubset<T, VeiculoUpsertArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Veiculos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoCountArgs} args - Arguments to filter Veiculos to count.
     * @example
     * // Count the number of Veiculos
     * const count = await prisma.veiculo.count({
     *   where: {
     *     // ... the filter for the Veiculos we want to count
     *   }
     * })
    **/
    count<T extends VeiculoCountArgs>(
      args?: Subset<T, VeiculoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VeiculoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Veiculo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VeiculoAggregateArgs>(args: Subset<T, VeiculoAggregateArgs>): Prisma.PrismaPromise<GetVeiculoAggregateType<T>>

    /**
     * Group by Veiculo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VeiculoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VeiculoGroupByArgs['orderBy'] }
        : { orderBy?: VeiculoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VeiculoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVeiculoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Veiculo model
   */
  readonly fields: VeiculoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Veiculo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VeiculoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tipoVeiculo<T extends TipoVeiculoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoVeiculoDefaultArgs<ExtArgs>>): Prisma__TipoVeiculoClient<$Result.GetResult<Prisma.$TipoVeiculoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    contrato<T extends ContratoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContratoDefaultArgs<ExtArgs>>): Prisma__ContratoClient<$Result.GetResult<Prisma.$ContratoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    VeiculoOdometro<T extends Veiculo$VeiculoOdometroArgs<ExtArgs> = {}>(args?: Subset<T, Veiculo$VeiculoOdometroArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VeiculoOdometroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    VeiculoBaseHistorico<T extends Veiculo$VeiculoBaseHistoricoArgs<ExtArgs> = {}>(args?: Subset<T, Veiculo$VeiculoBaseHistoricoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VeiculoBaseHistoricoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Turno<T extends Veiculo$TurnoArgs<ExtArgs> = {}>(args?: Subset<T, Veiculo$TurnoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TurnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Veiculo model
   */
  interface VeiculoFieldRefs {
    readonly id: FieldRef<"Veiculo", 'Int'>
    readonly placa: FieldRef<"Veiculo", 'String'>
    readonly modelo: FieldRef<"Veiculo", 'String'>
    readonly ano: FieldRef<"Veiculo", 'Int'>
    readonly tipoVeiculoId: FieldRef<"Veiculo", 'Int'>
    readonly contratoId: FieldRef<"Veiculo", 'Int'>
    readonly createdAt: FieldRef<"Veiculo", 'DateTime'>
    readonly createdBy: FieldRef<"Veiculo", 'String'>
    readonly updatedAt: FieldRef<"Veiculo", 'DateTime'>
    readonly updatedBy: FieldRef<"Veiculo", 'String'>
    readonly deletedAt: FieldRef<"Veiculo", 'DateTime'>
    readonly deletedBy: FieldRef<"Veiculo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Veiculo findUnique
   */
  export type VeiculoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    /**
     * Filter, which Veiculo to fetch.
     */
    where: VeiculoWhereUniqueInput
  }

  /**
   * Veiculo findUniqueOrThrow
   */
  export type VeiculoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    /**
     * Filter, which Veiculo to fetch.
     */
    where: VeiculoWhereUniqueInput
  }

  /**
   * Veiculo findFirst
   */
  export type VeiculoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    /**
     * Filter, which Veiculo to fetch.
     */
    where?: VeiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Veiculos to fetch.
     */
    orderBy?: VeiculoOrderByWithRelationInput | VeiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Veiculos.
     */
    cursor?: VeiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Veiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Veiculos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Veiculos.
     */
    distinct?: VeiculoScalarFieldEnum | VeiculoScalarFieldEnum[]
  }

  /**
   * Veiculo findFirstOrThrow
   */
  export type VeiculoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    /**
     * Filter, which Veiculo to fetch.
     */
    where?: VeiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Veiculos to fetch.
     */
    orderBy?: VeiculoOrderByWithRelationInput | VeiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Veiculos.
     */
    cursor?: VeiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Veiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Veiculos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Veiculos.
     */
    distinct?: VeiculoScalarFieldEnum | VeiculoScalarFieldEnum[]
  }

  /**
   * Veiculo findMany
   */
  export type VeiculoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    /**
     * Filter, which Veiculos to fetch.
     */
    where?: VeiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Veiculos to fetch.
     */
    orderBy?: VeiculoOrderByWithRelationInput | VeiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Veiculos.
     */
    cursor?: VeiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Veiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Veiculos.
     */
    skip?: number
    distinct?: VeiculoScalarFieldEnum | VeiculoScalarFieldEnum[]
  }

  /**
   * Veiculo create
   */
  export type VeiculoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    /**
     * The data needed to create a Veiculo.
     */
    data: XOR<VeiculoCreateInput, VeiculoUncheckedCreateInput>
  }

  /**
   * Veiculo createMany
   */
  export type VeiculoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Veiculos.
     */
    data: VeiculoCreateManyInput | VeiculoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Veiculo update
   */
  export type VeiculoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    /**
     * The data needed to update a Veiculo.
     */
    data: XOR<VeiculoUpdateInput, VeiculoUncheckedUpdateInput>
    /**
     * Choose, which Veiculo to update.
     */
    where: VeiculoWhereUniqueInput
  }

  /**
   * Veiculo updateMany
   */
  export type VeiculoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Veiculos.
     */
    data: XOR<VeiculoUpdateManyMutationInput, VeiculoUncheckedUpdateManyInput>
    /**
     * Filter which Veiculos to update
     */
    where?: VeiculoWhereInput
    /**
     * Limit how many Veiculos to update.
     */
    limit?: number
  }

  /**
   * Veiculo upsert
   */
  export type VeiculoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    /**
     * The filter to search for the Veiculo to update in case it exists.
     */
    where: VeiculoWhereUniqueInput
    /**
     * In case the Veiculo found by the `where` argument doesn't exist, create a new Veiculo with this data.
     */
    create: XOR<VeiculoCreateInput, VeiculoUncheckedCreateInput>
    /**
     * In case the Veiculo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VeiculoUpdateInput, VeiculoUncheckedUpdateInput>
  }

  /**
   * Veiculo delete
   */
  export type VeiculoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
    /**
     * Filter which Veiculo to delete.
     */
    where: VeiculoWhereUniqueInput
  }

  /**
   * Veiculo deleteMany
   */
  export type VeiculoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Veiculos to delete
     */
    where?: VeiculoWhereInput
    /**
     * Limit how many Veiculos to delete.
     */
    limit?: number
  }

  /**
   * Veiculo.VeiculoOdometro
   */
  export type Veiculo$VeiculoOdometroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
    where?: VeiculoOdometroWhereInput
    orderBy?: VeiculoOdometroOrderByWithRelationInput | VeiculoOdometroOrderByWithRelationInput[]
    cursor?: VeiculoOdometroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VeiculoOdometroScalarFieldEnum | VeiculoOdometroScalarFieldEnum[]
  }

  /**
   * Veiculo.VeiculoBaseHistorico
   */
  export type Veiculo$VeiculoBaseHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoBaseHistorico
     */
    select?: VeiculoBaseHistoricoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoBaseHistorico
     */
    omit?: VeiculoBaseHistoricoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoBaseHistoricoInclude<ExtArgs> | null
    where?: VeiculoBaseHistoricoWhereInput
    orderBy?: VeiculoBaseHistoricoOrderByWithRelationInput | VeiculoBaseHistoricoOrderByWithRelationInput[]
    cursor?: VeiculoBaseHistoricoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VeiculoBaseHistoricoScalarFieldEnum | VeiculoBaseHistoricoScalarFieldEnum[]
  }

  /**
   * Veiculo.Turno
   */
  export type Veiculo$TurnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Turno
     */
    select?: TurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Turno
     */
    omit?: TurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TurnoInclude<ExtArgs> | null
    where?: TurnoWhereInput
    orderBy?: TurnoOrderByWithRelationInput | TurnoOrderByWithRelationInput[]
    cursor?: TurnoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TurnoScalarFieldEnum | TurnoScalarFieldEnum[]
  }

  /**
   * Veiculo without action
   */
  export type VeiculoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Veiculo
     */
    select?: VeiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Veiculo
     */
    omit?: VeiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoInclude<ExtArgs> | null
  }


  /**
   * Model VeiculoOdometro
   */

  export type AggregateVeiculoOdometro = {
    _count: VeiculoOdometroCountAggregateOutputType | null
    _avg: VeiculoOdometroAvgAggregateOutputType | null
    _sum: VeiculoOdometroSumAggregateOutputType | null
    _min: VeiculoOdometroMinAggregateOutputType | null
    _max: VeiculoOdometroMaxAggregateOutputType | null
  }

  export type VeiculoOdometroAvgAggregateOutputType = {
    id: number | null
    valor: number | null
    veiculoId: number | null
  }

  export type VeiculoOdometroSumAggregateOutputType = {
    id: number | null
    valor: number | null
    veiculoId: number | null
  }

  export type VeiculoOdometroMinAggregateOutputType = {
    id: number | null
    valor: number | null
    data: Date | null
    veiculoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type VeiculoOdometroMaxAggregateOutputType = {
    id: number | null
    valor: number | null
    data: Date | null
    veiculoId: number | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type VeiculoOdometroCountAggregateOutputType = {
    id: number
    valor: number
    data: number
    veiculoId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type VeiculoOdometroAvgAggregateInputType = {
    id?: true
    valor?: true
    veiculoId?: true
  }

  export type VeiculoOdometroSumAggregateInputType = {
    id?: true
    valor?: true
    veiculoId?: true
  }

  export type VeiculoOdometroMinAggregateInputType = {
    id?: true
    valor?: true
    data?: true
    veiculoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type VeiculoOdometroMaxAggregateInputType = {
    id?: true
    valor?: true
    data?: true
    veiculoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type VeiculoOdometroCountAggregateInputType = {
    id?: true
    valor?: true
    data?: true
    veiculoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type VeiculoOdometroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VeiculoOdometro to aggregate.
     */
    where?: VeiculoOdometroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VeiculoOdometros to fetch.
     */
    orderBy?: VeiculoOdometroOrderByWithRelationInput | VeiculoOdometroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VeiculoOdometroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VeiculoOdometros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VeiculoOdometros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VeiculoOdometros
    **/
    _count?: true | VeiculoOdometroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VeiculoOdometroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VeiculoOdometroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VeiculoOdometroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VeiculoOdometroMaxAggregateInputType
  }

  export type GetVeiculoOdometroAggregateType<T extends VeiculoOdometroAggregateArgs> = {
        [P in keyof T & keyof AggregateVeiculoOdometro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVeiculoOdometro[P]>
      : GetScalarType<T[P], AggregateVeiculoOdometro[P]>
  }




  export type VeiculoOdometroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VeiculoOdometroWhereInput
    orderBy?: VeiculoOdometroOrderByWithAggregationInput | VeiculoOdometroOrderByWithAggregationInput[]
    by: VeiculoOdometroScalarFieldEnum[] | VeiculoOdometroScalarFieldEnum
    having?: VeiculoOdometroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VeiculoOdometroCountAggregateInputType | true
    _avg?: VeiculoOdometroAvgAggregateInputType
    _sum?: VeiculoOdometroSumAggregateInputType
    _min?: VeiculoOdometroMinAggregateInputType
    _max?: VeiculoOdometroMaxAggregateInputType
  }

  export type VeiculoOdometroGroupByOutputType = {
    id: number
    valor: number
    data: Date
    veiculoId: number
    createdAt: Date
    createdBy: string
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: VeiculoOdometroCountAggregateOutputType | null
    _avg: VeiculoOdometroAvgAggregateOutputType | null
    _sum: VeiculoOdometroSumAggregateOutputType | null
    _min: VeiculoOdometroMinAggregateOutputType | null
    _max: VeiculoOdometroMaxAggregateOutputType | null
  }

  type GetVeiculoOdometroGroupByPayload<T extends VeiculoOdometroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VeiculoOdometroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VeiculoOdometroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VeiculoOdometroGroupByOutputType[P]>
            : GetScalarType<T[P], VeiculoOdometroGroupByOutputType[P]>
        }
      >
    >


  export type VeiculoOdometroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    valor?: boolean
    data?: boolean
    veiculoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    veiculo?: boolean | VeiculoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["veiculoOdometro"]>



  export type VeiculoOdometroSelectScalar = {
    id?: boolean
    valor?: boolean
    data?: boolean
    veiculoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type VeiculoOdometroOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "valor" | "data" | "veiculoId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["veiculoOdometro"]>
  export type VeiculoOdometroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    veiculo?: boolean | VeiculoDefaultArgs<ExtArgs>
  }

  export type $VeiculoOdometroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VeiculoOdometro"
    objects: {
      veiculo: Prisma.$VeiculoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      valor: number
      data: Date
      veiculoId: number
      createdAt: Date
      createdBy: string
      updatedAt: Date | null
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["veiculoOdometro"]>
    composites: {}
  }

  type VeiculoOdometroGetPayload<S extends boolean | null | undefined | VeiculoOdometroDefaultArgs> = $Result.GetResult<Prisma.$VeiculoOdometroPayload, S>

  type VeiculoOdometroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VeiculoOdometroFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VeiculoOdometroCountAggregateInputType | true
    }

  export interface VeiculoOdometroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VeiculoOdometro'], meta: { name: 'VeiculoOdometro' } }
    /**
     * Find zero or one VeiculoOdometro that matches the filter.
     * @param {VeiculoOdometroFindUniqueArgs} args - Arguments to find a VeiculoOdometro
     * @example
     * // Get one VeiculoOdometro
     * const veiculoOdometro = await prisma.veiculoOdometro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VeiculoOdometroFindUniqueArgs>(args: SelectSubset<T, VeiculoOdometroFindUniqueArgs<ExtArgs>>): Prisma__VeiculoOdometroClient<$Result.GetResult<Prisma.$VeiculoOdometroPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VeiculoOdometro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VeiculoOdometroFindUniqueOrThrowArgs} args - Arguments to find a VeiculoOdometro
     * @example
     * // Get one VeiculoOdometro
     * const veiculoOdometro = await prisma.veiculoOdometro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VeiculoOdometroFindUniqueOrThrowArgs>(args: SelectSubset<T, VeiculoOdometroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VeiculoOdometroClient<$Result.GetResult<Prisma.$VeiculoOdometroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VeiculoOdometro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoOdometroFindFirstArgs} args - Arguments to find a VeiculoOdometro
     * @example
     * // Get one VeiculoOdometro
     * const veiculoOdometro = await prisma.veiculoOdometro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VeiculoOdometroFindFirstArgs>(args?: SelectSubset<T, VeiculoOdometroFindFirstArgs<ExtArgs>>): Prisma__VeiculoOdometroClient<$Result.GetResult<Prisma.$VeiculoOdometroPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VeiculoOdometro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoOdometroFindFirstOrThrowArgs} args - Arguments to find a VeiculoOdometro
     * @example
     * // Get one VeiculoOdometro
     * const veiculoOdometro = await prisma.veiculoOdometro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VeiculoOdometroFindFirstOrThrowArgs>(args?: SelectSubset<T, VeiculoOdometroFindFirstOrThrowArgs<ExtArgs>>): Prisma__VeiculoOdometroClient<$Result.GetResult<Prisma.$VeiculoOdometroPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VeiculoOdometros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoOdometroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VeiculoOdometros
     * const veiculoOdometros = await prisma.veiculoOdometro.findMany()
     * 
     * // Get first 10 VeiculoOdometros
     * const veiculoOdometros = await prisma.veiculoOdometro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const veiculoOdometroWithIdOnly = await prisma.veiculoOdometro.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VeiculoOdometroFindManyArgs>(args?: SelectSubset<T, VeiculoOdometroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VeiculoOdometroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VeiculoOdometro.
     * @param {VeiculoOdometroCreateArgs} args - Arguments to create a VeiculoOdometro.
     * @example
     * // Create one VeiculoOdometro
     * const VeiculoOdometro = await prisma.veiculoOdometro.create({
     *   data: {
     *     // ... data to create a VeiculoOdometro
     *   }
     * })
     * 
     */
    create<T extends VeiculoOdometroCreateArgs>(args: SelectSubset<T, VeiculoOdometroCreateArgs<ExtArgs>>): Prisma__VeiculoOdometroClient<$Result.GetResult<Prisma.$VeiculoOdometroPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VeiculoOdometros.
     * @param {VeiculoOdometroCreateManyArgs} args - Arguments to create many VeiculoOdometros.
     * @example
     * // Create many VeiculoOdometros
     * const veiculoOdometro = await prisma.veiculoOdometro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VeiculoOdometroCreateManyArgs>(args?: SelectSubset<T, VeiculoOdometroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a VeiculoOdometro.
     * @param {VeiculoOdometroDeleteArgs} args - Arguments to delete one VeiculoOdometro.
     * @example
     * // Delete one VeiculoOdometro
     * const VeiculoOdometro = await prisma.veiculoOdometro.delete({
     *   where: {
     *     // ... filter to delete one VeiculoOdometro
     *   }
     * })
     * 
     */
    delete<T extends VeiculoOdometroDeleteArgs>(args: SelectSubset<T, VeiculoOdometroDeleteArgs<ExtArgs>>): Prisma__VeiculoOdometroClient<$Result.GetResult<Prisma.$VeiculoOdometroPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VeiculoOdometro.
     * @param {VeiculoOdometroUpdateArgs} args - Arguments to update one VeiculoOdometro.
     * @example
     * // Update one VeiculoOdometro
     * const veiculoOdometro = await prisma.veiculoOdometro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VeiculoOdometroUpdateArgs>(args: SelectSubset<T, VeiculoOdometroUpdateArgs<ExtArgs>>): Prisma__VeiculoOdometroClient<$Result.GetResult<Prisma.$VeiculoOdometroPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VeiculoOdometros.
     * @param {VeiculoOdometroDeleteManyArgs} args - Arguments to filter VeiculoOdometros to delete.
     * @example
     * // Delete a few VeiculoOdometros
     * const { count } = await prisma.veiculoOdometro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VeiculoOdometroDeleteManyArgs>(args?: SelectSubset<T, VeiculoOdometroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VeiculoOdometros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoOdometroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VeiculoOdometros
     * const veiculoOdometro = await prisma.veiculoOdometro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VeiculoOdometroUpdateManyArgs>(args: SelectSubset<T, VeiculoOdometroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VeiculoOdometro.
     * @param {VeiculoOdometroUpsertArgs} args - Arguments to update or create a VeiculoOdometro.
     * @example
     * // Update or create a VeiculoOdometro
     * const veiculoOdometro = await prisma.veiculoOdometro.upsert({
     *   create: {
     *     // ... data to create a VeiculoOdometro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VeiculoOdometro we want to update
     *   }
     * })
     */
    upsert<T extends VeiculoOdometroUpsertArgs>(args: SelectSubset<T, VeiculoOdometroUpsertArgs<ExtArgs>>): Prisma__VeiculoOdometroClient<$Result.GetResult<Prisma.$VeiculoOdometroPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VeiculoOdometros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoOdometroCountArgs} args - Arguments to filter VeiculoOdometros to count.
     * @example
     * // Count the number of VeiculoOdometros
     * const count = await prisma.veiculoOdometro.count({
     *   where: {
     *     // ... the filter for the VeiculoOdometros we want to count
     *   }
     * })
    **/
    count<T extends VeiculoOdometroCountArgs>(
      args?: Subset<T, VeiculoOdometroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VeiculoOdometroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VeiculoOdometro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoOdometroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VeiculoOdometroAggregateArgs>(args: Subset<T, VeiculoOdometroAggregateArgs>): Prisma.PrismaPromise<GetVeiculoOdometroAggregateType<T>>

    /**
     * Group by VeiculoOdometro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VeiculoOdometroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VeiculoOdometroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VeiculoOdometroGroupByArgs['orderBy'] }
        : { orderBy?: VeiculoOdometroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VeiculoOdometroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVeiculoOdometroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VeiculoOdometro model
   */
  readonly fields: VeiculoOdometroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VeiculoOdometro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VeiculoOdometroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    veiculo<T extends VeiculoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VeiculoDefaultArgs<ExtArgs>>): Prisma__VeiculoClient<$Result.GetResult<Prisma.$VeiculoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VeiculoOdometro model
   */
  interface VeiculoOdometroFieldRefs {
    readonly id: FieldRef<"VeiculoOdometro", 'Int'>
    readonly valor: FieldRef<"VeiculoOdometro", 'Int'>
    readonly data: FieldRef<"VeiculoOdometro", 'DateTime'>
    readonly veiculoId: FieldRef<"VeiculoOdometro", 'Int'>
    readonly createdAt: FieldRef<"VeiculoOdometro", 'DateTime'>
    readonly createdBy: FieldRef<"VeiculoOdometro", 'String'>
    readonly updatedAt: FieldRef<"VeiculoOdometro", 'DateTime'>
    readonly updatedBy: FieldRef<"VeiculoOdometro", 'String'>
    readonly deletedAt: FieldRef<"VeiculoOdometro", 'DateTime'>
    readonly deletedBy: FieldRef<"VeiculoOdometro", 'String'>
  }
    

  // Custom InputTypes
  /**
   * VeiculoOdometro findUnique
   */
  export type VeiculoOdometroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
    /**
     * Filter, which VeiculoOdometro to fetch.
     */
    where: VeiculoOdometroWhereUniqueInput
  }

  /**
   * VeiculoOdometro findUniqueOrThrow
   */
  export type VeiculoOdometroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
    /**
     * Filter, which VeiculoOdometro to fetch.
     */
    where: VeiculoOdometroWhereUniqueInput
  }

  /**
   * VeiculoOdometro findFirst
   */
  export type VeiculoOdometroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
    /**
     * Filter, which VeiculoOdometro to fetch.
     */
    where?: VeiculoOdometroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VeiculoOdometros to fetch.
     */
    orderBy?: VeiculoOdometroOrderByWithRelationInput | VeiculoOdometroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VeiculoOdometros.
     */
    cursor?: VeiculoOdometroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VeiculoOdometros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VeiculoOdometros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VeiculoOdometros.
     */
    distinct?: VeiculoOdometroScalarFieldEnum | VeiculoOdometroScalarFieldEnum[]
  }

  /**
   * VeiculoOdometro findFirstOrThrow
   */
  export type VeiculoOdometroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
    /**
     * Filter, which VeiculoOdometro to fetch.
     */
    where?: VeiculoOdometroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VeiculoOdometros to fetch.
     */
    orderBy?: VeiculoOdometroOrderByWithRelationInput | VeiculoOdometroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VeiculoOdometros.
     */
    cursor?: VeiculoOdometroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VeiculoOdometros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VeiculoOdometros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VeiculoOdometros.
     */
    distinct?: VeiculoOdometroScalarFieldEnum | VeiculoOdometroScalarFieldEnum[]
  }

  /**
   * VeiculoOdometro findMany
   */
  export type VeiculoOdometroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
    /**
     * Filter, which VeiculoOdometros to fetch.
     */
    where?: VeiculoOdometroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VeiculoOdometros to fetch.
     */
    orderBy?: VeiculoOdometroOrderByWithRelationInput | VeiculoOdometroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VeiculoOdometros.
     */
    cursor?: VeiculoOdometroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VeiculoOdometros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VeiculoOdometros.
     */
    skip?: number
    distinct?: VeiculoOdometroScalarFieldEnum | VeiculoOdometroScalarFieldEnum[]
  }

  /**
   * VeiculoOdometro create
   */
  export type VeiculoOdometroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
    /**
     * The data needed to create a VeiculoOdometro.
     */
    data: XOR<VeiculoOdometroCreateInput, VeiculoOdometroUncheckedCreateInput>
  }

  /**
   * VeiculoOdometro createMany
   */
  export type VeiculoOdometroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VeiculoOdometros.
     */
    data: VeiculoOdometroCreateManyInput | VeiculoOdometroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VeiculoOdometro update
   */
  export type VeiculoOdometroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
    /**
     * The data needed to update a VeiculoOdometro.
     */
    data: XOR<VeiculoOdometroUpdateInput, VeiculoOdometroUncheckedUpdateInput>
    /**
     * Choose, which VeiculoOdometro to update.
     */
    where: VeiculoOdometroWhereUniqueInput
  }

  /**
   * VeiculoOdometro updateMany
   */
  export type VeiculoOdometroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VeiculoOdometros.
     */
    data: XOR<VeiculoOdometroUpdateManyMutationInput, VeiculoOdometroUncheckedUpdateManyInput>
    /**
     * Filter which VeiculoOdometros to update
     */
    where?: VeiculoOdometroWhereInput
    /**
     * Limit how many VeiculoOdometros to update.
     */
    limit?: number
  }

  /**
   * VeiculoOdometro upsert
   */
  export type VeiculoOdometroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
    /**
     * The filter to search for the VeiculoOdometro to update in case it exists.
     */
    where: VeiculoOdometroWhereUniqueInput
    /**
     * In case the VeiculoOdometro found by the `where` argument doesn't exist, create a new VeiculoOdometro with this data.
     */
    create: XOR<VeiculoOdometroCreateInput, VeiculoOdometroUncheckedCreateInput>
    /**
     * In case the VeiculoOdometro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VeiculoOdometroUpdateInput, VeiculoOdometroUncheckedUpdateInput>
  }

  /**
   * VeiculoOdometro delete
   */
  export type VeiculoOdometroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
    /**
     * Filter which VeiculoOdometro to delete.
     */
    where: VeiculoOdometroWhereUniqueInput
  }

  /**
   * VeiculoOdometro deleteMany
   */
  export type VeiculoOdometroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VeiculoOdometros to delete
     */
    where?: VeiculoOdometroWhereInput
    /**
     * Limit how many VeiculoOdometros to delete.
     */
    limit?: number
  }

  /**
   * VeiculoOdometro without action
   */
  export type VeiculoOdometroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VeiculoOdometro
     */
    select?: VeiculoOdometroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VeiculoOdometro
     */
    omit?: VeiculoOdometroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VeiculoOdometroInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AprScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type AprScalarFieldEnum = (typeof AprScalarFieldEnum)[keyof typeof AprScalarFieldEnum]


  export const AprPerguntaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type AprPerguntaScalarFieldEnum = (typeof AprPerguntaScalarFieldEnum)[keyof typeof AprPerguntaScalarFieldEnum]


  export const AprPerguntaRelacaoScalarFieldEnum: {
    id: 'id',
    aprPerguntaId: 'aprPerguntaId',
    ordem: 'ordem',
    aprId: 'aprId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type AprPerguntaRelacaoScalarFieldEnum = (typeof AprPerguntaRelacaoScalarFieldEnum)[keyof typeof AprPerguntaRelacaoScalarFieldEnum]


  export const AprOpcaoRespostaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type AprOpcaoRespostaScalarFieldEnum = (typeof AprOpcaoRespostaScalarFieldEnum)[keyof typeof AprOpcaoRespostaScalarFieldEnum]


  export const AprOpcaoRespostaRelacaoScalarFieldEnum: {
    id: 'id',
    aprOpcaoRespostaId: 'aprOpcaoRespostaId',
    aprId: 'aprId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type AprOpcaoRespostaRelacaoScalarFieldEnum = (typeof AprOpcaoRespostaRelacaoScalarFieldEnum)[keyof typeof AprOpcaoRespostaRelacaoScalarFieldEnum]


  export const AprTipoAtividadeRelacaoScalarFieldEnum: {
    id: 'id',
    aprId: 'aprId',
    tipoAtividadeId: 'tipoAtividadeId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type AprTipoAtividadeRelacaoScalarFieldEnum = (typeof AprTipoAtividadeRelacaoScalarFieldEnum)[keyof typeof AprTipoAtividadeRelacaoScalarFieldEnum]


  export const TipoAtividadeScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type TipoAtividadeScalarFieldEnum = (typeof TipoAtividadeScalarFieldEnum)[keyof typeof TipoAtividadeScalarFieldEnum]


  export const MobileUserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type MobileUserScalarFieldEnum = (typeof MobileUserScalarFieldEnum)[keyof typeof MobileUserScalarFieldEnum]


  export const MobileSessionScalarFieldEnum: {
    id: 'id',
    deviceInfo: 'deviceInfo',
    lastActive: 'lastActive',
    createdAt: 'createdAt',
    expiresAt: 'expiresAt',
    ativa: 'ativa',
    mobileUserId: 'mobileUserId'
  };

  export type MobileSessionScalarFieldEnum = (typeof MobileSessionScalarFieldEnum)[keyof typeof MobileSessionScalarFieldEnum]


  export const MobileTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    refreshToken: 'refreshToken',
    refreshTokenExpiresAt: 'refreshTokenExpiresAt',
    usuarioMobileId: 'usuarioMobileId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    revoked: 'revoked',
    mobileUserId: 'mobileUserId'
  };

  export type MobileTokenScalarFieldEnum = (typeof MobileTokenScalarFieldEnum)[keyof typeof MobileTokenScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    username: 'username',
    password: 'password',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refresh_token: 'refresh_token',
    access_token: 'access_token',
    expires_at: 'expires_at',
    token_type: 'token_type',
    scope: 'scope',
    id_token: 'id_token',
    session_state: 'session_state',
    userId: 'userId'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    sessionToken: 'sessionToken',
    expires: 'expires',
    userId: 'userId'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const VerificationTokenScalarFieldEnum: {
    identifier: 'identifier',
    token: 'token',
    expires: 'expires'
  };

  export type VerificationTokenScalarFieldEnum = (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const RoleUserScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    roleId: 'roleId'
  };

  export type RoleUserScalarFieldEnum = (typeof RoleUserScalarFieldEnum)[keyof typeof RoleUserScalarFieldEnum]


  export const BaseScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    contratoId: 'contratoId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type BaseScalarFieldEnum = (typeof BaseScalarFieldEnum)[keyof typeof BaseScalarFieldEnum]


  export const TipoChecklistScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type TipoChecklistScalarFieldEnum = (typeof TipoChecklistScalarFieldEnum)[keyof typeof TipoChecklistScalarFieldEnum]


  export const ChecklistScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    tipoChecklistId: 'tipoChecklistId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type ChecklistScalarFieldEnum = (typeof ChecklistScalarFieldEnum)[keyof typeof ChecklistScalarFieldEnum]


  export const ChecklistPerguntaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type ChecklistPerguntaScalarFieldEnum = (typeof ChecklistPerguntaScalarFieldEnum)[keyof typeof ChecklistPerguntaScalarFieldEnum]


  export const ChecklistPerguntaRelacaoScalarFieldEnum: {
    id: 'id',
    checklistPerguntaId: 'checklistPerguntaId',
    checklistId: 'checklistId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type ChecklistPerguntaRelacaoScalarFieldEnum = (typeof ChecklistPerguntaRelacaoScalarFieldEnum)[keyof typeof ChecklistPerguntaRelacaoScalarFieldEnum]


  export const ChecklistOpcaoRespostaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    geraPendencia: 'geraPendencia',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type ChecklistOpcaoRespostaScalarFieldEnum = (typeof ChecklistOpcaoRespostaScalarFieldEnum)[keyof typeof ChecklistOpcaoRespostaScalarFieldEnum]


  export const ChecklistOpcaoRespostaRelacaoScalarFieldEnum: {
    id: 'id',
    checklistOpcaoRespostaId: 'checklistOpcaoRespostaId',
    checklistId: 'checklistId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type ChecklistOpcaoRespostaRelacaoScalarFieldEnum = (typeof ChecklistOpcaoRespostaRelacaoScalarFieldEnum)[keyof typeof ChecklistOpcaoRespostaRelacaoScalarFieldEnum]


  export const ChecklistTipoVeiculoRelacaoScalarFieldEnum: {
    id: 'id',
    checklistId: 'checklistId',
    tipoVeiculoId: 'tipoVeiculoId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type ChecklistTipoVeiculoRelacaoScalarFieldEnum = (typeof ChecklistTipoVeiculoRelacaoScalarFieldEnum)[keyof typeof ChecklistTipoVeiculoRelacaoScalarFieldEnum]


  export const ChecklistTipoEquipeRelacaoScalarFieldEnum: {
    id: 'id',
    checklistId: 'checklistId',
    tipoEquipeId: 'tipoEquipeId',
    tipoChecklistId: 'tipoChecklistId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type ChecklistTipoEquipeRelacaoScalarFieldEnum = (typeof ChecklistTipoEquipeRelacaoScalarFieldEnum)[keyof typeof ChecklistTipoEquipeRelacaoScalarFieldEnum]


  export const ContratoScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    numero: 'numero',
    dataInicio: 'dataInicio',
    dataFim: 'dataFim',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type ContratoScalarFieldEnum = (typeof ContratoScalarFieldEnum)[keyof typeof ContratoScalarFieldEnum]


  export const MobileContratoPermissaoScalarFieldEnum: {
    id: 'id',
    contratoId: 'contratoId',
    mobileUserId: 'mobileUserId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type MobileContratoPermissaoScalarFieldEnum = (typeof MobileContratoPermissaoScalarFieldEnum)[keyof typeof MobileContratoPermissaoScalarFieldEnum]


  export const EletricistaBaseHistoricoScalarFieldEnum: {
    id: 'id',
    eletricistaId: 'eletricistaId',
    baseId: 'baseId',
    dataInicio: 'dataInicio',
    dataFim: 'dataFim',
    motivo: 'motivo',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type EletricistaBaseHistoricoScalarFieldEnum = (typeof EletricistaBaseHistoricoScalarFieldEnum)[keyof typeof EletricistaBaseHistoricoScalarFieldEnum]


  export const EletricistaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    matricula: 'matricula',
    telefone: 'telefone',
    estado: 'estado',
    admissao: 'admissao',
    cargoId: 'cargoId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    contratoId: 'contratoId'
  };

  export type EletricistaScalarFieldEnum = (typeof EletricistaScalarFieldEnum)[keyof typeof EletricistaScalarFieldEnum]


  export const CargoScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    salarioBase: 'salarioBase',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type CargoScalarFieldEnum = (typeof CargoScalarFieldEnum)[keyof typeof CargoScalarFieldEnum]


  export const EquipeBaseHistoricoScalarFieldEnum: {
    id: 'id',
    equipeId: 'equipeId',
    baseId: 'baseId',
    dataInicio: 'dataInicio',
    dataFim: 'dataFim',
    motivo: 'motivo',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type EquipeBaseHistoricoScalarFieldEnum = (typeof EquipeBaseHistoricoScalarFieldEnum)[keyof typeof EquipeBaseHistoricoScalarFieldEnum]


  export const TipoEquipeScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type TipoEquipeScalarFieldEnum = (typeof TipoEquipeScalarFieldEnum)[keyof typeof TipoEquipeScalarFieldEnum]


  export const EquipeScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    tipoEquipeId: 'tipoEquipeId',
    contratoId: 'contratoId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type EquipeScalarFieldEnum = (typeof EquipeScalarFieldEnum)[keyof typeof EquipeScalarFieldEnum]


  export const EquipeSupervisorScalarFieldEnum: {
    id: 'id',
    equipeId: 'equipeId',
    supervisorId: 'supervisorId',
    inicio: 'inicio',
    fim: 'fim',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type EquipeSupervisorScalarFieldEnum = (typeof EquipeSupervisorScalarFieldEnum)[keyof typeof EquipeSupervisorScalarFieldEnum]


  export const TipoEscalaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    modoRepeticao: 'modoRepeticao',
    cicloDias: 'cicloDias',
    periodicidadeSemanas: 'periodicidadeSemanas',
    eletricistasPorTurma: 'eletricistasPorTurma',
    ativo: 'ativo',
    observacoes: 'observacoes',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type TipoEscalaScalarFieldEnum = (typeof TipoEscalaScalarFieldEnum)[keyof typeof TipoEscalaScalarFieldEnum]


  export const TipoEscalaCicloPosicaoScalarFieldEnum: {
    id: 'id',
    tipoEscalaId: 'tipoEscalaId',
    posicao: 'posicao',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type TipoEscalaCicloPosicaoScalarFieldEnum = (typeof TipoEscalaCicloPosicaoScalarFieldEnum)[keyof typeof TipoEscalaCicloPosicaoScalarFieldEnum]


  export const TipoEscalaSemanaMascaraScalarFieldEnum: {
    id: 'id',
    tipoEscalaId: 'tipoEscalaId',
    semanaIndex: 'semanaIndex',
    dia: 'dia',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type TipoEscalaSemanaMascaraScalarFieldEnum = (typeof TipoEscalaSemanaMascaraScalarFieldEnum)[keyof typeof TipoEscalaSemanaMascaraScalarFieldEnum]


  export const EscalaEquipePeriodoScalarFieldEnum: {
    id: 'id',
    equipeId: 'equipeId',
    periodoInicio: 'periodoInicio',
    periodoFim: 'periodoFim',
    tipoEscalaId: 'tipoEscalaId',
    status: 'status',
    versao: 'versao',
    observacoes: 'observacoes',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type EscalaEquipePeriodoScalarFieldEnum = (typeof EscalaEquipePeriodoScalarFieldEnum)[keyof typeof EscalaEquipePeriodoScalarFieldEnum]


  export const SlotEscalaScalarFieldEnum: {
    id: 'id',
    escalaEquipePeriodoId: 'escalaEquipePeriodoId',
    eletricistaId: 'eletricistaId',
    data: 'data',
    estado: 'estado',
    inicioPrevisto: 'inicioPrevisto',
    fimPrevisto: 'fimPrevisto',
    anotacoesDia: 'anotacoesDia',
    origem: 'origem',
    observacoes: 'observacoes',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type SlotEscalaScalarFieldEnum = (typeof SlotEscalaScalarFieldEnum)[keyof typeof SlotEscalaScalarFieldEnum]


  export const EventoCoberturaScalarFieldEnum: {
    id: 'id',
    slotEscalaId: 'slotEscalaId',
    eletricistaCobrindoId: 'eletricistaCobrindoId',
    tipo: 'tipo',
    resultado: 'resultado',
    justificativa: 'justificativa',
    registradoEm: 'registradoEm',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type EventoCoberturaScalarFieldEnum = (typeof EventoCoberturaScalarFieldEnum)[keyof typeof EventoCoberturaScalarFieldEnum]


  export const EquipeHorarioVigenciaScalarFieldEnum: {
    id: 'id',
    equipeId: 'equipeId',
    inicioTurnoHora: 'inicioTurnoHora',
    duracaoHoras: 'duracaoHoras',
    vigenciaInicio: 'vigenciaInicio',
    vigenciaFim: 'vigenciaFim',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type EquipeHorarioVigenciaScalarFieldEnum = (typeof EquipeHorarioVigenciaScalarFieldEnum)[keyof typeof EquipeHorarioVigenciaScalarFieldEnum]


  export const HorarioAberturaCatalogoScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    inicioTurnoHora: 'inicioTurnoHora',
    duracaoHoras: 'duracaoHoras',
    duracaoIntervaloHoras: 'duracaoIntervaloHoras',
    ativo: 'ativo',
    observacoes: 'observacoes',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type HorarioAberturaCatalogoScalarFieldEnum = (typeof HorarioAberturaCatalogoScalarFieldEnum)[keyof typeof HorarioAberturaCatalogoScalarFieldEnum]


  export const EquipeTurnoHistoricoScalarFieldEnum: {
    id: 'id',
    equipeId: 'equipeId',
    horarioAberturaCatalogoId: 'horarioAberturaCatalogoId',
    dataInicio: 'dataInicio',
    dataFim: 'dataFim',
    inicioTurnoHora: 'inicioTurnoHora',
    duracaoHoras: 'duracaoHoras',
    duracaoIntervaloHoras: 'duracaoIntervaloHoras',
    fimTurnoHora: 'fimTurnoHora',
    motivo: 'motivo',
    observacoes: 'observacoes',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type EquipeTurnoHistoricoScalarFieldEnum = (typeof EquipeTurnoHistoricoScalarFieldEnum)[keyof typeof EquipeTurnoHistoricoScalarFieldEnum]


  export const SupervisorScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    contratoId: 'contratoId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type SupervisorScalarFieldEnum = (typeof SupervisorScalarFieldEnum)[keyof typeof SupervisorScalarFieldEnum]


  export const TestScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type TestScalarFieldEnum = (typeof TestScalarFieldEnum)[keyof typeof TestScalarFieldEnum]


  export const TurnoScalarFieldEnum: {
    id: 'id',
    dataSolicitacao: 'dataSolicitacao',
    dataInicio: 'dataInicio',
    dataFim: 'dataFim',
    veiculoId: 'veiculoId',
    equipeId: 'equipeId',
    dispositivo: 'dispositivo',
    kmInicio: 'kmInicio',
    KmFim: 'KmFim',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type TurnoScalarFieldEnum = (typeof TurnoScalarFieldEnum)[keyof typeof TurnoScalarFieldEnum]


  export const TurnoEletricistaScalarFieldEnum: {
    id: 'id',
    turnoId: 'turnoId',
    eletricistaId: 'eletricistaId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type TurnoEletricistaScalarFieldEnum = (typeof TurnoEletricistaScalarFieldEnum)[keyof typeof TurnoEletricistaScalarFieldEnum]


  export const VeiculoBaseHistoricoScalarFieldEnum: {
    id: 'id',
    veiculoId: 'veiculoId',
    baseId: 'baseId',
    dataInicio: 'dataInicio',
    dataFim: 'dataFim',
    motivo: 'motivo',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type VeiculoBaseHistoricoScalarFieldEnum = (typeof VeiculoBaseHistoricoScalarFieldEnum)[keyof typeof VeiculoBaseHistoricoScalarFieldEnum]


  export const TipoVeiculoScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type TipoVeiculoScalarFieldEnum = (typeof TipoVeiculoScalarFieldEnum)[keyof typeof TipoVeiculoScalarFieldEnum]


  export const VeiculoScalarFieldEnum: {
    id: 'id',
    placa: 'placa',
    modelo: 'modelo',
    ano: 'ano',
    tipoVeiculoId: 'tipoVeiculoId',
    contratoId: 'contratoId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type VeiculoScalarFieldEnum = (typeof VeiculoScalarFieldEnum)[keyof typeof VeiculoScalarFieldEnum]


  export const VeiculoOdometroScalarFieldEnum: {
    id: 'id',
    valor: 'valor',
    data: 'data',
    veiculoId: 'veiculoId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type VeiculoOdometroScalarFieldEnum = (typeof VeiculoOdometroScalarFieldEnum)[keyof typeof VeiculoOdometroScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const AprOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type AprOrderByRelevanceFieldEnum = (typeof AprOrderByRelevanceFieldEnum)[keyof typeof AprOrderByRelevanceFieldEnum]


  export const AprPerguntaOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type AprPerguntaOrderByRelevanceFieldEnum = (typeof AprPerguntaOrderByRelevanceFieldEnum)[keyof typeof AprPerguntaOrderByRelevanceFieldEnum]


  export const AprPerguntaRelacaoOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type AprPerguntaRelacaoOrderByRelevanceFieldEnum = (typeof AprPerguntaRelacaoOrderByRelevanceFieldEnum)[keyof typeof AprPerguntaRelacaoOrderByRelevanceFieldEnum]


  export const AprOpcaoRespostaOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type AprOpcaoRespostaOrderByRelevanceFieldEnum = (typeof AprOpcaoRespostaOrderByRelevanceFieldEnum)[keyof typeof AprOpcaoRespostaOrderByRelevanceFieldEnum]


  export const AprOpcaoRespostaRelacaoOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type AprOpcaoRespostaRelacaoOrderByRelevanceFieldEnum = (typeof AprOpcaoRespostaRelacaoOrderByRelevanceFieldEnum)[keyof typeof AprOpcaoRespostaRelacaoOrderByRelevanceFieldEnum]


  export const AprTipoAtividadeRelacaoOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type AprTipoAtividadeRelacaoOrderByRelevanceFieldEnum = (typeof AprTipoAtividadeRelacaoOrderByRelevanceFieldEnum)[keyof typeof AprTipoAtividadeRelacaoOrderByRelevanceFieldEnum]


  export const TipoAtividadeOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type TipoAtividadeOrderByRelevanceFieldEnum = (typeof TipoAtividadeOrderByRelevanceFieldEnum)[keyof typeof TipoAtividadeOrderByRelevanceFieldEnum]


  export const MobileUserOrderByRelevanceFieldEnum: {
    username: 'username',
    password: 'password',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type MobileUserOrderByRelevanceFieldEnum = (typeof MobileUserOrderByRelevanceFieldEnum)[keyof typeof MobileUserOrderByRelevanceFieldEnum]


  export const MobileSessionOrderByRelevanceFieldEnum: {
    id: 'id',
    deviceInfo: 'deviceInfo'
  };

  export type MobileSessionOrderByRelevanceFieldEnum = (typeof MobileSessionOrderByRelevanceFieldEnum)[keyof typeof MobileSessionOrderByRelevanceFieldEnum]


  export const MobileTokenOrderByRelevanceFieldEnum: {
    token: 'token',
    refreshToken: 'refreshToken',
    usuarioMobileId: 'usuarioMobileId'
  };

  export type MobileTokenOrderByRelevanceFieldEnum = (typeof MobileTokenOrderByRelevanceFieldEnum)[keyof typeof MobileTokenOrderByRelevanceFieldEnum]


  export const UserOrderByRelevanceFieldEnum: {
    nome: 'nome',
    email: 'email',
    username: 'username',
    password: 'password',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const AccountOrderByRelevanceFieldEnum: {
    id: 'id',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refresh_token: 'refresh_token',
    access_token: 'access_token',
    token_type: 'token_type',
    scope: 'scope',
    id_token: 'id_token',
    session_state: 'session_state'
  };

  export type AccountOrderByRelevanceFieldEnum = (typeof AccountOrderByRelevanceFieldEnum)[keyof typeof AccountOrderByRelevanceFieldEnum]


  export const SessionOrderByRelevanceFieldEnum: {
    id: 'id',
    sessionToken: 'sessionToken'
  };

  export type SessionOrderByRelevanceFieldEnum = (typeof SessionOrderByRelevanceFieldEnum)[keyof typeof SessionOrderByRelevanceFieldEnum]


  export const VerificationTokenOrderByRelevanceFieldEnum: {
    identifier: 'identifier',
    token: 'token'
  };

  export type VerificationTokenOrderByRelevanceFieldEnum = (typeof VerificationTokenOrderByRelevanceFieldEnum)[keyof typeof VerificationTokenOrderByRelevanceFieldEnum]


  export const RoleOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type RoleOrderByRelevanceFieldEnum = (typeof RoleOrderByRelevanceFieldEnum)[keyof typeof RoleOrderByRelevanceFieldEnum]


  export const BaseOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type BaseOrderByRelevanceFieldEnum = (typeof BaseOrderByRelevanceFieldEnum)[keyof typeof BaseOrderByRelevanceFieldEnum]


  export const TipoChecklistOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type TipoChecklistOrderByRelevanceFieldEnum = (typeof TipoChecklistOrderByRelevanceFieldEnum)[keyof typeof TipoChecklistOrderByRelevanceFieldEnum]


  export const ChecklistOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type ChecklistOrderByRelevanceFieldEnum = (typeof ChecklistOrderByRelevanceFieldEnum)[keyof typeof ChecklistOrderByRelevanceFieldEnum]


  export const ChecklistPerguntaOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type ChecklistPerguntaOrderByRelevanceFieldEnum = (typeof ChecklistPerguntaOrderByRelevanceFieldEnum)[keyof typeof ChecklistPerguntaOrderByRelevanceFieldEnum]


  export const ChecklistPerguntaRelacaoOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type ChecklistPerguntaRelacaoOrderByRelevanceFieldEnum = (typeof ChecklistPerguntaRelacaoOrderByRelevanceFieldEnum)[keyof typeof ChecklistPerguntaRelacaoOrderByRelevanceFieldEnum]


  export const ChecklistOpcaoRespostaOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type ChecklistOpcaoRespostaOrderByRelevanceFieldEnum = (typeof ChecklistOpcaoRespostaOrderByRelevanceFieldEnum)[keyof typeof ChecklistOpcaoRespostaOrderByRelevanceFieldEnum]


  export const ChecklistOpcaoRespostaRelacaoOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type ChecklistOpcaoRespostaRelacaoOrderByRelevanceFieldEnum = (typeof ChecklistOpcaoRespostaRelacaoOrderByRelevanceFieldEnum)[keyof typeof ChecklistOpcaoRespostaRelacaoOrderByRelevanceFieldEnum]


  export const ChecklistTipoVeiculoRelacaoOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type ChecklistTipoVeiculoRelacaoOrderByRelevanceFieldEnum = (typeof ChecklistTipoVeiculoRelacaoOrderByRelevanceFieldEnum)[keyof typeof ChecklistTipoVeiculoRelacaoOrderByRelevanceFieldEnum]


  export const ChecklistTipoEquipeRelacaoOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type ChecklistTipoEquipeRelacaoOrderByRelevanceFieldEnum = (typeof ChecklistTipoEquipeRelacaoOrderByRelevanceFieldEnum)[keyof typeof ChecklistTipoEquipeRelacaoOrderByRelevanceFieldEnum]


  export const ContratoOrderByRelevanceFieldEnum: {
    nome: 'nome',
    numero: 'numero',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type ContratoOrderByRelevanceFieldEnum = (typeof ContratoOrderByRelevanceFieldEnum)[keyof typeof ContratoOrderByRelevanceFieldEnum]


  export const MobileContratoPermissaoOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type MobileContratoPermissaoOrderByRelevanceFieldEnum = (typeof MobileContratoPermissaoOrderByRelevanceFieldEnum)[keyof typeof MobileContratoPermissaoOrderByRelevanceFieldEnum]


  export const EletricistaBaseHistoricoOrderByRelevanceFieldEnum: {
    motivo: 'motivo',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type EletricistaBaseHistoricoOrderByRelevanceFieldEnum = (typeof EletricistaBaseHistoricoOrderByRelevanceFieldEnum)[keyof typeof EletricistaBaseHistoricoOrderByRelevanceFieldEnum]


  export const EletricistaOrderByRelevanceFieldEnum: {
    nome: 'nome',
    matricula: 'matricula',
    telefone: 'telefone',
    estado: 'estado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type EletricistaOrderByRelevanceFieldEnum = (typeof EletricistaOrderByRelevanceFieldEnum)[keyof typeof EletricistaOrderByRelevanceFieldEnum]


  export const CargoOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type CargoOrderByRelevanceFieldEnum = (typeof CargoOrderByRelevanceFieldEnum)[keyof typeof CargoOrderByRelevanceFieldEnum]


  export const EquipeBaseHistoricoOrderByRelevanceFieldEnum: {
    motivo: 'motivo',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type EquipeBaseHistoricoOrderByRelevanceFieldEnum = (typeof EquipeBaseHistoricoOrderByRelevanceFieldEnum)[keyof typeof EquipeBaseHistoricoOrderByRelevanceFieldEnum]


  export const TipoEquipeOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type TipoEquipeOrderByRelevanceFieldEnum = (typeof TipoEquipeOrderByRelevanceFieldEnum)[keyof typeof TipoEquipeOrderByRelevanceFieldEnum]


  export const EquipeOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type EquipeOrderByRelevanceFieldEnum = (typeof EquipeOrderByRelevanceFieldEnum)[keyof typeof EquipeOrderByRelevanceFieldEnum]


  export const EquipeSupervisorOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type EquipeSupervisorOrderByRelevanceFieldEnum = (typeof EquipeSupervisorOrderByRelevanceFieldEnum)[keyof typeof EquipeSupervisorOrderByRelevanceFieldEnum]


  export const TipoEscalaOrderByRelevanceFieldEnum: {
    nome: 'nome',
    observacoes: 'observacoes',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type TipoEscalaOrderByRelevanceFieldEnum = (typeof TipoEscalaOrderByRelevanceFieldEnum)[keyof typeof TipoEscalaOrderByRelevanceFieldEnum]


  export const TipoEscalaCicloPosicaoOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type TipoEscalaCicloPosicaoOrderByRelevanceFieldEnum = (typeof TipoEscalaCicloPosicaoOrderByRelevanceFieldEnum)[keyof typeof TipoEscalaCicloPosicaoOrderByRelevanceFieldEnum]


  export const TipoEscalaSemanaMascaraOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type TipoEscalaSemanaMascaraOrderByRelevanceFieldEnum = (typeof TipoEscalaSemanaMascaraOrderByRelevanceFieldEnum)[keyof typeof TipoEscalaSemanaMascaraOrderByRelevanceFieldEnum]


  export const EscalaEquipePeriodoOrderByRelevanceFieldEnum: {
    observacoes: 'observacoes',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type EscalaEquipePeriodoOrderByRelevanceFieldEnum = (typeof EscalaEquipePeriodoOrderByRelevanceFieldEnum)[keyof typeof EscalaEquipePeriodoOrderByRelevanceFieldEnum]


  export const SlotEscalaOrderByRelevanceFieldEnum: {
    inicioPrevisto: 'inicioPrevisto',
    fimPrevisto: 'fimPrevisto',
    anotacoesDia: 'anotacoesDia',
    observacoes: 'observacoes',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type SlotEscalaOrderByRelevanceFieldEnum = (typeof SlotEscalaOrderByRelevanceFieldEnum)[keyof typeof SlotEscalaOrderByRelevanceFieldEnum]


  export const EventoCoberturaOrderByRelevanceFieldEnum: {
    justificativa: 'justificativa',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type EventoCoberturaOrderByRelevanceFieldEnum = (typeof EventoCoberturaOrderByRelevanceFieldEnum)[keyof typeof EventoCoberturaOrderByRelevanceFieldEnum]


  export const EquipeHorarioVigenciaOrderByRelevanceFieldEnum: {
    inicioTurnoHora: 'inicioTurnoHora',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type EquipeHorarioVigenciaOrderByRelevanceFieldEnum = (typeof EquipeHorarioVigenciaOrderByRelevanceFieldEnum)[keyof typeof EquipeHorarioVigenciaOrderByRelevanceFieldEnum]


  export const HorarioAberturaCatalogoOrderByRelevanceFieldEnum: {
    nome: 'nome',
    inicioTurnoHora: 'inicioTurnoHora',
    observacoes: 'observacoes',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type HorarioAberturaCatalogoOrderByRelevanceFieldEnum = (typeof HorarioAberturaCatalogoOrderByRelevanceFieldEnum)[keyof typeof HorarioAberturaCatalogoOrderByRelevanceFieldEnum]


  export const EquipeTurnoHistoricoOrderByRelevanceFieldEnum: {
    inicioTurnoHora: 'inicioTurnoHora',
    fimTurnoHora: 'fimTurnoHora',
    motivo: 'motivo',
    observacoes: 'observacoes',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type EquipeTurnoHistoricoOrderByRelevanceFieldEnum = (typeof EquipeTurnoHistoricoOrderByRelevanceFieldEnum)[keyof typeof EquipeTurnoHistoricoOrderByRelevanceFieldEnum]


  export const SupervisorOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type SupervisorOrderByRelevanceFieldEnum = (typeof SupervisorOrderByRelevanceFieldEnum)[keyof typeof SupervisorOrderByRelevanceFieldEnum]


  export const TestOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type TestOrderByRelevanceFieldEnum = (typeof TestOrderByRelevanceFieldEnum)[keyof typeof TestOrderByRelevanceFieldEnum]


  export const TurnoOrderByRelevanceFieldEnum: {
    dispositivo: 'dispositivo',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type TurnoOrderByRelevanceFieldEnum = (typeof TurnoOrderByRelevanceFieldEnum)[keyof typeof TurnoOrderByRelevanceFieldEnum]


  export const TurnoEletricistaOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type TurnoEletricistaOrderByRelevanceFieldEnum = (typeof TurnoEletricistaOrderByRelevanceFieldEnum)[keyof typeof TurnoEletricistaOrderByRelevanceFieldEnum]


  export const VeiculoBaseHistoricoOrderByRelevanceFieldEnum: {
    motivo: 'motivo',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type VeiculoBaseHistoricoOrderByRelevanceFieldEnum = (typeof VeiculoBaseHistoricoOrderByRelevanceFieldEnum)[keyof typeof VeiculoBaseHistoricoOrderByRelevanceFieldEnum]


  export const TipoVeiculoOrderByRelevanceFieldEnum: {
    nome: 'nome',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type TipoVeiculoOrderByRelevanceFieldEnum = (typeof TipoVeiculoOrderByRelevanceFieldEnum)[keyof typeof TipoVeiculoOrderByRelevanceFieldEnum]


  export const VeiculoOrderByRelevanceFieldEnum: {
    placa: 'placa',
    modelo: 'modelo',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type VeiculoOrderByRelevanceFieldEnum = (typeof VeiculoOrderByRelevanceFieldEnum)[keyof typeof VeiculoOrderByRelevanceFieldEnum]


  export const VeiculoOdometroOrderByRelevanceFieldEnum: {
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy'
  };

  export type VeiculoOdometroOrderByRelevanceFieldEnum = (typeof VeiculoOdometroOrderByRelevanceFieldEnum)[keyof typeof VeiculoOdometroOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'ModoRepeticao'
   */
  export type EnumModoRepeticaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ModoRepeticao'>
    


  /**
   * Reference to a field of type 'StatusTrabalho'
   */
  export type EnumStatusTrabalhoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusTrabalho'>
    


  /**
   * Reference to a field of type 'DiaSemana'
   */
  export type EnumDiaSemanaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DiaSemana'>
    


  /**
   * Reference to a field of type 'StatusEscalaEquipePeriodo'
   */
  export type EnumStatusEscalaEquipePeriodoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusEscalaEquipePeriodo'>
    


  /**
   * Reference to a field of type 'EstadoSlot'
   */
  export type EnumEstadoSlotFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoSlot'>
    


  /**
   * Reference to a field of type 'OrigemAtribuicao'
   */
  export type EnumOrigemAtribuicaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrigemAtribuicao'>
    


  /**
   * Reference to a field of type 'EventoCoberturaTipo'
   */
  export type EnumEventoCoberturaTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EventoCoberturaTipo'>
    


  /**
   * Reference to a field of type 'EventoCoberturaResultado'
   */
  export type EnumEventoCoberturaResultadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EventoCoberturaResultado'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    
  /**
   * Deep Input Types
   */


  export type AprWhereInput = {
    AND?: AprWhereInput | AprWhereInput[]
    OR?: AprWhereInput[]
    NOT?: AprWhereInput | AprWhereInput[]
    id?: IntFilter<"Apr"> | number
    nome?: StringFilter<"Apr"> | string
    createdAt?: DateTimeFilter<"Apr"> | Date | string
    createdBy?: StringFilter<"Apr"> | string
    updatedAt?: DateTimeNullableFilter<"Apr"> | Date | string | null
    updatedBy?: StringNullableFilter<"Apr"> | string | null
    deletedAt?: DateTimeNullableFilter<"Apr"> | Date | string | null
    deletedBy?: StringNullableFilter<"Apr"> | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoListRelationFilter
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoListRelationFilter
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoListRelationFilter
  }

  export type AprOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    AprPerguntaRelacao?: AprPerguntaRelacaoOrderByRelationAggregateInput
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoOrderByRelationAggregateInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoOrderByRelationAggregateInput
    _relevance?: AprOrderByRelevanceInput
  }

  export type AprWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AprWhereInput | AprWhereInput[]
    OR?: AprWhereInput[]
    NOT?: AprWhereInput | AprWhereInput[]
    nome?: StringFilter<"Apr"> | string
    createdAt?: DateTimeFilter<"Apr"> | Date | string
    createdBy?: StringFilter<"Apr"> | string
    updatedAt?: DateTimeNullableFilter<"Apr"> | Date | string | null
    updatedBy?: StringNullableFilter<"Apr"> | string | null
    deletedAt?: DateTimeNullableFilter<"Apr"> | Date | string | null
    deletedBy?: StringNullableFilter<"Apr"> | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoListRelationFilter
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoListRelationFilter
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoListRelationFilter
  }, "id">

  export type AprOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: AprCountOrderByAggregateInput
    _avg?: AprAvgOrderByAggregateInput
    _max?: AprMaxOrderByAggregateInput
    _min?: AprMinOrderByAggregateInput
    _sum?: AprSumOrderByAggregateInput
  }

  export type AprScalarWhereWithAggregatesInput = {
    AND?: AprScalarWhereWithAggregatesInput | AprScalarWhereWithAggregatesInput[]
    OR?: AprScalarWhereWithAggregatesInput[]
    NOT?: AprScalarWhereWithAggregatesInput | AprScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Apr"> | number
    nome?: StringWithAggregatesFilter<"Apr"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Apr"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Apr"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Apr"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Apr"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Apr"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Apr"> | string | null
  }

  export type AprPerguntaWhereInput = {
    AND?: AprPerguntaWhereInput | AprPerguntaWhereInput[]
    OR?: AprPerguntaWhereInput[]
    NOT?: AprPerguntaWhereInput | AprPerguntaWhereInput[]
    id?: IntFilter<"AprPergunta"> | number
    nome?: StringFilter<"AprPergunta"> | string
    createdAt?: DateTimeFilter<"AprPergunta"> | Date | string
    createdBy?: StringFilter<"AprPergunta"> | string
    updatedAt?: DateTimeNullableFilter<"AprPergunta"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprPergunta"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprPergunta"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprPergunta"> | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoListRelationFilter
  }

  export type AprPerguntaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    AprPerguntaRelacao?: AprPerguntaRelacaoOrderByRelationAggregateInput
    _relevance?: AprPerguntaOrderByRelevanceInput
  }

  export type AprPerguntaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AprPerguntaWhereInput | AprPerguntaWhereInput[]
    OR?: AprPerguntaWhereInput[]
    NOT?: AprPerguntaWhereInput | AprPerguntaWhereInput[]
    nome?: StringFilter<"AprPergunta"> | string
    createdAt?: DateTimeFilter<"AprPergunta"> | Date | string
    createdBy?: StringFilter<"AprPergunta"> | string
    updatedAt?: DateTimeNullableFilter<"AprPergunta"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprPergunta"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprPergunta"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprPergunta"> | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoListRelationFilter
  }, "id">

  export type AprPerguntaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: AprPerguntaCountOrderByAggregateInput
    _avg?: AprPerguntaAvgOrderByAggregateInput
    _max?: AprPerguntaMaxOrderByAggregateInput
    _min?: AprPerguntaMinOrderByAggregateInput
    _sum?: AprPerguntaSumOrderByAggregateInput
  }

  export type AprPerguntaScalarWhereWithAggregatesInput = {
    AND?: AprPerguntaScalarWhereWithAggregatesInput | AprPerguntaScalarWhereWithAggregatesInput[]
    OR?: AprPerguntaScalarWhereWithAggregatesInput[]
    NOT?: AprPerguntaScalarWhereWithAggregatesInput | AprPerguntaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AprPergunta"> | number
    nome?: StringWithAggregatesFilter<"AprPergunta"> | string
    createdAt?: DateTimeWithAggregatesFilter<"AprPergunta"> | Date | string
    createdBy?: StringWithAggregatesFilter<"AprPergunta"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"AprPergunta"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"AprPergunta"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"AprPergunta"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"AprPergunta"> | string | null
  }

  export type AprPerguntaRelacaoWhereInput = {
    AND?: AprPerguntaRelacaoWhereInput | AprPerguntaRelacaoWhereInput[]
    OR?: AprPerguntaRelacaoWhereInput[]
    NOT?: AprPerguntaRelacaoWhereInput | AprPerguntaRelacaoWhereInput[]
    id?: IntFilter<"AprPerguntaRelacao"> | number
    aprPerguntaId?: IntFilter<"AprPerguntaRelacao"> | number
    ordem?: IntFilter<"AprPerguntaRelacao"> | number
    aprId?: IntFilter<"AprPerguntaRelacao"> | number
    createdAt?: DateTimeFilter<"AprPerguntaRelacao"> | Date | string
    createdBy?: StringFilter<"AprPerguntaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"AprPerguntaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprPerguntaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprPerguntaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprPerguntaRelacao"> | string | null
    aprPergunta?: XOR<AprPerguntaScalarRelationFilter, AprPerguntaWhereInput>
    apr?: XOR<AprScalarRelationFilter, AprWhereInput>
  }

  export type AprPerguntaRelacaoOrderByWithRelationInput = {
    id?: SortOrder
    aprPerguntaId?: SortOrder
    ordem?: SortOrder
    aprId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    aprPergunta?: AprPerguntaOrderByWithRelationInput
    apr?: AprOrderByWithRelationInput
    _relevance?: AprPerguntaRelacaoOrderByRelevanceInput
  }

  export type AprPerguntaRelacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AprPerguntaRelacaoWhereInput | AprPerguntaRelacaoWhereInput[]
    OR?: AprPerguntaRelacaoWhereInput[]
    NOT?: AprPerguntaRelacaoWhereInput | AprPerguntaRelacaoWhereInput[]
    aprPerguntaId?: IntFilter<"AprPerguntaRelacao"> | number
    ordem?: IntFilter<"AprPerguntaRelacao"> | number
    aprId?: IntFilter<"AprPerguntaRelacao"> | number
    createdAt?: DateTimeFilter<"AprPerguntaRelacao"> | Date | string
    createdBy?: StringFilter<"AprPerguntaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"AprPerguntaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprPerguntaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprPerguntaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprPerguntaRelacao"> | string | null
    aprPergunta?: XOR<AprPerguntaScalarRelationFilter, AprPerguntaWhereInput>
    apr?: XOR<AprScalarRelationFilter, AprWhereInput>
  }, "id">

  export type AprPerguntaRelacaoOrderByWithAggregationInput = {
    id?: SortOrder
    aprPerguntaId?: SortOrder
    ordem?: SortOrder
    aprId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: AprPerguntaRelacaoCountOrderByAggregateInput
    _avg?: AprPerguntaRelacaoAvgOrderByAggregateInput
    _max?: AprPerguntaRelacaoMaxOrderByAggregateInput
    _min?: AprPerguntaRelacaoMinOrderByAggregateInput
    _sum?: AprPerguntaRelacaoSumOrderByAggregateInput
  }

  export type AprPerguntaRelacaoScalarWhereWithAggregatesInput = {
    AND?: AprPerguntaRelacaoScalarWhereWithAggregatesInput | AprPerguntaRelacaoScalarWhereWithAggregatesInput[]
    OR?: AprPerguntaRelacaoScalarWhereWithAggregatesInput[]
    NOT?: AprPerguntaRelacaoScalarWhereWithAggregatesInput | AprPerguntaRelacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AprPerguntaRelacao"> | number
    aprPerguntaId?: IntWithAggregatesFilter<"AprPerguntaRelacao"> | number
    ordem?: IntWithAggregatesFilter<"AprPerguntaRelacao"> | number
    aprId?: IntWithAggregatesFilter<"AprPerguntaRelacao"> | number
    createdAt?: DateTimeWithAggregatesFilter<"AprPerguntaRelacao"> | Date | string
    createdBy?: StringWithAggregatesFilter<"AprPerguntaRelacao"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"AprPerguntaRelacao"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"AprPerguntaRelacao"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"AprPerguntaRelacao"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"AprPerguntaRelacao"> | string | null
  }

  export type AprOpcaoRespostaWhereInput = {
    AND?: AprOpcaoRespostaWhereInput | AprOpcaoRespostaWhereInput[]
    OR?: AprOpcaoRespostaWhereInput[]
    NOT?: AprOpcaoRespostaWhereInput | AprOpcaoRespostaWhereInput[]
    id?: IntFilter<"AprOpcaoResposta"> | number
    nome?: StringFilter<"AprOpcaoResposta"> | string
    createdAt?: DateTimeFilter<"AprOpcaoResposta"> | Date | string
    createdBy?: StringFilter<"AprOpcaoResposta"> | string
    updatedAt?: DateTimeNullableFilter<"AprOpcaoResposta"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprOpcaoResposta"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprOpcaoResposta"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprOpcaoResposta"> | string | null
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoListRelationFilter
  }

  export type AprOpcaoRespostaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoOrderByRelationAggregateInput
    _relevance?: AprOpcaoRespostaOrderByRelevanceInput
  }

  export type AprOpcaoRespostaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AprOpcaoRespostaWhereInput | AprOpcaoRespostaWhereInput[]
    OR?: AprOpcaoRespostaWhereInput[]
    NOT?: AprOpcaoRespostaWhereInput | AprOpcaoRespostaWhereInput[]
    nome?: StringFilter<"AprOpcaoResposta"> | string
    createdAt?: DateTimeFilter<"AprOpcaoResposta"> | Date | string
    createdBy?: StringFilter<"AprOpcaoResposta"> | string
    updatedAt?: DateTimeNullableFilter<"AprOpcaoResposta"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprOpcaoResposta"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprOpcaoResposta"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprOpcaoResposta"> | string | null
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoListRelationFilter
  }, "id">

  export type AprOpcaoRespostaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: AprOpcaoRespostaCountOrderByAggregateInput
    _avg?: AprOpcaoRespostaAvgOrderByAggregateInput
    _max?: AprOpcaoRespostaMaxOrderByAggregateInput
    _min?: AprOpcaoRespostaMinOrderByAggregateInput
    _sum?: AprOpcaoRespostaSumOrderByAggregateInput
  }

  export type AprOpcaoRespostaScalarWhereWithAggregatesInput = {
    AND?: AprOpcaoRespostaScalarWhereWithAggregatesInput | AprOpcaoRespostaScalarWhereWithAggregatesInput[]
    OR?: AprOpcaoRespostaScalarWhereWithAggregatesInput[]
    NOT?: AprOpcaoRespostaScalarWhereWithAggregatesInput | AprOpcaoRespostaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AprOpcaoResposta"> | number
    nome?: StringWithAggregatesFilter<"AprOpcaoResposta"> | string
    createdAt?: DateTimeWithAggregatesFilter<"AprOpcaoResposta"> | Date | string
    createdBy?: StringWithAggregatesFilter<"AprOpcaoResposta"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"AprOpcaoResposta"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"AprOpcaoResposta"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"AprOpcaoResposta"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"AprOpcaoResposta"> | string | null
  }

  export type AprOpcaoRespostaRelacaoWhereInput = {
    AND?: AprOpcaoRespostaRelacaoWhereInput | AprOpcaoRespostaRelacaoWhereInput[]
    OR?: AprOpcaoRespostaRelacaoWhereInput[]
    NOT?: AprOpcaoRespostaRelacaoWhereInput | AprOpcaoRespostaRelacaoWhereInput[]
    id?: IntFilter<"AprOpcaoRespostaRelacao"> | number
    aprOpcaoRespostaId?: IntFilter<"AprOpcaoRespostaRelacao"> | number
    aprId?: IntFilter<"AprOpcaoRespostaRelacao"> | number
    createdAt?: DateTimeFilter<"AprOpcaoRespostaRelacao"> | Date | string
    createdBy?: StringFilter<"AprOpcaoRespostaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"AprOpcaoRespostaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprOpcaoRespostaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprOpcaoRespostaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprOpcaoRespostaRelacao"> | string | null
    aprOpcaoResposta?: XOR<AprOpcaoRespostaScalarRelationFilter, AprOpcaoRespostaWhereInput>
    apr?: XOR<AprScalarRelationFilter, AprWhereInput>
  }

  export type AprOpcaoRespostaRelacaoOrderByWithRelationInput = {
    id?: SortOrder
    aprOpcaoRespostaId?: SortOrder
    aprId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    aprOpcaoResposta?: AprOpcaoRespostaOrderByWithRelationInput
    apr?: AprOrderByWithRelationInput
    _relevance?: AprOpcaoRespostaRelacaoOrderByRelevanceInput
  }

  export type AprOpcaoRespostaRelacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AprOpcaoRespostaRelacaoWhereInput | AprOpcaoRespostaRelacaoWhereInput[]
    OR?: AprOpcaoRespostaRelacaoWhereInput[]
    NOT?: AprOpcaoRespostaRelacaoWhereInput | AprOpcaoRespostaRelacaoWhereInput[]
    aprOpcaoRespostaId?: IntFilter<"AprOpcaoRespostaRelacao"> | number
    aprId?: IntFilter<"AprOpcaoRespostaRelacao"> | number
    createdAt?: DateTimeFilter<"AprOpcaoRespostaRelacao"> | Date | string
    createdBy?: StringFilter<"AprOpcaoRespostaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"AprOpcaoRespostaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprOpcaoRespostaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprOpcaoRespostaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprOpcaoRespostaRelacao"> | string | null
    aprOpcaoResposta?: XOR<AprOpcaoRespostaScalarRelationFilter, AprOpcaoRespostaWhereInput>
    apr?: XOR<AprScalarRelationFilter, AprWhereInput>
  }, "id">

  export type AprOpcaoRespostaRelacaoOrderByWithAggregationInput = {
    id?: SortOrder
    aprOpcaoRespostaId?: SortOrder
    aprId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: AprOpcaoRespostaRelacaoCountOrderByAggregateInput
    _avg?: AprOpcaoRespostaRelacaoAvgOrderByAggregateInput
    _max?: AprOpcaoRespostaRelacaoMaxOrderByAggregateInput
    _min?: AprOpcaoRespostaRelacaoMinOrderByAggregateInput
    _sum?: AprOpcaoRespostaRelacaoSumOrderByAggregateInput
  }

  export type AprOpcaoRespostaRelacaoScalarWhereWithAggregatesInput = {
    AND?: AprOpcaoRespostaRelacaoScalarWhereWithAggregatesInput | AprOpcaoRespostaRelacaoScalarWhereWithAggregatesInput[]
    OR?: AprOpcaoRespostaRelacaoScalarWhereWithAggregatesInput[]
    NOT?: AprOpcaoRespostaRelacaoScalarWhereWithAggregatesInput | AprOpcaoRespostaRelacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AprOpcaoRespostaRelacao"> | number
    aprOpcaoRespostaId?: IntWithAggregatesFilter<"AprOpcaoRespostaRelacao"> | number
    aprId?: IntWithAggregatesFilter<"AprOpcaoRespostaRelacao"> | number
    createdAt?: DateTimeWithAggregatesFilter<"AprOpcaoRespostaRelacao"> | Date | string
    createdBy?: StringWithAggregatesFilter<"AprOpcaoRespostaRelacao"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"AprOpcaoRespostaRelacao"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"AprOpcaoRespostaRelacao"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"AprOpcaoRespostaRelacao"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"AprOpcaoRespostaRelacao"> | string | null
  }

  export type AprTipoAtividadeRelacaoWhereInput = {
    AND?: AprTipoAtividadeRelacaoWhereInput | AprTipoAtividadeRelacaoWhereInput[]
    OR?: AprTipoAtividadeRelacaoWhereInput[]
    NOT?: AprTipoAtividadeRelacaoWhereInput | AprTipoAtividadeRelacaoWhereInput[]
    id?: IntFilter<"AprTipoAtividadeRelacao"> | number
    aprId?: IntFilter<"AprTipoAtividadeRelacao"> | number
    tipoAtividadeId?: IntFilter<"AprTipoAtividadeRelacao"> | number
    createdAt?: DateTimeFilter<"AprTipoAtividadeRelacao"> | Date | string
    createdBy?: StringFilter<"AprTipoAtividadeRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"AprTipoAtividadeRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprTipoAtividadeRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprTipoAtividadeRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprTipoAtividadeRelacao"> | string | null
    apr?: XOR<AprScalarRelationFilter, AprWhereInput>
    tipoAtividade?: XOR<TipoAtividadeScalarRelationFilter, TipoAtividadeWhereInput>
  }

  export type AprTipoAtividadeRelacaoOrderByWithRelationInput = {
    id?: SortOrder
    aprId?: SortOrder
    tipoAtividadeId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    apr?: AprOrderByWithRelationInput
    tipoAtividade?: TipoAtividadeOrderByWithRelationInput
    _relevance?: AprTipoAtividadeRelacaoOrderByRelevanceInput
  }

  export type AprTipoAtividadeRelacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tipoAtividadeId_deletedAt?: AprTipoAtividadeRelacaoTipoAtividadeIdDeletedAtCompoundUniqueInput
    AND?: AprTipoAtividadeRelacaoWhereInput | AprTipoAtividadeRelacaoWhereInput[]
    OR?: AprTipoAtividadeRelacaoWhereInput[]
    NOT?: AprTipoAtividadeRelacaoWhereInput | AprTipoAtividadeRelacaoWhereInput[]
    aprId?: IntFilter<"AprTipoAtividadeRelacao"> | number
    tipoAtividadeId?: IntFilter<"AprTipoAtividadeRelacao"> | number
    createdAt?: DateTimeFilter<"AprTipoAtividadeRelacao"> | Date | string
    createdBy?: StringFilter<"AprTipoAtividadeRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"AprTipoAtividadeRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprTipoAtividadeRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprTipoAtividadeRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprTipoAtividadeRelacao"> | string | null
    apr?: XOR<AprScalarRelationFilter, AprWhereInput>
    tipoAtividade?: XOR<TipoAtividadeScalarRelationFilter, TipoAtividadeWhereInput>
  }, "id" | "tipoAtividadeId_deletedAt">

  export type AprTipoAtividadeRelacaoOrderByWithAggregationInput = {
    id?: SortOrder
    aprId?: SortOrder
    tipoAtividadeId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: AprTipoAtividadeRelacaoCountOrderByAggregateInput
    _avg?: AprTipoAtividadeRelacaoAvgOrderByAggregateInput
    _max?: AprTipoAtividadeRelacaoMaxOrderByAggregateInput
    _min?: AprTipoAtividadeRelacaoMinOrderByAggregateInput
    _sum?: AprTipoAtividadeRelacaoSumOrderByAggregateInput
  }

  export type AprTipoAtividadeRelacaoScalarWhereWithAggregatesInput = {
    AND?: AprTipoAtividadeRelacaoScalarWhereWithAggregatesInput | AprTipoAtividadeRelacaoScalarWhereWithAggregatesInput[]
    OR?: AprTipoAtividadeRelacaoScalarWhereWithAggregatesInput[]
    NOT?: AprTipoAtividadeRelacaoScalarWhereWithAggregatesInput | AprTipoAtividadeRelacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AprTipoAtividadeRelacao"> | number
    aprId?: IntWithAggregatesFilter<"AprTipoAtividadeRelacao"> | number
    tipoAtividadeId?: IntWithAggregatesFilter<"AprTipoAtividadeRelacao"> | number
    createdAt?: DateTimeWithAggregatesFilter<"AprTipoAtividadeRelacao"> | Date | string
    createdBy?: StringWithAggregatesFilter<"AprTipoAtividadeRelacao"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"AprTipoAtividadeRelacao"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"AprTipoAtividadeRelacao"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"AprTipoAtividadeRelacao"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"AprTipoAtividadeRelacao"> | string | null
  }

  export type TipoAtividadeWhereInput = {
    AND?: TipoAtividadeWhereInput | TipoAtividadeWhereInput[]
    OR?: TipoAtividadeWhereInput[]
    NOT?: TipoAtividadeWhereInput | TipoAtividadeWhereInput[]
    id?: IntFilter<"TipoAtividade"> | number
    nome?: StringFilter<"TipoAtividade"> | string
    createdAt?: DateTimeFilter<"TipoAtividade"> | Date | string
    createdBy?: StringFilter<"TipoAtividade"> | string
    updatedAt?: DateTimeNullableFilter<"TipoAtividade"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoAtividade"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoAtividade"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoAtividade"> | string | null
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoListRelationFilter
  }

  export type TipoAtividadeOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoOrderByRelationAggregateInput
    _relevance?: TipoAtividadeOrderByRelevanceInput
  }

  export type TipoAtividadeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TipoAtividadeWhereInput | TipoAtividadeWhereInput[]
    OR?: TipoAtividadeWhereInput[]
    NOT?: TipoAtividadeWhereInput | TipoAtividadeWhereInput[]
    nome?: StringFilter<"TipoAtividade"> | string
    createdAt?: DateTimeFilter<"TipoAtividade"> | Date | string
    createdBy?: StringFilter<"TipoAtividade"> | string
    updatedAt?: DateTimeNullableFilter<"TipoAtividade"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoAtividade"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoAtividade"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoAtividade"> | string | null
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoListRelationFilter
  }, "id">

  export type TipoAtividadeOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: TipoAtividadeCountOrderByAggregateInput
    _avg?: TipoAtividadeAvgOrderByAggregateInput
    _max?: TipoAtividadeMaxOrderByAggregateInput
    _min?: TipoAtividadeMinOrderByAggregateInput
    _sum?: TipoAtividadeSumOrderByAggregateInput
  }

  export type TipoAtividadeScalarWhereWithAggregatesInput = {
    AND?: TipoAtividadeScalarWhereWithAggregatesInput | TipoAtividadeScalarWhereWithAggregatesInput[]
    OR?: TipoAtividadeScalarWhereWithAggregatesInput[]
    NOT?: TipoAtividadeScalarWhereWithAggregatesInput | TipoAtividadeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoAtividade"> | number
    nome?: StringWithAggregatesFilter<"TipoAtividade"> | string
    createdAt?: DateTimeWithAggregatesFilter<"TipoAtividade"> | Date | string
    createdBy?: StringWithAggregatesFilter<"TipoAtividade"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TipoAtividade"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"TipoAtividade"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"TipoAtividade"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"TipoAtividade"> | string | null
  }

  export type MobileUserWhereInput = {
    AND?: MobileUserWhereInput | MobileUserWhereInput[]
    OR?: MobileUserWhereInput[]
    NOT?: MobileUserWhereInput | MobileUserWhereInput[]
    id?: IntFilter<"MobileUser"> | number
    username?: StringFilter<"MobileUser"> | string
    password?: StringFilter<"MobileUser"> | string
    createdAt?: DateTimeFilter<"MobileUser"> | Date | string
    createdBy?: StringFilter<"MobileUser"> | string
    updatedAt?: DateTimeNullableFilter<"MobileUser"> | Date | string | null
    updatedBy?: StringNullableFilter<"MobileUser"> | string | null
    deletedAt?: DateTimeNullableFilter<"MobileUser"> | Date | string | null
    deletedBy?: StringNullableFilter<"MobileUser"> | string | null
    mobileSession?: MobileSessionListRelationFilter
    MobileToken?: MobileTokenListRelationFilter
    MobileContratoPermissao?: MobileContratoPermissaoListRelationFilter
  }

  export type MobileUserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    mobileSession?: MobileSessionOrderByRelationAggregateInput
    MobileToken?: MobileTokenOrderByRelationAggregateInput
    MobileContratoPermissao?: MobileContratoPermissaoOrderByRelationAggregateInput
    _relevance?: MobileUserOrderByRelevanceInput
  }

  export type MobileUserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    AND?: MobileUserWhereInput | MobileUserWhereInput[]
    OR?: MobileUserWhereInput[]
    NOT?: MobileUserWhereInput | MobileUserWhereInput[]
    password?: StringFilter<"MobileUser"> | string
    createdAt?: DateTimeFilter<"MobileUser"> | Date | string
    createdBy?: StringFilter<"MobileUser"> | string
    updatedAt?: DateTimeNullableFilter<"MobileUser"> | Date | string | null
    updatedBy?: StringNullableFilter<"MobileUser"> | string | null
    deletedAt?: DateTimeNullableFilter<"MobileUser"> | Date | string | null
    deletedBy?: StringNullableFilter<"MobileUser"> | string | null
    mobileSession?: MobileSessionListRelationFilter
    MobileToken?: MobileTokenListRelationFilter
    MobileContratoPermissao?: MobileContratoPermissaoListRelationFilter
  }, "id" | "username">

  export type MobileUserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: MobileUserCountOrderByAggregateInput
    _avg?: MobileUserAvgOrderByAggregateInput
    _max?: MobileUserMaxOrderByAggregateInput
    _min?: MobileUserMinOrderByAggregateInput
    _sum?: MobileUserSumOrderByAggregateInput
  }

  export type MobileUserScalarWhereWithAggregatesInput = {
    AND?: MobileUserScalarWhereWithAggregatesInput | MobileUserScalarWhereWithAggregatesInput[]
    OR?: MobileUserScalarWhereWithAggregatesInput[]
    NOT?: MobileUserScalarWhereWithAggregatesInput | MobileUserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MobileUser"> | number
    username?: StringWithAggregatesFilter<"MobileUser"> | string
    password?: StringWithAggregatesFilter<"MobileUser"> | string
    createdAt?: DateTimeWithAggregatesFilter<"MobileUser"> | Date | string
    createdBy?: StringWithAggregatesFilter<"MobileUser"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"MobileUser"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"MobileUser"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"MobileUser"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"MobileUser"> | string | null
  }

  export type MobileSessionWhereInput = {
    AND?: MobileSessionWhereInput | MobileSessionWhereInput[]
    OR?: MobileSessionWhereInput[]
    NOT?: MobileSessionWhereInput | MobileSessionWhereInput[]
    id?: StringFilter<"MobileSession"> | string
    deviceInfo?: StringNullableFilter<"MobileSession"> | string | null
    lastActive?: DateTimeFilter<"MobileSession"> | Date | string
    createdAt?: DateTimeFilter<"MobileSession"> | Date | string
    expiresAt?: DateTimeFilter<"MobileSession"> | Date | string
    ativa?: BoolFilter<"MobileSession"> | boolean
    mobileUserId?: IntFilter<"MobileSession"> | number
    mobileUser?: XOR<MobileUserScalarRelationFilter, MobileUserWhereInput>
  }

  export type MobileSessionOrderByWithRelationInput = {
    id?: SortOrder
    deviceInfo?: SortOrderInput | SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    ativa?: SortOrder
    mobileUserId?: SortOrder
    mobileUser?: MobileUserOrderByWithRelationInput
    _relevance?: MobileSessionOrderByRelevanceInput
  }

  export type MobileSessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MobileSessionWhereInput | MobileSessionWhereInput[]
    OR?: MobileSessionWhereInput[]
    NOT?: MobileSessionWhereInput | MobileSessionWhereInput[]
    deviceInfo?: StringNullableFilter<"MobileSession"> | string | null
    lastActive?: DateTimeFilter<"MobileSession"> | Date | string
    createdAt?: DateTimeFilter<"MobileSession"> | Date | string
    expiresAt?: DateTimeFilter<"MobileSession"> | Date | string
    ativa?: BoolFilter<"MobileSession"> | boolean
    mobileUserId?: IntFilter<"MobileSession"> | number
    mobileUser?: XOR<MobileUserScalarRelationFilter, MobileUserWhereInput>
  }, "id">

  export type MobileSessionOrderByWithAggregationInput = {
    id?: SortOrder
    deviceInfo?: SortOrderInput | SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    ativa?: SortOrder
    mobileUserId?: SortOrder
    _count?: MobileSessionCountOrderByAggregateInput
    _avg?: MobileSessionAvgOrderByAggregateInput
    _max?: MobileSessionMaxOrderByAggregateInput
    _min?: MobileSessionMinOrderByAggregateInput
    _sum?: MobileSessionSumOrderByAggregateInput
  }

  export type MobileSessionScalarWhereWithAggregatesInput = {
    AND?: MobileSessionScalarWhereWithAggregatesInput | MobileSessionScalarWhereWithAggregatesInput[]
    OR?: MobileSessionScalarWhereWithAggregatesInput[]
    NOT?: MobileSessionScalarWhereWithAggregatesInput | MobileSessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MobileSession"> | string
    deviceInfo?: StringNullableWithAggregatesFilter<"MobileSession"> | string | null
    lastActive?: DateTimeWithAggregatesFilter<"MobileSession"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"MobileSession"> | Date | string
    expiresAt?: DateTimeWithAggregatesFilter<"MobileSession"> | Date | string
    ativa?: BoolWithAggregatesFilter<"MobileSession"> | boolean
    mobileUserId?: IntWithAggregatesFilter<"MobileSession"> | number
  }

  export type MobileTokenWhereInput = {
    AND?: MobileTokenWhereInput | MobileTokenWhereInput[]
    OR?: MobileTokenWhereInput[]
    NOT?: MobileTokenWhereInput | MobileTokenWhereInput[]
    id?: IntFilter<"MobileToken"> | number
    token?: StringFilter<"MobileToken"> | string
    refreshToken?: StringNullableFilter<"MobileToken"> | string | null
    refreshTokenExpiresAt?: DateTimeNullableFilter<"MobileToken"> | Date | string | null
    usuarioMobileId?: StringFilter<"MobileToken"> | string
    expiresAt?: DateTimeFilter<"MobileToken"> | Date | string
    createdAt?: DateTimeFilter<"MobileToken"> | Date | string
    updatedAt?: DateTimeFilter<"MobileToken"> | Date | string
    revoked?: BoolFilter<"MobileToken"> | boolean
    mobileUserId?: IntFilter<"MobileToken"> | number
    mobileUser?: XOR<MobileUserScalarRelationFilter, MobileUserWhereInput>
  }

  export type MobileTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    refreshToken?: SortOrderInput | SortOrder
    refreshTokenExpiresAt?: SortOrderInput | SortOrder
    usuarioMobileId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    revoked?: SortOrder
    mobileUserId?: SortOrder
    mobileUser?: MobileUserOrderByWithRelationInput
    _relevance?: MobileTokenOrderByRelevanceInput
  }

  export type MobileTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    token?: string
    refreshToken?: string
    AND?: MobileTokenWhereInput | MobileTokenWhereInput[]
    OR?: MobileTokenWhereInput[]
    NOT?: MobileTokenWhereInput | MobileTokenWhereInput[]
    refreshTokenExpiresAt?: DateTimeNullableFilter<"MobileToken"> | Date | string | null
    usuarioMobileId?: StringFilter<"MobileToken"> | string
    expiresAt?: DateTimeFilter<"MobileToken"> | Date | string
    createdAt?: DateTimeFilter<"MobileToken"> | Date | string
    updatedAt?: DateTimeFilter<"MobileToken"> | Date | string
    revoked?: BoolFilter<"MobileToken"> | boolean
    mobileUserId?: IntFilter<"MobileToken"> | number
    mobileUser?: XOR<MobileUserScalarRelationFilter, MobileUserWhereInput>
  }, "id" | "token" | "refreshToken">

  export type MobileTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    refreshToken?: SortOrderInput | SortOrder
    refreshTokenExpiresAt?: SortOrderInput | SortOrder
    usuarioMobileId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    revoked?: SortOrder
    mobileUserId?: SortOrder
    _count?: MobileTokenCountOrderByAggregateInput
    _avg?: MobileTokenAvgOrderByAggregateInput
    _max?: MobileTokenMaxOrderByAggregateInput
    _min?: MobileTokenMinOrderByAggregateInput
    _sum?: MobileTokenSumOrderByAggregateInput
  }

  export type MobileTokenScalarWhereWithAggregatesInput = {
    AND?: MobileTokenScalarWhereWithAggregatesInput | MobileTokenScalarWhereWithAggregatesInput[]
    OR?: MobileTokenScalarWhereWithAggregatesInput[]
    NOT?: MobileTokenScalarWhereWithAggregatesInput | MobileTokenScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MobileToken"> | number
    token?: StringWithAggregatesFilter<"MobileToken"> | string
    refreshToken?: StringNullableWithAggregatesFilter<"MobileToken"> | string | null
    refreshTokenExpiresAt?: DateTimeNullableWithAggregatesFilter<"MobileToken"> | Date | string | null
    usuarioMobileId?: StringWithAggregatesFilter<"MobileToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"MobileToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"MobileToken"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MobileToken"> | Date | string
    revoked?: BoolWithAggregatesFilter<"MobileToken"> | boolean
    mobileUserId?: IntWithAggregatesFilter<"MobileToken"> | number
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    nome?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    createdBy?: StringFilter<"User"> | string
    updatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    updatedBy?: StringNullableFilter<"User"> | string | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletedBy?: StringNullableFilter<"User"> | string | null
    Session?: SessionListRelationFilter
    Account?: AccountListRelationFilter
    RoleUser?: RoleUserListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    Session?: SessionOrderByRelationAggregateInput
    Account?: AccountOrderByRelationAggregateInput
    RoleUser?: RoleUserOrderByRelationAggregateInput
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    username?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    nome?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    createdBy?: StringFilter<"User"> | string
    updatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    updatedBy?: StringNullableFilter<"User"> | string | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletedBy?: StringNullableFilter<"User"> | string | null
    Session?: SessionListRelationFilter
    Account?: AccountListRelationFilter
    RoleUser?: RoleUserListRelationFilter
  }, "id" | "email" | "username">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    nome?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    createdBy?: StringWithAggregatesFilter<"User"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"User"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    userId?: IntFilter<"Account"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    userId?: SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: AccountOrderByRelevanceInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_providerAccountId?: AccountProviderProviderAccountIdCompoundUniqueInput
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    userId?: IntFilter<"Account"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "provider_providerAccountId">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    userId?: SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    type?: StringWithAggregatesFilter<"Account"> | string
    provider?: StringWithAggregatesFilter<"Account"> | string
    providerAccountId?: StringWithAggregatesFilter<"Account"> | string
    refresh_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    access_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    expires_at?: IntNullableWithAggregatesFilter<"Account"> | number | null
    token_type?: StringNullableWithAggregatesFilter<"Account"> | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    id_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    session_state?: StringNullableWithAggregatesFilter<"Account"> | string | null
    userId?: IntWithAggregatesFilter<"Account"> | number
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    userId?: IntFilter<"Session"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    expires?: SortOrder
    userId?: SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: SessionOrderByRelevanceInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sessionToken?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    expires?: DateTimeFilter<"Session"> | Date | string
    userId?: IntFilter<"Session"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "sessionToken">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    expires?: SortOrder
    userId?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _avg?: SessionAvgOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
    _sum?: SessionSumOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    sessionToken?: StringWithAggregatesFilter<"Session"> | string
    expires?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    userId?: IntWithAggregatesFilter<"Session"> | number
  }

  export type VerificationTokenWhereInput = {
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    token?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }

  export type VerificationTokenOrderByWithRelationInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    _relevance?: VerificationTokenOrderByRelevanceInput
  }

  export type VerificationTokenWhereUniqueInput = Prisma.AtLeast<{
    token?: string
    identifier_token?: VerificationTokenIdentifierTokenCompoundUniqueInput
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }, "token" | "identifier_token">

  export type VerificationTokenOrderByWithAggregationInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    _count?: VerificationTokenCountOrderByAggregateInput
    _max?: VerificationTokenMaxOrderByAggregateInput
    _min?: VerificationTokenMinOrderByAggregateInput
  }

  export type VerificationTokenScalarWhereWithAggregatesInput = {
    AND?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    OR?: VerificationTokenScalarWhereWithAggregatesInput[]
    NOT?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    identifier?: StringWithAggregatesFilter<"VerificationToken"> | string
    token?: StringWithAggregatesFilter<"VerificationToken"> | string
    expires?: DateTimeWithAggregatesFilter<"VerificationToken"> | Date | string
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: IntFilter<"Role"> | number
    nome?: StringFilter<"Role"> | string
    createdAt?: DateTimeFilter<"Role"> | Date | string
    createdBy?: StringFilter<"Role"> | string
    updatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    updatedBy?: StringNullableFilter<"Role"> | string | null
    RoleUser?: RoleUserListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    RoleUser?: RoleUserOrderByRelationAggregateInput
    _relevance?: RoleOrderByRelevanceInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    nome?: StringFilter<"Role"> | string
    createdAt?: DateTimeFilter<"Role"> | Date | string
    createdBy?: StringFilter<"Role"> | string
    updatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    updatedBy?: StringNullableFilter<"Role"> | string | null
    RoleUser?: RoleUserListRelationFilter
  }, "id">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Role"> | number
    nome?: StringWithAggregatesFilter<"Role"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Role"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Role"> | string | null
  }

  export type RoleUserWhereInput = {
    AND?: RoleUserWhereInput | RoleUserWhereInput[]
    OR?: RoleUserWhereInput[]
    NOT?: RoleUserWhereInput | RoleUserWhereInput[]
    id?: IntFilter<"RoleUser"> | number
    userId?: IntFilter<"RoleUser"> | number
    roleId?: IntFilter<"RoleUser"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }

  export type RoleUserOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    user?: UserOrderByWithRelationInput
    role?: RoleOrderByWithRelationInput
  }

  export type RoleUserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RoleUserWhereInput | RoleUserWhereInput[]
    OR?: RoleUserWhereInput[]
    NOT?: RoleUserWhereInput | RoleUserWhereInput[]
    userId?: IntFilter<"RoleUser"> | number
    roleId?: IntFilter<"RoleUser"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }, "id">

  export type RoleUserOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    _count?: RoleUserCountOrderByAggregateInput
    _avg?: RoleUserAvgOrderByAggregateInput
    _max?: RoleUserMaxOrderByAggregateInput
    _min?: RoleUserMinOrderByAggregateInput
    _sum?: RoleUserSumOrderByAggregateInput
  }

  export type RoleUserScalarWhereWithAggregatesInput = {
    AND?: RoleUserScalarWhereWithAggregatesInput | RoleUserScalarWhereWithAggregatesInput[]
    OR?: RoleUserScalarWhereWithAggregatesInput[]
    NOT?: RoleUserScalarWhereWithAggregatesInput | RoleUserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RoleUser"> | number
    userId?: IntWithAggregatesFilter<"RoleUser"> | number
    roleId?: IntWithAggregatesFilter<"RoleUser"> | number
  }

  export type BaseWhereInput = {
    AND?: BaseWhereInput | BaseWhereInput[]
    OR?: BaseWhereInput[]
    NOT?: BaseWhereInput | BaseWhereInput[]
    id?: IntFilter<"Base"> | number
    nome?: StringFilter<"Base"> | string
    contratoId?: IntFilter<"Base"> | number
    createdAt?: DateTimeFilter<"Base"> | Date | string
    createdBy?: StringFilter<"Base"> | string
    updatedAt?: DateTimeNullableFilter<"Base"> | Date | string | null
    updatedBy?: StringNullableFilter<"Base"> | string | null
    deletedAt?: DateTimeNullableFilter<"Base"> | Date | string | null
    deletedBy?: StringNullableFilter<"Base"> | string | null
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    EletricistaBaseHistorico?: EletricistaBaseHistoricoListRelationFilter
    VeiculoBaseHistorico?: VeiculoBaseHistoricoListRelationFilter
    EquipeBaseHistorico?: EquipeBaseHistoricoListRelationFilter
  }

  export type BaseOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    contrato?: ContratoOrderByWithRelationInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoOrderByRelationAggregateInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoOrderByRelationAggregateInput
    EquipeBaseHistorico?: EquipeBaseHistoricoOrderByRelationAggregateInput
    _relevance?: BaseOrderByRelevanceInput
  }

  export type BaseWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: BaseWhereInput | BaseWhereInput[]
    OR?: BaseWhereInput[]
    NOT?: BaseWhereInput | BaseWhereInput[]
    nome?: StringFilter<"Base"> | string
    contratoId?: IntFilter<"Base"> | number
    createdAt?: DateTimeFilter<"Base"> | Date | string
    createdBy?: StringFilter<"Base"> | string
    updatedAt?: DateTimeNullableFilter<"Base"> | Date | string | null
    updatedBy?: StringNullableFilter<"Base"> | string | null
    deletedAt?: DateTimeNullableFilter<"Base"> | Date | string | null
    deletedBy?: StringNullableFilter<"Base"> | string | null
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    EletricistaBaseHistorico?: EletricistaBaseHistoricoListRelationFilter
    VeiculoBaseHistorico?: VeiculoBaseHistoricoListRelationFilter
    EquipeBaseHistorico?: EquipeBaseHistoricoListRelationFilter
  }, "id">

  export type BaseOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: BaseCountOrderByAggregateInput
    _avg?: BaseAvgOrderByAggregateInput
    _max?: BaseMaxOrderByAggregateInput
    _min?: BaseMinOrderByAggregateInput
    _sum?: BaseSumOrderByAggregateInput
  }

  export type BaseScalarWhereWithAggregatesInput = {
    AND?: BaseScalarWhereWithAggregatesInput | BaseScalarWhereWithAggregatesInput[]
    OR?: BaseScalarWhereWithAggregatesInput[]
    NOT?: BaseScalarWhereWithAggregatesInput | BaseScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Base"> | number
    nome?: StringWithAggregatesFilter<"Base"> | string
    contratoId?: IntWithAggregatesFilter<"Base"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Base"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Base"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Base"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Base"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Base"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Base"> | string | null
  }

  export type TipoChecklistWhereInput = {
    AND?: TipoChecklistWhereInput | TipoChecklistWhereInput[]
    OR?: TipoChecklistWhereInput[]
    NOT?: TipoChecklistWhereInput | TipoChecklistWhereInput[]
    id?: IntFilter<"TipoChecklist"> | number
    nome?: StringFilter<"TipoChecklist"> | string
    createdAt?: DateTimeFilter<"TipoChecklist"> | Date | string
    createdBy?: StringFilter<"TipoChecklist"> | string
    updatedAt?: DateTimeNullableFilter<"TipoChecklist"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoChecklist"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoChecklist"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoChecklist"> | string | null
    Checklist?: ChecklistListRelationFilter
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoListRelationFilter
  }

  export type TipoChecklistOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    Checklist?: ChecklistOrderByRelationAggregateInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoOrderByRelationAggregateInput
    _relevance?: TipoChecklistOrderByRelevanceInput
  }

  export type TipoChecklistWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TipoChecklistWhereInput | TipoChecklistWhereInput[]
    OR?: TipoChecklistWhereInput[]
    NOT?: TipoChecklistWhereInput | TipoChecklistWhereInput[]
    nome?: StringFilter<"TipoChecklist"> | string
    createdAt?: DateTimeFilter<"TipoChecklist"> | Date | string
    createdBy?: StringFilter<"TipoChecklist"> | string
    updatedAt?: DateTimeNullableFilter<"TipoChecklist"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoChecklist"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoChecklist"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoChecklist"> | string | null
    Checklist?: ChecklistListRelationFilter
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoListRelationFilter
  }, "id">

  export type TipoChecklistOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: TipoChecklistCountOrderByAggregateInput
    _avg?: TipoChecklistAvgOrderByAggregateInput
    _max?: TipoChecklistMaxOrderByAggregateInput
    _min?: TipoChecklistMinOrderByAggregateInput
    _sum?: TipoChecklistSumOrderByAggregateInput
  }

  export type TipoChecklistScalarWhereWithAggregatesInput = {
    AND?: TipoChecklistScalarWhereWithAggregatesInput | TipoChecklistScalarWhereWithAggregatesInput[]
    OR?: TipoChecklistScalarWhereWithAggregatesInput[]
    NOT?: TipoChecklistScalarWhereWithAggregatesInput | TipoChecklistScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoChecklist"> | number
    nome?: StringWithAggregatesFilter<"TipoChecklist"> | string
    createdAt?: DateTimeWithAggregatesFilter<"TipoChecklist"> | Date | string
    createdBy?: StringWithAggregatesFilter<"TipoChecklist"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TipoChecklist"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"TipoChecklist"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"TipoChecklist"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"TipoChecklist"> | string | null
  }

  export type ChecklistWhereInput = {
    AND?: ChecklistWhereInput | ChecklistWhereInput[]
    OR?: ChecklistWhereInput[]
    NOT?: ChecklistWhereInput | ChecklistWhereInput[]
    id?: IntFilter<"Checklist"> | number
    nome?: StringFilter<"Checklist"> | string
    tipoChecklistId?: IntFilter<"Checklist"> | number
    createdAt?: DateTimeFilter<"Checklist"> | Date | string
    createdBy?: StringFilter<"Checklist"> | string
    updatedAt?: DateTimeNullableFilter<"Checklist"> | Date | string | null
    updatedBy?: StringNullableFilter<"Checklist"> | string | null
    deletedAt?: DateTimeNullableFilter<"Checklist"> | Date | string | null
    deletedBy?: StringNullableFilter<"Checklist"> | string | null
    tipoChecklist?: XOR<TipoChecklistScalarRelationFilter, TipoChecklistWhereInput>
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoListRelationFilter
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoListRelationFilter
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoListRelationFilter
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoListRelationFilter
  }

  export type ChecklistOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tipoChecklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    tipoChecklist?: TipoChecklistOrderByWithRelationInput
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoOrderByRelationAggregateInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoOrderByRelationAggregateInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoOrderByRelationAggregateInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoOrderByRelationAggregateInput
    _relevance?: ChecklistOrderByRelevanceInput
  }

  export type ChecklistWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ChecklistWhereInput | ChecklistWhereInput[]
    OR?: ChecklistWhereInput[]
    NOT?: ChecklistWhereInput | ChecklistWhereInput[]
    nome?: StringFilter<"Checklist"> | string
    tipoChecklistId?: IntFilter<"Checklist"> | number
    createdAt?: DateTimeFilter<"Checklist"> | Date | string
    createdBy?: StringFilter<"Checklist"> | string
    updatedAt?: DateTimeNullableFilter<"Checklist"> | Date | string | null
    updatedBy?: StringNullableFilter<"Checklist"> | string | null
    deletedAt?: DateTimeNullableFilter<"Checklist"> | Date | string | null
    deletedBy?: StringNullableFilter<"Checklist"> | string | null
    tipoChecklist?: XOR<TipoChecklistScalarRelationFilter, TipoChecklistWhereInput>
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoListRelationFilter
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoListRelationFilter
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoListRelationFilter
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoListRelationFilter
  }, "id">

  export type ChecklistOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    tipoChecklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: ChecklistCountOrderByAggregateInput
    _avg?: ChecklistAvgOrderByAggregateInput
    _max?: ChecklistMaxOrderByAggregateInput
    _min?: ChecklistMinOrderByAggregateInput
    _sum?: ChecklistSumOrderByAggregateInput
  }

  export type ChecklistScalarWhereWithAggregatesInput = {
    AND?: ChecklistScalarWhereWithAggregatesInput | ChecklistScalarWhereWithAggregatesInput[]
    OR?: ChecklistScalarWhereWithAggregatesInput[]
    NOT?: ChecklistScalarWhereWithAggregatesInput | ChecklistScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Checklist"> | number
    nome?: StringWithAggregatesFilter<"Checklist"> | string
    tipoChecklistId?: IntWithAggregatesFilter<"Checklist"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Checklist"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Checklist"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Checklist"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Checklist"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Checklist"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Checklist"> | string | null
  }

  export type ChecklistPerguntaWhereInput = {
    AND?: ChecklistPerguntaWhereInput | ChecklistPerguntaWhereInput[]
    OR?: ChecklistPerguntaWhereInput[]
    NOT?: ChecklistPerguntaWhereInput | ChecklistPerguntaWhereInput[]
    id?: IntFilter<"ChecklistPergunta"> | number
    nome?: StringFilter<"ChecklistPergunta"> | string
    createdAt?: DateTimeFilter<"ChecklistPergunta"> | Date | string
    createdBy?: StringFilter<"ChecklistPergunta"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistPergunta"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistPergunta"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistPergunta"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistPergunta"> | string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoListRelationFilter
  }

  export type ChecklistPerguntaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoOrderByRelationAggregateInput
    _relevance?: ChecklistPerguntaOrderByRelevanceInput
  }

  export type ChecklistPerguntaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ChecklistPerguntaWhereInput | ChecklistPerguntaWhereInput[]
    OR?: ChecklistPerguntaWhereInput[]
    NOT?: ChecklistPerguntaWhereInput | ChecklistPerguntaWhereInput[]
    nome?: StringFilter<"ChecklistPergunta"> | string
    createdAt?: DateTimeFilter<"ChecklistPergunta"> | Date | string
    createdBy?: StringFilter<"ChecklistPergunta"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistPergunta"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistPergunta"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistPergunta"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistPergunta"> | string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoListRelationFilter
  }, "id">

  export type ChecklistPerguntaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: ChecklistPerguntaCountOrderByAggregateInput
    _avg?: ChecklistPerguntaAvgOrderByAggregateInput
    _max?: ChecklistPerguntaMaxOrderByAggregateInput
    _min?: ChecklistPerguntaMinOrderByAggregateInput
    _sum?: ChecklistPerguntaSumOrderByAggregateInput
  }

  export type ChecklistPerguntaScalarWhereWithAggregatesInput = {
    AND?: ChecklistPerguntaScalarWhereWithAggregatesInput | ChecklistPerguntaScalarWhereWithAggregatesInput[]
    OR?: ChecklistPerguntaScalarWhereWithAggregatesInput[]
    NOT?: ChecklistPerguntaScalarWhereWithAggregatesInput | ChecklistPerguntaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ChecklistPergunta"> | number
    nome?: StringWithAggregatesFilter<"ChecklistPergunta"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ChecklistPergunta"> | Date | string
    createdBy?: StringWithAggregatesFilter<"ChecklistPergunta"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistPergunta"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"ChecklistPergunta"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistPergunta"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"ChecklistPergunta"> | string | null
  }

  export type ChecklistPerguntaRelacaoWhereInput = {
    AND?: ChecklistPerguntaRelacaoWhereInput | ChecklistPerguntaRelacaoWhereInput[]
    OR?: ChecklistPerguntaRelacaoWhereInput[]
    NOT?: ChecklistPerguntaRelacaoWhereInput | ChecklistPerguntaRelacaoWhereInput[]
    id?: IntFilter<"ChecklistPerguntaRelacao"> | number
    checklistPerguntaId?: IntFilter<"ChecklistPerguntaRelacao"> | number
    checklistId?: IntFilter<"ChecklistPerguntaRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistPerguntaRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistPerguntaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistPerguntaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistPerguntaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistPerguntaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistPerguntaRelacao"> | string | null
    checklistPergunta?: XOR<ChecklistPerguntaScalarRelationFilter, ChecklistPerguntaWhereInput>
    checklist?: XOR<ChecklistScalarRelationFilter, ChecklistWhereInput>
  }

  export type ChecklistPerguntaRelacaoOrderByWithRelationInput = {
    id?: SortOrder
    checklistPerguntaId?: SortOrder
    checklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    checklistPergunta?: ChecklistPerguntaOrderByWithRelationInput
    checklist?: ChecklistOrderByWithRelationInput
    _relevance?: ChecklistPerguntaRelacaoOrderByRelevanceInput
  }

  export type ChecklistPerguntaRelacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ChecklistPerguntaRelacaoWhereInput | ChecklistPerguntaRelacaoWhereInput[]
    OR?: ChecklistPerguntaRelacaoWhereInput[]
    NOT?: ChecklistPerguntaRelacaoWhereInput | ChecklistPerguntaRelacaoWhereInput[]
    checklistPerguntaId?: IntFilter<"ChecklistPerguntaRelacao"> | number
    checklistId?: IntFilter<"ChecklistPerguntaRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistPerguntaRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistPerguntaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistPerguntaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistPerguntaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistPerguntaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistPerguntaRelacao"> | string | null
    checklistPergunta?: XOR<ChecklistPerguntaScalarRelationFilter, ChecklistPerguntaWhereInput>
    checklist?: XOR<ChecklistScalarRelationFilter, ChecklistWhereInput>
  }, "id">

  export type ChecklistPerguntaRelacaoOrderByWithAggregationInput = {
    id?: SortOrder
    checklistPerguntaId?: SortOrder
    checklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: ChecklistPerguntaRelacaoCountOrderByAggregateInput
    _avg?: ChecklistPerguntaRelacaoAvgOrderByAggregateInput
    _max?: ChecklistPerguntaRelacaoMaxOrderByAggregateInput
    _min?: ChecklistPerguntaRelacaoMinOrderByAggregateInput
    _sum?: ChecklistPerguntaRelacaoSumOrderByAggregateInput
  }

  export type ChecklistPerguntaRelacaoScalarWhereWithAggregatesInput = {
    AND?: ChecklistPerguntaRelacaoScalarWhereWithAggregatesInput | ChecklistPerguntaRelacaoScalarWhereWithAggregatesInput[]
    OR?: ChecklistPerguntaRelacaoScalarWhereWithAggregatesInput[]
    NOT?: ChecklistPerguntaRelacaoScalarWhereWithAggregatesInput | ChecklistPerguntaRelacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ChecklistPerguntaRelacao"> | number
    checklistPerguntaId?: IntWithAggregatesFilter<"ChecklistPerguntaRelacao"> | number
    checklistId?: IntWithAggregatesFilter<"ChecklistPerguntaRelacao"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ChecklistPerguntaRelacao"> | Date | string
    createdBy?: StringWithAggregatesFilter<"ChecklistPerguntaRelacao"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistPerguntaRelacao"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"ChecklistPerguntaRelacao"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistPerguntaRelacao"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"ChecklistPerguntaRelacao"> | string | null
  }

  export type ChecklistOpcaoRespostaWhereInput = {
    AND?: ChecklistOpcaoRespostaWhereInput | ChecklistOpcaoRespostaWhereInput[]
    OR?: ChecklistOpcaoRespostaWhereInput[]
    NOT?: ChecklistOpcaoRespostaWhereInput | ChecklistOpcaoRespostaWhereInput[]
    id?: IntFilter<"ChecklistOpcaoResposta"> | number
    nome?: StringFilter<"ChecklistOpcaoResposta"> | string
    geraPendencia?: BoolFilter<"ChecklistOpcaoResposta"> | boolean
    createdAt?: DateTimeFilter<"ChecklistOpcaoResposta"> | Date | string
    createdBy?: StringFilter<"ChecklistOpcaoResposta"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistOpcaoResposta"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistOpcaoResposta"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistOpcaoResposta"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistOpcaoResposta"> | string | null
    checklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoListRelationFilter
  }

  export type ChecklistOpcaoRespostaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    geraPendencia?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    checklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoOrderByRelationAggregateInput
    _relevance?: ChecklistOpcaoRespostaOrderByRelevanceInput
  }

  export type ChecklistOpcaoRespostaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ChecklistOpcaoRespostaWhereInput | ChecklistOpcaoRespostaWhereInput[]
    OR?: ChecklistOpcaoRespostaWhereInput[]
    NOT?: ChecklistOpcaoRespostaWhereInput | ChecklistOpcaoRespostaWhereInput[]
    nome?: StringFilter<"ChecklistOpcaoResposta"> | string
    geraPendencia?: BoolFilter<"ChecklistOpcaoResposta"> | boolean
    createdAt?: DateTimeFilter<"ChecklistOpcaoResposta"> | Date | string
    createdBy?: StringFilter<"ChecklistOpcaoResposta"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistOpcaoResposta"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistOpcaoResposta"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistOpcaoResposta"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistOpcaoResposta"> | string | null
    checklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoListRelationFilter
  }, "id">

  export type ChecklistOpcaoRespostaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    geraPendencia?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: ChecklistOpcaoRespostaCountOrderByAggregateInput
    _avg?: ChecklistOpcaoRespostaAvgOrderByAggregateInput
    _max?: ChecklistOpcaoRespostaMaxOrderByAggregateInput
    _min?: ChecklistOpcaoRespostaMinOrderByAggregateInput
    _sum?: ChecklistOpcaoRespostaSumOrderByAggregateInput
  }

  export type ChecklistOpcaoRespostaScalarWhereWithAggregatesInput = {
    AND?: ChecklistOpcaoRespostaScalarWhereWithAggregatesInput | ChecklistOpcaoRespostaScalarWhereWithAggregatesInput[]
    OR?: ChecklistOpcaoRespostaScalarWhereWithAggregatesInput[]
    NOT?: ChecklistOpcaoRespostaScalarWhereWithAggregatesInput | ChecklistOpcaoRespostaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ChecklistOpcaoResposta"> | number
    nome?: StringWithAggregatesFilter<"ChecklistOpcaoResposta"> | string
    geraPendencia?: BoolWithAggregatesFilter<"ChecklistOpcaoResposta"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ChecklistOpcaoResposta"> | Date | string
    createdBy?: StringWithAggregatesFilter<"ChecklistOpcaoResposta"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistOpcaoResposta"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"ChecklistOpcaoResposta"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistOpcaoResposta"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"ChecklistOpcaoResposta"> | string | null
  }

  export type ChecklistOpcaoRespostaRelacaoWhereInput = {
    AND?: ChecklistOpcaoRespostaRelacaoWhereInput | ChecklistOpcaoRespostaRelacaoWhereInput[]
    OR?: ChecklistOpcaoRespostaRelacaoWhereInput[]
    NOT?: ChecklistOpcaoRespostaRelacaoWhereInput | ChecklistOpcaoRespostaRelacaoWhereInput[]
    id?: IntFilter<"ChecklistOpcaoRespostaRelacao"> | number
    checklistOpcaoRespostaId?: IntFilter<"ChecklistOpcaoRespostaRelacao"> | number
    checklistId?: IntFilter<"ChecklistOpcaoRespostaRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistOpcaoRespostaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistOpcaoRespostaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistOpcaoRespostaRelacao"> | string | null
    checklistOpcaoResposta?: XOR<ChecklistOpcaoRespostaScalarRelationFilter, ChecklistOpcaoRespostaWhereInput>
    checklist?: XOR<ChecklistScalarRelationFilter, ChecklistWhereInput>
  }

  export type ChecklistOpcaoRespostaRelacaoOrderByWithRelationInput = {
    id?: SortOrder
    checklistOpcaoRespostaId?: SortOrder
    checklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    checklistOpcaoResposta?: ChecklistOpcaoRespostaOrderByWithRelationInput
    checklist?: ChecklistOrderByWithRelationInput
    _relevance?: ChecklistOpcaoRespostaRelacaoOrderByRelevanceInput
  }

  export type ChecklistOpcaoRespostaRelacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ChecklistOpcaoRespostaRelacaoWhereInput | ChecklistOpcaoRespostaRelacaoWhereInput[]
    OR?: ChecklistOpcaoRespostaRelacaoWhereInput[]
    NOT?: ChecklistOpcaoRespostaRelacaoWhereInput | ChecklistOpcaoRespostaRelacaoWhereInput[]
    checklistOpcaoRespostaId?: IntFilter<"ChecklistOpcaoRespostaRelacao"> | number
    checklistId?: IntFilter<"ChecklistOpcaoRespostaRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistOpcaoRespostaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistOpcaoRespostaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistOpcaoRespostaRelacao"> | string | null
    checklistOpcaoResposta?: XOR<ChecklistOpcaoRespostaScalarRelationFilter, ChecklistOpcaoRespostaWhereInput>
    checklist?: XOR<ChecklistScalarRelationFilter, ChecklistWhereInput>
  }, "id">

  export type ChecklistOpcaoRespostaRelacaoOrderByWithAggregationInput = {
    id?: SortOrder
    checklistOpcaoRespostaId?: SortOrder
    checklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: ChecklistOpcaoRespostaRelacaoCountOrderByAggregateInput
    _avg?: ChecklistOpcaoRespostaRelacaoAvgOrderByAggregateInput
    _max?: ChecklistOpcaoRespostaRelacaoMaxOrderByAggregateInput
    _min?: ChecklistOpcaoRespostaRelacaoMinOrderByAggregateInput
    _sum?: ChecklistOpcaoRespostaRelacaoSumOrderByAggregateInput
  }

  export type ChecklistOpcaoRespostaRelacaoScalarWhereWithAggregatesInput = {
    AND?: ChecklistOpcaoRespostaRelacaoScalarWhereWithAggregatesInput | ChecklistOpcaoRespostaRelacaoScalarWhereWithAggregatesInput[]
    OR?: ChecklistOpcaoRespostaRelacaoScalarWhereWithAggregatesInput[]
    NOT?: ChecklistOpcaoRespostaRelacaoScalarWhereWithAggregatesInput | ChecklistOpcaoRespostaRelacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ChecklistOpcaoRespostaRelacao"> | number
    checklistOpcaoRespostaId?: IntWithAggregatesFilter<"ChecklistOpcaoRespostaRelacao"> | number
    checklistId?: IntWithAggregatesFilter<"ChecklistOpcaoRespostaRelacao"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string
    createdBy?: StringWithAggregatesFilter<"ChecklistOpcaoRespostaRelacao"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"ChecklistOpcaoRespostaRelacao"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"ChecklistOpcaoRespostaRelacao"> | string | null
  }

  export type ChecklistTipoVeiculoRelacaoWhereInput = {
    AND?: ChecklistTipoVeiculoRelacaoWhereInput | ChecklistTipoVeiculoRelacaoWhereInput[]
    OR?: ChecklistTipoVeiculoRelacaoWhereInput[]
    NOT?: ChecklistTipoVeiculoRelacaoWhereInput | ChecklistTipoVeiculoRelacaoWhereInput[]
    id?: IntFilter<"ChecklistTipoVeiculoRelacao"> | number
    checklistId?: IntFilter<"ChecklistTipoVeiculoRelacao"> | number
    tipoVeiculoId?: IntFilter<"ChecklistTipoVeiculoRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistTipoVeiculoRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistTipoVeiculoRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistTipoVeiculoRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistTipoVeiculoRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistTipoVeiculoRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistTipoVeiculoRelacao"> | string | null
    checklist?: XOR<ChecklistScalarRelationFilter, ChecklistWhereInput>
    tipoVeiculo?: XOR<TipoVeiculoScalarRelationFilter, TipoVeiculoWhereInput>
  }

  export type ChecklistTipoVeiculoRelacaoOrderByWithRelationInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoVeiculoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    checklist?: ChecklistOrderByWithRelationInput
    tipoVeiculo?: TipoVeiculoOrderByWithRelationInput
    _relevance?: ChecklistTipoVeiculoRelacaoOrderByRelevanceInput
  }

  export type ChecklistTipoVeiculoRelacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tipoVeiculoId_deletedAt?: ChecklistTipoVeiculoRelacaoTipoVeiculoIdDeletedAtCompoundUniqueInput
    AND?: ChecklistTipoVeiculoRelacaoWhereInput | ChecklistTipoVeiculoRelacaoWhereInput[]
    OR?: ChecklistTipoVeiculoRelacaoWhereInput[]
    NOT?: ChecklistTipoVeiculoRelacaoWhereInput | ChecklistTipoVeiculoRelacaoWhereInput[]
    checklistId?: IntFilter<"ChecklistTipoVeiculoRelacao"> | number
    tipoVeiculoId?: IntFilter<"ChecklistTipoVeiculoRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistTipoVeiculoRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistTipoVeiculoRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistTipoVeiculoRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistTipoVeiculoRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistTipoVeiculoRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistTipoVeiculoRelacao"> | string | null
    checklist?: XOR<ChecklistScalarRelationFilter, ChecklistWhereInput>
    tipoVeiculo?: XOR<TipoVeiculoScalarRelationFilter, TipoVeiculoWhereInput>
  }, "id" | "tipoVeiculoId_deletedAt">

  export type ChecklistTipoVeiculoRelacaoOrderByWithAggregationInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoVeiculoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: ChecklistTipoVeiculoRelacaoCountOrderByAggregateInput
    _avg?: ChecklistTipoVeiculoRelacaoAvgOrderByAggregateInput
    _max?: ChecklistTipoVeiculoRelacaoMaxOrderByAggregateInput
    _min?: ChecklistTipoVeiculoRelacaoMinOrderByAggregateInput
    _sum?: ChecklistTipoVeiculoRelacaoSumOrderByAggregateInput
  }

  export type ChecklistTipoVeiculoRelacaoScalarWhereWithAggregatesInput = {
    AND?: ChecklistTipoVeiculoRelacaoScalarWhereWithAggregatesInput | ChecklistTipoVeiculoRelacaoScalarWhereWithAggregatesInput[]
    OR?: ChecklistTipoVeiculoRelacaoScalarWhereWithAggregatesInput[]
    NOT?: ChecklistTipoVeiculoRelacaoScalarWhereWithAggregatesInput | ChecklistTipoVeiculoRelacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ChecklistTipoVeiculoRelacao"> | number
    checklistId?: IntWithAggregatesFilter<"ChecklistTipoVeiculoRelacao"> | number
    tipoVeiculoId?: IntWithAggregatesFilter<"ChecklistTipoVeiculoRelacao"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ChecklistTipoVeiculoRelacao"> | Date | string
    createdBy?: StringWithAggregatesFilter<"ChecklistTipoVeiculoRelacao"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistTipoVeiculoRelacao"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"ChecklistTipoVeiculoRelacao"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistTipoVeiculoRelacao"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"ChecklistTipoVeiculoRelacao"> | string | null
  }

  export type ChecklistTipoEquipeRelacaoWhereInput = {
    AND?: ChecklistTipoEquipeRelacaoWhereInput | ChecklistTipoEquipeRelacaoWhereInput[]
    OR?: ChecklistTipoEquipeRelacaoWhereInput[]
    NOT?: ChecklistTipoEquipeRelacaoWhereInput | ChecklistTipoEquipeRelacaoWhereInput[]
    id?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    checklistId?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    tipoEquipeId?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    tipoChecklistId?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistTipoEquipeRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistTipoEquipeRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistTipoEquipeRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistTipoEquipeRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistTipoEquipeRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistTipoEquipeRelacao"> | string | null
    checklist?: XOR<ChecklistScalarRelationFilter, ChecklistWhereInput>
    tipoEquipe?: XOR<TipoEquipeScalarRelationFilter, TipoEquipeWhereInput>
    tipoChecklist?: XOR<TipoChecklistScalarRelationFilter, TipoChecklistWhereInput>
  }

  export type ChecklistTipoEquipeRelacaoOrderByWithRelationInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoEquipeId?: SortOrder
    tipoChecklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    checklist?: ChecklistOrderByWithRelationInput
    tipoEquipe?: TipoEquipeOrderByWithRelationInput
    tipoChecklist?: TipoChecklistOrderByWithRelationInput
    _relevance?: ChecklistTipoEquipeRelacaoOrderByRelevanceInput
  }

  export type ChecklistTipoEquipeRelacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tipoEquipeId_tipoChecklistId_deletedAt?: ChecklistTipoEquipeRelacaoTipoEquipeIdTipoChecklistIdDeletedAtCompoundUniqueInput
    AND?: ChecklistTipoEquipeRelacaoWhereInput | ChecklistTipoEquipeRelacaoWhereInput[]
    OR?: ChecklistTipoEquipeRelacaoWhereInput[]
    NOT?: ChecklistTipoEquipeRelacaoWhereInput | ChecklistTipoEquipeRelacaoWhereInput[]
    checklistId?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    tipoEquipeId?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    tipoChecklistId?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistTipoEquipeRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistTipoEquipeRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistTipoEquipeRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistTipoEquipeRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistTipoEquipeRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistTipoEquipeRelacao"> | string | null
    checklist?: XOR<ChecklistScalarRelationFilter, ChecklistWhereInput>
    tipoEquipe?: XOR<TipoEquipeScalarRelationFilter, TipoEquipeWhereInput>
    tipoChecklist?: XOR<TipoChecklistScalarRelationFilter, TipoChecklistWhereInput>
  }, "id" | "tipoEquipeId_tipoChecklistId_deletedAt">

  export type ChecklistTipoEquipeRelacaoOrderByWithAggregationInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoEquipeId?: SortOrder
    tipoChecklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: ChecklistTipoEquipeRelacaoCountOrderByAggregateInput
    _avg?: ChecklistTipoEquipeRelacaoAvgOrderByAggregateInput
    _max?: ChecklistTipoEquipeRelacaoMaxOrderByAggregateInput
    _min?: ChecklistTipoEquipeRelacaoMinOrderByAggregateInput
    _sum?: ChecklistTipoEquipeRelacaoSumOrderByAggregateInput
  }

  export type ChecklistTipoEquipeRelacaoScalarWhereWithAggregatesInput = {
    AND?: ChecklistTipoEquipeRelacaoScalarWhereWithAggregatesInput | ChecklistTipoEquipeRelacaoScalarWhereWithAggregatesInput[]
    OR?: ChecklistTipoEquipeRelacaoScalarWhereWithAggregatesInput[]
    NOT?: ChecklistTipoEquipeRelacaoScalarWhereWithAggregatesInput | ChecklistTipoEquipeRelacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ChecklistTipoEquipeRelacao"> | number
    checklistId?: IntWithAggregatesFilter<"ChecklistTipoEquipeRelacao"> | number
    tipoEquipeId?: IntWithAggregatesFilter<"ChecklistTipoEquipeRelacao"> | number
    tipoChecklistId?: IntWithAggregatesFilter<"ChecklistTipoEquipeRelacao"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ChecklistTipoEquipeRelacao"> | Date | string
    createdBy?: StringWithAggregatesFilter<"ChecklistTipoEquipeRelacao"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistTipoEquipeRelacao"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"ChecklistTipoEquipeRelacao"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ChecklistTipoEquipeRelacao"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"ChecklistTipoEquipeRelacao"> | string | null
  }

  export type ContratoWhereInput = {
    AND?: ContratoWhereInput | ContratoWhereInput[]
    OR?: ContratoWhereInput[]
    NOT?: ContratoWhereInput | ContratoWhereInput[]
    id?: IntFilter<"Contrato"> | number
    nome?: StringFilter<"Contrato"> | string
    numero?: StringFilter<"Contrato"> | string
    dataInicio?: DateTimeNullableFilter<"Contrato"> | Date | string | null
    dataFim?: DateTimeNullableFilter<"Contrato"> | Date | string | null
    createdAt?: DateTimeFilter<"Contrato"> | Date | string
    createdBy?: StringFilter<"Contrato"> | string
    updatedAt?: DateTimeNullableFilter<"Contrato"> | Date | string | null
    updatedBy?: StringNullableFilter<"Contrato"> | string | null
    deletedAt?: DateTimeNullableFilter<"Contrato"> | Date | string | null
    deletedBy?: StringNullableFilter<"Contrato"> | string | null
    Veiculo?: VeiculoListRelationFilter
    Eletricista?: EletricistaListRelationFilter
    Equipe?: EquipeListRelationFilter
    Supervisor?: SupervisorListRelationFilter
    MobileContratoPermissao?: MobileContratoPermissaoListRelationFilter
    Base?: BaseListRelationFilter
  }

  export type ContratoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    numero?: SortOrder
    dataInicio?: SortOrderInput | SortOrder
    dataFim?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    Veiculo?: VeiculoOrderByRelationAggregateInput
    Eletricista?: EletricistaOrderByRelationAggregateInput
    Equipe?: EquipeOrderByRelationAggregateInput
    Supervisor?: SupervisorOrderByRelationAggregateInput
    MobileContratoPermissao?: MobileContratoPermissaoOrderByRelationAggregateInput
    Base?: BaseOrderByRelationAggregateInput
    _relevance?: ContratoOrderByRelevanceInput
  }

  export type ContratoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ContratoWhereInput | ContratoWhereInput[]
    OR?: ContratoWhereInput[]
    NOT?: ContratoWhereInput | ContratoWhereInput[]
    nome?: StringFilter<"Contrato"> | string
    numero?: StringFilter<"Contrato"> | string
    dataInicio?: DateTimeNullableFilter<"Contrato"> | Date | string | null
    dataFim?: DateTimeNullableFilter<"Contrato"> | Date | string | null
    createdAt?: DateTimeFilter<"Contrato"> | Date | string
    createdBy?: StringFilter<"Contrato"> | string
    updatedAt?: DateTimeNullableFilter<"Contrato"> | Date | string | null
    updatedBy?: StringNullableFilter<"Contrato"> | string | null
    deletedAt?: DateTimeNullableFilter<"Contrato"> | Date | string | null
    deletedBy?: StringNullableFilter<"Contrato"> | string | null
    Veiculo?: VeiculoListRelationFilter
    Eletricista?: EletricistaListRelationFilter
    Equipe?: EquipeListRelationFilter
    Supervisor?: SupervisorListRelationFilter
    MobileContratoPermissao?: MobileContratoPermissaoListRelationFilter
    Base?: BaseListRelationFilter
  }, "id">

  export type ContratoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    numero?: SortOrder
    dataInicio?: SortOrderInput | SortOrder
    dataFim?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: ContratoCountOrderByAggregateInput
    _avg?: ContratoAvgOrderByAggregateInput
    _max?: ContratoMaxOrderByAggregateInput
    _min?: ContratoMinOrderByAggregateInput
    _sum?: ContratoSumOrderByAggregateInput
  }

  export type ContratoScalarWhereWithAggregatesInput = {
    AND?: ContratoScalarWhereWithAggregatesInput | ContratoScalarWhereWithAggregatesInput[]
    OR?: ContratoScalarWhereWithAggregatesInput[]
    NOT?: ContratoScalarWhereWithAggregatesInput | ContratoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Contrato"> | number
    nome?: StringWithAggregatesFilter<"Contrato"> | string
    numero?: StringWithAggregatesFilter<"Contrato"> | string
    dataInicio?: DateTimeNullableWithAggregatesFilter<"Contrato"> | Date | string | null
    dataFim?: DateTimeNullableWithAggregatesFilter<"Contrato"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Contrato"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Contrato"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Contrato"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Contrato"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Contrato"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Contrato"> | string | null
  }

  export type MobileContratoPermissaoWhereInput = {
    AND?: MobileContratoPermissaoWhereInput | MobileContratoPermissaoWhereInput[]
    OR?: MobileContratoPermissaoWhereInput[]
    NOT?: MobileContratoPermissaoWhereInput | MobileContratoPermissaoWhereInput[]
    id?: IntFilter<"MobileContratoPermissao"> | number
    contratoId?: IntFilter<"MobileContratoPermissao"> | number
    mobileUserId?: IntFilter<"MobileContratoPermissao"> | number
    createdAt?: DateTimeFilter<"MobileContratoPermissao"> | Date | string
    createdBy?: StringFilter<"MobileContratoPermissao"> | string
    updatedAt?: DateTimeNullableFilter<"MobileContratoPermissao"> | Date | string | null
    updatedBy?: StringNullableFilter<"MobileContratoPermissao"> | string | null
    deletedAt?: DateTimeNullableFilter<"MobileContratoPermissao"> | Date | string | null
    deletedBy?: StringNullableFilter<"MobileContratoPermissao"> | string | null
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    mobileUser?: XOR<MobileUserScalarRelationFilter, MobileUserWhereInput>
  }

  export type MobileContratoPermissaoOrderByWithRelationInput = {
    id?: SortOrder
    contratoId?: SortOrder
    mobileUserId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    contrato?: ContratoOrderByWithRelationInput
    mobileUser?: MobileUserOrderByWithRelationInput
    _relevance?: MobileContratoPermissaoOrderByRelevanceInput
  }

  export type MobileContratoPermissaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MobileContratoPermissaoWhereInput | MobileContratoPermissaoWhereInput[]
    OR?: MobileContratoPermissaoWhereInput[]
    NOT?: MobileContratoPermissaoWhereInput | MobileContratoPermissaoWhereInput[]
    contratoId?: IntFilter<"MobileContratoPermissao"> | number
    mobileUserId?: IntFilter<"MobileContratoPermissao"> | number
    createdAt?: DateTimeFilter<"MobileContratoPermissao"> | Date | string
    createdBy?: StringFilter<"MobileContratoPermissao"> | string
    updatedAt?: DateTimeNullableFilter<"MobileContratoPermissao"> | Date | string | null
    updatedBy?: StringNullableFilter<"MobileContratoPermissao"> | string | null
    deletedAt?: DateTimeNullableFilter<"MobileContratoPermissao"> | Date | string | null
    deletedBy?: StringNullableFilter<"MobileContratoPermissao"> | string | null
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    mobileUser?: XOR<MobileUserScalarRelationFilter, MobileUserWhereInput>
  }, "id">

  export type MobileContratoPermissaoOrderByWithAggregationInput = {
    id?: SortOrder
    contratoId?: SortOrder
    mobileUserId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: MobileContratoPermissaoCountOrderByAggregateInput
    _avg?: MobileContratoPermissaoAvgOrderByAggregateInput
    _max?: MobileContratoPermissaoMaxOrderByAggregateInput
    _min?: MobileContratoPermissaoMinOrderByAggregateInput
    _sum?: MobileContratoPermissaoSumOrderByAggregateInput
  }

  export type MobileContratoPermissaoScalarWhereWithAggregatesInput = {
    AND?: MobileContratoPermissaoScalarWhereWithAggregatesInput | MobileContratoPermissaoScalarWhereWithAggregatesInput[]
    OR?: MobileContratoPermissaoScalarWhereWithAggregatesInput[]
    NOT?: MobileContratoPermissaoScalarWhereWithAggregatesInput | MobileContratoPermissaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MobileContratoPermissao"> | number
    contratoId?: IntWithAggregatesFilter<"MobileContratoPermissao"> | number
    mobileUserId?: IntWithAggregatesFilter<"MobileContratoPermissao"> | number
    createdAt?: DateTimeWithAggregatesFilter<"MobileContratoPermissao"> | Date | string
    createdBy?: StringWithAggregatesFilter<"MobileContratoPermissao"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"MobileContratoPermissao"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"MobileContratoPermissao"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"MobileContratoPermissao"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"MobileContratoPermissao"> | string | null
  }

  export type EletricistaBaseHistoricoWhereInput = {
    AND?: EletricistaBaseHistoricoWhereInput | EletricistaBaseHistoricoWhereInput[]
    OR?: EletricistaBaseHistoricoWhereInput[]
    NOT?: EletricistaBaseHistoricoWhereInput | EletricistaBaseHistoricoWhereInput[]
    id?: IntFilter<"EletricistaBaseHistorico"> | number
    eletricistaId?: IntFilter<"EletricistaBaseHistorico"> | number
    baseId?: IntFilter<"EletricistaBaseHistorico"> | number
    dataInicio?: DateTimeFilter<"EletricistaBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"EletricistaBaseHistorico"> | Date | string | null
    motivo?: StringNullableFilter<"EletricistaBaseHistorico"> | string | null
    createdAt?: DateTimeFilter<"EletricistaBaseHistorico"> | Date | string
    createdBy?: StringFilter<"EletricistaBaseHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"EletricistaBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"EletricistaBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"EletricistaBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"EletricistaBaseHistorico"> | string | null
    eletricista?: XOR<EletricistaScalarRelationFilter, EletricistaWhereInput>
    base?: XOR<BaseScalarRelationFilter, BaseWhereInput>
  }

  export type EletricistaBaseHistoricoOrderByWithRelationInput = {
    id?: SortOrder
    eletricistaId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    eletricista?: EletricistaOrderByWithRelationInput
    base?: BaseOrderByWithRelationInput
    _relevance?: EletricistaBaseHistoricoOrderByRelevanceInput
  }

  export type EletricistaBaseHistoricoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EletricistaBaseHistoricoWhereInput | EletricistaBaseHistoricoWhereInput[]
    OR?: EletricistaBaseHistoricoWhereInput[]
    NOT?: EletricistaBaseHistoricoWhereInput | EletricistaBaseHistoricoWhereInput[]
    eletricistaId?: IntFilter<"EletricistaBaseHistorico"> | number
    baseId?: IntFilter<"EletricistaBaseHistorico"> | number
    dataInicio?: DateTimeFilter<"EletricistaBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"EletricistaBaseHistorico"> | Date | string | null
    motivo?: StringNullableFilter<"EletricistaBaseHistorico"> | string | null
    createdAt?: DateTimeFilter<"EletricistaBaseHistorico"> | Date | string
    createdBy?: StringFilter<"EletricistaBaseHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"EletricistaBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"EletricistaBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"EletricistaBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"EletricistaBaseHistorico"> | string | null
    eletricista?: XOR<EletricistaScalarRelationFilter, EletricistaWhereInput>
    base?: XOR<BaseScalarRelationFilter, BaseWhereInput>
  }, "id">

  export type EletricistaBaseHistoricoOrderByWithAggregationInput = {
    id?: SortOrder
    eletricistaId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: EletricistaBaseHistoricoCountOrderByAggregateInput
    _avg?: EletricistaBaseHistoricoAvgOrderByAggregateInput
    _max?: EletricistaBaseHistoricoMaxOrderByAggregateInput
    _min?: EletricistaBaseHistoricoMinOrderByAggregateInput
    _sum?: EletricistaBaseHistoricoSumOrderByAggregateInput
  }

  export type EletricistaBaseHistoricoScalarWhereWithAggregatesInput = {
    AND?: EletricistaBaseHistoricoScalarWhereWithAggregatesInput | EletricistaBaseHistoricoScalarWhereWithAggregatesInput[]
    OR?: EletricistaBaseHistoricoScalarWhereWithAggregatesInput[]
    NOT?: EletricistaBaseHistoricoScalarWhereWithAggregatesInput | EletricistaBaseHistoricoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EletricistaBaseHistorico"> | number
    eletricistaId?: IntWithAggregatesFilter<"EletricistaBaseHistorico"> | number
    baseId?: IntWithAggregatesFilter<"EletricistaBaseHistorico"> | number
    dataInicio?: DateTimeWithAggregatesFilter<"EletricistaBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableWithAggregatesFilter<"EletricistaBaseHistorico"> | Date | string | null
    motivo?: StringNullableWithAggregatesFilter<"EletricistaBaseHistorico"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"EletricistaBaseHistorico"> | Date | string
    createdBy?: StringWithAggregatesFilter<"EletricistaBaseHistorico"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"EletricistaBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"EletricistaBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"EletricistaBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"EletricistaBaseHistorico"> | string | null
  }

  export type EletricistaWhereInput = {
    AND?: EletricistaWhereInput | EletricistaWhereInput[]
    OR?: EletricistaWhereInput[]
    NOT?: EletricistaWhereInput | EletricistaWhereInput[]
    id?: IntFilter<"Eletricista"> | number
    nome?: StringFilter<"Eletricista"> | string
    matricula?: StringFilter<"Eletricista"> | string
    telefone?: StringFilter<"Eletricista"> | string
    estado?: StringFilter<"Eletricista"> | string
    admissao?: DateTimeFilter<"Eletricista"> | Date | string
    cargoId?: IntFilter<"Eletricista"> | number
    createdAt?: DateTimeFilter<"Eletricista"> | Date | string
    createdBy?: StringFilter<"Eletricista"> | string
    updatedAt?: DateTimeNullableFilter<"Eletricista"> | Date | string | null
    updatedBy?: StringNullableFilter<"Eletricista"> | string | null
    deletedAt?: DateTimeNullableFilter<"Eletricista"> | Date | string | null
    deletedBy?: StringNullableFilter<"Eletricista"> | string | null
    contratoId?: IntFilter<"Eletricista"> | number
    cargo?: XOR<CargoScalarRelationFilter, CargoWhereInput>
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    TurnoEletricistas?: TurnoEletricistaListRelationFilter
    EletricistaBaseHistorico?: EletricistaBaseHistoricoListRelationFilter
    EventoCobertura?: EventoCoberturaListRelationFilter
    SlotEscala?: SlotEscalaListRelationFilter
  }

  export type EletricistaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    matricula?: SortOrder
    telefone?: SortOrder
    estado?: SortOrder
    admissao?: SortOrder
    cargoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    contratoId?: SortOrder
    cargo?: CargoOrderByWithRelationInput
    contrato?: ContratoOrderByWithRelationInput
    TurnoEletricistas?: TurnoEletricistaOrderByRelationAggregateInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoOrderByRelationAggregateInput
    EventoCobertura?: EventoCoberturaOrderByRelationAggregateInput
    SlotEscala?: SlotEscalaOrderByRelationAggregateInput
    _relevance?: EletricistaOrderByRelevanceInput
  }

  export type EletricistaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EletricistaWhereInput | EletricistaWhereInput[]
    OR?: EletricistaWhereInput[]
    NOT?: EletricistaWhereInput | EletricistaWhereInput[]
    nome?: StringFilter<"Eletricista"> | string
    matricula?: StringFilter<"Eletricista"> | string
    telefone?: StringFilter<"Eletricista"> | string
    estado?: StringFilter<"Eletricista"> | string
    admissao?: DateTimeFilter<"Eletricista"> | Date | string
    cargoId?: IntFilter<"Eletricista"> | number
    createdAt?: DateTimeFilter<"Eletricista"> | Date | string
    createdBy?: StringFilter<"Eletricista"> | string
    updatedAt?: DateTimeNullableFilter<"Eletricista"> | Date | string | null
    updatedBy?: StringNullableFilter<"Eletricista"> | string | null
    deletedAt?: DateTimeNullableFilter<"Eletricista"> | Date | string | null
    deletedBy?: StringNullableFilter<"Eletricista"> | string | null
    contratoId?: IntFilter<"Eletricista"> | number
    cargo?: XOR<CargoScalarRelationFilter, CargoWhereInput>
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    TurnoEletricistas?: TurnoEletricistaListRelationFilter
    EletricistaBaseHistorico?: EletricistaBaseHistoricoListRelationFilter
    EventoCobertura?: EventoCoberturaListRelationFilter
    SlotEscala?: SlotEscalaListRelationFilter
  }, "id">

  export type EletricistaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    matricula?: SortOrder
    telefone?: SortOrder
    estado?: SortOrder
    admissao?: SortOrder
    cargoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    contratoId?: SortOrder
    _count?: EletricistaCountOrderByAggregateInput
    _avg?: EletricistaAvgOrderByAggregateInput
    _max?: EletricistaMaxOrderByAggregateInput
    _min?: EletricistaMinOrderByAggregateInput
    _sum?: EletricistaSumOrderByAggregateInput
  }

  export type EletricistaScalarWhereWithAggregatesInput = {
    AND?: EletricistaScalarWhereWithAggregatesInput | EletricistaScalarWhereWithAggregatesInput[]
    OR?: EletricistaScalarWhereWithAggregatesInput[]
    NOT?: EletricistaScalarWhereWithAggregatesInput | EletricistaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Eletricista"> | number
    nome?: StringWithAggregatesFilter<"Eletricista"> | string
    matricula?: StringWithAggregatesFilter<"Eletricista"> | string
    telefone?: StringWithAggregatesFilter<"Eletricista"> | string
    estado?: StringWithAggregatesFilter<"Eletricista"> | string
    admissao?: DateTimeWithAggregatesFilter<"Eletricista"> | Date | string
    cargoId?: IntWithAggregatesFilter<"Eletricista"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Eletricista"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Eletricista"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Eletricista"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Eletricista"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Eletricista"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Eletricista"> | string | null
    contratoId?: IntWithAggregatesFilter<"Eletricista"> | number
  }

  export type CargoWhereInput = {
    AND?: CargoWhereInput | CargoWhereInput[]
    OR?: CargoWhereInput[]
    NOT?: CargoWhereInput | CargoWhereInput[]
    id?: IntFilter<"Cargo"> | number
    nome?: StringFilter<"Cargo"> | string
    salarioBase?: FloatFilter<"Cargo"> | number
    createdAt?: DateTimeFilter<"Cargo"> | Date | string
    createdBy?: StringFilter<"Cargo"> | string
    updatedAt?: DateTimeNullableFilter<"Cargo"> | Date | string | null
    updatedBy?: StringNullableFilter<"Cargo"> | string | null
    deletedAt?: DateTimeNullableFilter<"Cargo"> | Date | string | null
    deletedBy?: StringNullableFilter<"Cargo"> | string | null
    Eletricista?: EletricistaListRelationFilter
  }

  export type CargoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    salarioBase?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    Eletricista?: EletricistaOrderByRelationAggregateInput
    _relevance?: CargoOrderByRelevanceInput
  }

  export type CargoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CargoWhereInput | CargoWhereInput[]
    OR?: CargoWhereInput[]
    NOT?: CargoWhereInput | CargoWhereInput[]
    nome?: StringFilter<"Cargo"> | string
    salarioBase?: FloatFilter<"Cargo"> | number
    createdAt?: DateTimeFilter<"Cargo"> | Date | string
    createdBy?: StringFilter<"Cargo"> | string
    updatedAt?: DateTimeNullableFilter<"Cargo"> | Date | string | null
    updatedBy?: StringNullableFilter<"Cargo"> | string | null
    deletedAt?: DateTimeNullableFilter<"Cargo"> | Date | string | null
    deletedBy?: StringNullableFilter<"Cargo"> | string | null
    Eletricista?: EletricistaListRelationFilter
  }, "id">

  export type CargoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    salarioBase?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: CargoCountOrderByAggregateInput
    _avg?: CargoAvgOrderByAggregateInput
    _max?: CargoMaxOrderByAggregateInput
    _min?: CargoMinOrderByAggregateInput
    _sum?: CargoSumOrderByAggregateInput
  }

  export type CargoScalarWhereWithAggregatesInput = {
    AND?: CargoScalarWhereWithAggregatesInput | CargoScalarWhereWithAggregatesInput[]
    OR?: CargoScalarWhereWithAggregatesInput[]
    NOT?: CargoScalarWhereWithAggregatesInput | CargoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cargo"> | number
    nome?: StringWithAggregatesFilter<"Cargo"> | string
    salarioBase?: FloatWithAggregatesFilter<"Cargo"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Cargo"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Cargo"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Cargo"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Cargo"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Cargo"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Cargo"> | string | null
  }

  export type EquipeBaseHistoricoWhereInput = {
    AND?: EquipeBaseHistoricoWhereInput | EquipeBaseHistoricoWhereInput[]
    OR?: EquipeBaseHistoricoWhereInput[]
    NOT?: EquipeBaseHistoricoWhereInput | EquipeBaseHistoricoWhereInput[]
    id?: IntFilter<"EquipeBaseHistorico"> | number
    equipeId?: IntFilter<"EquipeBaseHistorico"> | number
    baseId?: IntFilter<"EquipeBaseHistorico"> | number
    dataInicio?: DateTimeFilter<"EquipeBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"EquipeBaseHistorico"> | Date | string | null
    motivo?: StringNullableFilter<"EquipeBaseHistorico"> | string | null
    createdAt?: DateTimeFilter<"EquipeBaseHistorico"> | Date | string
    createdBy?: StringFilter<"EquipeBaseHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeBaseHistorico"> | string | null
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
    base?: XOR<BaseScalarRelationFilter, BaseWhereInput>
  }

  export type EquipeBaseHistoricoOrderByWithRelationInput = {
    id?: SortOrder
    equipeId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    equipe?: EquipeOrderByWithRelationInput
    base?: BaseOrderByWithRelationInput
    _relevance?: EquipeBaseHistoricoOrderByRelevanceInput
  }

  export type EquipeBaseHistoricoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EquipeBaseHistoricoWhereInput | EquipeBaseHistoricoWhereInput[]
    OR?: EquipeBaseHistoricoWhereInput[]
    NOT?: EquipeBaseHistoricoWhereInput | EquipeBaseHistoricoWhereInput[]
    equipeId?: IntFilter<"EquipeBaseHistorico"> | number
    baseId?: IntFilter<"EquipeBaseHistorico"> | number
    dataInicio?: DateTimeFilter<"EquipeBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"EquipeBaseHistorico"> | Date | string | null
    motivo?: StringNullableFilter<"EquipeBaseHistorico"> | string | null
    createdAt?: DateTimeFilter<"EquipeBaseHistorico"> | Date | string
    createdBy?: StringFilter<"EquipeBaseHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeBaseHistorico"> | string | null
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
    base?: XOR<BaseScalarRelationFilter, BaseWhereInput>
  }, "id">

  export type EquipeBaseHistoricoOrderByWithAggregationInput = {
    id?: SortOrder
    equipeId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: EquipeBaseHistoricoCountOrderByAggregateInput
    _avg?: EquipeBaseHistoricoAvgOrderByAggregateInput
    _max?: EquipeBaseHistoricoMaxOrderByAggregateInput
    _min?: EquipeBaseHistoricoMinOrderByAggregateInput
    _sum?: EquipeBaseHistoricoSumOrderByAggregateInput
  }

  export type EquipeBaseHistoricoScalarWhereWithAggregatesInput = {
    AND?: EquipeBaseHistoricoScalarWhereWithAggregatesInput | EquipeBaseHistoricoScalarWhereWithAggregatesInput[]
    OR?: EquipeBaseHistoricoScalarWhereWithAggregatesInput[]
    NOT?: EquipeBaseHistoricoScalarWhereWithAggregatesInput | EquipeBaseHistoricoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EquipeBaseHistorico"> | number
    equipeId?: IntWithAggregatesFilter<"EquipeBaseHistorico"> | number
    baseId?: IntWithAggregatesFilter<"EquipeBaseHistorico"> | number
    dataInicio?: DateTimeWithAggregatesFilter<"EquipeBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableWithAggregatesFilter<"EquipeBaseHistorico"> | Date | string | null
    motivo?: StringNullableWithAggregatesFilter<"EquipeBaseHistorico"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"EquipeBaseHistorico"> | Date | string
    createdBy?: StringWithAggregatesFilter<"EquipeBaseHistorico"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"EquipeBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"EquipeBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"EquipeBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"EquipeBaseHistorico"> | string | null
  }

  export type TipoEquipeWhereInput = {
    AND?: TipoEquipeWhereInput | TipoEquipeWhereInput[]
    OR?: TipoEquipeWhereInput[]
    NOT?: TipoEquipeWhereInput | TipoEquipeWhereInput[]
    id?: IntFilter<"TipoEquipe"> | number
    nome?: StringFilter<"TipoEquipe"> | string
    createdAt?: DateTimeFilter<"TipoEquipe"> | Date | string
    createdBy?: StringFilter<"TipoEquipe"> | string
    updatedAt?: DateTimeNullableFilter<"TipoEquipe"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoEquipe"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoEquipe"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoEquipe"> | string | null
    Equipe?: EquipeListRelationFilter
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoListRelationFilter
  }

  export type TipoEquipeOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    Equipe?: EquipeOrderByRelationAggregateInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoOrderByRelationAggregateInput
    _relevance?: TipoEquipeOrderByRelevanceInput
  }

  export type TipoEquipeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TipoEquipeWhereInput | TipoEquipeWhereInput[]
    OR?: TipoEquipeWhereInput[]
    NOT?: TipoEquipeWhereInput | TipoEquipeWhereInput[]
    nome?: StringFilter<"TipoEquipe"> | string
    createdAt?: DateTimeFilter<"TipoEquipe"> | Date | string
    createdBy?: StringFilter<"TipoEquipe"> | string
    updatedAt?: DateTimeNullableFilter<"TipoEquipe"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoEquipe"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoEquipe"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoEquipe"> | string | null
    Equipe?: EquipeListRelationFilter
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoListRelationFilter
  }, "id">

  export type TipoEquipeOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: TipoEquipeCountOrderByAggregateInput
    _avg?: TipoEquipeAvgOrderByAggregateInput
    _max?: TipoEquipeMaxOrderByAggregateInput
    _min?: TipoEquipeMinOrderByAggregateInput
    _sum?: TipoEquipeSumOrderByAggregateInput
  }

  export type TipoEquipeScalarWhereWithAggregatesInput = {
    AND?: TipoEquipeScalarWhereWithAggregatesInput | TipoEquipeScalarWhereWithAggregatesInput[]
    OR?: TipoEquipeScalarWhereWithAggregatesInput[]
    NOT?: TipoEquipeScalarWhereWithAggregatesInput | TipoEquipeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoEquipe"> | number
    nome?: StringWithAggregatesFilter<"TipoEquipe"> | string
    createdAt?: DateTimeWithAggregatesFilter<"TipoEquipe"> | Date | string
    createdBy?: StringWithAggregatesFilter<"TipoEquipe"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TipoEquipe"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"TipoEquipe"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"TipoEquipe"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"TipoEquipe"> | string | null
  }

  export type EquipeWhereInput = {
    AND?: EquipeWhereInput | EquipeWhereInput[]
    OR?: EquipeWhereInput[]
    NOT?: EquipeWhereInput | EquipeWhereInput[]
    id?: IntFilter<"Equipe"> | number
    nome?: StringFilter<"Equipe"> | string
    tipoEquipeId?: IntFilter<"Equipe"> | number
    contratoId?: IntFilter<"Equipe"> | number
    createdAt?: DateTimeFilter<"Equipe"> | Date | string
    createdBy?: StringFilter<"Equipe"> | string
    updatedAt?: DateTimeNullableFilter<"Equipe"> | Date | string | null
    updatedBy?: StringNullableFilter<"Equipe"> | string | null
    deletedAt?: DateTimeNullableFilter<"Equipe"> | Date | string | null
    deletedBy?: StringNullableFilter<"Equipe"> | string | null
    tipoEquipe?: XOR<TipoEquipeScalarRelationFilter, TipoEquipeWhereInput>
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    EquipeSupervisor?: EquipeSupervisorListRelationFilter
    Turno?: TurnoListRelationFilter
    EscalaEquipePeriodo?: EscalaEquipePeriodoListRelationFilter
    EquipeHorarioVigencia?: EquipeHorarioVigenciaListRelationFilter
    EquipeTurnoHistorico?: EquipeTurnoHistoricoListRelationFilter
    EquipeBaseHistorico?: EquipeBaseHistoricoListRelationFilter
  }

  export type EquipeOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tipoEquipeId?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    tipoEquipe?: TipoEquipeOrderByWithRelationInput
    contrato?: ContratoOrderByWithRelationInput
    EquipeSupervisor?: EquipeSupervisorOrderByRelationAggregateInput
    Turno?: TurnoOrderByRelationAggregateInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoOrderByRelationAggregateInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaOrderByRelationAggregateInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoOrderByRelationAggregateInput
    EquipeBaseHistorico?: EquipeBaseHistoricoOrderByRelationAggregateInput
    _relevance?: EquipeOrderByRelevanceInput
  }

  export type EquipeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EquipeWhereInput | EquipeWhereInput[]
    OR?: EquipeWhereInput[]
    NOT?: EquipeWhereInput | EquipeWhereInput[]
    nome?: StringFilter<"Equipe"> | string
    tipoEquipeId?: IntFilter<"Equipe"> | number
    contratoId?: IntFilter<"Equipe"> | number
    createdAt?: DateTimeFilter<"Equipe"> | Date | string
    createdBy?: StringFilter<"Equipe"> | string
    updatedAt?: DateTimeNullableFilter<"Equipe"> | Date | string | null
    updatedBy?: StringNullableFilter<"Equipe"> | string | null
    deletedAt?: DateTimeNullableFilter<"Equipe"> | Date | string | null
    deletedBy?: StringNullableFilter<"Equipe"> | string | null
    tipoEquipe?: XOR<TipoEquipeScalarRelationFilter, TipoEquipeWhereInput>
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    EquipeSupervisor?: EquipeSupervisorListRelationFilter
    Turno?: TurnoListRelationFilter
    EscalaEquipePeriodo?: EscalaEquipePeriodoListRelationFilter
    EquipeHorarioVigencia?: EquipeHorarioVigenciaListRelationFilter
    EquipeTurnoHistorico?: EquipeTurnoHistoricoListRelationFilter
    EquipeBaseHistorico?: EquipeBaseHistoricoListRelationFilter
  }, "id">

  export type EquipeOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    tipoEquipeId?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: EquipeCountOrderByAggregateInput
    _avg?: EquipeAvgOrderByAggregateInput
    _max?: EquipeMaxOrderByAggregateInput
    _min?: EquipeMinOrderByAggregateInput
    _sum?: EquipeSumOrderByAggregateInput
  }

  export type EquipeScalarWhereWithAggregatesInput = {
    AND?: EquipeScalarWhereWithAggregatesInput | EquipeScalarWhereWithAggregatesInput[]
    OR?: EquipeScalarWhereWithAggregatesInput[]
    NOT?: EquipeScalarWhereWithAggregatesInput | EquipeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Equipe"> | number
    nome?: StringWithAggregatesFilter<"Equipe"> | string
    tipoEquipeId?: IntWithAggregatesFilter<"Equipe"> | number
    contratoId?: IntWithAggregatesFilter<"Equipe"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Equipe"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Equipe"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Equipe"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Equipe"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Equipe"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Equipe"> | string | null
  }

  export type EquipeSupervisorWhereInput = {
    AND?: EquipeSupervisorWhereInput | EquipeSupervisorWhereInput[]
    OR?: EquipeSupervisorWhereInput[]
    NOT?: EquipeSupervisorWhereInput | EquipeSupervisorWhereInput[]
    id?: IntFilter<"EquipeSupervisor"> | number
    equipeId?: IntFilter<"EquipeSupervisor"> | number
    supervisorId?: IntFilter<"EquipeSupervisor"> | number
    inicio?: DateTimeFilter<"EquipeSupervisor"> | Date | string
    fim?: DateTimeNullableFilter<"EquipeSupervisor"> | Date | string | null
    createdAt?: DateTimeFilter<"EquipeSupervisor"> | Date | string
    createdBy?: StringFilter<"EquipeSupervisor"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeSupervisor"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeSupervisor"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeSupervisor"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeSupervisor"> | string | null
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
    supervisor?: XOR<SupervisorScalarRelationFilter, SupervisorWhereInput>
  }

  export type EquipeSupervisorOrderByWithRelationInput = {
    id?: SortOrder
    equipeId?: SortOrder
    supervisorId?: SortOrder
    inicio?: SortOrder
    fim?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    equipe?: EquipeOrderByWithRelationInput
    supervisor?: SupervisorOrderByWithRelationInput
    _relevance?: EquipeSupervisorOrderByRelevanceInput
  }

  export type EquipeSupervisorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EquipeSupervisorWhereInput | EquipeSupervisorWhereInput[]
    OR?: EquipeSupervisorWhereInput[]
    NOT?: EquipeSupervisorWhereInput | EquipeSupervisorWhereInput[]
    equipeId?: IntFilter<"EquipeSupervisor"> | number
    supervisorId?: IntFilter<"EquipeSupervisor"> | number
    inicio?: DateTimeFilter<"EquipeSupervisor"> | Date | string
    fim?: DateTimeNullableFilter<"EquipeSupervisor"> | Date | string | null
    createdAt?: DateTimeFilter<"EquipeSupervisor"> | Date | string
    createdBy?: StringFilter<"EquipeSupervisor"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeSupervisor"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeSupervisor"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeSupervisor"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeSupervisor"> | string | null
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
    supervisor?: XOR<SupervisorScalarRelationFilter, SupervisorWhereInput>
  }, "id">

  export type EquipeSupervisorOrderByWithAggregationInput = {
    id?: SortOrder
    equipeId?: SortOrder
    supervisorId?: SortOrder
    inicio?: SortOrder
    fim?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: EquipeSupervisorCountOrderByAggregateInput
    _avg?: EquipeSupervisorAvgOrderByAggregateInput
    _max?: EquipeSupervisorMaxOrderByAggregateInput
    _min?: EquipeSupervisorMinOrderByAggregateInput
    _sum?: EquipeSupervisorSumOrderByAggregateInput
  }

  export type EquipeSupervisorScalarWhereWithAggregatesInput = {
    AND?: EquipeSupervisorScalarWhereWithAggregatesInput | EquipeSupervisorScalarWhereWithAggregatesInput[]
    OR?: EquipeSupervisorScalarWhereWithAggregatesInput[]
    NOT?: EquipeSupervisorScalarWhereWithAggregatesInput | EquipeSupervisorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EquipeSupervisor"> | number
    equipeId?: IntWithAggregatesFilter<"EquipeSupervisor"> | number
    supervisorId?: IntWithAggregatesFilter<"EquipeSupervisor"> | number
    inicio?: DateTimeWithAggregatesFilter<"EquipeSupervisor"> | Date | string
    fim?: DateTimeNullableWithAggregatesFilter<"EquipeSupervisor"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"EquipeSupervisor"> | Date | string
    createdBy?: StringWithAggregatesFilter<"EquipeSupervisor"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"EquipeSupervisor"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"EquipeSupervisor"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"EquipeSupervisor"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"EquipeSupervisor"> | string | null
  }

  export type TipoEscalaWhereInput = {
    AND?: TipoEscalaWhereInput | TipoEscalaWhereInput[]
    OR?: TipoEscalaWhereInput[]
    NOT?: TipoEscalaWhereInput | TipoEscalaWhereInput[]
    id?: IntFilter<"TipoEscala"> | number
    nome?: StringFilter<"TipoEscala"> | string
    modoRepeticao?: EnumModoRepeticaoFilter<"TipoEscala"> | $Enums.ModoRepeticao
    cicloDias?: IntNullableFilter<"TipoEscala"> | number | null
    periodicidadeSemanas?: IntNullableFilter<"TipoEscala"> | number | null
    eletricistasPorTurma?: IntNullableFilter<"TipoEscala"> | number | null
    ativo?: BoolFilter<"TipoEscala"> | boolean
    observacoes?: StringNullableFilter<"TipoEscala"> | string | null
    createdAt?: DateTimeFilter<"TipoEscala"> | Date | string
    createdBy?: StringFilter<"TipoEscala"> | string
    updatedAt?: DateTimeNullableFilter<"TipoEscala"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoEscala"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoEscala"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoEscala"> | string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoListRelationFilter
    SemanaMascaras?: TipoEscalaSemanaMascaraListRelationFilter
    EscalasEquipePeriodo?: EscalaEquipePeriodoListRelationFilter
  }

  export type TipoEscalaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    modoRepeticao?: SortOrder
    cicloDias?: SortOrderInput | SortOrder
    periodicidadeSemanas?: SortOrderInput | SortOrder
    eletricistasPorTurma?: SortOrderInput | SortOrder
    ativo?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    CicloPosicoes?: TipoEscalaCicloPosicaoOrderByRelationAggregateInput
    SemanaMascaras?: TipoEscalaSemanaMascaraOrderByRelationAggregateInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoOrderByRelationAggregateInput
    _relevance?: TipoEscalaOrderByRelevanceInput
  }

  export type TipoEscalaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TipoEscalaWhereInput | TipoEscalaWhereInput[]
    OR?: TipoEscalaWhereInput[]
    NOT?: TipoEscalaWhereInput | TipoEscalaWhereInput[]
    nome?: StringFilter<"TipoEscala"> | string
    modoRepeticao?: EnumModoRepeticaoFilter<"TipoEscala"> | $Enums.ModoRepeticao
    cicloDias?: IntNullableFilter<"TipoEscala"> | number | null
    periodicidadeSemanas?: IntNullableFilter<"TipoEscala"> | number | null
    eletricistasPorTurma?: IntNullableFilter<"TipoEscala"> | number | null
    ativo?: BoolFilter<"TipoEscala"> | boolean
    observacoes?: StringNullableFilter<"TipoEscala"> | string | null
    createdAt?: DateTimeFilter<"TipoEscala"> | Date | string
    createdBy?: StringFilter<"TipoEscala"> | string
    updatedAt?: DateTimeNullableFilter<"TipoEscala"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoEscala"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoEscala"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoEscala"> | string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoListRelationFilter
    SemanaMascaras?: TipoEscalaSemanaMascaraListRelationFilter
    EscalasEquipePeriodo?: EscalaEquipePeriodoListRelationFilter
  }, "id">

  export type TipoEscalaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    modoRepeticao?: SortOrder
    cicloDias?: SortOrderInput | SortOrder
    periodicidadeSemanas?: SortOrderInput | SortOrder
    eletricistasPorTurma?: SortOrderInput | SortOrder
    ativo?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: TipoEscalaCountOrderByAggregateInput
    _avg?: TipoEscalaAvgOrderByAggregateInput
    _max?: TipoEscalaMaxOrderByAggregateInput
    _min?: TipoEscalaMinOrderByAggregateInput
    _sum?: TipoEscalaSumOrderByAggregateInput
  }

  export type TipoEscalaScalarWhereWithAggregatesInput = {
    AND?: TipoEscalaScalarWhereWithAggregatesInput | TipoEscalaScalarWhereWithAggregatesInput[]
    OR?: TipoEscalaScalarWhereWithAggregatesInput[]
    NOT?: TipoEscalaScalarWhereWithAggregatesInput | TipoEscalaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoEscala"> | number
    nome?: StringWithAggregatesFilter<"TipoEscala"> | string
    modoRepeticao?: EnumModoRepeticaoWithAggregatesFilter<"TipoEscala"> | $Enums.ModoRepeticao
    cicloDias?: IntNullableWithAggregatesFilter<"TipoEscala"> | number | null
    periodicidadeSemanas?: IntNullableWithAggregatesFilter<"TipoEscala"> | number | null
    eletricistasPorTurma?: IntNullableWithAggregatesFilter<"TipoEscala"> | number | null
    ativo?: BoolWithAggregatesFilter<"TipoEscala"> | boolean
    observacoes?: StringNullableWithAggregatesFilter<"TipoEscala"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"TipoEscala"> | Date | string
    createdBy?: StringWithAggregatesFilter<"TipoEscala"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TipoEscala"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"TipoEscala"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"TipoEscala"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"TipoEscala"> | string | null
  }

  export type TipoEscalaCicloPosicaoWhereInput = {
    AND?: TipoEscalaCicloPosicaoWhereInput | TipoEscalaCicloPosicaoWhereInput[]
    OR?: TipoEscalaCicloPosicaoWhereInput[]
    NOT?: TipoEscalaCicloPosicaoWhereInput | TipoEscalaCicloPosicaoWhereInput[]
    id?: IntFilter<"TipoEscalaCicloPosicao"> | number
    tipoEscalaId?: IntFilter<"TipoEscalaCicloPosicao"> | number
    posicao?: IntFilter<"TipoEscalaCicloPosicao"> | number
    status?: EnumStatusTrabalhoFilter<"TipoEscalaCicloPosicao"> | $Enums.StatusTrabalho
    createdAt?: DateTimeFilter<"TipoEscalaCicloPosicao"> | Date | string
    createdBy?: StringFilter<"TipoEscalaCicloPosicao"> | string
    updatedAt?: DateTimeNullableFilter<"TipoEscalaCicloPosicao"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoEscalaCicloPosicao"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoEscalaCicloPosicao"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoEscalaCicloPosicao"> | string | null
    tipoEscala?: XOR<TipoEscalaScalarRelationFilter, TipoEscalaWhereInput>
  }

  export type TipoEscalaCicloPosicaoOrderByWithRelationInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    posicao?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    tipoEscala?: TipoEscalaOrderByWithRelationInput
    _relevance?: TipoEscalaCicloPosicaoOrderByRelevanceInput
  }

  export type TipoEscalaCicloPosicaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tipoEscalaId_posicao?: TipoEscalaCicloPosicaoTipoEscalaIdPosicaoCompoundUniqueInput
    AND?: TipoEscalaCicloPosicaoWhereInput | TipoEscalaCicloPosicaoWhereInput[]
    OR?: TipoEscalaCicloPosicaoWhereInput[]
    NOT?: TipoEscalaCicloPosicaoWhereInput | TipoEscalaCicloPosicaoWhereInput[]
    tipoEscalaId?: IntFilter<"TipoEscalaCicloPosicao"> | number
    posicao?: IntFilter<"TipoEscalaCicloPosicao"> | number
    status?: EnumStatusTrabalhoFilter<"TipoEscalaCicloPosicao"> | $Enums.StatusTrabalho
    createdAt?: DateTimeFilter<"TipoEscalaCicloPosicao"> | Date | string
    createdBy?: StringFilter<"TipoEscalaCicloPosicao"> | string
    updatedAt?: DateTimeNullableFilter<"TipoEscalaCicloPosicao"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoEscalaCicloPosicao"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoEscalaCicloPosicao"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoEscalaCicloPosicao"> | string | null
    tipoEscala?: XOR<TipoEscalaScalarRelationFilter, TipoEscalaWhereInput>
  }, "id" | "tipoEscalaId_posicao">

  export type TipoEscalaCicloPosicaoOrderByWithAggregationInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    posicao?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: TipoEscalaCicloPosicaoCountOrderByAggregateInput
    _avg?: TipoEscalaCicloPosicaoAvgOrderByAggregateInput
    _max?: TipoEscalaCicloPosicaoMaxOrderByAggregateInput
    _min?: TipoEscalaCicloPosicaoMinOrderByAggregateInput
    _sum?: TipoEscalaCicloPosicaoSumOrderByAggregateInput
  }

  export type TipoEscalaCicloPosicaoScalarWhereWithAggregatesInput = {
    AND?: TipoEscalaCicloPosicaoScalarWhereWithAggregatesInput | TipoEscalaCicloPosicaoScalarWhereWithAggregatesInput[]
    OR?: TipoEscalaCicloPosicaoScalarWhereWithAggregatesInput[]
    NOT?: TipoEscalaCicloPosicaoScalarWhereWithAggregatesInput | TipoEscalaCicloPosicaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoEscalaCicloPosicao"> | number
    tipoEscalaId?: IntWithAggregatesFilter<"TipoEscalaCicloPosicao"> | number
    posicao?: IntWithAggregatesFilter<"TipoEscalaCicloPosicao"> | number
    status?: EnumStatusTrabalhoWithAggregatesFilter<"TipoEscalaCicloPosicao"> | $Enums.StatusTrabalho
    createdAt?: DateTimeWithAggregatesFilter<"TipoEscalaCicloPosicao"> | Date | string
    createdBy?: StringWithAggregatesFilter<"TipoEscalaCicloPosicao"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TipoEscalaCicloPosicao"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"TipoEscalaCicloPosicao"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"TipoEscalaCicloPosicao"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"TipoEscalaCicloPosicao"> | string | null
  }

  export type TipoEscalaSemanaMascaraWhereInput = {
    AND?: TipoEscalaSemanaMascaraWhereInput | TipoEscalaSemanaMascaraWhereInput[]
    OR?: TipoEscalaSemanaMascaraWhereInput[]
    NOT?: TipoEscalaSemanaMascaraWhereInput | TipoEscalaSemanaMascaraWhereInput[]
    id?: IntFilter<"TipoEscalaSemanaMascara"> | number
    tipoEscalaId?: IntFilter<"TipoEscalaSemanaMascara"> | number
    semanaIndex?: IntFilter<"TipoEscalaSemanaMascara"> | number
    dia?: EnumDiaSemanaFilter<"TipoEscalaSemanaMascara"> | $Enums.DiaSemana
    status?: EnumStatusTrabalhoFilter<"TipoEscalaSemanaMascara"> | $Enums.StatusTrabalho
    createdAt?: DateTimeFilter<"TipoEscalaSemanaMascara"> | Date | string
    createdBy?: StringFilter<"TipoEscalaSemanaMascara"> | string
    updatedAt?: DateTimeNullableFilter<"TipoEscalaSemanaMascara"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoEscalaSemanaMascara"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoEscalaSemanaMascara"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoEscalaSemanaMascara"> | string | null
    tipoEscala?: XOR<TipoEscalaScalarRelationFilter, TipoEscalaWhereInput>
  }

  export type TipoEscalaSemanaMascaraOrderByWithRelationInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    semanaIndex?: SortOrder
    dia?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    tipoEscala?: TipoEscalaOrderByWithRelationInput
    _relevance?: TipoEscalaSemanaMascaraOrderByRelevanceInput
  }

  export type TipoEscalaSemanaMascaraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tipoEscalaId_semanaIndex_dia?: TipoEscalaSemanaMascaraTipoEscalaIdSemanaIndexDiaCompoundUniqueInput
    AND?: TipoEscalaSemanaMascaraWhereInput | TipoEscalaSemanaMascaraWhereInput[]
    OR?: TipoEscalaSemanaMascaraWhereInput[]
    NOT?: TipoEscalaSemanaMascaraWhereInput | TipoEscalaSemanaMascaraWhereInput[]
    tipoEscalaId?: IntFilter<"TipoEscalaSemanaMascara"> | number
    semanaIndex?: IntFilter<"TipoEscalaSemanaMascara"> | number
    dia?: EnumDiaSemanaFilter<"TipoEscalaSemanaMascara"> | $Enums.DiaSemana
    status?: EnumStatusTrabalhoFilter<"TipoEscalaSemanaMascara"> | $Enums.StatusTrabalho
    createdAt?: DateTimeFilter<"TipoEscalaSemanaMascara"> | Date | string
    createdBy?: StringFilter<"TipoEscalaSemanaMascara"> | string
    updatedAt?: DateTimeNullableFilter<"TipoEscalaSemanaMascara"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoEscalaSemanaMascara"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoEscalaSemanaMascara"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoEscalaSemanaMascara"> | string | null
    tipoEscala?: XOR<TipoEscalaScalarRelationFilter, TipoEscalaWhereInput>
  }, "id" | "tipoEscalaId_semanaIndex_dia">

  export type TipoEscalaSemanaMascaraOrderByWithAggregationInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    semanaIndex?: SortOrder
    dia?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: TipoEscalaSemanaMascaraCountOrderByAggregateInput
    _avg?: TipoEscalaSemanaMascaraAvgOrderByAggregateInput
    _max?: TipoEscalaSemanaMascaraMaxOrderByAggregateInput
    _min?: TipoEscalaSemanaMascaraMinOrderByAggregateInput
    _sum?: TipoEscalaSemanaMascaraSumOrderByAggregateInput
  }

  export type TipoEscalaSemanaMascaraScalarWhereWithAggregatesInput = {
    AND?: TipoEscalaSemanaMascaraScalarWhereWithAggregatesInput | TipoEscalaSemanaMascaraScalarWhereWithAggregatesInput[]
    OR?: TipoEscalaSemanaMascaraScalarWhereWithAggregatesInput[]
    NOT?: TipoEscalaSemanaMascaraScalarWhereWithAggregatesInput | TipoEscalaSemanaMascaraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoEscalaSemanaMascara"> | number
    tipoEscalaId?: IntWithAggregatesFilter<"TipoEscalaSemanaMascara"> | number
    semanaIndex?: IntWithAggregatesFilter<"TipoEscalaSemanaMascara"> | number
    dia?: EnumDiaSemanaWithAggregatesFilter<"TipoEscalaSemanaMascara"> | $Enums.DiaSemana
    status?: EnumStatusTrabalhoWithAggregatesFilter<"TipoEscalaSemanaMascara"> | $Enums.StatusTrabalho
    createdAt?: DateTimeWithAggregatesFilter<"TipoEscalaSemanaMascara"> | Date | string
    createdBy?: StringWithAggregatesFilter<"TipoEscalaSemanaMascara"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TipoEscalaSemanaMascara"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"TipoEscalaSemanaMascara"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"TipoEscalaSemanaMascara"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"TipoEscalaSemanaMascara"> | string | null
  }

  export type EscalaEquipePeriodoWhereInput = {
    AND?: EscalaEquipePeriodoWhereInput | EscalaEquipePeriodoWhereInput[]
    OR?: EscalaEquipePeriodoWhereInput[]
    NOT?: EscalaEquipePeriodoWhereInput | EscalaEquipePeriodoWhereInput[]
    id?: IntFilter<"EscalaEquipePeriodo"> | number
    equipeId?: IntFilter<"EscalaEquipePeriodo"> | number
    periodoInicio?: DateTimeFilter<"EscalaEquipePeriodo"> | Date | string
    periodoFim?: DateTimeFilter<"EscalaEquipePeriodo"> | Date | string
    tipoEscalaId?: IntFilter<"EscalaEquipePeriodo"> | number
    status?: EnumStatusEscalaEquipePeriodoFilter<"EscalaEquipePeriodo"> | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFilter<"EscalaEquipePeriodo"> | number
    observacoes?: StringNullableFilter<"EscalaEquipePeriodo"> | string | null
    createdAt?: DateTimeFilter<"EscalaEquipePeriodo"> | Date | string
    createdBy?: StringFilter<"EscalaEquipePeriodo"> | string
    updatedAt?: DateTimeNullableFilter<"EscalaEquipePeriodo"> | Date | string | null
    updatedBy?: StringNullableFilter<"EscalaEquipePeriodo"> | string | null
    deletedAt?: DateTimeNullableFilter<"EscalaEquipePeriodo"> | Date | string | null
    deletedBy?: StringNullableFilter<"EscalaEquipePeriodo"> | string | null
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
    tipoEscala?: XOR<TipoEscalaScalarRelationFilter, TipoEscalaWhereInput>
    Slots?: SlotEscalaListRelationFilter
  }

  export type EscalaEquipePeriodoOrderByWithRelationInput = {
    id?: SortOrder
    equipeId?: SortOrder
    periodoInicio?: SortOrder
    periodoFim?: SortOrder
    tipoEscalaId?: SortOrder
    status?: SortOrder
    versao?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    equipe?: EquipeOrderByWithRelationInput
    tipoEscala?: TipoEscalaOrderByWithRelationInput
    Slots?: SlotEscalaOrderByRelationAggregateInput
    _relevance?: EscalaEquipePeriodoOrderByRelevanceInput
  }

  export type EscalaEquipePeriodoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EscalaEquipePeriodoWhereInput | EscalaEquipePeriodoWhereInput[]
    OR?: EscalaEquipePeriodoWhereInput[]
    NOT?: EscalaEquipePeriodoWhereInput | EscalaEquipePeriodoWhereInput[]
    equipeId?: IntFilter<"EscalaEquipePeriodo"> | number
    periodoInicio?: DateTimeFilter<"EscalaEquipePeriodo"> | Date | string
    periodoFim?: DateTimeFilter<"EscalaEquipePeriodo"> | Date | string
    tipoEscalaId?: IntFilter<"EscalaEquipePeriodo"> | number
    status?: EnumStatusEscalaEquipePeriodoFilter<"EscalaEquipePeriodo"> | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFilter<"EscalaEquipePeriodo"> | number
    observacoes?: StringNullableFilter<"EscalaEquipePeriodo"> | string | null
    createdAt?: DateTimeFilter<"EscalaEquipePeriodo"> | Date | string
    createdBy?: StringFilter<"EscalaEquipePeriodo"> | string
    updatedAt?: DateTimeNullableFilter<"EscalaEquipePeriodo"> | Date | string | null
    updatedBy?: StringNullableFilter<"EscalaEquipePeriodo"> | string | null
    deletedAt?: DateTimeNullableFilter<"EscalaEquipePeriodo"> | Date | string | null
    deletedBy?: StringNullableFilter<"EscalaEquipePeriodo"> | string | null
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
    tipoEscala?: XOR<TipoEscalaScalarRelationFilter, TipoEscalaWhereInput>
    Slots?: SlotEscalaListRelationFilter
  }, "id">

  export type EscalaEquipePeriodoOrderByWithAggregationInput = {
    id?: SortOrder
    equipeId?: SortOrder
    periodoInicio?: SortOrder
    periodoFim?: SortOrder
    tipoEscalaId?: SortOrder
    status?: SortOrder
    versao?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: EscalaEquipePeriodoCountOrderByAggregateInput
    _avg?: EscalaEquipePeriodoAvgOrderByAggregateInput
    _max?: EscalaEquipePeriodoMaxOrderByAggregateInput
    _min?: EscalaEquipePeriodoMinOrderByAggregateInput
    _sum?: EscalaEquipePeriodoSumOrderByAggregateInput
  }

  export type EscalaEquipePeriodoScalarWhereWithAggregatesInput = {
    AND?: EscalaEquipePeriodoScalarWhereWithAggregatesInput | EscalaEquipePeriodoScalarWhereWithAggregatesInput[]
    OR?: EscalaEquipePeriodoScalarWhereWithAggregatesInput[]
    NOT?: EscalaEquipePeriodoScalarWhereWithAggregatesInput | EscalaEquipePeriodoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EscalaEquipePeriodo"> | number
    equipeId?: IntWithAggregatesFilter<"EscalaEquipePeriodo"> | number
    periodoInicio?: DateTimeWithAggregatesFilter<"EscalaEquipePeriodo"> | Date | string
    periodoFim?: DateTimeWithAggregatesFilter<"EscalaEquipePeriodo"> | Date | string
    tipoEscalaId?: IntWithAggregatesFilter<"EscalaEquipePeriodo"> | number
    status?: EnumStatusEscalaEquipePeriodoWithAggregatesFilter<"EscalaEquipePeriodo"> | $Enums.StatusEscalaEquipePeriodo
    versao?: IntWithAggregatesFilter<"EscalaEquipePeriodo"> | number
    observacoes?: StringNullableWithAggregatesFilter<"EscalaEquipePeriodo"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"EscalaEquipePeriodo"> | Date | string
    createdBy?: StringWithAggregatesFilter<"EscalaEquipePeriodo"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"EscalaEquipePeriodo"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"EscalaEquipePeriodo"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"EscalaEquipePeriodo"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"EscalaEquipePeriodo"> | string | null
  }

  export type SlotEscalaWhereInput = {
    AND?: SlotEscalaWhereInput | SlotEscalaWhereInput[]
    OR?: SlotEscalaWhereInput[]
    NOT?: SlotEscalaWhereInput | SlotEscalaWhereInput[]
    id?: IntFilter<"SlotEscala"> | number
    escalaEquipePeriodoId?: IntFilter<"SlotEscala"> | number
    eletricistaId?: IntFilter<"SlotEscala"> | number
    data?: DateTimeFilter<"SlotEscala"> | Date | string
    estado?: EnumEstadoSlotFilter<"SlotEscala"> | $Enums.EstadoSlot
    inicioPrevisto?: StringNullableFilter<"SlotEscala"> | string | null
    fimPrevisto?: StringNullableFilter<"SlotEscala"> | string | null
    anotacoesDia?: StringNullableFilter<"SlotEscala"> | string | null
    origem?: EnumOrigemAtribuicaoFilter<"SlotEscala"> | $Enums.OrigemAtribuicao
    observacoes?: StringNullableFilter<"SlotEscala"> | string | null
    createdAt?: DateTimeFilter<"SlotEscala"> | Date | string
    createdBy?: StringFilter<"SlotEscala"> | string
    updatedAt?: DateTimeNullableFilter<"SlotEscala"> | Date | string | null
    updatedBy?: StringNullableFilter<"SlotEscala"> | string | null
    deletedAt?: DateTimeNullableFilter<"SlotEscala"> | Date | string | null
    deletedBy?: StringNullableFilter<"SlotEscala"> | string | null
    escalaEquipePeriodo?: XOR<EscalaEquipePeriodoScalarRelationFilter, EscalaEquipePeriodoWhereInput>
    eletricista?: XOR<EletricistaScalarRelationFilter, EletricistaWhereInput>
    Coberturas?: EventoCoberturaListRelationFilter
  }

  export type SlotEscalaOrderByWithRelationInput = {
    id?: SortOrder
    escalaEquipePeriodoId?: SortOrder
    eletricistaId?: SortOrder
    data?: SortOrder
    estado?: SortOrder
    inicioPrevisto?: SortOrderInput | SortOrder
    fimPrevisto?: SortOrderInput | SortOrder
    anotacoesDia?: SortOrderInput | SortOrder
    origem?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    escalaEquipePeriodo?: EscalaEquipePeriodoOrderByWithRelationInput
    eletricista?: EletricistaOrderByWithRelationInput
    Coberturas?: EventoCoberturaOrderByRelationAggregateInput
    _relevance?: SlotEscalaOrderByRelevanceInput
  }

  export type SlotEscalaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    escalaEquipePeriodoId_data_eletricistaId?: SlotEscalaEscalaEquipePeriodoIdDataEletricistaIdCompoundUniqueInput
    AND?: SlotEscalaWhereInput | SlotEscalaWhereInput[]
    OR?: SlotEscalaWhereInput[]
    NOT?: SlotEscalaWhereInput | SlotEscalaWhereInput[]
    escalaEquipePeriodoId?: IntFilter<"SlotEscala"> | number
    eletricistaId?: IntFilter<"SlotEscala"> | number
    data?: DateTimeFilter<"SlotEscala"> | Date | string
    estado?: EnumEstadoSlotFilter<"SlotEscala"> | $Enums.EstadoSlot
    inicioPrevisto?: StringNullableFilter<"SlotEscala"> | string | null
    fimPrevisto?: StringNullableFilter<"SlotEscala"> | string | null
    anotacoesDia?: StringNullableFilter<"SlotEscala"> | string | null
    origem?: EnumOrigemAtribuicaoFilter<"SlotEscala"> | $Enums.OrigemAtribuicao
    observacoes?: StringNullableFilter<"SlotEscala"> | string | null
    createdAt?: DateTimeFilter<"SlotEscala"> | Date | string
    createdBy?: StringFilter<"SlotEscala"> | string
    updatedAt?: DateTimeNullableFilter<"SlotEscala"> | Date | string | null
    updatedBy?: StringNullableFilter<"SlotEscala"> | string | null
    deletedAt?: DateTimeNullableFilter<"SlotEscala"> | Date | string | null
    deletedBy?: StringNullableFilter<"SlotEscala"> | string | null
    escalaEquipePeriodo?: XOR<EscalaEquipePeriodoScalarRelationFilter, EscalaEquipePeriodoWhereInput>
    eletricista?: XOR<EletricistaScalarRelationFilter, EletricistaWhereInput>
    Coberturas?: EventoCoberturaListRelationFilter
  }, "id" | "escalaEquipePeriodoId_data_eletricistaId">

  export type SlotEscalaOrderByWithAggregationInput = {
    id?: SortOrder
    escalaEquipePeriodoId?: SortOrder
    eletricistaId?: SortOrder
    data?: SortOrder
    estado?: SortOrder
    inicioPrevisto?: SortOrderInput | SortOrder
    fimPrevisto?: SortOrderInput | SortOrder
    anotacoesDia?: SortOrderInput | SortOrder
    origem?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: SlotEscalaCountOrderByAggregateInput
    _avg?: SlotEscalaAvgOrderByAggregateInput
    _max?: SlotEscalaMaxOrderByAggregateInput
    _min?: SlotEscalaMinOrderByAggregateInput
    _sum?: SlotEscalaSumOrderByAggregateInput
  }

  export type SlotEscalaScalarWhereWithAggregatesInput = {
    AND?: SlotEscalaScalarWhereWithAggregatesInput | SlotEscalaScalarWhereWithAggregatesInput[]
    OR?: SlotEscalaScalarWhereWithAggregatesInput[]
    NOT?: SlotEscalaScalarWhereWithAggregatesInput | SlotEscalaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SlotEscala"> | number
    escalaEquipePeriodoId?: IntWithAggregatesFilter<"SlotEscala"> | number
    eletricistaId?: IntWithAggregatesFilter<"SlotEscala"> | number
    data?: DateTimeWithAggregatesFilter<"SlotEscala"> | Date | string
    estado?: EnumEstadoSlotWithAggregatesFilter<"SlotEscala"> | $Enums.EstadoSlot
    inicioPrevisto?: StringNullableWithAggregatesFilter<"SlotEscala"> | string | null
    fimPrevisto?: StringNullableWithAggregatesFilter<"SlotEscala"> | string | null
    anotacoesDia?: StringNullableWithAggregatesFilter<"SlotEscala"> | string | null
    origem?: EnumOrigemAtribuicaoWithAggregatesFilter<"SlotEscala"> | $Enums.OrigemAtribuicao
    observacoes?: StringNullableWithAggregatesFilter<"SlotEscala"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SlotEscala"> | Date | string
    createdBy?: StringWithAggregatesFilter<"SlotEscala"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"SlotEscala"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"SlotEscala"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"SlotEscala"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"SlotEscala"> | string | null
  }

  export type EventoCoberturaWhereInput = {
    AND?: EventoCoberturaWhereInput | EventoCoberturaWhereInput[]
    OR?: EventoCoberturaWhereInput[]
    NOT?: EventoCoberturaWhereInput | EventoCoberturaWhereInput[]
    id?: IntFilter<"EventoCobertura"> | number
    slotEscalaId?: IntFilter<"EventoCobertura"> | number
    eletricistaCobrindoId?: IntNullableFilter<"EventoCobertura"> | number | null
    tipo?: EnumEventoCoberturaTipoFilter<"EventoCobertura"> | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFilter<"EventoCobertura"> | $Enums.EventoCoberturaResultado
    justificativa?: StringNullableFilter<"EventoCobertura"> | string | null
    registradoEm?: DateTimeFilter<"EventoCobertura"> | Date | string
    createdAt?: DateTimeFilter<"EventoCobertura"> | Date | string
    createdBy?: StringFilter<"EventoCobertura"> | string
    updatedAt?: DateTimeNullableFilter<"EventoCobertura"> | Date | string | null
    updatedBy?: StringNullableFilter<"EventoCobertura"> | string | null
    deletedAt?: DateTimeNullableFilter<"EventoCobertura"> | Date | string | null
    deletedBy?: StringNullableFilter<"EventoCobertura"> | string | null
    slotEscala?: XOR<SlotEscalaScalarRelationFilter, SlotEscalaWhereInput>
    eletricistaCobrindo?: XOR<EletricistaNullableScalarRelationFilter, EletricistaWhereInput> | null
  }

  export type EventoCoberturaOrderByWithRelationInput = {
    id?: SortOrder
    slotEscalaId?: SortOrder
    eletricistaCobrindoId?: SortOrderInput | SortOrder
    tipo?: SortOrder
    resultado?: SortOrder
    justificativa?: SortOrderInput | SortOrder
    registradoEm?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    slotEscala?: SlotEscalaOrderByWithRelationInput
    eletricistaCobrindo?: EletricistaOrderByWithRelationInput
    _relevance?: EventoCoberturaOrderByRelevanceInput
  }

  export type EventoCoberturaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EventoCoberturaWhereInput | EventoCoberturaWhereInput[]
    OR?: EventoCoberturaWhereInput[]
    NOT?: EventoCoberturaWhereInput | EventoCoberturaWhereInput[]
    slotEscalaId?: IntFilter<"EventoCobertura"> | number
    eletricistaCobrindoId?: IntNullableFilter<"EventoCobertura"> | number | null
    tipo?: EnumEventoCoberturaTipoFilter<"EventoCobertura"> | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFilter<"EventoCobertura"> | $Enums.EventoCoberturaResultado
    justificativa?: StringNullableFilter<"EventoCobertura"> | string | null
    registradoEm?: DateTimeFilter<"EventoCobertura"> | Date | string
    createdAt?: DateTimeFilter<"EventoCobertura"> | Date | string
    createdBy?: StringFilter<"EventoCobertura"> | string
    updatedAt?: DateTimeNullableFilter<"EventoCobertura"> | Date | string | null
    updatedBy?: StringNullableFilter<"EventoCobertura"> | string | null
    deletedAt?: DateTimeNullableFilter<"EventoCobertura"> | Date | string | null
    deletedBy?: StringNullableFilter<"EventoCobertura"> | string | null
    slotEscala?: XOR<SlotEscalaScalarRelationFilter, SlotEscalaWhereInput>
    eletricistaCobrindo?: XOR<EletricistaNullableScalarRelationFilter, EletricistaWhereInput> | null
  }, "id">

  export type EventoCoberturaOrderByWithAggregationInput = {
    id?: SortOrder
    slotEscalaId?: SortOrder
    eletricistaCobrindoId?: SortOrderInput | SortOrder
    tipo?: SortOrder
    resultado?: SortOrder
    justificativa?: SortOrderInput | SortOrder
    registradoEm?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: EventoCoberturaCountOrderByAggregateInput
    _avg?: EventoCoberturaAvgOrderByAggregateInput
    _max?: EventoCoberturaMaxOrderByAggregateInput
    _min?: EventoCoberturaMinOrderByAggregateInput
    _sum?: EventoCoberturaSumOrderByAggregateInput
  }

  export type EventoCoberturaScalarWhereWithAggregatesInput = {
    AND?: EventoCoberturaScalarWhereWithAggregatesInput | EventoCoberturaScalarWhereWithAggregatesInput[]
    OR?: EventoCoberturaScalarWhereWithAggregatesInput[]
    NOT?: EventoCoberturaScalarWhereWithAggregatesInput | EventoCoberturaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EventoCobertura"> | number
    slotEscalaId?: IntWithAggregatesFilter<"EventoCobertura"> | number
    eletricistaCobrindoId?: IntNullableWithAggregatesFilter<"EventoCobertura"> | number | null
    tipo?: EnumEventoCoberturaTipoWithAggregatesFilter<"EventoCobertura"> | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoWithAggregatesFilter<"EventoCobertura"> | $Enums.EventoCoberturaResultado
    justificativa?: StringNullableWithAggregatesFilter<"EventoCobertura"> | string | null
    registradoEm?: DateTimeWithAggregatesFilter<"EventoCobertura"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"EventoCobertura"> | Date | string
    createdBy?: StringWithAggregatesFilter<"EventoCobertura"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"EventoCobertura"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"EventoCobertura"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"EventoCobertura"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"EventoCobertura"> | string | null
  }

  export type EquipeHorarioVigenciaWhereInput = {
    AND?: EquipeHorarioVigenciaWhereInput | EquipeHorarioVigenciaWhereInput[]
    OR?: EquipeHorarioVigenciaWhereInput[]
    NOT?: EquipeHorarioVigenciaWhereInput | EquipeHorarioVigenciaWhereInput[]
    id?: IntFilter<"EquipeHorarioVigencia"> | number
    equipeId?: IntFilter<"EquipeHorarioVigencia"> | number
    inicioTurnoHora?: StringFilter<"EquipeHorarioVigencia"> | string
    duracaoHoras?: DecimalFilter<"EquipeHorarioVigencia"> | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeFilter<"EquipeHorarioVigencia"> | Date | string
    vigenciaFim?: DateTimeNullableFilter<"EquipeHorarioVigencia"> | Date | string | null
    createdAt?: DateTimeFilter<"EquipeHorarioVigencia"> | Date | string
    createdBy?: StringFilter<"EquipeHorarioVigencia"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeHorarioVigencia"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeHorarioVigencia"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeHorarioVigencia"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeHorarioVigencia"> | string | null
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
  }

  export type EquipeHorarioVigenciaOrderByWithRelationInput = {
    id?: SortOrder
    equipeId?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    vigenciaInicio?: SortOrder
    vigenciaFim?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    equipe?: EquipeOrderByWithRelationInput
    _relevance?: EquipeHorarioVigenciaOrderByRelevanceInput
  }

  export type EquipeHorarioVigenciaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EquipeHorarioVigenciaWhereInput | EquipeHorarioVigenciaWhereInput[]
    OR?: EquipeHorarioVigenciaWhereInput[]
    NOT?: EquipeHorarioVigenciaWhereInput | EquipeHorarioVigenciaWhereInput[]
    equipeId?: IntFilter<"EquipeHorarioVigencia"> | number
    inicioTurnoHora?: StringFilter<"EquipeHorarioVigencia"> | string
    duracaoHoras?: DecimalFilter<"EquipeHorarioVigencia"> | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeFilter<"EquipeHorarioVigencia"> | Date | string
    vigenciaFim?: DateTimeNullableFilter<"EquipeHorarioVigencia"> | Date | string | null
    createdAt?: DateTimeFilter<"EquipeHorarioVigencia"> | Date | string
    createdBy?: StringFilter<"EquipeHorarioVigencia"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeHorarioVigencia"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeHorarioVigencia"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeHorarioVigencia"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeHorarioVigencia"> | string | null
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
  }, "id">

  export type EquipeHorarioVigenciaOrderByWithAggregationInput = {
    id?: SortOrder
    equipeId?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    vigenciaInicio?: SortOrder
    vigenciaFim?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: EquipeHorarioVigenciaCountOrderByAggregateInput
    _avg?: EquipeHorarioVigenciaAvgOrderByAggregateInput
    _max?: EquipeHorarioVigenciaMaxOrderByAggregateInput
    _min?: EquipeHorarioVigenciaMinOrderByAggregateInput
    _sum?: EquipeHorarioVigenciaSumOrderByAggregateInput
  }

  export type EquipeHorarioVigenciaScalarWhereWithAggregatesInput = {
    AND?: EquipeHorarioVigenciaScalarWhereWithAggregatesInput | EquipeHorarioVigenciaScalarWhereWithAggregatesInput[]
    OR?: EquipeHorarioVigenciaScalarWhereWithAggregatesInput[]
    NOT?: EquipeHorarioVigenciaScalarWhereWithAggregatesInput | EquipeHorarioVigenciaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EquipeHorarioVigencia"> | number
    equipeId?: IntWithAggregatesFilter<"EquipeHorarioVigencia"> | number
    inicioTurnoHora?: StringWithAggregatesFilter<"EquipeHorarioVigencia"> | string
    duracaoHoras?: DecimalWithAggregatesFilter<"EquipeHorarioVigencia"> | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeWithAggregatesFilter<"EquipeHorarioVigencia"> | Date | string
    vigenciaFim?: DateTimeNullableWithAggregatesFilter<"EquipeHorarioVigencia"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"EquipeHorarioVigencia"> | Date | string
    createdBy?: StringWithAggregatesFilter<"EquipeHorarioVigencia"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"EquipeHorarioVigencia"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"EquipeHorarioVigencia"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"EquipeHorarioVigencia"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"EquipeHorarioVigencia"> | string | null
  }

  export type HorarioAberturaCatalogoWhereInput = {
    AND?: HorarioAberturaCatalogoWhereInput | HorarioAberturaCatalogoWhereInput[]
    OR?: HorarioAberturaCatalogoWhereInput[]
    NOT?: HorarioAberturaCatalogoWhereInput | HorarioAberturaCatalogoWhereInput[]
    id?: IntFilter<"HorarioAberturaCatalogo"> | number
    nome?: StringFilter<"HorarioAberturaCatalogo"> | string
    inicioTurnoHora?: StringFilter<"HorarioAberturaCatalogo"> | string
    duracaoHoras?: DecimalFilter<"HorarioAberturaCatalogo"> | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFilter<"HorarioAberturaCatalogo"> | Decimal | DecimalJsLike | number | string
    ativo?: BoolFilter<"HorarioAberturaCatalogo"> | boolean
    observacoes?: StringNullableFilter<"HorarioAberturaCatalogo"> | string | null
    createdAt?: DateTimeFilter<"HorarioAberturaCatalogo"> | Date | string
    createdBy?: StringFilter<"HorarioAberturaCatalogo"> | string
    updatedAt?: DateTimeNullableFilter<"HorarioAberturaCatalogo"> | Date | string | null
    updatedBy?: StringNullableFilter<"HorarioAberturaCatalogo"> | string | null
    deletedAt?: DateTimeNullableFilter<"HorarioAberturaCatalogo"> | Date | string | null
    deletedBy?: StringNullableFilter<"HorarioAberturaCatalogo"> | string | null
    Historicos?: EquipeTurnoHistoricoListRelationFilter
  }

  export type HorarioAberturaCatalogoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
    ativo?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    Historicos?: EquipeTurnoHistoricoOrderByRelationAggregateInput
    _relevance?: HorarioAberturaCatalogoOrderByRelevanceInput
  }

  export type HorarioAberturaCatalogoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HorarioAberturaCatalogoWhereInput | HorarioAberturaCatalogoWhereInput[]
    OR?: HorarioAberturaCatalogoWhereInput[]
    NOT?: HorarioAberturaCatalogoWhereInput | HorarioAberturaCatalogoWhereInput[]
    nome?: StringFilter<"HorarioAberturaCatalogo"> | string
    inicioTurnoHora?: StringFilter<"HorarioAberturaCatalogo"> | string
    duracaoHoras?: DecimalFilter<"HorarioAberturaCatalogo"> | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFilter<"HorarioAberturaCatalogo"> | Decimal | DecimalJsLike | number | string
    ativo?: BoolFilter<"HorarioAberturaCatalogo"> | boolean
    observacoes?: StringNullableFilter<"HorarioAberturaCatalogo"> | string | null
    createdAt?: DateTimeFilter<"HorarioAberturaCatalogo"> | Date | string
    createdBy?: StringFilter<"HorarioAberturaCatalogo"> | string
    updatedAt?: DateTimeNullableFilter<"HorarioAberturaCatalogo"> | Date | string | null
    updatedBy?: StringNullableFilter<"HorarioAberturaCatalogo"> | string | null
    deletedAt?: DateTimeNullableFilter<"HorarioAberturaCatalogo"> | Date | string | null
    deletedBy?: StringNullableFilter<"HorarioAberturaCatalogo"> | string | null
    Historicos?: EquipeTurnoHistoricoListRelationFilter
  }, "id">

  export type HorarioAberturaCatalogoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
    ativo?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: HorarioAberturaCatalogoCountOrderByAggregateInput
    _avg?: HorarioAberturaCatalogoAvgOrderByAggregateInput
    _max?: HorarioAberturaCatalogoMaxOrderByAggregateInput
    _min?: HorarioAberturaCatalogoMinOrderByAggregateInput
    _sum?: HorarioAberturaCatalogoSumOrderByAggregateInput
  }

  export type HorarioAberturaCatalogoScalarWhereWithAggregatesInput = {
    AND?: HorarioAberturaCatalogoScalarWhereWithAggregatesInput | HorarioAberturaCatalogoScalarWhereWithAggregatesInput[]
    OR?: HorarioAberturaCatalogoScalarWhereWithAggregatesInput[]
    NOT?: HorarioAberturaCatalogoScalarWhereWithAggregatesInput | HorarioAberturaCatalogoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HorarioAberturaCatalogo"> | number
    nome?: StringWithAggregatesFilter<"HorarioAberturaCatalogo"> | string
    inicioTurnoHora?: StringWithAggregatesFilter<"HorarioAberturaCatalogo"> | string
    duracaoHoras?: DecimalWithAggregatesFilter<"HorarioAberturaCatalogo"> | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalWithAggregatesFilter<"HorarioAberturaCatalogo"> | Decimal | DecimalJsLike | number | string
    ativo?: BoolWithAggregatesFilter<"HorarioAberturaCatalogo"> | boolean
    observacoes?: StringNullableWithAggregatesFilter<"HorarioAberturaCatalogo"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"HorarioAberturaCatalogo"> | Date | string
    createdBy?: StringWithAggregatesFilter<"HorarioAberturaCatalogo"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"HorarioAberturaCatalogo"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"HorarioAberturaCatalogo"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"HorarioAberturaCatalogo"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"HorarioAberturaCatalogo"> | string | null
  }

  export type EquipeTurnoHistoricoWhereInput = {
    AND?: EquipeTurnoHistoricoWhereInput | EquipeTurnoHistoricoWhereInput[]
    OR?: EquipeTurnoHistoricoWhereInput[]
    NOT?: EquipeTurnoHistoricoWhereInput | EquipeTurnoHistoricoWhereInput[]
    id?: IntFilter<"EquipeTurnoHistorico"> | number
    equipeId?: IntFilter<"EquipeTurnoHistorico"> | number
    horarioAberturaCatalogoId?: IntNullableFilter<"EquipeTurnoHistorico"> | number | null
    dataInicio?: DateTimeFilter<"EquipeTurnoHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"EquipeTurnoHistorico"> | Date | string | null
    inicioTurnoHora?: StringFilter<"EquipeTurnoHistorico"> | string
    duracaoHoras?: DecimalFilter<"EquipeTurnoHistorico"> | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFilter<"EquipeTurnoHistorico"> | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    motivo?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    observacoes?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    createdAt?: DateTimeFilter<"EquipeTurnoHistorico"> | Date | string
    createdBy?: StringFilter<"EquipeTurnoHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeTurnoHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeTurnoHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
    horarioAberturaCatalogo?: XOR<HorarioAberturaCatalogoNullableScalarRelationFilter, HorarioAberturaCatalogoWhereInput> | null
  }

  export type EquipeTurnoHistoricoOrderByWithRelationInput = {
    id?: SortOrder
    equipeId?: SortOrder
    horarioAberturaCatalogoId?: SortOrderInput | SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrderInput | SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
    fimTurnoHora?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    observacoes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    equipe?: EquipeOrderByWithRelationInput
    horarioAberturaCatalogo?: HorarioAberturaCatalogoOrderByWithRelationInput
    _relevance?: EquipeTurnoHistoricoOrderByRelevanceInput
  }

  export type EquipeTurnoHistoricoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EquipeTurnoHistoricoWhereInput | EquipeTurnoHistoricoWhereInput[]
    OR?: EquipeTurnoHistoricoWhereInput[]
    NOT?: EquipeTurnoHistoricoWhereInput | EquipeTurnoHistoricoWhereInput[]
    equipeId?: IntFilter<"EquipeTurnoHistorico"> | number
    horarioAberturaCatalogoId?: IntNullableFilter<"EquipeTurnoHistorico"> | number | null
    dataInicio?: DateTimeFilter<"EquipeTurnoHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"EquipeTurnoHistorico"> | Date | string | null
    inicioTurnoHora?: StringFilter<"EquipeTurnoHistorico"> | string
    duracaoHoras?: DecimalFilter<"EquipeTurnoHistorico"> | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFilter<"EquipeTurnoHistorico"> | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    motivo?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    observacoes?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    createdAt?: DateTimeFilter<"EquipeTurnoHistorico"> | Date | string
    createdBy?: StringFilter<"EquipeTurnoHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeTurnoHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeTurnoHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
    horarioAberturaCatalogo?: XOR<HorarioAberturaCatalogoNullableScalarRelationFilter, HorarioAberturaCatalogoWhereInput> | null
  }, "id">

  export type EquipeTurnoHistoricoOrderByWithAggregationInput = {
    id?: SortOrder
    equipeId?: SortOrder
    horarioAberturaCatalogoId?: SortOrderInput | SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrderInput | SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
    fimTurnoHora?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    observacoes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: EquipeTurnoHistoricoCountOrderByAggregateInput
    _avg?: EquipeTurnoHistoricoAvgOrderByAggregateInput
    _max?: EquipeTurnoHistoricoMaxOrderByAggregateInput
    _min?: EquipeTurnoHistoricoMinOrderByAggregateInput
    _sum?: EquipeTurnoHistoricoSumOrderByAggregateInput
  }

  export type EquipeTurnoHistoricoScalarWhereWithAggregatesInput = {
    AND?: EquipeTurnoHistoricoScalarWhereWithAggregatesInput | EquipeTurnoHistoricoScalarWhereWithAggregatesInput[]
    OR?: EquipeTurnoHistoricoScalarWhereWithAggregatesInput[]
    NOT?: EquipeTurnoHistoricoScalarWhereWithAggregatesInput | EquipeTurnoHistoricoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EquipeTurnoHistorico"> | number
    equipeId?: IntWithAggregatesFilter<"EquipeTurnoHistorico"> | number
    horarioAberturaCatalogoId?: IntNullableWithAggregatesFilter<"EquipeTurnoHistorico"> | number | null
    dataInicio?: DateTimeWithAggregatesFilter<"EquipeTurnoHistorico"> | Date | string
    dataFim?: DateTimeNullableWithAggregatesFilter<"EquipeTurnoHistorico"> | Date | string | null
    inicioTurnoHora?: StringWithAggregatesFilter<"EquipeTurnoHistorico"> | string
    duracaoHoras?: DecimalWithAggregatesFilter<"EquipeTurnoHistorico"> | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalWithAggregatesFilter<"EquipeTurnoHistorico"> | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: StringNullableWithAggregatesFilter<"EquipeTurnoHistorico"> | string | null
    motivo?: StringNullableWithAggregatesFilter<"EquipeTurnoHistorico"> | string | null
    observacoes?: StringNullableWithAggregatesFilter<"EquipeTurnoHistorico"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"EquipeTurnoHistorico"> | Date | string
    createdBy?: StringWithAggregatesFilter<"EquipeTurnoHistorico"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"EquipeTurnoHistorico"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"EquipeTurnoHistorico"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"EquipeTurnoHistorico"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"EquipeTurnoHistorico"> | string | null
  }

  export type SupervisorWhereInput = {
    AND?: SupervisorWhereInput | SupervisorWhereInput[]
    OR?: SupervisorWhereInput[]
    NOT?: SupervisorWhereInput | SupervisorWhereInput[]
    id?: IntFilter<"Supervisor"> | number
    nome?: StringFilter<"Supervisor"> | string
    contratoId?: IntFilter<"Supervisor"> | number
    createdAt?: DateTimeFilter<"Supervisor"> | Date | string
    createdBy?: StringFilter<"Supervisor"> | string
    updatedAt?: DateTimeNullableFilter<"Supervisor"> | Date | string | null
    updatedBy?: StringNullableFilter<"Supervisor"> | string | null
    deletedAt?: DateTimeNullableFilter<"Supervisor"> | Date | string | null
    deletedBy?: StringNullableFilter<"Supervisor"> | string | null
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    EquipeSupervisor?: EquipeSupervisorListRelationFilter
  }

  export type SupervisorOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    contrato?: ContratoOrderByWithRelationInput
    EquipeSupervisor?: EquipeSupervisorOrderByRelationAggregateInput
    _relevance?: SupervisorOrderByRelevanceInput
  }

  export type SupervisorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SupervisorWhereInput | SupervisorWhereInput[]
    OR?: SupervisorWhereInput[]
    NOT?: SupervisorWhereInput | SupervisorWhereInput[]
    nome?: StringFilter<"Supervisor"> | string
    contratoId?: IntFilter<"Supervisor"> | number
    createdAt?: DateTimeFilter<"Supervisor"> | Date | string
    createdBy?: StringFilter<"Supervisor"> | string
    updatedAt?: DateTimeNullableFilter<"Supervisor"> | Date | string | null
    updatedBy?: StringNullableFilter<"Supervisor"> | string | null
    deletedAt?: DateTimeNullableFilter<"Supervisor"> | Date | string | null
    deletedBy?: StringNullableFilter<"Supervisor"> | string | null
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    EquipeSupervisor?: EquipeSupervisorListRelationFilter
  }, "id">

  export type SupervisorOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: SupervisorCountOrderByAggregateInput
    _avg?: SupervisorAvgOrderByAggregateInput
    _max?: SupervisorMaxOrderByAggregateInput
    _min?: SupervisorMinOrderByAggregateInput
    _sum?: SupervisorSumOrderByAggregateInput
  }

  export type SupervisorScalarWhereWithAggregatesInput = {
    AND?: SupervisorScalarWhereWithAggregatesInput | SupervisorScalarWhereWithAggregatesInput[]
    OR?: SupervisorScalarWhereWithAggregatesInput[]
    NOT?: SupervisorScalarWhereWithAggregatesInput | SupervisorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Supervisor"> | number
    nome?: StringWithAggregatesFilter<"Supervisor"> | string
    contratoId?: IntWithAggregatesFilter<"Supervisor"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Supervisor"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Supervisor"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Supervisor"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Supervisor"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Supervisor"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Supervisor"> | string | null
  }

  export type TestWhereInput = {
    AND?: TestWhereInput | TestWhereInput[]
    OR?: TestWhereInput[]
    NOT?: TestWhereInput | TestWhereInput[]
    id?: IntFilter<"Test"> | number
    name?: StringFilter<"Test"> | string
  }

  export type TestOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    _relevance?: TestOrderByRelevanceInput
  }

  export type TestWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TestWhereInput | TestWhereInput[]
    OR?: TestWhereInput[]
    NOT?: TestWhereInput | TestWhereInput[]
    name?: StringFilter<"Test"> | string
  }, "id">

  export type TestOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: TestCountOrderByAggregateInput
    _avg?: TestAvgOrderByAggregateInput
    _max?: TestMaxOrderByAggregateInput
    _min?: TestMinOrderByAggregateInput
    _sum?: TestSumOrderByAggregateInput
  }

  export type TestScalarWhereWithAggregatesInput = {
    AND?: TestScalarWhereWithAggregatesInput | TestScalarWhereWithAggregatesInput[]
    OR?: TestScalarWhereWithAggregatesInput[]
    NOT?: TestScalarWhereWithAggregatesInput | TestScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Test"> | number
    name?: StringWithAggregatesFilter<"Test"> | string
  }

  export type TurnoWhereInput = {
    AND?: TurnoWhereInput | TurnoWhereInput[]
    OR?: TurnoWhereInput[]
    NOT?: TurnoWhereInput | TurnoWhereInput[]
    id?: IntFilter<"Turno"> | number
    dataSolicitacao?: DateTimeFilter<"Turno"> | Date | string
    dataInicio?: DateTimeFilter<"Turno"> | Date | string
    dataFim?: DateTimeNullableFilter<"Turno"> | Date | string | null
    veiculoId?: IntFilter<"Turno"> | number
    equipeId?: IntFilter<"Turno"> | number
    dispositivo?: StringFilter<"Turno"> | string
    kmInicio?: IntFilter<"Turno"> | number
    KmFim?: IntNullableFilter<"Turno"> | number | null
    createdAt?: DateTimeFilter<"Turno"> | Date | string
    createdBy?: StringFilter<"Turno"> | string
    updatedAt?: DateTimeNullableFilter<"Turno"> | Date | string | null
    updatedBy?: StringNullableFilter<"Turno"> | string | null
    deletedAt?: DateTimeNullableFilter<"Turno"> | Date | string | null
    deletedBy?: StringNullableFilter<"Turno"> | string | null
    veiculo?: XOR<VeiculoScalarRelationFilter, VeiculoWhereInput>
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
    TurnoEletricistas?: TurnoEletricistaListRelationFilter
  }

  export type TurnoOrderByWithRelationInput = {
    id?: SortOrder
    dataSolicitacao?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrderInput | SortOrder
    veiculoId?: SortOrder
    equipeId?: SortOrder
    dispositivo?: SortOrder
    kmInicio?: SortOrder
    KmFim?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    veiculo?: VeiculoOrderByWithRelationInput
    equipe?: EquipeOrderByWithRelationInput
    TurnoEletricistas?: TurnoEletricistaOrderByRelationAggregateInput
    _relevance?: TurnoOrderByRelevanceInput
  }

  export type TurnoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TurnoWhereInput | TurnoWhereInput[]
    OR?: TurnoWhereInput[]
    NOT?: TurnoWhereInput | TurnoWhereInput[]
    dataSolicitacao?: DateTimeFilter<"Turno"> | Date | string
    dataInicio?: DateTimeFilter<"Turno"> | Date | string
    dataFim?: DateTimeNullableFilter<"Turno"> | Date | string | null
    veiculoId?: IntFilter<"Turno"> | number
    equipeId?: IntFilter<"Turno"> | number
    dispositivo?: StringFilter<"Turno"> | string
    kmInicio?: IntFilter<"Turno"> | number
    KmFim?: IntNullableFilter<"Turno"> | number | null
    createdAt?: DateTimeFilter<"Turno"> | Date | string
    createdBy?: StringFilter<"Turno"> | string
    updatedAt?: DateTimeNullableFilter<"Turno"> | Date | string | null
    updatedBy?: StringNullableFilter<"Turno"> | string | null
    deletedAt?: DateTimeNullableFilter<"Turno"> | Date | string | null
    deletedBy?: StringNullableFilter<"Turno"> | string | null
    veiculo?: XOR<VeiculoScalarRelationFilter, VeiculoWhereInput>
    equipe?: XOR<EquipeScalarRelationFilter, EquipeWhereInput>
    TurnoEletricistas?: TurnoEletricistaListRelationFilter
  }, "id">

  export type TurnoOrderByWithAggregationInput = {
    id?: SortOrder
    dataSolicitacao?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrderInput | SortOrder
    veiculoId?: SortOrder
    equipeId?: SortOrder
    dispositivo?: SortOrder
    kmInicio?: SortOrder
    KmFim?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: TurnoCountOrderByAggregateInput
    _avg?: TurnoAvgOrderByAggregateInput
    _max?: TurnoMaxOrderByAggregateInput
    _min?: TurnoMinOrderByAggregateInput
    _sum?: TurnoSumOrderByAggregateInput
  }

  export type TurnoScalarWhereWithAggregatesInput = {
    AND?: TurnoScalarWhereWithAggregatesInput | TurnoScalarWhereWithAggregatesInput[]
    OR?: TurnoScalarWhereWithAggregatesInput[]
    NOT?: TurnoScalarWhereWithAggregatesInput | TurnoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Turno"> | number
    dataSolicitacao?: DateTimeWithAggregatesFilter<"Turno"> | Date | string
    dataInicio?: DateTimeWithAggregatesFilter<"Turno"> | Date | string
    dataFim?: DateTimeNullableWithAggregatesFilter<"Turno"> | Date | string | null
    veiculoId?: IntWithAggregatesFilter<"Turno"> | number
    equipeId?: IntWithAggregatesFilter<"Turno"> | number
    dispositivo?: StringWithAggregatesFilter<"Turno"> | string
    kmInicio?: IntWithAggregatesFilter<"Turno"> | number
    KmFim?: IntNullableWithAggregatesFilter<"Turno"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Turno"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Turno"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Turno"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Turno"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Turno"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Turno"> | string | null
  }

  export type TurnoEletricistaWhereInput = {
    AND?: TurnoEletricistaWhereInput | TurnoEletricistaWhereInput[]
    OR?: TurnoEletricistaWhereInput[]
    NOT?: TurnoEletricistaWhereInput | TurnoEletricistaWhereInput[]
    id?: IntFilter<"TurnoEletricista"> | number
    turnoId?: IntFilter<"TurnoEletricista"> | number
    eletricistaId?: IntFilter<"TurnoEletricista"> | number
    createdAt?: DateTimeFilter<"TurnoEletricista"> | Date | string
    createdBy?: StringFilter<"TurnoEletricista"> | string
    updatedAt?: DateTimeNullableFilter<"TurnoEletricista"> | Date | string | null
    updatedBy?: StringNullableFilter<"TurnoEletricista"> | string | null
    deletedAt?: DateTimeNullableFilter<"TurnoEletricista"> | Date | string | null
    deletedBy?: StringNullableFilter<"TurnoEletricista"> | string | null
    turno?: XOR<TurnoScalarRelationFilter, TurnoWhereInput>
    eletricista?: XOR<EletricistaScalarRelationFilter, EletricistaWhereInput>
  }

  export type TurnoEletricistaOrderByWithRelationInput = {
    id?: SortOrder
    turnoId?: SortOrder
    eletricistaId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    turno?: TurnoOrderByWithRelationInput
    eletricista?: EletricistaOrderByWithRelationInput
    _relevance?: TurnoEletricistaOrderByRelevanceInput
  }

  export type TurnoEletricistaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TurnoEletricistaWhereInput | TurnoEletricistaWhereInput[]
    OR?: TurnoEletricistaWhereInput[]
    NOT?: TurnoEletricistaWhereInput | TurnoEletricistaWhereInput[]
    turnoId?: IntFilter<"TurnoEletricista"> | number
    eletricistaId?: IntFilter<"TurnoEletricista"> | number
    createdAt?: DateTimeFilter<"TurnoEletricista"> | Date | string
    createdBy?: StringFilter<"TurnoEletricista"> | string
    updatedAt?: DateTimeNullableFilter<"TurnoEletricista"> | Date | string | null
    updatedBy?: StringNullableFilter<"TurnoEletricista"> | string | null
    deletedAt?: DateTimeNullableFilter<"TurnoEletricista"> | Date | string | null
    deletedBy?: StringNullableFilter<"TurnoEletricista"> | string | null
    turno?: XOR<TurnoScalarRelationFilter, TurnoWhereInput>
    eletricista?: XOR<EletricistaScalarRelationFilter, EletricistaWhereInput>
  }, "id">

  export type TurnoEletricistaOrderByWithAggregationInput = {
    id?: SortOrder
    turnoId?: SortOrder
    eletricistaId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: TurnoEletricistaCountOrderByAggregateInput
    _avg?: TurnoEletricistaAvgOrderByAggregateInput
    _max?: TurnoEletricistaMaxOrderByAggregateInput
    _min?: TurnoEletricistaMinOrderByAggregateInput
    _sum?: TurnoEletricistaSumOrderByAggregateInput
  }

  export type TurnoEletricistaScalarWhereWithAggregatesInput = {
    AND?: TurnoEletricistaScalarWhereWithAggregatesInput | TurnoEletricistaScalarWhereWithAggregatesInput[]
    OR?: TurnoEletricistaScalarWhereWithAggregatesInput[]
    NOT?: TurnoEletricistaScalarWhereWithAggregatesInput | TurnoEletricistaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TurnoEletricista"> | number
    turnoId?: IntWithAggregatesFilter<"TurnoEletricista"> | number
    eletricistaId?: IntWithAggregatesFilter<"TurnoEletricista"> | number
    createdAt?: DateTimeWithAggregatesFilter<"TurnoEletricista"> | Date | string
    createdBy?: StringWithAggregatesFilter<"TurnoEletricista"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TurnoEletricista"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"TurnoEletricista"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"TurnoEletricista"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"TurnoEletricista"> | string | null
  }

  export type VeiculoBaseHistoricoWhereInput = {
    AND?: VeiculoBaseHistoricoWhereInput | VeiculoBaseHistoricoWhereInput[]
    OR?: VeiculoBaseHistoricoWhereInput[]
    NOT?: VeiculoBaseHistoricoWhereInput | VeiculoBaseHistoricoWhereInput[]
    id?: IntFilter<"VeiculoBaseHistorico"> | number
    veiculoId?: IntFilter<"VeiculoBaseHistorico"> | number
    baseId?: IntFilter<"VeiculoBaseHistorico"> | number
    dataInicio?: DateTimeFilter<"VeiculoBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"VeiculoBaseHistorico"> | Date | string | null
    motivo?: StringNullableFilter<"VeiculoBaseHistorico"> | string | null
    createdAt?: DateTimeFilter<"VeiculoBaseHistorico"> | Date | string
    createdBy?: StringFilter<"VeiculoBaseHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"VeiculoBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"VeiculoBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"VeiculoBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"VeiculoBaseHistorico"> | string | null
    veiculo?: XOR<VeiculoScalarRelationFilter, VeiculoWhereInput>
    base?: XOR<BaseScalarRelationFilter, BaseWhereInput>
  }

  export type VeiculoBaseHistoricoOrderByWithRelationInput = {
    id?: SortOrder
    veiculoId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    veiculo?: VeiculoOrderByWithRelationInput
    base?: BaseOrderByWithRelationInput
    _relevance?: VeiculoBaseHistoricoOrderByRelevanceInput
  }

  export type VeiculoBaseHistoricoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VeiculoBaseHistoricoWhereInput | VeiculoBaseHistoricoWhereInput[]
    OR?: VeiculoBaseHistoricoWhereInput[]
    NOT?: VeiculoBaseHistoricoWhereInput | VeiculoBaseHistoricoWhereInput[]
    veiculoId?: IntFilter<"VeiculoBaseHistorico"> | number
    baseId?: IntFilter<"VeiculoBaseHistorico"> | number
    dataInicio?: DateTimeFilter<"VeiculoBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"VeiculoBaseHistorico"> | Date | string | null
    motivo?: StringNullableFilter<"VeiculoBaseHistorico"> | string | null
    createdAt?: DateTimeFilter<"VeiculoBaseHistorico"> | Date | string
    createdBy?: StringFilter<"VeiculoBaseHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"VeiculoBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"VeiculoBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"VeiculoBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"VeiculoBaseHistorico"> | string | null
    veiculo?: XOR<VeiculoScalarRelationFilter, VeiculoWhereInput>
    base?: XOR<BaseScalarRelationFilter, BaseWhereInput>
  }, "id">

  export type VeiculoBaseHistoricoOrderByWithAggregationInput = {
    id?: SortOrder
    veiculoId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: VeiculoBaseHistoricoCountOrderByAggregateInput
    _avg?: VeiculoBaseHistoricoAvgOrderByAggregateInput
    _max?: VeiculoBaseHistoricoMaxOrderByAggregateInput
    _min?: VeiculoBaseHistoricoMinOrderByAggregateInput
    _sum?: VeiculoBaseHistoricoSumOrderByAggregateInput
  }

  export type VeiculoBaseHistoricoScalarWhereWithAggregatesInput = {
    AND?: VeiculoBaseHistoricoScalarWhereWithAggregatesInput | VeiculoBaseHistoricoScalarWhereWithAggregatesInput[]
    OR?: VeiculoBaseHistoricoScalarWhereWithAggregatesInput[]
    NOT?: VeiculoBaseHistoricoScalarWhereWithAggregatesInput | VeiculoBaseHistoricoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"VeiculoBaseHistorico"> | number
    veiculoId?: IntWithAggregatesFilter<"VeiculoBaseHistorico"> | number
    baseId?: IntWithAggregatesFilter<"VeiculoBaseHistorico"> | number
    dataInicio?: DateTimeWithAggregatesFilter<"VeiculoBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableWithAggregatesFilter<"VeiculoBaseHistorico"> | Date | string | null
    motivo?: StringNullableWithAggregatesFilter<"VeiculoBaseHistorico"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"VeiculoBaseHistorico"> | Date | string
    createdBy?: StringWithAggregatesFilter<"VeiculoBaseHistorico"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"VeiculoBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"VeiculoBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"VeiculoBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"VeiculoBaseHistorico"> | string | null
  }

  export type TipoVeiculoWhereInput = {
    AND?: TipoVeiculoWhereInput | TipoVeiculoWhereInput[]
    OR?: TipoVeiculoWhereInput[]
    NOT?: TipoVeiculoWhereInput | TipoVeiculoWhereInput[]
    id?: IntFilter<"TipoVeiculo"> | number
    nome?: StringFilter<"TipoVeiculo"> | string
    createdAt?: DateTimeFilter<"TipoVeiculo"> | Date | string
    createdBy?: StringFilter<"TipoVeiculo"> | string
    updatedAt?: DateTimeNullableFilter<"TipoVeiculo"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoVeiculo"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoVeiculo"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoVeiculo"> | string | null
    Veiculo?: VeiculoListRelationFilter
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoListRelationFilter
  }

  export type TipoVeiculoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    Veiculo?: VeiculoOrderByRelationAggregateInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoOrderByRelationAggregateInput
    _relevance?: TipoVeiculoOrderByRelevanceInput
  }

  export type TipoVeiculoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TipoVeiculoWhereInput | TipoVeiculoWhereInput[]
    OR?: TipoVeiculoWhereInput[]
    NOT?: TipoVeiculoWhereInput | TipoVeiculoWhereInput[]
    nome?: StringFilter<"TipoVeiculo"> | string
    createdAt?: DateTimeFilter<"TipoVeiculo"> | Date | string
    createdBy?: StringFilter<"TipoVeiculo"> | string
    updatedAt?: DateTimeNullableFilter<"TipoVeiculo"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoVeiculo"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoVeiculo"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoVeiculo"> | string | null
    Veiculo?: VeiculoListRelationFilter
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoListRelationFilter
  }, "id">

  export type TipoVeiculoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: TipoVeiculoCountOrderByAggregateInput
    _avg?: TipoVeiculoAvgOrderByAggregateInput
    _max?: TipoVeiculoMaxOrderByAggregateInput
    _min?: TipoVeiculoMinOrderByAggregateInput
    _sum?: TipoVeiculoSumOrderByAggregateInput
  }

  export type TipoVeiculoScalarWhereWithAggregatesInput = {
    AND?: TipoVeiculoScalarWhereWithAggregatesInput | TipoVeiculoScalarWhereWithAggregatesInput[]
    OR?: TipoVeiculoScalarWhereWithAggregatesInput[]
    NOT?: TipoVeiculoScalarWhereWithAggregatesInput | TipoVeiculoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoVeiculo"> | number
    nome?: StringWithAggregatesFilter<"TipoVeiculo"> | string
    createdAt?: DateTimeWithAggregatesFilter<"TipoVeiculo"> | Date | string
    createdBy?: StringWithAggregatesFilter<"TipoVeiculo"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TipoVeiculo"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"TipoVeiculo"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"TipoVeiculo"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"TipoVeiculo"> | string | null
  }

  export type VeiculoWhereInput = {
    AND?: VeiculoWhereInput | VeiculoWhereInput[]
    OR?: VeiculoWhereInput[]
    NOT?: VeiculoWhereInput | VeiculoWhereInput[]
    id?: IntFilter<"Veiculo"> | number
    placa?: StringFilter<"Veiculo"> | string
    modelo?: StringFilter<"Veiculo"> | string
    ano?: IntFilter<"Veiculo"> | number
    tipoVeiculoId?: IntFilter<"Veiculo"> | number
    contratoId?: IntFilter<"Veiculo"> | number
    createdAt?: DateTimeFilter<"Veiculo"> | Date | string
    createdBy?: StringFilter<"Veiculo"> | string
    updatedAt?: DateTimeNullableFilter<"Veiculo"> | Date | string | null
    updatedBy?: StringNullableFilter<"Veiculo"> | string | null
    deletedAt?: DateTimeNullableFilter<"Veiculo"> | Date | string | null
    deletedBy?: StringNullableFilter<"Veiculo"> | string | null
    tipoVeiculo?: XOR<TipoVeiculoScalarRelationFilter, TipoVeiculoWhereInput>
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    VeiculoOdometro?: VeiculoOdometroListRelationFilter
    VeiculoBaseHistorico?: VeiculoBaseHistoricoListRelationFilter
    Turno?: TurnoListRelationFilter
  }

  export type VeiculoOrderByWithRelationInput = {
    id?: SortOrder
    placa?: SortOrder
    modelo?: SortOrder
    ano?: SortOrder
    tipoVeiculoId?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    tipoVeiculo?: TipoVeiculoOrderByWithRelationInput
    contrato?: ContratoOrderByWithRelationInput
    VeiculoOdometro?: VeiculoOdometroOrderByRelationAggregateInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoOrderByRelationAggregateInput
    Turno?: TurnoOrderByRelationAggregateInput
    _relevance?: VeiculoOrderByRelevanceInput
  }

  export type VeiculoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VeiculoWhereInput | VeiculoWhereInput[]
    OR?: VeiculoWhereInput[]
    NOT?: VeiculoWhereInput | VeiculoWhereInput[]
    placa?: StringFilter<"Veiculo"> | string
    modelo?: StringFilter<"Veiculo"> | string
    ano?: IntFilter<"Veiculo"> | number
    tipoVeiculoId?: IntFilter<"Veiculo"> | number
    contratoId?: IntFilter<"Veiculo"> | number
    createdAt?: DateTimeFilter<"Veiculo"> | Date | string
    createdBy?: StringFilter<"Veiculo"> | string
    updatedAt?: DateTimeNullableFilter<"Veiculo"> | Date | string | null
    updatedBy?: StringNullableFilter<"Veiculo"> | string | null
    deletedAt?: DateTimeNullableFilter<"Veiculo"> | Date | string | null
    deletedBy?: StringNullableFilter<"Veiculo"> | string | null
    tipoVeiculo?: XOR<TipoVeiculoScalarRelationFilter, TipoVeiculoWhereInput>
    contrato?: XOR<ContratoScalarRelationFilter, ContratoWhereInput>
    VeiculoOdometro?: VeiculoOdometroListRelationFilter
    VeiculoBaseHistorico?: VeiculoBaseHistoricoListRelationFilter
    Turno?: TurnoListRelationFilter
  }, "id">

  export type VeiculoOrderByWithAggregationInput = {
    id?: SortOrder
    placa?: SortOrder
    modelo?: SortOrder
    ano?: SortOrder
    tipoVeiculoId?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: VeiculoCountOrderByAggregateInput
    _avg?: VeiculoAvgOrderByAggregateInput
    _max?: VeiculoMaxOrderByAggregateInput
    _min?: VeiculoMinOrderByAggregateInput
    _sum?: VeiculoSumOrderByAggregateInput
  }

  export type VeiculoScalarWhereWithAggregatesInput = {
    AND?: VeiculoScalarWhereWithAggregatesInput | VeiculoScalarWhereWithAggregatesInput[]
    OR?: VeiculoScalarWhereWithAggregatesInput[]
    NOT?: VeiculoScalarWhereWithAggregatesInput | VeiculoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Veiculo"> | number
    placa?: StringWithAggregatesFilter<"Veiculo"> | string
    modelo?: StringWithAggregatesFilter<"Veiculo"> | string
    ano?: IntWithAggregatesFilter<"Veiculo"> | number
    tipoVeiculoId?: IntWithAggregatesFilter<"Veiculo"> | number
    contratoId?: IntWithAggregatesFilter<"Veiculo"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Veiculo"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Veiculo"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Veiculo"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Veiculo"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Veiculo"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Veiculo"> | string | null
  }

  export type VeiculoOdometroWhereInput = {
    AND?: VeiculoOdometroWhereInput | VeiculoOdometroWhereInput[]
    OR?: VeiculoOdometroWhereInput[]
    NOT?: VeiculoOdometroWhereInput | VeiculoOdometroWhereInput[]
    id?: IntFilter<"VeiculoOdometro"> | number
    valor?: IntFilter<"VeiculoOdometro"> | number
    data?: DateTimeFilter<"VeiculoOdometro"> | Date | string
    veiculoId?: IntFilter<"VeiculoOdometro"> | number
    createdAt?: DateTimeFilter<"VeiculoOdometro"> | Date | string
    createdBy?: StringFilter<"VeiculoOdometro"> | string
    updatedAt?: DateTimeNullableFilter<"VeiculoOdometro"> | Date | string | null
    updatedBy?: StringNullableFilter<"VeiculoOdometro"> | string | null
    deletedAt?: DateTimeNullableFilter<"VeiculoOdometro"> | Date | string | null
    deletedBy?: StringNullableFilter<"VeiculoOdometro"> | string | null
    veiculo?: XOR<VeiculoScalarRelationFilter, VeiculoWhereInput>
  }

  export type VeiculoOdometroOrderByWithRelationInput = {
    id?: SortOrder
    valor?: SortOrder
    data?: SortOrder
    veiculoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    veiculo?: VeiculoOrderByWithRelationInput
    _relevance?: VeiculoOdometroOrderByRelevanceInput
  }

  export type VeiculoOdometroWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VeiculoOdometroWhereInput | VeiculoOdometroWhereInput[]
    OR?: VeiculoOdometroWhereInput[]
    NOT?: VeiculoOdometroWhereInput | VeiculoOdometroWhereInput[]
    valor?: IntFilter<"VeiculoOdometro"> | number
    data?: DateTimeFilter<"VeiculoOdometro"> | Date | string
    veiculoId?: IntFilter<"VeiculoOdometro"> | number
    createdAt?: DateTimeFilter<"VeiculoOdometro"> | Date | string
    createdBy?: StringFilter<"VeiculoOdometro"> | string
    updatedAt?: DateTimeNullableFilter<"VeiculoOdometro"> | Date | string | null
    updatedBy?: StringNullableFilter<"VeiculoOdometro"> | string | null
    deletedAt?: DateTimeNullableFilter<"VeiculoOdometro"> | Date | string | null
    deletedBy?: StringNullableFilter<"VeiculoOdometro"> | string | null
    veiculo?: XOR<VeiculoScalarRelationFilter, VeiculoWhereInput>
  }, "id">

  export type VeiculoOdometroOrderByWithAggregationInput = {
    id?: SortOrder
    valor?: SortOrder
    data?: SortOrder
    veiculoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: VeiculoOdometroCountOrderByAggregateInput
    _avg?: VeiculoOdometroAvgOrderByAggregateInput
    _max?: VeiculoOdometroMaxOrderByAggregateInput
    _min?: VeiculoOdometroMinOrderByAggregateInput
    _sum?: VeiculoOdometroSumOrderByAggregateInput
  }

  export type VeiculoOdometroScalarWhereWithAggregatesInput = {
    AND?: VeiculoOdometroScalarWhereWithAggregatesInput | VeiculoOdometroScalarWhereWithAggregatesInput[]
    OR?: VeiculoOdometroScalarWhereWithAggregatesInput[]
    NOT?: VeiculoOdometroScalarWhereWithAggregatesInput | VeiculoOdometroScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"VeiculoOdometro"> | number
    valor?: IntWithAggregatesFilter<"VeiculoOdometro"> | number
    data?: DateTimeWithAggregatesFilter<"VeiculoOdometro"> | Date | string
    veiculoId?: IntWithAggregatesFilter<"VeiculoOdometro"> | number
    createdAt?: DateTimeWithAggregatesFilter<"VeiculoOdometro"> | Date | string
    createdBy?: StringWithAggregatesFilter<"VeiculoOdometro"> | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"VeiculoOdometro"> | Date | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"VeiculoOdometro"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"VeiculoOdometro"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"VeiculoOdometro"> | string | null
  }

  export type AprCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoCreateNestedManyWithoutAprInput
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoCreateNestedManyWithoutAprInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoCreateNestedManyWithoutAprInput
  }

  export type AprUncheckedCreateInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUncheckedCreateNestedManyWithoutAprInput
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutAprInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUncheckedCreateNestedManyWithoutAprInput
  }

  export type AprUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUpdateManyWithoutAprNestedInput
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUpdateManyWithoutAprNestedInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUpdateManyWithoutAprNestedInput
  }

  export type AprUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUncheckedUpdateManyWithoutAprNestedInput
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUncheckedUpdateManyWithoutAprNestedInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUncheckedUpdateManyWithoutAprNestedInput
  }

  export type AprCreateManyInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprPerguntaCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoCreateNestedManyWithoutAprPerguntaInput
  }

  export type AprPerguntaUncheckedCreateInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUncheckedCreateNestedManyWithoutAprPerguntaInput
  }

  export type AprPerguntaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUpdateManyWithoutAprPerguntaNestedInput
  }

  export type AprPerguntaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUncheckedUpdateManyWithoutAprPerguntaNestedInput
  }

  export type AprPerguntaCreateManyInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprPerguntaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprPerguntaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprPerguntaRelacaoCreateInput = {
    ordem?: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    aprPergunta: AprPerguntaCreateNestedOneWithoutAprPerguntaRelacaoInput
    apr: AprCreateNestedOneWithoutAprPerguntaRelacaoInput
  }

  export type AprPerguntaRelacaoUncheckedCreateInput = {
    id?: number
    aprPerguntaId: number
    ordem?: number
    aprId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprPerguntaRelacaoUpdateInput = {
    ordem?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    aprPergunta?: AprPerguntaUpdateOneRequiredWithoutAprPerguntaRelacaoNestedInput
    apr?: AprUpdateOneRequiredWithoutAprPerguntaRelacaoNestedInput
  }

  export type AprPerguntaRelacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprPerguntaId?: IntFieldUpdateOperationsInput | number
    ordem?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprPerguntaRelacaoCreateManyInput = {
    id?: number
    aprPerguntaId: number
    ordem?: number
    aprId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprPerguntaRelacaoUpdateManyMutationInput = {
    ordem?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprPerguntaRelacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprPerguntaId?: IntFieldUpdateOperationsInput | number
    ordem?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprOpcaoRespostaCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoCreateNestedManyWithoutAprOpcaoRespostaInput
  }

  export type AprOpcaoRespostaUncheckedCreateInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutAprOpcaoRespostaInput
  }

  export type AprOpcaoRespostaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUpdateManyWithoutAprOpcaoRespostaNestedInput
  }

  export type AprOpcaoRespostaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUncheckedUpdateManyWithoutAprOpcaoRespostaNestedInput
  }

  export type AprOpcaoRespostaCreateManyInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprOpcaoRespostaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprOpcaoRespostaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprOpcaoRespostaRelacaoCreateInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    aprOpcaoResposta: AprOpcaoRespostaCreateNestedOneWithoutAprOpcaoRespostaRelacaoInput
    apr: AprCreateNestedOneWithoutAprOpcaoRespostaRelacaoInput
  }

  export type AprOpcaoRespostaRelacaoUncheckedCreateInput = {
    id?: number
    aprOpcaoRespostaId: number
    aprId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprOpcaoRespostaRelacaoUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    aprOpcaoResposta?: AprOpcaoRespostaUpdateOneRequiredWithoutAprOpcaoRespostaRelacaoNestedInput
    apr?: AprUpdateOneRequiredWithoutAprOpcaoRespostaRelacaoNestedInput
  }

  export type AprOpcaoRespostaRelacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprOpcaoRespostaId?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprOpcaoRespostaRelacaoCreateManyInput = {
    id?: number
    aprOpcaoRespostaId: number
    aprId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprOpcaoRespostaRelacaoUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprOpcaoRespostaRelacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprOpcaoRespostaId?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprTipoAtividadeRelacaoCreateInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    apr: AprCreateNestedOneWithoutAprTipoAtividadeRelacaoInput
    tipoAtividade: TipoAtividadeCreateNestedOneWithoutAprTipoAtividadeRelacaoInput
  }

  export type AprTipoAtividadeRelacaoUncheckedCreateInput = {
    id?: number
    aprId: number
    tipoAtividadeId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprTipoAtividadeRelacaoUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    apr?: AprUpdateOneRequiredWithoutAprTipoAtividadeRelacaoNestedInput
    tipoAtividade?: TipoAtividadeUpdateOneRequiredWithoutAprTipoAtividadeRelacaoNestedInput
  }

  export type AprTipoAtividadeRelacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    tipoAtividadeId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprTipoAtividadeRelacaoCreateManyInput = {
    id?: number
    aprId: number
    tipoAtividadeId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprTipoAtividadeRelacaoUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprTipoAtividadeRelacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    tipoAtividadeId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoAtividadeCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoCreateNestedManyWithoutTipoAtividadeInput
  }

  export type TipoAtividadeUncheckedCreateInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUncheckedCreateNestedManyWithoutTipoAtividadeInput
  }

  export type TipoAtividadeUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUpdateManyWithoutTipoAtividadeNestedInput
  }

  export type TipoAtividadeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUncheckedUpdateManyWithoutTipoAtividadeNestedInput
  }

  export type TipoAtividadeCreateManyInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoAtividadeUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoAtividadeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MobileUserCreateInput = {
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    mobileSession?: MobileSessionCreateNestedManyWithoutMobileUserInput
    MobileToken?: MobileTokenCreateNestedManyWithoutMobileUserInput
    MobileContratoPermissao?: MobileContratoPermissaoCreateNestedManyWithoutMobileUserInput
  }

  export type MobileUserUncheckedCreateInput = {
    id?: number
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    mobileSession?: MobileSessionUncheckedCreateNestedManyWithoutMobileUserInput
    MobileToken?: MobileTokenUncheckedCreateNestedManyWithoutMobileUserInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedCreateNestedManyWithoutMobileUserInput
  }

  export type MobileUserUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    mobileSession?: MobileSessionUpdateManyWithoutMobileUserNestedInput
    MobileToken?: MobileTokenUpdateManyWithoutMobileUserNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUpdateManyWithoutMobileUserNestedInput
  }

  export type MobileUserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    mobileSession?: MobileSessionUncheckedUpdateManyWithoutMobileUserNestedInput
    MobileToken?: MobileTokenUncheckedUpdateManyWithoutMobileUserNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedUpdateManyWithoutMobileUserNestedInput
  }

  export type MobileUserCreateManyInput = {
    id?: number
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type MobileUserUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MobileUserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MobileSessionCreateInput = {
    id?: string
    deviceInfo?: string | null
    lastActive?: Date | string
    createdAt?: Date | string
    expiresAt: Date | string
    ativa?: boolean
    mobileUser: MobileUserCreateNestedOneWithoutMobileSessionInput
  }

  export type MobileSessionUncheckedCreateInput = {
    id?: string
    deviceInfo?: string | null
    lastActive?: Date | string
    createdAt?: Date | string
    expiresAt: Date | string
    ativa?: boolean
    mobileUserId: number
  }

  export type MobileSessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableStringFieldUpdateOperationsInput | string | null
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ativa?: BoolFieldUpdateOperationsInput | boolean
    mobileUser?: MobileUserUpdateOneRequiredWithoutMobileSessionNestedInput
  }

  export type MobileSessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableStringFieldUpdateOperationsInput | string | null
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ativa?: BoolFieldUpdateOperationsInput | boolean
    mobileUserId?: IntFieldUpdateOperationsInput | number
  }

  export type MobileSessionCreateManyInput = {
    id?: string
    deviceInfo?: string | null
    lastActive?: Date | string
    createdAt?: Date | string
    expiresAt: Date | string
    ativa?: boolean
    mobileUserId: number
  }

  export type MobileSessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableStringFieldUpdateOperationsInput | string | null
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ativa?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MobileSessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableStringFieldUpdateOperationsInput | string | null
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ativa?: BoolFieldUpdateOperationsInput | boolean
    mobileUserId?: IntFieldUpdateOperationsInput | number
  }

  export type MobileTokenCreateInput = {
    token: string
    refreshToken?: string | null
    refreshTokenExpiresAt?: Date | string | null
    usuarioMobileId: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    revoked?: boolean
    mobileUser: MobileUserCreateNestedOneWithoutMobileTokenInput
  }

  export type MobileTokenUncheckedCreateInput = {
    id?: number
    token: string
    refreshToken?: string | null
    refreshTokenExpiresAt?: Date | string | null
    usuarioMobileId: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    revoked?: boolean
    mobileUserId: number
  }

  export type MobileTokenUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioMobileId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    mobileUser?: MobileUserUpdateOneRequiredWithoutMobileTokenNestedInput
  }

  export type MobileTokenUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioMobileId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    mobileUserId?: IntFieldUpdateOperationsInput | number
  }

  export type MobileTokenCreateManyInput = {
    id?: number
    token: string
    refreshToken?: string | null
    refreshTokenExpiresAt?: Date | string | null
    usuarioMobileId: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    revoked?: boolean
    mobileUserId: number
  }

  export type MobileTokenUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioMobileId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MobileTokenUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioMobileId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    mobileUserId?: IntFieldUpdateOperationsInput | number
  }

  export type UserCreateInput = {
    nome: string
    email: string
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Session?: SessionCreateNestedManyWithoutUserInput
    Account?: AccountCreateNestedManyWithoutUserInput
    RoleUser?: RoleUserCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    nome: string
    email: string
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Session?: SessionUncheckedCreateNestedManyWithoutUserInput
    Account?: AccountUncheckedCreateNestedManyWithoutUserInput
    RoleUser?: RoleUserUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Session?: SessionUpdateManyWithoutUserNestedInput
    Account?: AccountUpdateManyWithoutUserNestedInput
    RoleUser?: RoleUserUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Session?: SessionUncheckedUpdateManyWithoutUserNestedInput
    Account?: AccountUncheckedUpdateManyWithoutUserNestedInput
    RoleUser?: RoleUserUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    nome: string
    email: string
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type UserUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountCreateInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    user: UserCreateNestedOneWithoutAccountInput
  }

  export type AccountUncheckedCreateInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    userId: number
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type AccountCreateManyInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    userId: number
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type SessionCreateInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    user: UserCreateNestedOneWithoutSessionInput
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    userId: number
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type SessionCreateManyInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    userId: number
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type VerificationTokenCreateInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUncheckedCreateInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateManyInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateManyMutationInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateManyInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    RoleUser?: RoleUserCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    RoleUser?: RoleUserUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    RoleUser?: RoleUserUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    RoleUser?: RoleUserUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
  }

  export type RoleUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RoleUserCreateInput = {
    user: UserCreateNestedOneWithoutRoleUserInput
    role: RoleCreateNestedOneWithoutRoleUserInput
  }

  export type RoleUserUncheckedCreateInput = {
    id?: number
    userId: number
    roleId: number
  }

  export type RoleUserUpdateInput = {
    user?: UserUpdateOneRequiredWithoutRoleUserNestedInput
    role?: RoleUpdateOneRequiredWithoutRoleUserNestedInput
  }

  export type RoleUserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type RoleUserCreateManyInput = {
    id?: number
    userId: number
    roleId: number
  }

  export type RoleUserUpdateManyMutationInput = {

  }

  export type RoleUserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type BaseCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutBaseInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoCreateNestedManyWithoutBaseInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoCreateNestedManyWithoutBaseInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutBaseInput
  }

  export type BaseUncheckedCreateInput = {
    id?: number
    nome: string
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
  }

  export type BaseUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutBaseNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUpdateManyWithoutBaseNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUpdateManyWithoutBaseNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutBaseNestedInput
  }

  export type BaseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
  }

  export type BaseCreateManyInput = {
    id?: number
    nome: string
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type BaseUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BaseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoChecklistCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Checklist?: ChecklistCreateNestedManyWithoutTipoChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoCreateNestedManyWithoutTipoChecklistInput
  }

  export type TipoChecklistUncheckedCreateInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Checklist?: ChecklistUncheckedCreateNestedManyWithoutTipoChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutTipoChecklistInput
  }

  export type TipoChecklistUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Checklist?: ChecklistUpdateManyWithoutTipoChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUpdateManyWithoutTipoChecklistNestedInput
  }

  export type TipoChecklistUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Checklist?: ChecklistUncheckedUpdateManyWithoutTipoChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutTipoChecklistNestedInput
  }

  export type TipoChecklistCreateManyInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoChecklistUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoChecklistUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoChecklist: TipoChecklistCreateNestedOneWithoutChecklistInput
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistUncheckedCreateInput = {
    id?: number
    nome: string
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoChecklist?: TipoChecklistUpdateOneRequiredWithoutChecklistNestedInput
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUpdateManyWithoutChecklistNestedInput
  }

  export type ChecklistUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
  }

  export type ChecklistCreateManyInput = {
    id?: number
    nome: string
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistPerguntaCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoCreateNestedManyWithoutChecklistPerguntaInput
  }

  export type ChecklistPerguntaUncheckedCreateInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedCreateNestedManyWithoutChecklistPerguntaInput
  }

  export type ChecklistPerguntaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUpdateManyWithoutChecklistPerguntaNestedInput
  }

  export type ChecklistPerguntaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistPerguntaNestedInput
  }

  export type ChecklistPerguntaCreateManyInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistPerguntaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistPerguntaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistPerguntaRelacaoCreateInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklistPergunta: ChecklistPerguntaCreateNestedOneWithoutChecklistPerguntaRelacaoInput
    checklist: ChecklistCreateNestedOneWithoutChecklistPerguntaRelacaoInput
  }

  export type ChecklistPerguntaRelacaoUncheckedCreateInput = {
    id?: number
    checklistPerguntaId: number
    checklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistPerguntaRelacaoUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklistPergunta?: ChecklistPerguntaUpdateOneRequiredWithoutChecklistPerguntaRelacaoNestedInput
    checklist?: ChecklistUpdateOneRequiredWithoutChecklistPerguntaRelacaoNestedInput
  }

  export type ChecklistPerguntaRelacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistPerguntaId?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistPerguntaRelacaoCreateManyInput = {
    id?: number
    checklistPerguntaId: number
    checklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistPerguntaRelacaoUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistPerguntaRelacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistPerguntaId?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistOpcaoRespostaCreateInput = {
    nome: string
    geraPendencia?: boolean
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoCreateNestedManyWithoutChecklistOpcaoRespostaInput
  }

  export type ChecklistOpcaoRespostaUncheckedCreateInput = {
    id?: number
    nome: string
    geraPendencia?: boolean
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutChecklistOpcaoRespostaInput
  }

  export type ChecklistOpcaoRespostaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    geraPendencia?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUpdateManyWithoutChecklistOpcaoRespostaNestedInput
  }

  export type ChecklistOpcaoRespostaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    geraPendencia?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistOpcaoRespostaNestedInput
  }

  export type ChecklistOpcaoRespostaCreateManyInput = {
    id?: number
    nome: string
    geraPendencia?: boolean
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistOpcaoRespostaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    geraPendencia?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistOpcaoRespostaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    geraPendencia?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistOpcaoRespostaRelacaoCreateInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklistOpcaoResposta: ChecklistOpcaoRespostaCreateNestedOneWithoutChecklistOpcaoRespostaRelacaoInput
    checklist: ChecklistCreateNestedOneWithoutChecklistOpcaoRespostaRelacaoInput
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedCreateInput = {
    id?: number
    checklistOpcaoRespostaId: number
    checklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistOpcaoRespostaRelacaoUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklistOpcaoResposta?: ChecklistOpcaoRespostaUpdateOneRequiredWithoutChecklistOpcaoRespostaRelacaoNestedInput
    checklist?: ChecklistUpdateOneRequiredWithoutChecklistOpcaoRespostaRelacaoNestedInput
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistOpcaoRespostaId?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistOpcaoRespostaRelacaoCreateManyInput = {
    id?: number
    checklistOpcaoRespostaId: number
    checklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistOpcaoRespostaRelacaoUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistOpcaoRespostaId?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoVeiculoRelacaoCreateInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklist: ChecklistCreateNestedOneWithoutChecklistTipoVeiculoRelacaoInput
    tipoVeiculo: TipoVeiculoCreateNestedOneWithoutChecklistTipoVeiculoRelacaoInput
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedCreateInput = {
    id?: number
    checklistId: number
    tipoVeiculoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoVeiculoRelacaoUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklist?: ChecklistUpdateOneRequiredWithoutChecklistTipoVeiculoRelacaoNestedInput
    tipoVeiculo?: TipoVeiculoUpdateOneRequiredWithoutChecklistTipoVeiculoRelacaoNestedInput
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoVeiculoRelacaoCreateManyInput = {
    id?: number
    checklistId: number
    tipoVeiculoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoVeiculoRelacaoUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoEquipeRelacaoCreateInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklist: ChecklistCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput
    tipoEquipe: TipoEquipeCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput
    tipoChecklist: TipoChecklistCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput
  }

  export type ChecklistTipoEquipeRelacaoUncheckedCreateInput = {
    id?: number
    checklistId: number
    tipoEquipeId: number
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoEquipeRelacaoUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklist?: ChecklistUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput
    tipoChecklist?: TipoChecklistUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoEquipeRelacaoCreateManyInput = {
    id?: number
    checklistId: number
    tipoEquipeId: number
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoEquipeRelacaoUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContratoCreateInput = {
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoCreateNestedManyWithoutContratoInput
    Eletricista?: EletricistaCreateNestedManyWithoutContratoInput
    Equipe?: EquipeCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoCreateNestedManyWithoutContratoInput
    Base?: BaseCreateNestedManyWithoutContratoInput
  }

  export type ContratoUncheckedCreateInput = {
    id?: number
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoUncheckedCreateNestedManyWithoutContratoInput
    Eletricista?: EletricistaUncheckedCreateNestedManyWithoutContratoInput
    Equipe?: EquipeUncheckedCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorUncheckedCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedCreateNestedManyWithoutContratoInput
    Base?: BaseUncheckedCreateNestedManyWithoutContratoInput
  }

  export type ContratoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUpdateManyWithoutContratoNestedInput
    Eletricista?: EletricistaUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUpdateManyWithoutContratoNestedInput
    Base?: BaseUpdateManyWithoutContratoNestedInput
  }

  export type ContratoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUncheckedUpdateManyWithoutContratoNestedInput
    Eletricista?: EletricistaUncheckedUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUncheckedUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUncheckedUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedUpdateManyWithoutContratoNestedInput
    Base?: BaseUncheckedUpdateManyWithoutContratoNestedInput
  }

  export type ContratoCreateManyInput = {
    id?: number
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ContratoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContratoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MobileContratoPermissaoCreateInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutMobileContratoPermissaoInput
    mobileUser: MobileUserCreateNestedOneWithoutMobileContratoPermissaoInput
  }

  export type MobileContratoPermissaoUncheckedCreateInput = {
    id?: number
    contratoId: number
    mobileUserId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type MobileContratoPermissaoUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutMobileContratoPermissaoNestedInput
    mobileUser?: MobileUserUpdateOneRequiredWithoutMobileContratoPermissaoNestedInput
  }

  export type MobileContratoPermissaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    mobileUserId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MobileContratoPermissaoCreateManyInput = {
    id?: number
    contratoId: number
    mobileUserId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type MobileContratoPermissaoUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MobileContratoPermissaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    mobileUserId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaBaseHistoricoCreateInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    eletricista: EletricistaCreateNestedOneWithoutEletricistaBaseHistoricoInput
    base: BaseCreateNestedOneWithoutEletricistaBaseHistoricoInput
  }

  export type EletricistaBaseHistoricoUncheckedCreateInput = {
    id?: number
    eletricistaId: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EletricistaBaseHistoricoUpdateInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    eletricista?: EletricistaUpdateOneRequiredWithoutEletricistaBaseHistoricoNestedInput
    base?: BaseUpdateOneRequiredWithoutEletricistaBaseHistoricoNestedInput
  }

  export type EletricistaBaseHistoricoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaBaseHistoricoCreateManyInput = {
    id?: number
    eletricistaId: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EletricistaBaseHistoricoUpdateManyMutationInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaBaseHistoricoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaCreateInput = {
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    cargo: CargoCreateNestedOneWithoutEletricistaInput
    contrato: ContratoCreateNestedOneWithoutEletricistaInput
    TurnoEletricistas?: TurnoEletricistaCreateNestedManyWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaCreateNestedManyWithoutEletricistaCobrindoInput
    SlotEscala?: SlotEscalaCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaUncheckedCreateInput = {
    id?: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    cargoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contratoId: number
    TurnoEletricistas?: TurnoEletricistaUncheckedCreateNestedManyWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaUncheckedCreateNestedManyWithoutEletricistaCobrindoInput
    SlotEscala?: SlotEscalaUncheckedCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: CargoUpdateOneRequiredWithoutEletricistaNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEletricistaNestedInput
    TurnoEletricistas?: TurnoEletricistaUpdateManyWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUpdateManyWithoutEletricistaCobrindoNestedInput
    SlotEscala?: SlotEscalaUpdateManyWithoutEletricistaNestedInput
  }

  export type EletricistaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contratoId?: IntFieldUpdateOperationsInput | number
    TurnoEletricistas?: TurnoEletricistaUncheckedUpdateManyWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUncheckedUpdateManyWithoutEletricistaCobrindoNestedInput
    SlotEscala?: SlotEscalaUncheckedUpdateManyWithoutEletricistaNestedInput
  }

  export type EletricistaCreateManyInput = {
    id?: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    cargoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contratoId: number
  }

  export type EletricistaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contratoId?: IntFieldUpdateOperationsInput | number
  }

  export type CargoCreateInput = {
    nome: string
    salarioBase?: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Eletricista?: EletricistaCreateNestedManyWithoutCargoInput
  }

  export type CargoUncheckedCreateInput = {
    id?: number
    nome: string
    salarioBase?: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Eletricista?: EletricistaUncheckedCreateNestedManyWithoutCargoInput
  }

  export type CargoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    salarioBase?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Eletricista?: EletricistaUpdateManyWithoutCargoNestedInput
  }

  export type CargoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    salarioBase?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Eletricista?: EletricistaUncheckedUpdateManyWithoutCargoNestedInput
  }

  export type CargoCreateManyInput = {
    id?: number
    nome: string
    salarioBase?: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type CargoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    salarioBase?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CargoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    salarioBase?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeBaseHistoricoCreateInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutEquipeBaseHistoricoInput
    base: BaseCreateNestedOneWithoutEquipeBaseHistoricoInput
  }

  export type EquipeBaseHistoricoUncheckedCreateInput = {
    id?: number
    equipeId: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeBaseHistoricoUpdateInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutEquipeBaseHistoricoNestedInput
    base?: BaseUpdateOneRequiredWithoutEquipeBaseHistoricoNestedInput
  }

  export type EquipeBaseHistoricoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeBaseHistoricoCreateManyInput = {
    id?: number
    equipeId: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeBaseHistoricoUpdateManyMutationInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeBaseHistoricoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEquipeCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Equipe?: EquipeCreateNestedManyWithoutTipoEquipeInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoCreateNestedManyWithoutTipoEquipeInput
  }

  export type TipoEquipeUncheckedCreateInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Equipe?: EquipeUncheckedCreateNestedManyWithoutTipoEquipeInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutTipoEquipeInput
  }

  export type TipoEquipeUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Equipe?: EquipeUpdateManyWithoutTipoEquipeNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUpdateManyWithoutTipoEquipeNestedInput
  }

  export type TipoEquipeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Equipe?: EquipeUncheckedUpdateManyWithoutTipoEquipeNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutTipoEquipeNestedInput
  }

  export type TipoEquipeCreateManyInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEquipeUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEquipeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEquipe: TipoEquipeCreateNestedOneWithoutEquipeInput
    contrato: ContratoCreateNestedOneWithoutEquipeInput
    EquipeSupervisor?: EquipeSupervisorCreateNestedManyWithoutEquipeInput
    Turno?: TurnoCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutEquipeInput
  }

  export type EquipeUncheckedCreateInput = {
    id?: number
    nome: string
    tipoEquipeId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedCreateNestedManyWithoutEquipeInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutEquipeInput
  }

  export type EquipeUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutEquipeNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEquipeNestedInput
    EquipeSupervisor?: EquipeSupervisorUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeCreateManyInput = {
    id?: number
    nome: string
    tipoEquipeId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeSupervisorCreateInput = {
    inicio: Date | string
    fim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutEquipeSupervisorInput
    supervisor: SupervisorCreateNestedOneWithoutEquipeSupervisorInput
  }

  export type EquipeSupervisorUncheckedCreateInput = {
    id?: number
    equipeId: number
    supervisorId: number
    inicio: Date | string
    fim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeSupervisorUpdateInput = {
    inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutEquipeSupervisorNestedInput
    supervisor?: SupervisorUpdateOneRequiredWithoutEquipeSupervisorNestedInput
  }

  export type EquipeSupervisorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    supervisorId?: IntFieldUpdateOperationsInput | number
    inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeSupervisorCreateManyInput = {
    id?: number
    equipeId: number
    supervisorId: number
    inicio: Date | string
    fim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeSupervisorUpdateManyMutationInput = {
    inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeSupervisorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    supervisorId?: IntFieldUpdateOperationsInput | number
    inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaCreateInput = {
    nome: string
    modoRepeticao: $Enums.ModoRepeticao
    cicloDias?: number | null
    periodicidadeSemanas?: number | null
    eletricistasPorTurma?: number | null
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoCreateNestedManyWithoutTipoEscalaInput
    SemanaMascaras?: TipoEscalaSemanaMascaraCreateNestedManyWithoutTipoEscalaInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutTipoEscalaInput
  }

  export type TipoEscalaUncheckedCreateInput = {
    id?: number
    nome: string
    modoRepeticao: $Enums.ModoRepeticao
    cicloDias?: number | null
    periodicidadeSemanas?: number | null
    eletricistasPorTurma?: number | null
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoUncheckedCreateNestedManyWithoutTipoEscalaInput
    SemanaMascaras?: TipoEscalaSemanaMascaraUncheckedCreateNestedManyWithoutTipoEscalaInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutTipoEscalaInput
  }

  export type TipoEscalaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    modoRepeticao?: EnumModoRepeticaoFieldUpdateOperationsInput | $Enums.ModoRepeticao
    cicloDias?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidadeSemanas?: NullableIntFieldUpdateOperationsInput | number | null
    eletricistasPorTurma?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoUpdateManyWithoutTipoEscalaNestedInput
    SemanaMascaras?: TipoEscalaSemanaMascaraUpdateManyWithoutTipoEscalaNestedInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutTipoEscalaNestedInput
  }

  export type TipoEscalaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    modoRepeticao?: EnumModoRepeticaoFieldUpdateOperationsInput | $Enums.ModoRepeticao
    cicloDias?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidadeSemanas?: NullableIntFieldUpdateOperationsInput | number | null
    eletricistasPorTurma?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoUncheckedUpdateManyWithoutTipoEscalaNestedInput
    SemanaMascaras?: TipoEscalaSemanaMascaraUncheckedUpdateManyWithoutTipoEscalaNestedInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutTipoEscalaNestedInput
  }

  export type TipoEscalaCreateManyInput = {
    id?: number
    nome: string
    modoRepeticao: $Enums.ModoRepeticao
    cicloDias?: number | null
    periodicidadeSemanas?: number | null
    eletricistasPorTurma?: number | null
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    modoRepeticao?: EnumModoRepeticaoFieldUpdateOperationsInput | $Enums.ModoRepeticao
    cicloDias?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidadeSemanas?: NullableIntFieldUpdateOperationsInput | number | null
    eletricistasPorTurma?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    modoRepeticao?: EnumModoRepeticaoFieldUpdateOperationsInput | $Enums.ModoRepeticao
    cicloDias?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidadeSemanas?: NullableIntFieldUpdateOperationsInput | number | null
    eletricistasPorTurma?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaCicloPosicaoCreateInput = {
    posicao: number
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEscala: TipoEscalaCreateNestedOneWithoutCicloPosicoesInput
  }

  export type TipoEscalaCicloPosicaoUncheckedCreateInput = {
    id?: number
    tipoEscalaId: number
    posicao: number
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaCicloPosicaoUpdateInput = {
    posicao?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEscala?: TipoEscalaUpdateOneRequiredWithoutCicloPosicoesNestedInput
  }

  export type TipoEscalaCicloPosicaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoEscalaId?: IntFieldUpdateOperationsInput | number
    posicao?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaCicloPosicaoCreateManyInput = {
    id?: number
    tipoEscalaId: number
    posicao: number
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaCicloPosicaoUpdateManyMutationInput = {
    posicao?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaCicloPosicaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoEscalaId?: IntFieldUpdateOperationsInput | number
    posicao?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaSemanaMascaraCreateInput = {
    semanaIndex: number
    dia: $Enums.DiaSemana
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEscala: TipoEscalaCreateNestedOneWithoutSemanaMascarasInput
  }

  export type TipoEscalaSemanaMascaraUncheckedCreateInput = {
    id?: number
    tipoEscalaId: number
    semanaIndex: number
    dia: $Enums.DiaSemana
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaSemanaMascaraUpdateInput = {
    semanaIndex?: IntFieldUpdateOperationsInput | number
    dia?: EnumDiaSemanaFieldUpdateOperationsInput | $Enums.DiaSemana
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEscala?: TipoEscalaUpdateOneRequiredWithoutSemanaMascarasNestedInput
  }

  export type TipoEscalaSemanaMascaraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoEscalaId?: IntFieldUpdateOperationsInput | number
    semanaIndex?: IntFieldUpdateOperationsInput | number
    dia?: EnumDiaSemanaFieldUpdateOperationsInput | $Enums.DiaSemana
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaSemanaMascaraCreateManyInput = {
    id?: number
    tipoEscalaId: number
    semanaIndex: number
    dia: $Enums.DiaSemana
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaSemanaMascaraUpdateManyMutationInput = {
    semanaIndex?: IntFieldUpdateOperationsInput | number
    dia?: EnumDiaSemanaFieldUpdateOperationsInput | $Enums.DiaSemana
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaSemanaMascaraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoEscalaId?: IntFieldUpdateOperationsInput | number
    semanaIndex?: IntFieldUpdateOperationsInput | number
    dia?: EnumDiaSemanaFieldUpdateOperationsInput | $Enums.DiaSemana
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EscalaEquipePeriodoCreateInput = {
    periodoInicio: Date | string
    periodoFim: Date | string
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutEscalaEquipePeriodoInput
    tipoEscala: TipoEscalaCreateNestedOneWithoutEscalasEquipePeriodoInput
    Slots?: SlotEscalaCreateNestedManyWithoutEscalaEquipePeriodoInput
  }

  export type EscalaEquipePeriodoUncheckedCreateInput = {
    id?: number
    equipeId: number
    periodoInicio: Date | string
    periodoFim: Date | string
    tipoEscalaId: number
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Slots?: SlotEscalaUncheckedCreateNestedManyWithoutEscalaEquipePeriodoInput
  }

  export type EscalaEquipePeriodoUpdateInput = {
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutEscalaEquipePeriodoNestedInput
    tipoEscala?: TipoEscalaUpdateOneRequiredWithoutEscalasEquipePeriodoNestedInput
    Slots?: SlotEscalaUpdateManyWithoutEscalaEquipePeriodoNestedInput
  }

  export type EscalaEquipePeriodoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoEscalaId?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Slots?: SlotEscalaUncheckedUpdateManyWithoutEscalaEquipePeriodoNestedInput
  }

  export type EscalaEquipePeriodoCreateManyInput = {
    id?: number
    equipeId: number
    periodoInicio: Date | string
    periodoFim: Date | string
    tipoEscalaId: number
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EscalaEquipePeriodoUpdateManyMutationInput = {
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EscalaEquipePeriodoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoEscalaId?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SlotEscalaCreateInput = {
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    escalaEquipePeriodo: EscalaEquipePeriodoCreateNestedOneWithoutSlotsInput
    eletricista: EletricistaCreateNestedOneWithoutSlotEscalaInput
    Coberturas?: EventoCoberturaCreateNestedManyWithoutSlotEscalaInput
  }

  export type SlotEscalaUncheckedCreateInput = {
    id?: number
    escalaEquipePeriodoId: number
    eletricistaId: number
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Coberturas?: EventoCoberturaUncheckedCreateNestedManyWithoutSlotEscalaInput
  }

  export type SlotEscalaUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    escalaEquipePeriodo?: EscalaEquipePeriodoUpdateOneRequiredWithoutSlotsNestedInput
    eletricista?: EletricistaUpdateOneRequiredWithoutSlotEscalaNestedInput
    Coberturas?: EventoCoberturaUpdateManyWithoutSlotEscalaNestedInput
  }

  export type SlotEscalaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    escalaEquipePeriodoId?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Coberturas?: EventoCoberturaUncheckedUpdateManyWithoutSlotEscalaNestedInput
  }

  export type SlotEscalaCreateManyInput = {
    id?: number
    escalaEquipePeriodoId: number
    eletricistaId: number
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type SlotEscalaUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SlotEscalaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    escalaEquipePeriodoId?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventoCoberturaCreateInput = {
    tipo: $Enums.EventoCoberturaTipo
    resultado: $Enums.EventoCoberturaResultado
    justificativa?: string | null
    registradoEm?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    slotEscala: SlotEscalaCreateNestedOneWithoutCoberturasInput
    eletricistaCobrindo?: EletricistaCreateNestedOneWithoutEventoCoberturaInput
  }

  export type EventoCoberturaUncheckedCreateInput = {
    id?: number
    slotEscalaId: number
    eletricistaCobrindoId?: number | null
    tipo: $Enums.EventoCoberturaTipo
    resultado: $Enums.EventoCoberturaResultado
    justificativa?: string | null
    registradoEm?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EventoCoberturaUpdateInput = {
    tipo?: EnumEventoCoberturaTipoFieldUpdateOperationsInput | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFieldUpdateOperationsInput | $Enums.EventoCoberturaResultado
    justificativa?: NullableStringFieldUpdateOperationsInput | string | null
    registradoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    slotEscala?: SlotEscalaUpdateOneRequiredWithoutCoberturasNestedInput
    eletricistaCobrindo?: EletricistaUpdateOneWithoutEventoCoberturaNestedInput
  }

  export type EventoCoberturaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    slotEscalaId?: IntFieldUpdateOperationsInput | number
    eletricistaCobrindoId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumEventoCoberturaTipoFieldUpdateOperationsInput | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFieldUpdateOperationsInput | $Enums.EventoCoberturaResultado
    justificativa?: NullableStringFieldUpdateOperationsInput | string | null
    registradoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventoCoberturaCreateManyInput = {
    id?: number
    slotEscalaId: number
    eletricistaCobrindoId?: number | null
    tipo: $Enums.EventoCoberturaTipo
    resultado: $Enums.EventoCoberturaResultado
    justificativa?: string | null
    registradoEm?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EventoCoberturaUpdateManyMutationInput = {
    tipo?: EnumEventoCoberturaTipoFieldUpdateOperationsInput | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFieldUpdateOperationsInput | $Enums.EventoCoberturaResultado
    justificativa?: NullableStringFieldUpdateOperationsInput | string | null
    registradoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventoCoberturaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    slotEscalaId?: IntFieldUpdateOperationsInput | number
    eletricistaCobrindoId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumEventoCoberturaTipoFieldUpdateOperationsInput | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFieldUpdateOperationsInput | $Enums.EventoCoberturaResultado
    justificativa?: NullableStringFieldUpdateOperationsInput | string | null
    registradoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeHorarioVigenciaCreateInput = {
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    vigenciaInicio: Date | string
    vigenciaFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutEquipeHorarioVigenciaInput
  }

  export type EquipeHorarioVigenciaUncheckedCreateInput = {
    id?: number
    equipeId: number
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    vigenciaInicio: Date | string
    vigenciaFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeHorarioVigenciaUpdateInput = {
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    vigenciaFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutEquipeHorarioVigenciaNestedInput
  }

  export type EquipeHorarioVigenciaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    vigenciaFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeHorarioVigenciaCreateManyInput = {
    id?: number
    equipeId: number
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    vigenciaInicio: Date | string
    vigenciaFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeHorarioVigenciaUpdateManyMutationInput = {
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    vigenciaFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeHorarioVigenciaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    vigenciaFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HorarioAberturaCatalogoCreateInput = {
    nome: string
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Historicos?: EquipeTurnoHistoricoCreateNestedManyWithoutHorarioAberturaCatalogoInput
  }

  export type HorarioAberturaCatalogoUncheckedCreateInput = {
    id?: number
    nome: string
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Historicos?: EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutHorarioAberturaCatalogoInput
  }

  export type HorarioAberturaCatalogoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Historicos?: EquipeTurnoHistoricoUpdateManyWithoutHorarioAberturaCatalogoNestedInput
  }

  export type HorarioAberturaCatalogoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Historicos?: EquipeTurnoHistoricoUncheckedUpdateManyWithoutHorarioAberturaCatalogoNestedInput
  }

  export type HorarioAberturaCatalogoCreateManyInput = {
    id?: number
    nome: string
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type HorarioAberturaCatalogoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HorarioAberturaCatalogoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeTurnoHistoricoCreateInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    fimTurnoHora?: string | null
    motivo?: string | null
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutEquipeTurnoHistoricoInput
    horarioAberturaCatalogo?: HorarioAberturaCatalogoCreateNestedOneWithoutHistoricosInput
  }

  export type EquipeTurnoHistoricoUncheckedCreateInput = {
    id?: number
    equipeId: number
    horarioAberturaCatalogoId?: number | null
    dataInicio: Date | string
    dataFim?: Date | string | null
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    fimTurnoHora?: string | null
    motivo?: string | null
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeTurnoHistoricoUpdateInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutEquipeTurnoHistoricoNestedInput
    horarioAberturaCatalogo?: HorarioAberturaCatalogoUpdateOneWithoutHistoricosNestedInput
  }

  export type EquipeTurnoHistoricoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    horarioAberturaCatalogoId?: NullableIntFieldUpdateOperationsInput | number | null
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeTurnoHistoricoCreateManyInput = {
    id?: number
    equipeId: number
    horarioAberturaCatalogoId?: number | null
    dataInicio: Date | string
    dataFim?: Date | string | null
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    fimTurnoHora?: string | null
    motivo?: string | null
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeTurnoHistoricoUpdateManyMutationInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeTurnoHistoricoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    horarioAberturaCatalogoId?: NullableIntFieldUpdateOperationsInput | number | null
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupervisorCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutSupervisorInput
    EquipeSupervisor?: EquipeSupervisorCreateNestedManyWithoutSupervisorInput
  }

  export type SupervisorUncheckedCreateInput = {
    id?: number
    nome: string
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedCreateNestedManyWithoutSupervisorInput
  }

  export type SupervisorUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutSupervisorNestedInput
    EquipeSupervisor?: EquipeSupervisorUpdateManyWithoutSupervisorNestedInput
  }

  export type SupervisorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedUpdateManyWithoutSupervisorNestedInput
  }

  export type SupervisorCreateManyInput = {
    id?: number
    nome: string
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type SupervisorUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupervisorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TestCreateInput = {
    name: string
  }

  export type TestUncheckedCreateInput = {
    id?: number
    name: string
  }

  export type TestUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type TestUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type TestCreateManyInput = {
    id?: number
    name: string
  }

  export type TestUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type TestUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type TurnoCreateInput = {
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    veiculo: VeiculoCreateNestedOneWithoutTurnoInput
    equipe: EquipeCreateNestedOneWithoutTurnoInput
    TurnoEletricistas?: TurnoEletricistaCreateNestedManyWithoutTurnoInput
  }

  export type TurnoUncheckedCreateInput = {
    id?: number
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    veiculoId: number
    equipeId: number
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    TurnoEletricistas?: TurnoEletricistaUncheckedCreateNestedManyWithoutTurnoInput
  }

  export type TurnoUpdateInput = {
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    veiculo?: VeiculoUpdateOneRequiredWithoutTurnoNestedInput
    equipe?: EquipeUpdateOneRequiredWithoutTurnoNestedInput
    TurnoEletricistas?: TurnoEletricistaUpdateManyWithoutTurnoNestedInput
  }

  export type TurnoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veiculoId?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    TurnoEletricistas?: TurnoEletricistaUncheckedUpdateManyWithoutTurnoNestedInput
  }

  export type TurnoCreateManyInput = {
    id?: number
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    veiculoId: number
    equipeId: number
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TurnoUpdateManyMutationInput = {
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TurnoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veiculoId?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TurnoEletricistaCreateInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    turno: TurnoCreateNestedOneWithoutTurnoEletricistasInput
    eletricista: EletricistaCreateNestedOneWithoutTurnoEletricistasInput
  }

  export type TurnoEletricistaUncheckedCreateInput = {
    id?: number
    turnoId: number
    eletricistaId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TurnoEletricistaUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    turno?: TurnoUpdateOneRequiredWithoutTurnoEletricistasNestedInput
    eletricista?: EletricistaUpdateOneRequiredWithoutTurnoEletricistasNestedInput
  }

  export type TurnoEletricistaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    turnoId?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TurnoEletricistaCreateManyInput = {
    id?: number
    turnoId: number
    eletricistaId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TurnoEletricistaUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TurnoEletricistaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    turnoId?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoBaseHistoricoCreateInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    veiculo: VeiculoCreateNestedOneWithoutVeiculoBaseHistoricoInput
    base: BaseCreateNestedOneWithoutVeiculoBaseHistoricoInput
  }

  export type VeiculoBaseHistoricoUncheckedCreateInput = {
    id?: number
    veiculoId: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoBaseHistoricoUpdateInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    veiculo?: VeiculoUpdateOneRequiredWithoutVeiculoBaseHistoricoNestedInput
    base?: BaseUpdateOneRequiredWithoutVeiculoBaseHistoricoNestedInput
  }

  export type VeiculoBaseHistoricoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    veiculoId?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoBaseHistoricoCreateManyInput = {
    id?: number
    veiculoId: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoBaseHistoricoUpdateManyMutationInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoBaseHistoricoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    veiculoId?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoVeiculoCreateInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoCreateNestedManyWithoutTipoVeiculoInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoCreateNestedManyWithoutTipoVeiculoInput
  }

  export type TipoVeiculoUncheckedCreateInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoUncheckedCreateNestedManyWithoutTipoVeiculoInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedCreateNestedManyWithoutTipoVeiculoInput
  }

  export type TipoVeiculoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUpdateManyWithoutTipoVeiculoNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUpdateManyWithoutTipoVeiculoNestedInput
  }

  export type TipoVeiculoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUncheckedUpdateManyWithoutTipoVeiculoNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutTipoVeiculoNestedInput
  }

  export type TipoVeiculoCreateManyInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoVeiculoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoVeiculoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoCreateInput = {
    placa: string
    modelo: string
    ano: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoVeiculo: TipoVeiculoCreateNestedOneWithoutVeiculoInput
    contrato: ContratoCreateNestedOneWithoutVeiculoInput
    VeiculoOdometro?: VeiculoOdometroCreateNestedManyWithoutVeiculoInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoCreateNestedManyWithoutVeiculoInput
    Turno?: TurnoCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoUncheckedCreateInput = {
    id?: number
    placa: string
    modelo: string
    ano: number
    tipoVeiculoId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    VeiculoOdometro?: VeiculoOdometroUncheckedCreateNestedManyWithoutVeiculoInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutVeiculoInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoUpdateInput = {
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoVeiculo?: TipoVeiculoUpdateOneRequiredWithoutVeiculoNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutVeiculoNestedInput
    VeiculoOdometro?: VeiculoOdometroUpdateManyWithoutVeiculoNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUpdateManyWithoutVeiculoNestedInput
    Turno?: TurnoUpdateManyWithoutVeiculoNestedInput
  }

  export type VeiculoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    VeiculoOdometro?: VeiculoOdometroUncheckedUpdateManyWithoutVeiculoNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedUpdateManyWithoutVeiculoNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutVeiculoNestedInput
  }

  export type VeiculoCreateManyInput = {
    id?: number
    placa: string
    modelo: string
    ano: number
    tipoVeiculoId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoUpdateManyMutationInput = {
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoOdometroCreateInput = {
    valor: number
    data: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    veiculo: VeiculoCreateNestedOneWithoutVeiculoOdometroInput
  }

  export type VeiculoOdometroUncheckedCreateInput = {
    id?: number
    valor: number
    data: Date | string
    veiculoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoOdometroUpdateInput = {
    valor?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    veiculo?: VeiculoUpdateOneRequiredWithoutVeiculoOdometroNestedInput
  }

  export type VeiculoOdometroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    valor?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    veiculoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoOdometroCreateManyInput = {
    id?: number
    valor: number
    data: Date | string
    veiculoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoOdometroUpdateManyMutationInput = {
    valor?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoOdometroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    valor?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    veiculoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type AprPerguntaRelacaoListRelationFilter = {
    every?: AprPerguntaRelacaoWhereInput
    some?: AprPerguntaRelacaoWhereInput
    none?: AprPerguntaRelacaoWhereInput
  }

  export type AprOpcaoRespostaRelacaoListRelationFilter = {
    every?: AprOpcaoRespostaRelacaoWhereInput
    some?: AprOpcaoRespostaRelacaoWhereInput
    none?: AprOpcaoRespostaRelacaoWhereInput
  }

  export type AprTipoAtividadeRelacaoListRelationFilter = {
    every?: AprTipoAtividadeRelacaoWhereInput
    some?: AprTipoAtividadeRelacaoWhereInput
    none?: AprTipoAtividadeRelacaoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AprPerguntaRelacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AprOpcaoRespostaRelacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AprTipoAtividadeRelacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AprOrderByRelevanceInput = {
    fields: AprOrderByRelevanceFieldEnum | AprOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AprCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type AprMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type AprPerguntaOrderByRelevanceInput = {
    fields: AprPerguntaOrderByRelevanceFieldEnum | AprPerguntaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AprPerguntaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprPerguntaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type AprPerguntaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprPerguntaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprPerguntaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type AprPerguntaScalarRelationFilter = {
    is?: AprPerguntaWhereInput
    isNot?: AprPerguntaWhereInput
  }

  export type AprScalarRelationFilter = {
    is?: AprWhereInput
    isNot?: AprWhereInput
  }

  export type AprPerguntaRelacaoOrderByRelevanceInput = {
    fields: AprPerguntaRelacaoOrderByRelevanceFieldEnum | AprPerguntaRelacaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AprPerguntaRelacaoCountOrderByAggregateInput = {
    id?: SortOrder
    aprPerguntaId?: SortOrder
    ordem?: SortOrder
    aprId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprPerguntaRelacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    aprPerguntaId?: SortOrder
    ordem?: SortOrder
    aprId?: SortOrder
  }

  export type AprPerguntaRelacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    aprPerguntaId?: SortOrder
    ordem?: SortOrder
    aprId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprPerguntaRelacaoMinOrderByAggregateInput = {
    id?: SortOrder
    aprPerguntaId?: SortOrder
    ordem?: SortOrder
    aprId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprPerguntaRelacaoSumOrderByAggregateInput = {
    id?: SortOrder
    aprPerguntaId?: SortOrder
    ordem?: SortOrder
    aprId?: SortOrder
  }

  export type AprOpcaoRespostaOrderByRelevanceInput = {
    fields: AprOpcaoRespostaOrderByRelevanceFieldEnum | AprOpcaoRespostaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AprOpcaoRespostaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprOpcaoRespostaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type AprOpcaoRespostaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprOpcaoRespostaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprOpcaoRespostaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type AprOpcaoRespostaScalarRelationFilter = {
    is?: AprOpcaoRespostaWhereInput
    isNot?: AprOpcaoRespostaWhereInput
  }

  export type AprOpcaoRespostaRelacaoOrderByRelevanceInput = {
    fields: AprOpcaoRespostaRelacaoOrderByRelevanceFieldEnum | AprOpcaoRespostaRelacaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AprOpcaoRespostaRelacaoCountOrderByAggregateInput = {
    id?: SortOrder
    aprOpcaoRespostaId?: SortOrder
    aprId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprOpcaoRespostaRelacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    aprOpcaoRespostaId?: SortOrder
    aprId?: SortOrder
  }

  export type AprOpcaoRespostaRelacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    aprOpcaoRespostaId?: SortOrder
    aprId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprOpcaoRespostaRelacaoMinOrderByAggregateInput = {
    id?: SortOrder
    aprOpcaoRespostaId?: SortOrder
    aprId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprOpcaoRespostaRelacaoSumOrderByAggregateInput = {
    id?: SortOrder
    aprOpcaoRespostaId?: SortOrder
    aprId?: SortOrder
  }

  export type TipoAtividadeScalarRelationFilter = {
    is?: TipoAtividadeWhereInput
    isNot?: TipoAtividadeWhereInput
  }

  export type AprTipoAtividadeRelacaoOrderByRelevanceInput = {
    fields: AprTipoAtividadeRelacaoOrderByRelevanceFieldEnum | AprTipoAtividadeRelacaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AprTipoAtividadeRelacaoTipoAtividadeIdDeletedAtCompoundUniqueInput = {
    tipoAtividadeId: number
    deletedAt: Date | string
  }

  export type AprTipoAtividadeRelacaoCountOrderByAggregateInput = {
    id?: SortOrder
    aprId?: SortOrder
    tipoAtividadeId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprTipoAtividadeRelacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    aprId?: SortOrder
    tipoAtividadeId?: SortOrder
  }

  export type AprTipoAtividadeRelacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    aprId?: SortOrder
    tipoAtividadeId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprTipoAtividadeRelacaoMinOrderByAggregateInput = {
    id?: SortOrder
    aprId?: SortOrder
    tipoAtividadeId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AprTipoAtividadeRelacaoSumOrderByAggregateInput = {
    id?: SortOrder
    aprId?: SortOrder
    tipoAtividadeId?: SortOrder
  }

  export type TipoAtividadeOrderByRelevanceInput = {
    fields: TipoAtividadeOrderByRelevanceFieldEnum | TipoAtividadeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TipoAtividadeCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoAtividadeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TipoAtividadeMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoAtividadeMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoAtividadeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MobileSessionListRelationFilter = {
    every?: MobileSessionWhereInput
    some?: MobileSessionWhereInput
    none?: MobileSessionWhereInput
  }

  export type MobileTokenListRelationFilter = {
    every?: MobileTokenWhereInput
    some?: MobileTokenWhereInput
    none?: MobileTokenWhereInput
  }

  export type MobileContratoPermissaoListRelationFilter = {
    every?: MobileContratoPermissaoWhereInput
    some?: MobileContratoPermissaoWhereInput
    none?: MobileContratoPermissaoWhereInput
  }

  export type MobileSessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MobileTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MobileContratoPermissaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MobileUserOrderByRelevanceInput = {
    fields: MobileUserOrderByRelevanceFieldEnum | MobileUserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MobileUserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type MobileUserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MobileUserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type MobileUserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type MobileUserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type MobileUserScalarRelationFilter = {
    is?: MobileUserWhereInput
    isNot?: MobileUserWhereInput
  }

  export type MobileSessionOrderByRelevanceInput = {
    fields: MobileSessionOrderByRelevanceFieldEnum | MobileSessionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MobileSessionCountOrderByAggregateInput = {
    id?: SortOrder
    deviceInfo?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    ativa?: SortOrder
    mobileUserId?: SortOrder
  }

  export type MobileSessionAvgOrderByAggregateInput = {
    mobileUserId?: SortOrder
  }

  export type MobileSessionMaxOrderByAggregateInput = {
    id?: SortOrder
    deviceInfo?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    ativa?: SortOrder
    mobileUserId?: SortOrder
  }

  export type MobileSessionMinOrderByAggregateInput = {
    id?: SortOrder
    deviceInfo?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    ativa?: SortOrder
    mobileUserId?: SortOrder
  }

  export type MobileSessionSumOrderByAggregateInput = {
    mobileUserId?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type MobileTokenOrderByRelevanceInput = {
    fields: MobileTokenOrderByRelevanceFieldEnum | MobileTokenOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MobileTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    refreshToken?: SortOrder
    refreshTokenExpiresAt?: SortOrder
    usuarioMobileId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    revoked?: SortOrder
    mobileUserId?: SortOrder
  }

  export type MobileTokenAvgOrderByAggregateInput = {
    id?: SortOrder
    mobileUserId?: SortOrder
  }

  export type MobileTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    refreshToken?: SortOrder
    refreshTokenExpiresAt?: SortOrder
    usuarioMobileId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    revoked?: SortOrder
    mobileUserId?: SortOrder
  }

  export type MobileTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    refreshToken?: SortOrder
    refreshTokenExpiresAt?: SortOrder
    usuarioMobileId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    revoked?: SortOrder
    mobileUserId?: SortOrder
  }

  export type MobileTokenSumOrderByAggregateInput = {
    id?: SortOrder
    mobileUserId?: SortOrder
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type RoleUserListRelationFilter = {
    every?: RoleUserWhereInput
    some?: RoleUserWhereInput
    none?: RoleUserWhereInput
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleUserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    username?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type AccountOrderByRelevanceInput = {
    fields: AccountOrderByRelevanceFieldEnum | AccountOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AccountProviderProviderAccountIdCompoundUniqueInput = {
    provider: string
    providerAccountId: string
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    userId?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    expires_at?: SortOrder
    userId?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    userId?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    userId?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    expires_at?: SortOrder
    userId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type SessionOrderByRelevanceInput = {
    fields: SessionOrderByRelevanceFieldEnum | SessionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    expires?: SortOrder
    userId?: SortOrder
  }

  export type SessionAvgOrderByAggregateInput = {
    userId?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    expires?: SortOrder
    userId?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    expires?: SortOrder
    userId?: SortOrder
  }

  export type SessionSumOrderByAggregateInput = {
    userId?: SortOrder
  }

  export type VerificationTokenOrderByRelevanceInput = {
    fields: VerificationTokenOrderByRelevanceFieldEnum | VerificationTokenOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type VerificationTokenIdentifierTokenCompoundUniqueInput = {
    identifier: string
    token: string
  }

  export type VerificationTokenCountOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMaxOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMinOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type RoleOrderByRelevanceInput = {
    fields: RoleOrderByRelevanceFieldEnum | RoleOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RoleScalarRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type RoleUserCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
  }

  export type RoleUserAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
  }

  export type RoleUserMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
  }

  export type RoleUserMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
  }

  export type RoleUserSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
  }

  export type ContratoScalarRelationFilter = {
    is?: ContratoWhereInput
    isNot?: ContratoWhereInput
  }

  export type EletricistaBaseHistoricoListRelationFilter = {
    every?: EletricistaBaseHistoricoWhereInput
    some?: EletricistaBaseHistoricoWhereInput
    none?: EletricistaBaseHistoricoWhereInput
  }

  export type VeiculoBaseHistoricoListRelationFilter = {
    every?: VeiculoBaseHistoricoWhereInput
    some?: VeiculoBaseHistoricoWhereInput
    none?: VeiculoBaseHistoricoWhereInput
  }

  export type EquipeBaseHistoricoListRelationFilter = {
    every?: EquipeBaseHistoricoWhereInput
    some?: EquipeBaseHistoricoWhereInput
    none?: EquipeBaseHistoricoWhereInput
  }

  export type EletricistaBaseHistoricoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VeiculoBaseHistoricoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipeBaseHistoricoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BaseOrderByRelevanceInput = {
    fields: BaseOrderByRelevanceFieldEnum | BaseOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type BaseCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type BaseAvgOrderByAggregateInput = {
    id?: SortOrder
    contratoId?: SortOrder
  }

  export type BaseMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type BaseMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type BaseSumOrderByAggregateInput = {
    id?: SortOrder
    contratoId?: SortOrder
  }

  export type ChecklistListRelationFilter = {
    every?: ChecklistWhereInput
    some?: ChecklistWhereInput
    none?: ChecklistWhereInput
  }

  export type ChecklistTipoEquipeRelacaoListRelationFilter = {
    every?: ChecklistTipoEquipeRelacaoWhereInput
    some?: ChecklistTipoEquipeRelacaoWhereInput
    none?: ChecklistTipoEquipeRelacaoWhereInput
  }

  export type ChecklistOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChecklistTipoEquipeRelacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TipoChecklistOrderByRelevanceInput = {
    fields: TipoChecklistOrderByRelevanceFieldEnum | TipoChecklistOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TipoChecklistCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoChecklistAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TipoChecklistMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoChecklistMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoChecklistSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TipoChecklistScalarRelationFilter = {
    is?: TipoChecklistWhereInput
    isNot?: TipoChecklistWhereInput
  }

  export type ChecklistPerguntaRelacaoListRelationFilter = {
    every?: ChecklistPerguntaRelacaoWhereInput
    some?: ChecklistPerguntaRelacaoWhereInput
    none?: ChecklistPerguntaRelacaoWhereInput
  }

  export type ChecklistOpcaoRespostaRelacaoListRelationFilter = {
    every?: ChecklistOpcaoRespostaRelacaoWhereInput
    some?: ChecklistOpcaoRespostaRelacaoWhereInput
    none?: ChecklistOpcaoRespostaRelacaoWhereInput
  }

  export type ChecklistTipoVeiculoRelacaoListRelationFilter = {
    every?: ChecklistTipoVeiculoRelacaoWhereInput
    some?: ChecklistTipoVeiculoRelacaoWhereInput
    none?: ChecklistTipoVeiculoRelacaoWhereInput
  }

  export type ChecklistPerguntaRelacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChecklistOpcaoRespostaRelacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChecklistTipoVeiculoRelacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChecklistOrderByRelevanceInput = {
    fields: ChecklistOrderByRelevanceFieldEnum | ChecklistOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ChecklistCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipoChecklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistAvgOrderByAggregateInput = {
    id?: SortOrder
    tipoChecklistId?: SortOrder
  }

  export type ChecklistMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipoChecklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipoChecklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistSumOrderByAggregateInput = {
    id?: SortOrder
    tipoChecklistId?: SortOrder
  }

  export type ChecklistPerguntaOrderByRelevanceInput = {
    fields: ChecklistPerguntaOrderByRelevanceFieldEnum | ChecklistPerguntaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ChecklistPerguntaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistPerguntaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ChecklistPerguntaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistPerguntaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistPerguntaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ChecklistPerguntaScalarRelationFilter = {
    is?: ChecklistPerguntaWhereInput
    isNot?: ChecklistPerguntaWhereInput
  }

  export type ChecklistScalarRelationFilter = {
    is?: ChecklistWhereInput
    isNot?: ChecklistWhereInput
  }

  export type ChecklistPerguntaRelacaoOrderByRelevanceInput = {
    fields: ChecklistPerguntaRelacaoOrderByRelevanceFieldEnum | ChecklistPerguntaRelacaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ChecklistPerguntaRelacaoCountOrderByAggregateInput = {
    id?: SortOrder
    checklistPerguntaId?: SortOrder
    checklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistPerguntaRelacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    checklistPerguntaId?: SortOrder
    checklistId?: SortOrder
  }

  export type ChecklistPerguntaRelacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    checklistPerguntaId?: SortOrder
    checklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistPerguntaRelacaoMinOrderByAggregateInput = {
    id?: SortOrder
    checklistPerguntaId?: SortOrder
    checklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistPerguntaRelacaoSumOrderByAggregateInput = {
    id?: SortOrder
    checklistPerguntaId?: SortOrder
    checklistId?: SortOrder
  }

  export type ChecklistOpcaoRespostaOrderByRelevanceInput = {
    fields: ChecklistOpcaoRespostaOrderByRelevanceFieldEnum | ChecklistOpcaoRespostaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ChecklistOpcaoRespostaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    geraPendencia?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistOpcaoRespostaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ChecklistOpcaoRespostaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    geraPendencia?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistOpcaoRespostaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    geraPendencia?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistOpcaoRespostaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ChecklistOpcaoRespostaScalarRelationFilter = {
    is?: ChecklistOpcaoRespostaWhereInput
    isNot?: ChecklistOpcaoRespostaWhereInput
  }

  export type ChecklistOpcaoRespostaRelacaoOrderByRelevanceInput = {
    fields: ChecklistOpcaoRespostaRelacaoOrderByRelevanceFieldEnum | ChecklistOpcaoRespostaRelacaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ChecklistOpcaoRespostaRelacaoCountOrderByAggregateInput = {
    id?: SortOrder
    checklistOpcaoRespostaId?: SortOrder
    checklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistOpcaoRespostaRelacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    checklistOpcaoRespostaId?: SortOrder
    checklistId?: SortOrder
  }

  export type ChecklistOpcaoRespostaRelacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    checklistOpcaoRespostaId?: SortOrder
    checklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistOpcaoRespostaRelacaoMinOrderByAggregateInput = {
    id?: SortOrder
    checklistOpcaoRespostaId?: SortOrder
    checklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistOpcaoRespostaRelacaoSumOrderByAggregateInput = {
    id?: SortOrder
    checklistOpcaoRespostaId?: SortOrder
    checklistId?: SortOrder
  }

  export type TipoVeiculoScalarRelationFilter = {
    is?: TipoVeiculoWhereInput
    isNot?: TipoVeiculoWhereInput
  }

  export type ChecklistTipoVeiculoRelacaoOrderByRelevanceInput = {
    fields: ChecklistTipoVeiculoRelacaoOrderByRelevanceFieldEnum | ChecklistTipoVeiculoRelacaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ChecklistTipoVeiculoRelacaoTipoVeiculoIdDeletedAtCompoundUniqueInput = {
    tipoVeiculoId: number
    deletedAt: Date | string
  }

  export type ChecklistTipoVeiculoRelacaoCountOrderByAggregateInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoVeiculoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistTipoVeiculoRelacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoVeiculoId?: SortOrder
  }

  export type ChecklistTipoVeiculoRelacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoVeiculoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistTipoVeiculoRelacaoMinOrderByAggregateInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoVeiculoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistTipoVeiculoRelacaoSumOrderByAggregateInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoVeiculoId?: SortOrder
  }

  export type TipoEquipeScalarRelationFilter = {
    is?: TipoEquipeWhereInput
    isNot?: TipoEquipeWhereInput
  }

  export type ChecklistTipoEquipeRelacaoOrderByRelevanceInput = {
    fields: ChecklistTipoEquipeRelacaoOrderByRelevanceFieldEnum | ChecklistTipoEquipeRelacaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ChecklistTipoEquipeRelacaoTipoEquipeIdTipoChecklistIdDeletedAtCompoundUniqueInput = {
    tipoEquipeId: number
    tipoChecklistId: number
    deletedAt: Date | string
  }

  export type ChecklistTipoEquipeRelacaoCountOrderByAggregateInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoEquipeId?: SortOrder
    tipoChecklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistTipoEquipeRelacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoEquipeId?: SortOrder
    tipoChecklistId?: SortOrder
  }

  export type ChecklistTipoEquipeRelacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoEquipeId?: SortOrder
    tipoChecklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistTipoEquipeRelacaoMinOrderByAggregateInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoEquipeId?: SortOrder
    tipoChecklistId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ChecklistTipoEquipeRelacaoSumOrderByAggregateInput = {
    id?: SortOrder
    checklistId?: SortOrder
    tipoEquipeId?: SortOrder
    tipoChecklistId?: SortOrder
  }

  export type VeiculoListRelationFilter = {
    every?: VeiculoWhereInput
    some?: VeiculoWhereInput
    none?: VeiculoWhereInput
  }

  export type EletricistaListRelationFilter = {
    every?: EletricistaWhereInput
    some?: EletricistaWhereInput
    none?: EletricistaWhereInput
  }

  export type EquipeListRelationFilter = {
    every?: EquipeWhereInput
    some?: EquipeWhereInput
    none?: EquipeWhereInput
  }

  export type SupervisorListRelationFilter = {
    every?: SupervisorWhereInput
    some?: SupervisorWhereInput
    none?: SupervisorWhereInput
  }

  export type BaseListRelationFilter = {
    every?: BaseWhereInput
    some?: BaseWhereInput
    none?: BaseWhereInput
  }

  export type VeiculoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EletricistaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupervisorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BaseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ContratoOrderByRelevanceInput = {
    fields: ContratoOrderByRelevanceFieldEnum | ContratoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ContratoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    numero?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ContratoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ContratoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    numero?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ContratoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    numero?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ContratoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MobileContratoPermissaoOrderByRelevanceInput = {
    fields: MobileContratoPermissaoOrderByRelevanceFieldEnum | MobileContratoPermissaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MobileContratoPermissaoCountOrderByAggregateInput = {
    id?: SortOrder
    contratoId?: SortOrder
    mobileUserId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type MobileContratoPermissaoAvgOrderByAggregateInput = {
    id?: SortOrder
    contratoId?: SortOrder
    mobileUserId?: SortOrder
  }

  export type MobileContratoPermissaoMaxOrderByAggregateInput = {
    id?: SortOrder
    contratoId?: SortOrder
    mobileUserId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type MobileContratoPermissaoMinOrderByAggregateInput = {
    id?: SortOrder
    contratoId?: SortOrder
    mobileUserId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type MobileContratoPermissaoSumOrderByAggregateInput = {
    id?: SortOrder
    contratoId?: SortOrder
    mobileUserId?: SortOrder
  }

  export type EletricistaScalarRelationFilter = {
    is?: EletricistaWhereInput
    isNot?: EletricistaWhereInput
  }

  export type BaseScalarRelationFilter = {
    is?: BaseWhereInput
    isNot?: BaseWhereInput
  }

  export type EletricistaBaseHistoricoOrderByRelevanceInput = {
    fields: EletricistaBaseHistoricoOrderByRelevanceFieldEnum | EletricistaBaseHistoricoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EletricistaBaseHistoricoCountOrderByAggregateInput = {
    id?: SortOrder
    eletricistaId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    motivo?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EletricistaBaseHistoricoAvgOrderByAggregateInput = {
    id?: SortOrder
    eletricistaId?: SortOrder
    baseId?: SortOrder
  }

  export type EletricistaBaseHistoricoMaxOrderByAggregateInput = {
    id?: SortOrder
    eletricistaId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    motivo?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EletricistaBaseHistoricoMinOrderByAggregateInput = {
    id?: SortOrder
    eletricistaId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    motivo?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EletricistaBaseHistoricoSumOrderByAggregateInput = {
    id?: SortOrder
    eletricistaId?: SortOrder
    baseId?: SortOrder
  }

  export type CargoScalarRelationFilter = {
    is?: CargoWhereInput
    isNot?: CargoWhereInput
  }

  export type TurnoEletricistaListRelationFilter = {
    every?: TurnoEletricistaWhereInput
    some?: TurnoEletricistaWhereInput
    none?: TurnoEletricistaWhereInput
  }

  export type EventoCoberturaListRelationFilter = {
    every?: EventoCoberturaWhereInput
    some?: EventoCoberturaWhereInput
    none?: EventoCoberturaWhereInput
  }

  export type SlotEscalaListRelationFilter = {
    every?: SlotEscalaWhereInput
    some?: SlotEscalaWhereInput
    none?: SlotEscalaWhereInput
  }

  export type TurnoEletricistaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventoCoberturaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SlotEscalaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EletricistaOrderByRelevanceInput = {
    fields: EletricistaOrderByRelevanceFieldEnum | EletricistaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EletricistaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    matricula?: SortOrder
    telefone?: SortOrder
    estado?: SortOrder
    admissao?: SortOrder
    cargoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    contratoId?: SortOrder
  }

  export type EletricistaAvgOrderByAggregateInput = {
    id?: SortOrder
    cargoId?: SortOrder
    contratoId?: SortOrder
  }

  export type EletricistaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    matricula?: SortOrder
    telefone?: SortOrder
    estado?: SortOrder
    admissao?: SortOrder
    cargoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    contratoId?: SortOrder
  }

  export type EletricistaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    matricula?: SortOrder
    telefone?: SortOrder
    estado?: SortOrder
    admissao?: SortOrder
    cargoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    contratoId?: SortOrder
  }

  export type EletricistaSumOrderByAggregateInput = {
    id?: SortOrder
    cargoId?: SortOrder
    contratoId?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type CargoOrderByRelevanceInput = {
    fields: CargoOrderByRelevanceFieldEnum | CargoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CargoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    salarioBase?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type CargoAvgOrderByAggregateInput = {
    id?: SortOrder
    salarioBase?: SortOrder
  }

  export type CargoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    salarioBase?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type CargoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    salarioBase?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type CargoSumOrderByAggregateInput = {
    id?: SortOrder
    salarioBase?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EquipeScalarRelationFilter = {
    is?: EquipeWhereInput
    isNot?: EquipeWhereInput
  }

  export type EquipeBaseHistoricoOrderByRelevanceInput = {
    fields: EquipeBaseHistoricoOrderByRelevanceFieldEnum | EquipeBaseHistoricoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EquipeBaseHistoricoCountOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    motivo?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeBaseHistoricoAvgOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    baseId?: SortOrder
  }

  export type EquipeBaseHistoricoMaxOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    motivo?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeBaseHistoricoMinOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    motivo?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeBaseHistoricoSumOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    baseId?: SortOrder
  }

  export type TipoEquipeOrderByRelevanceInput = {
    fields: TipoEquipeOrderByRelevanceFieldEnum | TipoEquipeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TipoEquipeCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEquipeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TipoEquipeMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEquipeMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEquipeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EquipeSupervisorListRelationFilter = {
    every?: EquipeSupervisorWhereInput
    some?: EquipeSupervisorWhereInput
    none?: EquipeSupervisorWhereInput
  }

  export type TurnoListRelationFilter = {
    every?: TurnoWhereInput
    some?: TurnoWhereInput
    none?: TurnoWhereInput
  }

  export type EscalaEquipePeriodoListRelationFilter = {
    every?: EscalaEquipePeriodoWhereInput
    some?: EscalaEquipePeriodoWhereInput
    none?: EscalaEquipePeriodoWhereInput
  }

  export type EquipeHorarioVigenciaListRelationFilter = {
    every?: EquipeHorarioVigenciaWhereInput
    some?: EquipeHorarioVigenciaWhereInput
    none?: EquipeHorarioVigenciaWhereInput
  }

  export type EquipeTurnoHistoricoListRelationFilter = {
    every?: EquipeTurnoHistoricoWhereInput
    some?: EquipeTurnoHistoricoWhereInput
    none?: EquipeTurnoHistoricoWhereInput
  }

  export type EquipeSupervisorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TurnoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EscalaEquipePeriodoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipeHorarioVigenciaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipeTurnoHistoricoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipeOrderByRelevanceInput = {
    fields: EquipeOrderByRelevanceFieldEnum | EquipeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EquipeCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipoEquipeId?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeAvgOrderByAggregateInput = {
    id?: SortOrder
    tipoEquipeId?: SortOrder
    contratoId?: SortOrder
  }

  export type EquipeMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipoEquipeId?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipoEquipeId?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeSumOrderByAggregateInput = {
    id?: SortOrder
    tipoEquipeId?: SortOrder
    contratoId?: SortOrder
  }

  export type SupervisorScalarRelationFilter = {
    is?: SupervisorWhereInput
    isNot?: SupervisorWhereInput
  }

  export type EquipeSupervisorOrderByRelevanceInput = {
    fields: EquipeSupervisorOrderByRelevanceFieldEnum | EquipeSupervisorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EquipeSupervisorCountOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    supervisorId?: SortOrder
    inicio?: SortOrder
    fim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeSupervisorAvgOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    supervisorId?: SortOrder
  }

  export type EquipeSupervisorMaxOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    supervisorId?: SortOrder
    inicio?: SortOrder
    fim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeSupervisorMinOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    supervisorId?: SortOrder
    inicio?: SortOrder
    fim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeSupervisorSumOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    supervisorId?: SortOrder
  }

  export type EnumModoRepeticaoFilter<$PrismaModel = never> = {
    equals?: $Enums.ModoRepeticao | EnumModoRepeticaoFieldRefInput<$PrismaModel>
    in?: $Enums.ModoRepeticao[]
    notIn?: $Enums.ModoRepeticao[]
    not?: NestedEnumModoRepeticaoFilter<$PrismaModel> | $Enums.ModoRepeticao
  }

  export type TipoEscalaCicloPosicaoListRelationFilter = {
    every?: TipoEscalaCicloPosicaoWhereInput
    some?: TipoEscalaCicloPosicaoWhereInput
    none?: TipoEscalaCicloPosicaoWhereInput
  }

  export type TipoEscalaSemanaMascaraListRelationFilter = {
    every?: TipoEscalaSemanaMascaraWhereInput
    some?: TipoEscalaSemanaMascaraWhereInput
    none?: TipoEscalaSemanaMascaraWhereInput
  }

  export type TipoEscalaCicloPosicaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TipoEscalaSemanaMascaraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TipoEscalaOrderByRelevanceInput = {
    fields: TipoEscalaOrderByRelevanceFieldEnum | TipoEscalaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TipoEscalaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    modoRepeticao?: SortOrder
    cicloDias?: SortOrder
    periodicidadeSemanas?: SortOrder
    eletricistasPorTurma?: SortOrder
    ativo?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEscalaAvgOrderByAggregateInput = {
    id?: SortOrder
    cicloDias?: SortOrder
    periodicidadeSemanas?: SortOrder
    eletricistasPorTurma?: SortOrder
  }

  export type TipoEscalaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    modoRepeticao?: SortOrder
    cicloDias?: SortOrder
    periodicidadeSemanas?: SortOrder
    eletricistasPorTurma?: SortOrder
    ativo?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEscalaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    modoRepeticao?: SortOrder
    cicloDias?: SortOrder
    periodicidadeSemanas?: SortOrder
    eletricistasPorTurma?: SortOrder
    ativo?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEscalaSumOrderByAggregateInput = {
    id?: SortOrder
    cicloDias?: SortOrder
    periodicidadeSemanas?: SortOrder
    eletricistasPorTurma?: SortOrder
  }

  export type EnumModoRepeticaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ModoRepeticao | EnumModoRepeticaoFieldRefInput<$PrismaModel>
    in?: $Enums.ModoRepeticao[]
    notIn?: $Enums.ModoRepeticao[]
    not?: NestedEnumModoRepeticaoWithAggregatesFilter<$PrismaModel> | $Enums.ModoRepeticao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumModoRepeticaoFilter<$PrismaModel>
    _max?: NestedEnumModoRepeticaoFilter<$PrismaModel>
  }

  export type EnumStatusTrabalhoFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusTrabalho | EnumStatusTrabalhoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusTrabalho[]
    notIn?: $Enums.StatusTrabalho[]
    not?: NestedEnumStatusTrabalhoFilter<$PrismaModel> | $Enums.StatusTrabalho
  }

  export type TipoEscalaScalarRelationFilter = {
    is?: TipoEscalaWhereInput
    isNot?: TipoEscalaWhereInput
  }

  export type TipoEscalaCicloPosicaoOrderByRelevanceInput = {
    fields: TipoEscalaCicloPosicaoOrderByRelevanceFieldEnum | TipoEscalaCicloPosicaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TipoEscalaCicloPosicaoTipoEscalaIdPosicaoCompoundUniqueInput = {
    tipoEscalaId: number
    posicao: number
  }

  export type TipoEscalaCicloPosicaoCountOrderByAggregateInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    posicao?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEscalaCicloPosicaoAvgOrderByAggregateInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    posicao?: SortOrder
  }

  export type TipoEscalaCicloPosicaoMaxOrderByAggregateInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    posicao?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEscalaCicloPosicaoMinOrderByAggregateInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    posicao?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEscalaCicloPosicaoSumOrderByAggregateInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    posicao?: SortOrder
  }

  export type EnumStatusTrabalhoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusTrabalho | EnumStatusTrabalhoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusTrabalho[]
    notIn?: $Enums.StatusTrabalho[]
    not?: NestedEnumStatusTrabalhoWithAggregatesFilter<$PrismaModel> | $Enums.StatusTrabalho
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusTrabalhoFilter<$PrismaModel>
    _max?: NestedEnumStatusTrabalhoFilter<$PrismaModel>
  }

  export type EnumDiaSemanaFilter<$PrismaModel = never> = {
    equals?: $Enums.DiaSemana | EnumDiaSemanaFieldRefInput<$PrismaModel>
    in?: $Enums.DiaSemana[]
    notIn?: $Enums.DiaSemana[]
    not?: NestedEnumDiaSemanaFilter<$PrismaModel> | $Enums.DiaSemana
  }

  export type TipoEscalaSemanaMascaraOrderByRelevanceInput = {
    fields: TipoEscalaSemanaMascaraOrderByRelevanceFieldEnum | TipoEscalaSemanaMascaraOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TipoEscalaSemanaMascaraTipoEscalaIdSemanaIndexDiaCompoundUniqueInput = {
    tipoEscalaId: number
    semanaIndex: number
    dia: $Enums.DiaSemana
  }

  export type TipoEscalaSemanaMascaraCountOrderByAggregateInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    semanaIndex?: SortOrder
    dia?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEscalaSemanaMascaraAvgOrderByAggregateInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    semanaIndex?: SortOrder
  }

  export type TipoEscalaSemanaMascaraMaxOrderByAggregateInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    semanaIndex?: SortOrder
    dia?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEscalaSemanaMascaraMinOrderByAggregateInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    semanaIndex?: SortOrder
    dia?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoEscalaSemanaMascaraSumOrderByAggregateInput = {
    id?: SortOrder
    tipoEscalaId?: SortOrder
    semanaIndex?: SortOrder
  }

  export type EnumDiaSemanaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DiaSemana | EnumDiaSemanaFieldRefInput<$PrismaModel>
    in?: $Enums.DiaSemana[]
    notIn?: $Enums.DiaSemana[]
    not?: NestedEnumDiaSemanaWithAggregatesFilter<$PrismaModel> | $Enums.DiaSemana
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDiaSemanaFilter<$PrismaModel>
    _max?: NestedEnumDiaSemanaFilter<$PrismaModel>
  }

  export type EnumStatusEscalaEquipePeriodoFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusEscalaEquipePeriodo | EnumStatusEscalaEquipePeriodoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusEscalaEquipePeriodo[]
    notIn?: $Enums.StatusEscalaEquipePeriodo[]
    not?: NestedEnumStatusEscalaEquipePeriodoFilter<$PrismaModel> | $Enums.StatusEscalaEquipePeriodo
  }

  export type EscalaEquipePeriodoOrderByRelevanceInput = {
    fields: EscalaEquipePeriodoOrderByRelevanceFieldEnum | EscalaEquipePeriodoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EscalaEquipePeriodoCountOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    periodoInicio?: SortOrder
    periodoFim?: SortOrder
    tipoEscalaId?: SortOrder
    status?: SortOrder
    versao?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EscalaEquipePeriodoAvgOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    tipoEscalaId?: SortOrder
    versao?: SortOrder
  }

  export type EscalaEquipePeriodoMaxOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    periodoInicio?: SortOrder
    periodoFim?: SortOrder
    tipoEscalaId?: SortOrder
    status?: SortOrder
    versao?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EscalaEquipePeriodoMinOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    periodoInicio?: SortOrder
    periodoFim?: SortOrder
    tipoEscalaId?: SortOrder
    status?: SortOrder
    versao?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EscalaEquipePeriodoSumOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    tipoEscalaId?: SortOrder
    versao?: SortOrder
  }

  export type EnumStatusEscalaEquipePeriodoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusEscalaEquipePeriodo | EnumStatusEscalaEquipePeriodoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusEscalaEquipePeriodo[]
    notIn?: $Enums.StatusEscalaEquipePeriodo[]
    not?: NestedEnumStatusEscalaEquipePeriodoWithAggregatesFilter<$PrismaModel> | $Enums.StatusEscalaEquipePeriodo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusEscalaEquipePeriodoFilter<$PrismaModel>
    _max?: NestedEnumStatusEscalaEquipePeriodoFilter<$PrismaModel>
  }

  export type EnumEstadoSlotFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSlot | EnumEstadoSlotFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSlot[]
    notIn?: $Enums.EstadoSlot[]
    not?: NestedEnumEstadoSlotFilter<$PrismaModel> | $Enums.EstadoSlot
  }

  export type EnumOrigemAtribuicaoFilter<$PrismaModel = never> = {
    equals?: $Enums.OrigemAtribuicao | EnumOrigemAtribuicaoFieldRefInput<$PrismaModel>
    in?: $Enums.OrigemAtribuicao[]
    notIn?: $Enums.OrigemAtribuicao[]
    not?: NestedEnumOrigemAtribuicaoFilter<$PrismaModel> | $Enums.OrigemAtribuicao
  }

  export type EscalaEquipePeriodoScalarRelationFilter = {
    is?: EscalaEquipePeriodoWhereInput
    isNot?: EscalaEquipePeriodoWhereInput
  }

  export type SlotEscalaOrderByRelevanceInput = {
    fields: SlotEscalaOrderByRelevanceFieldEnum | SlotEscalaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SlotEscalaEscalaEquipePeriodoIdDataEletricistaIdCompoundUniqueInput = {
    escalaEquipePeriodoId: number
    data: Date | string
    eletricistaId: number
  }

  export type SlotEscalaCountOrderByAggregateInput = {
    id?: SortOrder
    escalaEquipePeriodoId?: SortOrder
    eletricistaId?: SortOrder
    data?: SortOrder
    estado?: SortOrder
    inicioPrevisto?: SortOrder
    fimPrevisto?: SortOrder
    anotacoesDia?: SortOrder
    origem?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type SlotEscalaAvgOrderByAggregateInput = {
    id?: SortOrder
    escalaEquipePeriodoId?: SortOrder
    eletricistaId?: SortOrder
  }

  export type SlotEscalaMaxOrderByAggregateInput = {
    id?: SortOrder
    escalaEquipePeriodoId?: SortOrder
    eletricistaId?: SortOrder
    data?: SortOrder
    estado?: SortOrder
    inicioPrevisto?: SortOrder
    fimPrevisto?: SortOrder
    anotacoesDia?: SortOrder
    origem?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type SlotEscalaMinOrderByAggregateInput = {
    id?: SortOrder
    escalaEquipePeriodoId?: SortOrder
    eletricistaId?: SortOrder
    data?: SortOrder
    estado?: SortOrder
    inicioPrevisto?: SortOrder
    fimPrevisto?: SortOrder
    anotacoesDia?: SortOrder
    origem?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type SlotEscalaSumOrderByAggregateInput = {
    id?: SortOrder
    escalaEquipePeriodoId?: SortOrder
    eletricistaId?: SortOrder
  }

  export type EnumEstadoSlotWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSlot | EnumEstadoSlotFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSlot[]
    notIn?: $Enums.EstadoSlot[]
    not?: NestedEnumEstadoSlotWithAggregatesFilter<$PrismaModel> | $Enums.EstadoSlot
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoSlotFilter<$PrismaModel>
    _max?: NestedEnumEstadoSlotFilter<$PrismaModel>
  }

  export type EnumOrigemAtribuicaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrigemAtribuicao | EnumOrigemAtribuicaoFieldRefInput<$PrismaModel>
    in?: $Enums.OrigemAtribuicao[]
    notIn?: $Enums.OrigemAtribuicao[]
    not?: NestedEnumOrigemAtribuicaoWithAggregatesFilter<$PrismaModel> | $Enums.OrigemAtribuicao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrigemAtribuicaoFilter<$PrismaModel>
    _max?: NestedEnumOrigemAtribuicaoFilter<$PrismaModel>
  }

  export type EnumEventoCoberturaTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.EventoCoberturaTipo | EnumEventoCoberturaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.EventoCoberturaTipo[]
    notIn?: $Enums.EventoCoberturaTipo[]
    not?: NestedEnumEventoCoberturaTipoFilter<$PrismaModel> | $Enums.EventoCoberturaTipo
  }

  export type EnumEventoCoberturaResultadoFilter<$PrismaModel = never> = {
    equals?: $Enums.EventoCoberturaResultado | EnumEventoCoberturaResultadoFieldRefInput<$PrismaModel>
    in?: $Enums.EventoCoberturaResultado[]
    notIn?: $Enums.EventoCoberturaResultado[]
    not?: NestedEnumEventoCoberturaResultadoFilter<$PrismaModel> | $Enums.EventoCoberturaResultado
  }

  export type SlotEscalaScalarRelationFilter = {
    is?: SlotEscalaWhereInput
    isNot?: SlotEscalaWhereInput
  }

  export type EletricistaNullableScalarRelationFilter = {
    is?: EletricistaWhereInput | null
    isNot?: EletricistaWhereInput | null
  }

  export type EventoCoberturaOrderByRelevanceInput = {
    fields: EventoCoberturaOrderByRelevanceFieldEnum | EventoCoberturaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EventoCoberturaCountOrderByAggregateInput = {
    id?: SortOrder
    slotEscalaId?: SortOrder
    eletricistaCobrindoId?: SortOrder
    tipo?: SortOrder
    resultado?: SortOrder
    justificativa?: SortOrder
    registradoEm?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EventoCoberturaAvgOrderByAggregateInput = {
    id?: SortOrder
    slotEscalaId?: SortOrder
    eletricistaCobrindoId?: SortOrder
  }

  export type EventoCoberturaMaxOrderByAggregateInput = {
    id?: SortOrder
    slotEscalaId?: SortOrder
    eletricistaCobrindoId?: SortOrder
    tipo?: SortOrder
    resultado?: SortOrder
    justificativa?: SortOrder
    registradoEm?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EventoCoberturaMinOrderByAggregateInput = {
    id?: SortOrder
    slotEscalaId?: SortOrder
    eletricistaCobrindoId?: SortOrder
    tipo?: SortOrder
    resultado?: SortOrder
    justificativa?: SortOrder
    registradoEm?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EventoCoberturaSumOrderByAggregateInput = {
    id?: SortOrder
    slotEscalaId?: SortOrder
    eletricistaCobrindoId?: SortOrder
  }

  export type EnumEventoCoberturaTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EventoCoberturaTipo | EnumEventoCoberturaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.EventoCoberturaTipo[]
    notIn?: $Enums.EventoCoberturaTipo[]
    not?: NestedEnumEventoCoberturaTipoWithAggregatesFilter<$PrismaModel> | $Enums.EventoCoberturaTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEventoCoberturaTipoFilter<$PrismaModel>
    _max?: NestedEnumEventoCoberturaTipoFilter<$PrismaModel>
  }

  export type EnumEventoCoberturaResultadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EventoCoberturaResultado | EnumEventoCoberturaResultadoFieldRefInput<$PrismaModel>
    in?: $Enums.EventoCoberturaResultado[]
    notIn?: $Enums.EventoCoberturaResultado[]
    not?: NestedEnumEventoCoberturaResultadoWithAggregatesFilter<$PrismaModel> | $Enums.EventoCoberturaResultado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEventoCoberturaResultadoFilter<$PrismaModel>
    _max?: NestedEnumEventoCoberturaResultadoFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EquipeHorarioVigenciaOrderByRelevanceInput = {
    fields: EquipeHorarioVigenciaOrderByRelevanceFieldEnum | EquipeHorarioVigenciaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EquipeHorarioVigenciaCountOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    vigenciaInicio?: SortOrder
    vigenciaFim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeHorarioVigenciaAvgOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    duracaoHoras?: SortOrder
  }

  export type EquipeHorarioVigenciaMaxOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    vigenciaInicio?: SortOrder
    vigenciaFim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeHorarioVigenciaMinOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    vigenciaInicio?: SortOrder
    vigenciaFim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeHorarioVigenciaSumOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    duracaoHoras?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type HorarioAberturaCatalogoOrderByRelevanceInput = {
    fields: HorarioAberturaCatalogoOrderByRelevanceFieldEnum | HorarioAberturaCatalogoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type HorarioAberturaCatalogoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
    ativo?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type HorarioAberturaCatalogoAvgOrderByAggregateInput = {
    id?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
  }

  export type HorarioAberturaCatalogoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
    ativo?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type HorarioAberturaCatalogoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
    ativo?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type HorarioAberturaCatalogoSumOrderByAggregateInput = {
    id?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
  }

  export type HorarioAberturaCatalogoNullableScalarRelationFilter = {
    is?: HorarioAberturaCatalogoWhereInput | null
    isNot?: HorarioAberturaCatalogoWhereInput | null
  }

  export type EquipeTurnoHistoricoOrderByRelevanceInput = {
    fields: EquipeTurnoHistoricoOrderByRelevanceFieldEnum | EquipeTurnoHistoricoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EquipeTurnoHistoricoCountOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    horarioAberturaCatalogoId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
    fimTurnoHora?: SortOrder
    motivo?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeTurnoHistoricoAvgOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    horarioAberturaCatalogoId?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
  }

  export type EquipeTurnoHistoricoMaxOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    horarioAberturaCatalogoId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
    fimTurnoHora?: SortOrder
    motivo?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeTurnoHistoricoMinOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    horarioAberturaCatalogoId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    inicioTurnoHora?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
    fimTurnoHora?: SortOrder
    motivo?: SortOrder
    observacoes?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type EquipeTurnoHistoricoSumOrderByAggregateInput = {
    id?: SortOrder
    equipeId?: SortOrder
    horarioAberturaCatalogoId?: SortOrder
    duracaoHoras?: SortOrder
    duracaoIntervaloHoras?: SortOrder
  }

  export type SupervisorOrderByRelevanceInput = {
    fields: SupervisorOrderByRelevanceFieldEnum | SupervisorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SupervisorCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type SupervisorAvgOrderByAggregateInput = {
    id?: SortOrder
    contratoId?: SortOrder
  }

  export type SupervisorMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type SupervisorMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type SupervisorSumOrderByAggregateInput = {
    id?: SortOrder
    contratoId?: SortOrder
  }

  export type TestOrderByRelevanceInput = {
    fields: TestOrderByRelevanceFieldEnum | TestOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TestCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type TestAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TestMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type TestMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type TestSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type VeiculoScalarRelationFilter = {
    is?: VeiculoWhereInput
    isNot?: VeiculoWhereInput
  }

  export type TurnoOrderByRelevanceInput = {
    fields: TurnoOrderByRelevanceFieldEnum | TurnoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TurnoCountOrderByAggregateInput = {
    id?: SortOrder
    dataSolicitacao?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    veiculoId?: SortOrder
    equipeId?: SortOrder
    dispositivo?: SortOrder
    kmInicio?: SortOrder
    KmFim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TurnoAvgOrderByAggregateInput = {
    id?: SortOrder
    veiculoId?: SortOrder
    equipeId?: SortOrder
    kmInicio?: SortOrder
    KmFim?: SortOrder
  }

  export type TurnoMaxOrderByAggregateInput = {
    id?: SortOrder
    dataSolicitacao?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    veiculoId?: SortOrder
    equipeId?: SortOrder
    dispositivo?: SortOrder
    kmInicio?: SortOrder
    KmFim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TurnoMinOrderByAggregateInput = {
    id?: SortOrder
    dataSolicitacao?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    veiculoId?: SortOrder
    equipeId?: SortOrder
    dispositivo?: SortOrder
    kmInicio?: SortOrder
    KmFim?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TurnoSumOrderByAggregateInput = {
    id?: SortOrder
    veiculoId?: SortOrder
    equipeId?: SortOrder
    kmInicio?: SortOrder
    KmFim?: SortOrder
  }

  export type TurnoScalarRelationFilter = {
    is?: TurnoWhereInput
    isNot?: TurnoWhereInput
  }

  export type TurnoEletricistaOrderByRelevanceInput = {
    fields: TurnoEletricistaOrderByRelevanceFieldEnum | TurnoEletricistaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TurnoEletricistaCountOrderByAggregateInput = {
    id?: SortOrder
    turnoId?: SortOrder
    eletricistaId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TurnoEletricistaAvgOrderByAggregateInput = {
    id?: SortOrder
    turnoId?: SortOrder
    eletricistaId?: SortOrder
  }

  export type TurnoEletricistaMaxOrderByAggregateInput = {
    id?: SortOrder
    turnoId?: SortOrder
    eletricistaId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TurnoEletricistaMinOrderByAggregateInput = {
    id?: SortOrder
    turnoId?: SortOrder
    eletricistaId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TurnoEletricistaSumOrderByAggregateInput = {
    id?: SortOrder
    turnoId?: SortOrder
    eletricistaId?: SortOrder
  }

  export type VeiculoBaseHistoricoOrderByRelevanceInput = {
    fields: VeiculoBaseHistoricoOrderByRelevanceFieldEnum | VeiculoBaseHistoricoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type VeiculoBaseHistoricoCountOrderByAggregateInput = {
    id?: SortOrder
    veiculoId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    motivo?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type VeiculoBaseHistoricoAvgOrderByAggregateInput = {
    id?: SortOrder
    veiculoId?: SortOrder
    baseId?: SortOrder
  }

  export type VeiculoBaseHistoricoMaxOrderByAggregateInput = {
    id?: SortOrder
    veiculoId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    motivo?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type VeiculoBaseHistoricoMinOrderByAggregateInput = {
    id?: SortOrder
    veiculoId?: SortOrder
    baseId?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    motivo?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type VeiculoBaseHistoricoSumOrderByAggregateInput = {
    id?: SortOrder
    veiculoId?: SortOrder
    baseId?: SortOrder
  }

  export type TipoVeiculoOrderByRelevanceInput = {
    fields: TipoVeiculoOrderByRelevanceFieldEnum | TipoVeiculoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TipoVeiculoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoVeiculoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TipoVeiculoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoVeiculoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type TipoVeiculoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type VeiculoOdometroListRelationFilter = {
    every?: VeiculoOdometroWhereInput
    some?: VeiculoOdometroWhereInput
    none?: VeiculoOdometroWhereInput
  }

  export type VeiculoOdometroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VeiculoOrderByRelevanceInput = {
    fields: VeiculoOrderByRelevanceFieldEnum | VeiculoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type VeiculoCountOrderByAggregateInput = {
    id?: SortOrder
    placa?: SortOrder
    modelo?: SortOrder
    ano?: SortOrder
    tipoVeiculoId?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type VeiculoAvgOrderByAggregateInput = {
    id?: SortOrder
    ano?: SortOrder
    tipoVeiculoId?: SortOrder
    contratoId?: SortOrder
  }

  export type VeiculoMaxOrderByAggregateInput = {
    id?: SortOrder
    placa?: SortOrder
    modelo?: SortOrder
    ano?: SortOrder
    tipoVeiculoId?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type VeiculoMinOrderByAggregateInput = {
    id?: SortOrder
    placa?: SortOrder
    modelo?: SortOrder
    ano?: SortOrder
    tipoVeiculoId?: SortOrder
    contratoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type VeiculoSumOrderByAggregateInput = {
    id?: SortOrder
    ano?: SortOrder
    tipoVeiculoId?: SortOrder
    contratoId?: SortOrder
  }

  export type VeiculoOdometroOrderByRelevanceInput = {
    fields: VeiculoOdometroOrderByRelevanceFieldEnum | VeiculoOdometroOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type VeiculoOdometroCountOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    data?: SortOrder
    veiculoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type VeiculoOdometroAvgOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    veiculoId?: SortOrder
  }

  export type VeiculoOdometroMaxOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    data?: SortOrder
    veiculoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type VeiculoOdometroMinOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    data?: SortOrder
    veiculoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type VeiculoOdometroSumOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    veiculoId?: SortOrder
  }

  export type AprPerguntaRelacaoCreateNestedManyWithoutAprInput = {
    create?: XOR<AprPerguntaRelacaoCreateWithoutAprInput, AprPerguntaRelacaoUncheckedCreateWithoutAprInput> | AprPerguntaRelacaoCreateWithoutAprInput[] | AprPerguntaRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprPerguntaRelacaoCreateOrConnectWithoutAprInput | AprPerguntaRelacaoCreateOrConnectWithoutAprInput[]
    createMany?: AprPerguntaRelacaoCreateManyAprInputEnvelope
    connect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
  }

  export type AprOpcaoRespostaRelacaoCreateNestedManyWithoutAprInput = {
    create?: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput> | AprOpcaoRespostaRelacaoCreateWithoutAprInput[] | AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprInput | AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprInput[]
    createMany?: AprOpcaoRespostaRelacaoCreateManyAprInputEnvelope
    connect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
  }

  export type AprTipoAtividadeRelacaoCreateNestedManyWithoutAprInput = {
    create?: XOR<AprTipoAtividadeRelacaoCreateWithoutAprInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput> | AprTipoAtividadeRelacaoCreateWithoutAprInput[] | AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprTipoAtividadeRelacaoCreateOrConnectWithoutAprInput | AprTipoAtividadeRelacaoCreateOrConnectWithoutAprInput[]
    createMany?: AprTipoAtividadeRelacaoCreateManyAprInputEnvelope
    connect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
  }

  export type AprPerguntaRelacaoUncheckedCreateNestedManyWithoutAprInput = {
    create?: XOR<AprPerguntaRelacaoCreateWithoutAprInput, AprPerguntaRelacaoUncheckedCreateWithoutAprInput> | AprPerguntaRelacaoCreateWithoutAprInput[] | AprPerguntaRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprPerguntaRelacaoCreateOrConnectWithoutAprInput | AprPerguntaRelacaoCreateOrConnectWithoutAprInput[]
    createMany?: AprPerguntaRelacaoCreateManyAprInputEnvelope
    connect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
  }

  export type AprOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutAprInput = {
    create?: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput> | AprOpcaoRespostaRelacaoCreateWithoutAprInput[] | AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprInput | AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprInput[]
    createMany?: AprOpcaoRespostaRelacaoCreateManyAprInputEnvelope
    connect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
  }

  export type AprTipoAtividadeRelacaoUncheckedCreateNestedManyWithoutAprInput = {
    create?: XOR<AprTipoAtividadeRelacaoCreateWithoutAprInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput> | AprTipoAtividadeRelacaoCreateWithoutAprInput[] | AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprTipoAtividadeRelacaoCreateOrConnectWithoutAprInput | AprTipoAtividadeRelacaoCreateOrConnectWithoutAprInput[]
    createMany?: AprTipoAtividadeRelacaoCreateManyAprInputEnvelope
    connect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type AprPerguntaRelacaoUpdateManyWithoutAprNestedInput = {
    create?: XOR<AprPerguntaRelacaoCreateWithoutAprInput, AprPerguntaRelacaoUncheckedCreateWithoutAprInput> | AprPerguntaRelacaoCreateWithoutAprInput[] | AprPerguntaRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprPerguntaRelacaoCreateOrConnectWithoutAprInput | AprPerguntaRelacaoCreateOrConnectWithoutAprInput[]
    upsert?: AprPerguntaRelacaoUpsertWithWhereUniqueWithoutAprInput | AprPerguntaRelacaoUpsertWithWhereUniqueWithoutAprInput[]
    createMany?: AprPerguntaRelacaoCreateManyAprInputEnvelope
    set?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    disconnect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    delete?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    connect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    update?: AprPerguntaRelacaoUpdateWithWhereUniqueWithoutAprInput | AprPerguntaRelacaoUpdateWithWhereUniqueWithoutAprInput[]
    updateMany?: AprPerguntaRelacaoUpdateManyWithWhereWithoutAprInput | AprPerguntaRelacaoUpdateManyWithWhereWithoutAprInput[]
    deleteMany?: AprPerguntaRelacaoScalarWhereInput | AprPerguntaRelacaoScalarWhereInput[]
  }

  export type AprOpcaoRespostaRelacaoUpdateManyWithoutAprNestedInput = {
    create?: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput> | AprOpcaoRespostaRelacaoCreateWithoutAprInput[] | AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprInput | AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprInput[]
    upsert?: AprOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutAprInput | AprOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutAprInput[]
    createMany?: AprOpcaoRespostaRelacaoCreateManyAprInputEnvelope
    set?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    disconnect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    delete?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    connect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    update?: AprOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutAprInput | AprOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutAprInput[]
    updateMany?: AprOpcaoRespostaRelacaoUpdateManyWithWhereWithoutAprInput | AprOpcaoRespostaRelacaoUpdateManyWithWhereWithoutAprInput[]
    deleteMany?: AprOpcaoRespostaRelacaoScalarWhereInput | AprOpcaoRespostaRelacaoScalarWhereInput[]
  }

  export type AprTipoAtividadeRelacaoUpdateManyWithoutAprNestedInput = {
    create?: XOR<AprTipoAtividadeRelacaoCreateWithoutAprInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput> | AprTipoAtividadeRelacaoCreateWithoutAprInput[] | AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprTipoAtividadeRelacaoCreateOrConnectWithoutAprInput | AprTipoAtividadeRelacaoCreateOrConnectWithoutAprInput[]
    upsert?: AprTipoAtividadeRelacaoUpsertWithWhereUniqueWithoutAprInput | AprTipoAtividadeRelacaoUpsertWithWhereUniqueWithoutAprInput[]
    createMany?: AprTipoAtividadeRelacaoCreateManyAprInputEnvelope
    set?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    disconnect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    delete?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    connect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    update?: AprTipoAtividadeRelacaoUpdateWithWhereUniqueWithoutAprInput | AprTipoAtividadeRelacaoUpdateWithWhereUniqueWithoutAprInput[]
    updateMany?: AprTipoAtividadeRelacaoUpdateManyWithWhereWithoutAprInput | AprTipoAtividadeRelacaoUpdateManyWithWhereWithoutAprInput[]
    deleteMany?: AprTipoAtividadeRelacaoScalarWhereInput | AprTipoAtividadeRelacaoScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AprPerguntaRelacaoUncheckedUpdateManyWithoutAprNestedInput = {
    create?: XOR<AprPerguntaRelacaoCreateWithoutAprInput, AprPerguntaRelacaoUncheckedCreateWithoutAprInput> | AprPerguntaRelacaoCreateWithoutAprInput[] | AprPerguntaRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprPerguntaRelacaoCreateOrConnectWithoutAprInput | AprPerguntaRelacaoCreateOrConnectWithoutAprInput[]
    upsert?: AprPerguntaRelacaoUpsertWithWhereUniqueWithoutAprInput | AprPerguntaRelacaoUpsertWithWhereUniqueWithoutAprInput[]
    createMany?: AprPerguntaRelacaoCreateManyAprInputEnvelope
    set?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    disconnect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    delete?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    connect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    update?: AprPerguntaRelacaoUpdateWithWhereUniqueWithoutAprInput | AprPerguntaRelacaoUpdateWithWhereUniqueWithoutAprInput[]
    updateMany?: AprPerguntaRelacaoUpdateManyWithWhereWithoutAprInput | AprPerguntaRelacaoUpdateManyWithWhereWithoutAprInput[]
    deleteMany?: AprPerguntaRelacaoScalarWhereInput | AprPerguntaRelacaoScalarWhereInput[]
  }

  export type AprOpcaoRespostaRelacaoUncheckedUpdateManyWithoutAprNestedInput = {
    create?: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput> | AprOpcaoRespostaRelacaoCreateWithoutAprInput[] | AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprInput | AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprInput[]
    upsert?: AprOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutAprInput | AprOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutAprInput[]
    createMany?: AprOpcaoRespostaRelacaoCreateManyAprInputEnvelope
    set?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    disconnect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    delete?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    connect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    update?: AprOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutAprInput | AprOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutAprInput[]
    updateMany?: AprOpcaoRespostaRelacaoUpdateManyWithWhereWithoutAprInput | AprOpcaoRespostaRelacaoUpdateManyWithWhereWithoutAprInput[]
    deleteMany?: AprOpcaoRespostaRelacaoScalarWhereInput | AprOpcaoRespostaRelacaoScalarWhereInput[]
  }

  export type AprTipoAtividadeRelacaoUncheckedUpdateManyWithoutAprNestedInput = {
    create?: XOR<AprTipoAtividadeRelacaoCreateWithoutAprInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput> | AprTipoAtividadeRelacaoCreateWithoutAprInput[] | AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput[]
    connectOrCreate?: AprTipoAtividadeRelacaoCreateOrConnectWithoutAprInput | AprTipoAtividadeRelacaoCreateOrConnectWithoutAprInput[]
    upsert?: AprTipoAtividadeRelacaoUpsertWithWhereUniqueWithoutAprInput | AprTipoAtividadeRelacaoUpsertWithWhereUniqueWithoutAprInput[]
    createMany?: AprTipoAtividadeRelacaoCreateManyAprInputEnvelope
    set?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    disconnect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    delete?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    connect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    update?: AprTipoAtividadeRelacaoUpdateWithWhereUniqueWithoutAprInput | AprTipoAtividadeRelacaoUpdateWithWhereUniqueWithoutAprInput[]
    updateMany?: AprTipoAtividadeRelacaoUpdateManyWithWhereWithoutAprInput | AprTipoAtividadeRelacaoUpdateManyWithWhereWithoutAprInput[]
    deleteMany?: AprTipoAtividadeRelacaoScalarWhereInput | AprTipoAtividadeRelacaoScalarWhereInput[]
  }

  export type AprPerguntaRelacaoCreateNestedManyWithoutAprPerguntaInput = {
    create?: XOR<AprPerguntaRelacaoCreateWithoutAprPerguntaInput, AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput> | AprPerguntaRelacaoCreateWithoutAprPerguntaInput[] | AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput[]
    connectOrCreate?: AprPerguntaRelacaoCreateOrConnectWithoutAprPerguntaInput | AprPerguntaRelacaoCreateOrConnectWithoutAprPerguntaInput[]
    createMany?: AprPerguntaRelacaoCreateManyAprPerguntaInputEnvelope
    connect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
  }

  export type AprPerguntaRelacaoUncheckedCreateNestedManyWithoutAprPerguntaInput = {
    create?: XOR<AprPerguntaRelacaoCreateWithoutAprPerguntaInput, AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput> | AprPerguntaRelacaoCreateWithoutAprPerguntaInput[] | AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput[]
    connectOrCreate?: AprPerguntaRelacaoCreateOrConnectWithoutAprPerguntaInput | AprPerguntaRelacaoCreateOrConnectWithoutAprPerguntaInput[]
    createMany?: AprPerguntaRelacaoCreateManyAprPerguntaInputEnvelope
    connect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
  }

  export type AprPerguntaRelacaoUpdateManyWithoutAprPerguntaNestedInput = {
    create?: XOR<AprPerguntaRelacaoCreateWithoutAprPerguntaInput, AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput> | AprPerguntaRelacaoCreateWithoutAprPerguntaInput[] | AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput[]
    connectOrCreate?: AprPerguntaRelacaoCreateOrConnectWithoutAprPerguntaInput | AprPerguntaRelacaoCreateOrConnectWithoutAprPerguntaInput[]
    upsert?: AprPerguntaRelacaoUpsertWithWhereUniqueWithoutAprPerguntaInput | AprPerguntaRelacaoUpsertWithWhereUniqueWithoutAprPerguntaInput[]
    createMany?: AprPerguntaRelacaoCreateManyAprPerguntaInputEnvelope
    set?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    disconnect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    delete?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    connect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    update?: AprPerguntaRelacaoUpdateWithWhereUniqueWithoutAprPerguntaInput | AprPerguntaRelacaoUpdateWithWhereUniqueWithoutAprPerguntaInput[]
    updateMany?: AprPerguntaRelacaoUpdateManyWithWhereWithoutAprPerguntaInput | AprPerguntaRelacaoUpdateManyWithWhereWithoutAprPerguntaInput[]
    deleteMany?: AprPerguntaRelacaoScalarWhereInput | AprPerguntaRelacaoScalarWhereInput[]
  }

  export type AprPerguntaRelacaoUncheckedUpdateManyWithoutAprPerguntaNestedInput = {
    create?: XOR<AprPerguntaRelacaoCreateWithoutAprPerguntaInput, AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput> | AprPerguntaRelacaoCreateWithoutAprPerguntaInput[] | AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput[]
    connectOrCreate?: AprPerguntaRelacaoCreateOrConnectWithoutAprPerguntaInput | AprPerguntaRelacaoCreateOrConnectWithoutAprPerguntaInput[]
    upsert?: AprPerguntaRelacaoUpsertWithWhereUniqueWithoutAprPerguntaInput | AprPerguntaRelacaoUpsertWithWhereUniqueWithoutAprPerguntaInput[]
    createMany?: AprPerguntaRelacaoCreateManyAprPerguntaInputEnvelope
    set?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    disconnect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    delete?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    connect?: AprPerguntaRelacaoWhereUniqueInput | AprPerguntaRelacaoWhereUniqueInput[]
    update?: AprPerguntaRelacaoUpdateWithWhereUniqueWithoutAprPerguntaInput | AprPerguntaRelacaoUpdateWithWhereUniqueWithoutAprPerguntaInput[]
    updateMany?: AprPerguntaRelacaoUpdateManyWithWhereWithoutAprPerguntaInput | AprPerguntaRelacaoUpdateManyWithWhereWithoutAprPerguntaInput[]
    deleteMany?: AprPerguntaRelacaoScalarWhereInput | AprPerguntaRelacaoScalarWhereInput[]
  }

  export type AprPerguntaCreateNestedOneWithoutAprPerguntaRelacaoInput = {
    create?: XOR<AprPerguntaCreateWithoutAprPerguntaRelacaoInput, AprPerguntaUncheckedCreateWithoutAprPerguntaRelacaoInput>
    connectOrCreate?: AprPerguntaCreateOrConnectWithoutAprPerguntaRelacaoInput
    connect?: AprPerguntaWhereUniqueInput
  }

  export type AprCreateNestedOneWithoutAprPerguntaRelacaoInput = {
    create?: XOR<AprCreateWithoutAprPerguntaRelacaoInput, AprUncheckedCreateWithoutAprPerguntaRelacaoInput>
    connectOrCreate?: AprCreateOrConnectWithoutAprPerguntaRelacaoInput
    connect?: AprWhereUniqueInput
  }

  export type AprPerguntaUpdateOneRequiredWithoutAprPerguntaRelacaoNestedInput = {
    create?: XOR<AprPerguntaCreateWithoutAprPerguntaRelacaoInput, AprPerguntaUncheckedCreateWithoutAprPerguntaRelacaoInput>
    connectOrCreate?: AprPerguntaCreateOrConnectWithoutAprPerguntaRelacaoInput
    upsert?: AprPerguntaUpsertWithoutAprPerguntaRelacaoInput
    connect?: AprPerguntaWhereUniqueInput
    update?: XOR<XOR<AprPerguntaUpdateToOneWithWhereWithoutAprPerguntaRelacaoInput, AprPerguntaUpdateWithoutAprPerguntaRelacaoInput>, AprPerguntaUncheckedUpdateWithoutAprPerguntaRelacaoInput>
  }

  export type AprUpdateOneRequiredWithoutAprPerguntaRelacaoNestedInput = {
    create?: XOR<AprCreateWithoutAprPerguntaRelacaoInput, AprUncheckedCreateWithoutAprPerguntaRelacaoInput>
    connectOrCreate?: AprCreateOrConnectWithoutAprPerguntaRelacaoInput
    upsert?: AprUpsertWithoutAprPerguntaRelacaoInput
    connect?: AprWhereUniqueInput
    update?: XOR<XOR<AprUpdateToOneWithWhereWithoutAprPerguntaRelacaoInput, AprUpdateWithoutAprPerguntaRelacaoInput>, AprUncheckedUpdateWithoutAprPerguntaRelacaoInput>
  }

  export type AprOpcaoRespostaRelacaoCreateNestedManyWithoutAprOpcaoRespostaInput = {
    create?: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput> | AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput[] | AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput[]
    connectOrCreate?: AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprOpcaoRespostaInput[]
    createMany?: AprOpcaoRespostaRelacaoCreateManyAprOpcaoRespostaInputEnvelope
    connect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
  }

  export type AprOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutAprOpcaoRespostaInput = {
    create?: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput> | AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput[] | AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput[]
    connectOrCreate?: AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprOpcaoRespostaInput[]
    createMany?: AprOpcaoRespostaRelacaoCreateManyAprOpcaoRespostaInputEnvelope
    connect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
  }

  export type AprOpcaoRespostaRelacaoUpdateManyWithoutAprOpcaoRespostaNestedInput = {
    create?: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput> | AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput[] | AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput[]
    connectOrCreate?: AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprOpcaoRespostaInput[]
    upsert?: AprOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutAprOpcaoRespostaInput[]
    createMany?: AprOpcaoRespostaRelacaoCreateManyAprOpcaoRespostaInputEnvelope
    set?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    disconnect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    delete?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    connect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    update?: AprOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutAprOpcaoRespostaInput[]
    updateMany?: AprOpcaoRespostaRelacaoUpdateManyWithWhereWithoutAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoUpdateManyWithWhereWithoutAprOpcaoRespostaInput[]
    deleteMany?: AprOpcaoRespostaRelacaoScalarWhereInput | AprOpcaoRespostaRelacaoScalarWhereInput[]
  }

  export type AprOpcaoRespostaRelacaoUncheckedUpdateManyWithoutAprOpcaoRespostaNestedInput = {
    create?: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput> | AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput[] | AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput[]
    connectOrCreate?: AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprOpcaoRespostaInput[]
    upsert?: AprOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutAprOpcaoRespostaInput[]
    createMany?: AprOpcaoRespostaRelacaoCreateManyAprOpcaoRespostaInputEnvelope
    set?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    disconnect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    delete?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    connect?: AprOpcaoRespostaRelacaoWhereUniqueInput | AprOpcaoRespostaRelacaoWhereUniqueInput[]
    update?: AprOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutAprOpcaoRespostaInput[]
    updateMany?: AprOpcaoRespostaRelacaoUpdateManyWithWhereWithoutAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoUpdateManyWithWhereWithoutAprOpcaoRespostaInput[]
    deleteMany?: AprOpcaoRespostaRelacaoScalarWhereInput | AprOpcaoRespostaRelacaoScalarWhereInput[]
  }

  export type AprOpcaoRespostaCreateNestedOneWithoutAprOpcaoRespostaRelacaoInput = {
    create?: XOR<AprOpcaoRespostaCreateWithoutAprOpcaoRespostaRelacaoInput, AprOpcaoRespostaUncheckedCreateWithoutAprOpcaoRespostaRelacaoInput>
    connectOrCreate?: AprOpcaoRespostaCreateOrConnectWithoutAprOpcaoRespostaRelacaoInput
    connect?: AprOpcaoRespostaWhereUniqueInput
  }

  export type AprCreateNestedOneWithoutAprOpcaoRespostaRelacaoInput = {
    create?: XOR<AprCreateWithoutAprOpcaoRespostaRelacaoInput, AprUncheckedCreateWithoutAprOpcaoRespostaRelacaoInput>
    connectOrCreate?: AprCreateOrConnectWithoutAprOpcaoRespostaRelacaoInput
    connect?: AprWhereUniqueInput
  }

  export type AprOpcaoRespostaUpdateOneRequiredWithoutAprOpcaoRespostaRelacaoNestedInput = {
    create?: XOR<AprOpcaoRespostaCreateWithoutAprOpcaoRespostaRelacaoInput, AprOpcaoRespostaUncheckedCreateWithoutAprOpcaoRespostaRelacaoInput>
    connectOrCreate?: AprOpcaoRespostaCreateOrConnectWithoutAprOpcaoRespostaRelacaoInput
    upsert?: AprOpcaoRespostaUpsertWithoutAprOpcaoRespostaRelacaoInput
    connect?: AprOpcaoRespostaWhereUniqueInput
    update?: XOR<XOR<AprOpcaoRespostaUpdateToOneWithWhereWithoutAprOpcaoRespostaRelacaoInput, AprOpcaoRespostaUpdateWithoutAprOpcaoRespostaRelacaoInput>, AprOpcaoRespostaUncheckedUpdateWithoutAprOpcaoRespostaRelacaoInput>
  }

  export type AprUpdateOneRequiredWithoutAprOpcaoRespostaRelacaoNestedInput = {
    create?: XOR<AprCreateWithoutAprOpcaoRespostaRelacaoInput, AprUncheckedCreateWithoutAprOpcaoRespostaRelacaoInput>
    connectOrCreate?: AprCreateOrConnectWithoutAprOpcaoRespostaRelacaoInput
    upsert?: AprUpsertWithoutAprOpcaoRespostaRelacaoInput
    connect?: AprWhereUniqueInput
    update?: XOR<XOR<AprUpdateToOneWithWhereWithoutAprOpcaoRespostaRelacaoInput, AprUpdateWithoutAprOpcaoRespostaRelacaoInput>, AprUncheckedUpdateWithoutAprOpcaoRespostaRelacaoInput>
  }

  export type AprCreateNestedOneWithoutAprTipoAtividadeRelacaoInput = {
    create?: XOR<AprCreateWithoutAprTipoAtividadeRelacaoInput, AprUncheckedCreateWithoutAprTipoAtividadeRelacaoInput>
    connectOrCreate?: AprCreateOrConnectWithoutAprTipoAtividadeRelacaoInput
    connect?: AprWhereUniqueInput
  }

  export type TipoAtividadeCreateNestedOneWithoutAprTipoAtividadeRelacaoInput = {
    create?: XOR<TipoAtividadeCreateWithoutAprTipoAtividadeRelacaoInput, TipoAtividadeUncheckedCreateWithoutAprTipoAtividadeRelacaoInput>
    connectOrCreate?: TipoAtividadeCreateOrConnectWithoutAprTipoAtividadeRelacaoInput
    connect?: TipoAtividadeWhereUniqueInput
  }

  export type AprUpdateOneRequiredWithoutAprTipoAtividadeRelacaoNestedInput = {
    create?: XOR<AprCreateWithoutAprTipoAtividadeRelacaoInput, AprUncheckedCreateWithoutAprTipoAtividadeRelacaoInput>
    connectOrCreate?: AprCreateOrConnectWithoutAprTipoAtividadeRelacaoInput
    upsert?: AprUpsertWithoutAprTipoAtividadeRelacaoInput
    connect?: AprWhereUniqueInput
    update?: XOR<XOR<AprUpdateToOneWithWhereWithoutAprTipoAtividadeRelacaoInput, AprUpdateWithoutAprTipoAtividadeRelacaoInput>, AprUncheckedUpdateWithoutAprTipoAtividadeRelacaoInput>
  }

  export type TipoAtividadeUpdateOneRequiredWithoutAprTipoAtividadeRelacaoNestedInput = {
    create?: XOR<TipoAtividadeCreateWithoutAprTipoAtividadeRelacaoInput, TipoAtividadeUncheckedCreateWithoutAprTipoAtividadeRelacaoInput>
    connectOrCreate?: TipoAtividadeCreateOrConnectWithoutAprTipoAtividadeRelacaoInput
    upsert?: TipoAtividadeUpsertWithoutAprTipoAtividadeRelacaoInput
    connect?: TipoAtividadeWhereUniqueInput
    update?: XOR<XOR<TipoAtividadeUpdateToOneWithWhereWithoutAprTipoAtividadeRelacaoInput, TipoAtividadeUpdateWithoutAprTipoAtividadeRelacaoInput>, TipoAtividadeUncheckedUpdateWithoutAprTipoAtividadeRelacaoInput>
  }

  export type AprTipoAtividadeRelacaoCreateNestedManyWithoutTipoAtividadeInput = {
    create?: XOR<AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput> | AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput[] | AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput[]
    connectOrCreate?: AprTipoAtividadeRelacaoCreateOrConnectWithoutTipoAtividadeInput | AprTipoAtividadeRelacaoCreateOrConnectWithoutTipoAtividadeInput[]
    createMany?: AprTipoAtividadeRelacaoCreateManyTipoAtividadeInputEnvelope
    connect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
  }

  export type AprTipoAtividadeRelacaoUncheckedCreateNestedManyWithoutTipoAtividadeInput = {
    create?: XOR<AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput> | AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput[] | AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput[]
    connectOrCreate?: AprTipoAtividadeRelacaoCreateOrConnectWithoutTipoAtividadeInput | AprTipoAtividadeRelacaoCreateOrConnectWithoutTipoAtividadeInput[]
    createMany?: AprTipoAtividadeRelacaoCreateManyTipoAtividadeInputEnvelope
    connect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
  }

  export type AprTipoAtividadeRelacaoUpdateManyWithoutTipoAtividadeNestedInput = {
    create?: XOR<AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput> | AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput[] | AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput[]
    connectOrCreate?: AprTipoAtividadeRelacaoCreateOrConnectWithoutTipoAtividadeInput | AprTipoAtividadeRelacaoCreateOrConnectWithoutTipoAtividadeInput[]
    upsert?: AprTipoAtividadeRelacaoUpsertWithWhereUniqueWithoutTipoAtividadeInput | AprTipoAtividadeRelacaoUpsertWithWhereUniqueWithoutTipoAtividadeInput[]
    createMany?: AprTipoAtividadeRelacaoCreateManyTipoAtividadeInputEnvelope
    set?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    disconnect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    delete?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    connect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    update?: AprTipoAtividadeRelacaoUpdateWithWhereUniqueWithoutTipoAtividadeInput | AprTipoAtividadeRelacaoUpdateWithWhereUniqueWithoutTipoAtividadeInput[]
    updateMany?: AprTipoAtividadeRelacaoUpdateManyWithWhereWithoutTipoAtividadeInput | AprTipoAtividadeRelacaoUpdateManyWithWhereWithoutTipoAtividadeInput[]
    deleteMany?: AprTipoAtividadeRelacaoScalarWhereInput | AprTipoAtividadeRelacaoScalarWhereInput[]
  }

  export type AprTipoAtividadeRelacaoUncheckedUpdateManyWithoutTipoAtividadeNestedInput = {
    create?: XOR<AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput> | AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput[] | AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput[]
    connectOrCreate?: AprTipoAtividadeRelacaoCreateOrConnectWithoutTipoAtividadeInput | AprTipoAtividadeRelacaoCreateOrConnectWithoutTipoAtividadeInput[]
    upsert?: AprTipoAtividadeRelacaoUpsertWithWhereUniqueWithoutTipoAtividadeInput | AprTipoAtividadeRelacaoUpsertWithWhereUniqueWithoutTipoAtividadeInput[]
    createMany?: AprTipoAtividadeRelacaoCreateManyTipoAtividadeInputEnvelope
    set?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    disconnect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    delete?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    connect?: AprTipoAtividadeRelacaoWhereUniqueInput | AprTipoAtividadeRelacaoWhereUniqueInput[]
    update?: AprTipoAtividadeRelacaoUpdateWithWhereUniqueWithoutTipoAtividadeInput | AprTipoAtividadeRelacaoUpdateWithWhereUniqueWithoutTipoAtividadeInput[]
    updateMany?: AprTipoAtividadeRelacaoUpdateManyWithWhereWithoutTipoAtividadeInput | AprTipoAtividadeRelacaoUpdateManyWithWhereWithoutTipoAtividadeInput[]
    deleteMany?: AprTipoAtividadeRelacaoScalarWhereInput | AprTipoAtividadeRelacaoScalarWhereInput[]
  }

  export type MobileSessionCreateNestedManyWithoutMobileUserInput = {
    create?: XOR<MobileSessionCreateWithoutMobileUserInput, MobileSessionUncheckedCreateWithoutMobileUserInput> | MobileSessionCreateWithoutMobileUserInput[] | MobileSessionUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileSessionCreateOrConnectWithoutMobileUserInput | MobileSessionCreateOrConnectWithoutMobileUserInput[]
    createMany?: MobileSessionCreateManyMobileUserInputEnvelope
    connect?: MobileSessionWhereUniqueInput | MobileSessionWhereUniqueInput[]
  }

  export type MobileTokenCreateNestedManyWithoutMobileUserInput = {
    create?: XOR<MobileTokenCreateWithoutMobileUserInput, MobileTokenUncheckedCreateWithoutMobileUserInput> | MobileTokenCreateWithoutMobileUserInput[] | MobileTokenUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileTokenCreateOrConnectWithoutMobileUserInput | MobileTokenCreateOrConnectWithoutMobileUserInput[]
    createMany?: MobileTokenCreateManyMobileUserInputEnvelope
    connect?: MobileTokenWhereUniqueInput | MobileTokenWhereUniqueInput[]
  }

  export type MobileContratoPermissaoCreateNestedManyWithoutMobileUserInput = {
    create?: XOR<MobileContratoPermissaoCreateWithoutMobileUserInput, MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput> | MobileContratoPermissaoCreateWithoutMobileUserInput[] | MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileContratoPermissaoCreateOrConnectWithoutMobileUserInput | MobileContratoPermissaoCreateOrConnectWithoutMobileUserInput[]
    createMany?: MobileContratoPermissaoCreateManyMobileUserInputEnvelope
    connect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
  }

  export type MobileSessionUncheckedCreateNestedManyWithoutMobileUserInput = {
    create?: XOR<MobileSessionCreateWithoutMobileUserInput, MobileSessionUncheckedCreateWithoutMobileUserInput> | MobileSessionCreateWithoutMobileUserInput[] | MobileSessionUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileSessionCreateOrConnectWithoutMobileUserInput | MobileSessionCreateOrConnectWithoutMobileUserInput[]
    createMany?: MobileSessionCreateManyMobileUserInputEnvelope
    connect?: MobileSessionWhereUniqueInput | MobileSessionWhereUniqueInput[]
  }

  export type MobileTokenUncheckedCreateNestedManyWithoutMobileUserInput = {
    create?: XOR<MobileTokenCreateWithoutMobileUserInput, MobileTokenUncheckedCreateWithoutMobileUserInput> | MobileTokenCreateWithoutMobileUserInput[] | MobileTokenUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileTokenCreateOrConnectWithoutMobileUserInput | MobileTokenCreateOrConnectWithoutMobileUserInput[]
    createMany?: MobileTokenCreateManyMobileUserInputEnvelope
    connect?: MobileTokenWhereUniqueInput | MobileTokenWhereUniqueInput[]
  }

  export type MobileContratoPermissaoUncheckedCreateNestedManyWithoutMobileUserInput = {
    create?: XOR<MobileContratoPermissaoCreateWithoutMobileUserInput, MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput> | MobileContratoPermissaoCreateWithoutMobileUserInput[] | MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileContratoPermissaoCreateOrConnectWithoutMobileUserInput | MobileContratoPermissaoCreateOrConnectWithoutMobileUserInput[]
    createMany?: MobileContratoPermissaoCreateManyMobileUserInputEnvelope
    connect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
  }

  export type MobileSessionUpdateManyWithoutMobileUserNestedInput = {
    create?: XOR<MobileSessionCreateWithoutMobileUserInput, MobileSessionUncheckedCreateWithoutMobileUserInput> | MobileSessionCreateWithoutMobileUserInput[] | MobileSessionUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileSessionCreateOrConnectWithoutMobileUserInput | MobileSessionCreateOrConnectWithoutMobileUserInput[]
    upsert?: MobileSessionUpsertWithWhereUniqueWithoutMobileUserInput | MobileSessionUpsertWithWhereUniqueWithoutMobileUserInput[]
    createMany?: MobileSessionCreateManyMobileUserInputEnvelope
    set?: MobileSessionWhereUniqueInput | MobileSessionWhereUniqueInput[]
    disconnect?: MobileSessionWhereUniqueInput | MobileSessionWhereUniqueInput[]
    delete?: MobileSessionWhereUniqueInput | MobileSessionWhereUniqueInput[]
    connect?: MobileSessionWhereUniqueInput | MobileSessionWhereUniqueInput[]
    update?: MobileSessionUpdateWithWhereUniqueWithoutMobileUserInput | MobileSessionUpdateWithWhereUniqueWithoutMobileUserInput[]
    updateMany?: MobileSessionUpdateManyWithWhereWithoutMobileUserInput | MobileSessionUpdateManyWithWhereWithoutMobileUserInput[]
    deleteMany?: MobileSessionScalarWhereInput | MobileSessionScalarWhereInput[]
  }

  export type MobileTokenUpdateManyWithoutMobileUserNestedInput = {
    create?: XOR<MobileTokenCreateWithoutMobileUserInput, MobileTokenUncheckedCreateWithoutMobileUserInput> | MobileTokenCreateWithoutMobileUserInput[] | MobileTokenUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileTokenCreateOrConnectWithoutMobileUserInput | MobileTokenCreateOrConnectWithoutMobileUserInput[]
    upsert?: MobileTokenUpsertWithWhereUniqueWithoutMobileUserInput | MobileTokenUpsertWithWhereUniqueWithoutMobileUserInput[]
    createMany?: MobileTokenCreateManyMobileUserInputEnvelope
    set?: MobileTokenWhereUniqueInput | MobileTokenWhereUniqueInput[]
    disconnect?: MobileTokenWhereUniqueInput | MobileTokenWhereUniqueInput[]
    delete?: MobileTokenWhereUniqueInput | MobileTokenWhereUniqueInput[]
    connect?: MobileTokenWhereUniqueInput | MobileTokenWhereUniqueInput[]
    update?: MobileTokenUpdateWithWhereUniqueWithoutMobileUserInput | MobileTokenUpdateWithWhereUniqueWithoutMobileUserInput[]
    updateMany?: MobileTokenUpdateManyWithWhereWithoutMobileUserInput | MobileTokenUpdateManyWithWhereWithoutMobileUserInput[]
    deleteMany?: MobileTokenScalarWhereInput | MobileTokenScalarWhereInput[]
  }

  export type MobileContratoPermissaoUpdateManyWithoutMobileUserNestedInput = {
    create?: XOR<MobileContratoPermissaoCreateWithoutMobileUserInput, MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput> | MobileContratoPermissaoCreateWithoutMobileUserInput[] | MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileContratoPermissaoCreateOrConnectWithoutMobileUserInput | MobileContratoPermissaoCreateOrConnectWithoutMobileUserInput[]
    upsert?: MobileContratoPermissaoUpsertWithWhereUniqueWithoutMobileUserInput | MobileContratoPermissaoUpsertWithWhereUniqueWithoutMobileUserInput[]
    createMany?: MobileContratoPermissaoCreateManyMobileUserInputEnvelope
    set?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    disconnect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    delete?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    connect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    update?: MobileContratoPermissaoUpdateWithWhereUniqueWithoutMobileUserInput | MobileContratoPermissaoUpdateWithWhereUniqueWithoutMobileUserInput[]
    updateMany?: MobileContratoPermissaoUpdateManyWithWhereWithoutMobileUserInput | MobileContratoPermissaoUpdateManyWithWhereWithoutMobileUserInput[]
    deleteMany?: MobileContratoPermissaoScalarWhereInput | MobileContratoPermissaoScalarWhereInput[]
  }

  export type MobileSessionUncheckedUpdateManyWithoutMobileUserNestedInput = {
    create?: XOR<MobileSessionCreateWithoutMobileUserInput, MobileSessionUncheckedCreateWithoutMobileUserInput> | MobileSessionCreateWithoutMobileUserInput[] | MobileSessionUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileSessionCreateOrConnectWithoutMobileUserInput | MobileSessionCreateOrConnectWithoutMobileUserInput[]
    upsert?: MobileSessionUpsertWithWhereUniqueWithoutMobileUserInput | MobileSessionUpsertWithWhereUniqueWithoutMobileUserInput[]
    createMany?: MobileSessionCreateManyMobileUserInputEnvelope
    set?: MobileSessionWhereUniqueInput | MobileSessionWhereUniqueInput[]
    disconnect?: MobileSessionWhereUniqueInput | MobileSessionWhereUniqueInput[]
    delete?: MobileSessionWhereUniqueInput | MobileSessionWhereUniqueInput[]
    connect?: MobileSessionWhereUniqueInput | MobileSessionWhereUniqueInput[]
    update?: MobileSessionUpdateWithWhereUniqueWithoutMobileUserInput | MobileSessionUpdateWithWhereUniqueWithoutMobileUserInput[]
    updateMany?: MobileSessionUpdateManyWithWhereWithoutMobileUserInput | MobileSessionUpdateManyWithWhereWithoutMobileUserInput[]
    deleteMany?: MobileSessionScalarWhereInput | MobileSessionScalarWhereInput[]
  }

  export type MobileTokenUncheckedUpdateManyWithoutMobileUserNestedInput = {
    create?: XOR<MobileTokenCreateWithoutMobileUserInput, MobileTokenUncheckedCreateWithoutMobileUserInput> | MobileTokenCreateWithoutMobileUserInput[] | MobileTokenUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileTokenCreateOrConnectWithoutMobileUserInput | MobileTokenCreateOrConnectWithoutMobileUserInput[]
    upsert?: MobileTokenUpsertWithWhereUniqueWithoutMobileUserInput | MobileTokenUpsertWithWhereUniqueWithoutMobileUserInput[]
    createMany?: MobileTokenCreateManyMobileUserInputEnvelope
    set?: MobileTokenWhereUniqueInput | MobileTokenWhereUniqueInput[]
    disconnect?: MobileTokenWhereUniqueInput | MobileTokenWhereUniqueInput[]
    delete?: MobileTokenWhereUniqueInput | MobileTokenWhereUniqueInput[]
    connect?: MobileTokenWhereUniqueInput | MobileTokenWhereUniqueInput[]
    update?: MobileTokenUpdateWithWhereUniqueWithoutMobileUserInput | MobileTokenUpdateWithWhereUniqueWithoutMobileUserInput[]
    updateMany?: MobileTokenUpdateManyWithWhereWithoutMobileUserInput | MobileTokenUpdateManyWithWhereWithoutMobileUserInput[]
    deleteMany?: MobileTokenScalarWhereInput | MobileTokenScalarWhereInput[]
  }

  export type MobileContratoPermissaoUncheckedUpdateManyWithoutMobileUserNestedInput = {
    create?: XOR<MobileContratoPermissaoCreateWithoutMobileUserInput, MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput> | MobileContratoPermissaoCreateWithoutMobileUserInput[] | MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput[]
    connectOrCreate?: MobileContratoPermissaoCreateOrConnectWithoutMobileUserInput | MobileContratoPermissaoCreateOrConnectWithoutMobileUserInput[]
    upsert?: MobileContratoPermissaoUpsertWithWhereUniqueWithoutMobileUserInput | MobileContratoPermissaoUpsertWithWhereUniqueWithoutMobileUserInput[]
    createMany?: MobileContratoPermissaoCreateManyMobileUserInputEnvelope
    set?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    disconnect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    delete?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    connect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    update?: MobileContratoPermissaoUpdateWithWhereUniqueWithoutMobileUserInput | MobileContratoPermissaoUpdateWithWhereUniqueWithoutMobileUserInput[]
    updateMany?: MobileContratoPermissaoUpdateManyWithWhereWithoutMobileUserInput | MobileContratoPermissaoUpdateManyWithWhereWithoutMobileUserInput[]
    deleteMany?: MobileContratoPermissaoScalarWhereInput | MobileContratoPermissaoScalarWhereInput[]
  }

  export type MobileUserCreateNestedOneWithoutMobileSessionInput = {
    create?: XOR<MobileUserCreateWithoutMobileSessionInput, MobileUserUncheckedCreateWithoutMobileSessionInput>
    connectOrCreate?: MobileUserCreateOrConnectWithoutMobileSessionInput
    connect?: MobileUserWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type MobileUserUpdateOneRequiredWithoutMobileSessionNestedInput = {
    create?: XOR<MobileUserCreateWithoutMobileSessionInput, MobileUserUncheckedCreateWithoutMobileSessionInput>
    connectOrCreate?: MobileUserCreateOrConnectWithoutMobileSessionInput
    upsert?: MobileUserUpsertWithoutMobileSessionInput
    connect?: MobileUserWhereUniqueInput
    update?: XOR<XOR<MobileUserUpdateToOneWithWhereWithoutMobileSessionInput, MobileUserUpdateWithoutMobileSessionInput>, MobileUserUncheckedUpdateWithoutMobileSessionInput>
  }

  export type MobileUserCreateNestedOneWithoutMobileTokenInput = {
    create?: XOR<MobileUserCreateWithoutMobileTokenInput, MobileUserUncheckedCreateWithoutMobileTokenInput>
    connectOrCreate?: MobileUserCreateOrConnectWithoutMobileTokenInput
    connect?: MobileUserWhereUniqueInput
  }

  export type MobileUserUpdateOneRequiredWithoutMobileTokenNestedInput = {
    create?: XOR<MobileUserCreateWithoutMobileTokenInput, MobileUserUncheckedCreateWithoutMobileTokenInput>
    connectOrCreate?: MobileUserCreateOrConnectWithoutMobileTokenInput
    upsert?: MobileUserUpsertWithoutMobileTokenInput
    connect?: MobileUserWhereUniqueInput
    update?: XOR<XOR<MobileUserUpdateToOneWithWhereWithoutMobileTokenInput, MobileUserUpdateWithoutMobileTokenInput>, MobileUserUncheckedUpdateWithoutMobileTokenInput>
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type RoleUserCreateNestedManyWithoutUserInput = {
    create?: XOR<RoleUserCreateWithoutUserInput, RoleUserUncheckedCreateWithoutUserInput> | RoleUserCreateWithoutUserInput[] | RoleUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RoleUserCreateOrConnectWithoutUserInput | RoleUserCreateOrConnectWithoutUserInput[]
    createMany?: RoleUserCreateManyUserInputEnvelope
    connect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type RoleUserUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RoleUserCreateWithoutUserInput, RoleUserUncheckedCreateWithoutUserInput> | RoleUserCreateWithoutUserInput[] | RoleUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RoleUserCreateOrConnectWithoutUserInput | RoleUserCreateOrConnectWithoutUserInput[]
    createMany?: RoleUserCreateManyUserInputEnvelope
    connect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type RoleUserUpdateManyWithoutUserNestedInput = {
    create?: XOR<RoleUserCreateWithoutUserInput, RoleUserUncheckedCreateWithoutUserInput> | RoleUserCreateWithoutUserInput[] | RoleUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RoleUserCreateOrConnectWithoutUserInput | RoleUserCreateOrConnectWithoutUserInput[]
    upsert?: RoleUserUpsertWithWhereUniqueWithoutUserInput | RoleUserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RoleUserCreateManyUserInputEnvelope
    set?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    disconnect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    delete?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    connect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    update?: RoleUserUpdateWithWhereUniqueWithoutUserInput | RoleUserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RoleUserUpdateManyWithWhereWithoutUserInput | RoleUserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RoleUserScalarWhereInput | RoleUserScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type RoleUserUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RoleUserCreateWithoutUserInput, RoleUserUncheckedCreateWithoutUserInput> | RoleUserCreateWithoutUserInput[] | RoleUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RoleUserCreateOrConnectWithoutUserInput | RoleUserCreateOrConnectWithoutUserInput[]
    upsert?: RoleUserUpsertWithWhereUniqueWithoutUserInput | RoleUserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RoleUserCreateManyUserInputEnvelope
    set?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    disconnect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    delete?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    connect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    update?: RoleUserUpdateWithWhereUniqueWithoutUserInput | RoleUserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RoleUserUpdateManyWithWhereWithoutUserInput | RoleUserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RoleUserScalarWhereInput | RoleUserScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAccountInput = {
    create?: XOR<UserCreateWithoutAccountInput, UserUncheckedCreateWithoutAccountInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountInput
    connect?: UserWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutAccountNestedInput = {
    create?: XOR<UserCreateWithoutAccountInput, UserUncheckedCreateWithoutAccountInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountInput
    upsert?: UserUpsertWithoutAccountInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountInput, UserUpdateWithoutAccountInput>, UserUncheckedUpdateWithoutAccountInput>
  }

  export type UserCreateNestedOneWithoutSessionInput = {
    create?: XOR<UserCreateWithoutSessionInput, UserUncheckedCreateWithoutSessionInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionNestedInput = {
    create?: XOR<UserCreateWithoutSessionInput, UserUncheckedCreateWithoutSessionInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionInput
    upsert?: UserUpsertWithoutSessionInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionInput, UserUpdateWithoutSessionInput>, UserUncheckedUpdateWithoutSessionInput>
  }

  export type RoleUserCreateNestedManyWithoutRoleInput = {
    create?: XOR<RoleUserCreateWithoutRoleInput, RoleUserUncheckedCreateWithoutRoleInput> | RoleUserCreateWithoutRoleInput[] | RoleUserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleUserCreateOrConnectWithoutRoleInput | RoleUserCreateOrConnectWithoutRoleInput[]
    createMany?: RoleUserCreateManyRoleInputEnvelope
    connect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
  }

  export type RoleUserUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<RoleUserCreateWithoutRoleInput, RoleUserUncheckedCreateWithoutRoleInput> | RoleUserCreateWithoutRoleInput[] | RoleUserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleUserCreateOrConnectWithoutRoleInput | RoleUserCreateOrConnectWithoutRoleInput[]
    createMany?: RoleUserCreateManyRoleInputEnvelope
    connect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
  }

  export type RoleUserUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RoleUserCreateWithoutRoleInput, RoleUserUncheckedCreateWithoutRoleInput> | RoleUserCreateWithoutRoleInput[] | RoleUserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleUserCreateOrConnectWithoutRoleInput | RoleUserCreateOrConnectWithoutRoleInput[]
    upsert?: RoleUserUpsertWithWhereUniqueWithoutRoleInput | RoleUserUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RoleUserCreateManyRoleInputEnvelope
    set?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    disconnect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    delete?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    connect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    update?: RoleUserUpdateWithWhereUniqueWithoutRoleInput | RoleUserUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RoleUserUpdateManyWithWhereWithoutRoleInput | RoleUserUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RoleUserScalarWhereInput | RoleUserScalarWhereInput[]
  }

  export type RoleUserUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RoleUserCreateWithoutRoleInput, RoleUserUncheckedCreateWithoutRoleInput> | RoleUserCreateWithoutRoleInput[] | RoleUserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleUserCreateOrConnectWithoutRoleInput | RoleUserCreateOrConnectWithoutRoleInput[]
    upsert?: RoleUserUpsertWithWhereUniqueWithoutRoleInput | RoleUserUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RoleUserCreateManyRoleInputEnvelope
    set?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    disconnect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    delete?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    connect?: RoleUserWhereUniqueInput | RoleUserWhereUniqueInput[]
    update?: RoleUserUpdateWithWhereUniqueWithoutRoleInput | RoleUserUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RoleUserUpdateManyWithWhereWithoutRoleInput | RoleUserUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RoleUserScalarWhereInput | RoleUserScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutRoleUserInput = {
    create?: XOR<UserCreateWithoutRoleUserInput, UserUncheckedCreateWithoutRoleUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutRoleUserInput
    connect?: UserWhereUniqueInput
  }

  export type RoleCreateNestedOneWithoutRoleUserInput = {
    create?: XOR<RoleCreateWithoutRoleUserInput, RoleUncheckedCreateWithoutRoleUserInput>
    connectOrCreate?: RoleCreateOrConnectWithoutRoleUserInput
    connect?: RoleWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutRoleUserNestedInput = {
    create?: XOR<UserCreateWithoutRoleUserInput, UserUncheckedCreateWithoutRoleUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutRoleUserInput
    upsert?: UserUpsertWithoutRoleUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRoleUserInput, UserUpdateWithoutRoleUserInput>, UserUncheckedUpdateWithoutRoleUserInput>
  }

  export type RoleUpdateOneRequiredWithoutRoleUserNestedInput = {
    create?: XOR<RoleCreateWithoutRoleUserInput, RoleUncheckedCreateWithoutRoleUserInput>
    connectOrCreate?: RoleCreateOrConnectWithoutRoleUserInput
    upsert?: RoleUpsertWithoutRoleUserInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutRoleUserInput, RoleUpdateWithoutRoleUserInput>, RoleUncheckedUpdateWithoutRoleUserInput>
  }

  export type ContratoCreateNestedOneWithoutBaseInput = {
    create?: XOR<ContratoCreateWithoutBaseInput, ContratoUncheckedCreateWithoutBaseInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutBaseInput
    connect?: ContratoWhereUniqueInput
  }

  export type EletricistaBaseHistoricoCreateNestedManyWithoutBaseInput = {
    create?: XOR<EletricistaBaseHistoricoCreateWithoutBaseInput, EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput> | EletricistaBaseHistoricoCreateWithoutBaseInput[] | EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: EletricistaBaseHistoricoCreateOrConnectWithoutBaseInput | EletricistaBaseHistoricoCreateOrConnectWithoutBaseInput[]
    createMany?: EletricistaBaseHistoricoCreateManyBaseInputEnvelope
    connect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
  }

  export type VeiculoBaseHistoricoCreateNestedManyWithoutBaseInput = {
    create?: XOR<VeiculoBaseHistoricoCreateWithoutBaseInput, VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput> | VeiculoBaseHistoricoCreateWithoutBaseInput[] | VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: VeiculoBaseHistoricoCreateOrConnectWithoutBaseInput | VeiculoBaseHistoricoCreateOrConnectWithoutBaseInput[]
    createMany?: VeiculoBaseHistoricoCreateManyBaseInputEnvelope
    connect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
  }

  export type EquipeBaseHistoricoCreateNestedManyWithoutBaseInput = {
    create?: XOR<EquipeBaseHistoricoCreateWithoutBaseInput, EquipeBaseHistoricoUncheckedCreateWithoutBaseInput> | EquipeBaseHistoricoCreateWithoutBaseInput[] | EquipeBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: EquipeBaseHistoricoCreateOrConnectWithoutBaseInput | EquipeBaseHistoricoCreateOrConnectWithoutBaseInput[]
    createMany?: EquipeBaseHistoricoCreateManyBaseInputEnvelope
    connect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
  }

  export type EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput = {
    create?: XOR<EletricistaBaseHistoricoCreateWithoutBaseInput, EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput> | EletricistaBaseHistoricoCreateWithoutBaseInput[] | EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: EletricistaBaseHistoricoCreateOrConnectWithoutBaseInput | EletricistaBaseHistoricoCreateOrConnectWithoutBaseInput[]
    createMany?: EletricistaBaseHistoricoCreateManyBaseInputEnvelope
    connect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
  }

  export type VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput = {
    create?: XOR<VeiculoBaseHistoricoCreateWithoutBaseInput, VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput> | VeiculoBaseHistoricoCreateWithoutBaseInput[] | VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: VeiculoBaseHistoricoCreateOrConnectWithoutBaseInput | VeiculoBaseHistoricoCreateOrConnectWithoutBaseInput[]
    createMany?: VeiculoBaseHistoricoCreateManyBaseInputEnvelope
    connect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
  }

  export type EquipeBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput = {
    create?: XOR<EquipeBaseHistoricoCreateWithoutBaseInput, EquipeBaseHistoricoUncheckedCreateWithoutBaseInput> | EquipeBaseHistoricoCreateWithoutBaseInput[] | EquipeBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: EquipeBaseHistoricoCreateOrConnectWithoutBaseInput | EquipeBaseHistoricoCreateOrConnectWithoutBaseInput[]
    createMany?: EquipeBaseHistoricoCreateManyBaseInputEnvelope
    connect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
  }

  export type ContratoUpdateOneRequiredWithoutBaseNestedInput = {
    create?: XOR<ContratoCreateWithoutBaseInput, ContratoUncheckedCreateWithoutBaseInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutBaseInput
    upsert?: ContratoUpsertWithoutBaseInput
    connect?: ContratoWhereUniqueInput
    update?: XOR<XOR<ContratoUpdateToOneWithWhereWithoutBaseInput, ContratoUpdateWithoutBaseInput>, ContratoUncheckedUpdateWithoutBaseInput>
  }

  export type EletricistaBaseHistoricoUpdateManyWithoutBaseNestedInput = {
    create?: XOR<EletricistaBaseHistoricoCreateWithoutBaseInput, EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput> | EletricistaBaseHistoricoCreateWithoutBaseInput[] | EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: EletricistaBaseHistoricoCreateOrConnectWithoutBaseInput | EletricistaBaseHistoricoCreateOrConnectWithoutBaseInput[]
    upsert?: EletricistaBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput | EletricistaBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput[]
    createMany?: EletricistaBaseHistoricoCreateManyBaseInputEnvelope
    set?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    disconnect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    delete?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    connect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    update?: EletricistaBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput | EletricistaBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput[]
    updateMany?: EletricistaBaseHistoricoUpdateManyWithWhereWithoutBaseInput | EletricistaBaseHistoricoUpdateManyWithWhereWithoutBaseInput[]
    deleteMany?: EletricistaBaseHistoricoScalarWhereInput | EletricistaBaseHistoricoScalarWhereInput[]
  }

  export type VeiculoBaseHistoricoUpdateManyWithoutBaseNestedInput = {
    create?: XOR<VeiculoBaseHistoricoCreateWithoutBaseInput, VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput> | VeiculoBaseHistoricoCreateWithoutBaseInput[] | VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: VeiculoBaseHistoricoCreateOrConnectWithoutBaseInput | VeiculoBaseHistoricoCreateOrConnectWithoutBaseInput[]
    upsert?: VeiculoBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput | VeiculoBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput[]
    createMany?: VeiculoBaseHistoricoCreateManyBaseInputEnvelope
    set?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    disconnect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    delete?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    connect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    update?: VeiculoBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput | VeiculoBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput[]
    updateMany?: VeiculoBaseHistoricoUpdateManyWithWhereWithoutBaseInput | VeiculoBaseHistoricoUpdateManyWithWhereWithoutBaseInput[]
    deleteMany?: VeiculoBaseHistoricoScalarWhereInput | VeiculoBaseHistoricoScalarWhereInput[]
  }

  export type EquipeBaseHistoricoUpdateManyWithoutBaseNestedInput = {
    create?: XOR<EquipeBaseHistoricoCreateWithoutBaseInput, EquipeBaseHistoricoUncheckedCreateWithoutBaseInput> | EquipeBaseHistoricoCreateWithoutBaseInput[] | EquipeBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: EquipeBaseHistoricoCreateOrConnectWithoutBaseInput | EquipeBaseHistoricoCreateOrConnectWithoutBaseInput[]
    upsert?: EquipeBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput | EquipeBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput[]
    createMany?: EquipeBaseHistoricoCreateManyBaseInputEnvelope
    set?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    disconnect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    delete?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    connect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    update?: EquipeBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput | EquipeBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput[]
    updateMany?: EquipeBaseHistoricoUpdateManyWithWhereWithoutBaseInput | EquipeBaseHistoricoUpdateManyWithWhereWithoutBaseInput[]
    deleteMany?: EquipeBaseHistoricoScalarWhereInput | EquipeBaseHistoricoScalarWhereInput[]
  }

  export type EletricistaBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput = {
    create?: XOR<EletricistaBaseHistoricoCreateWithoutBaseInput, EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput> | EletricistaBaseHistoricoCreateWithoutBaseInput[] | EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: EletricistaBaseHistoricoCreateOrConnectWithoutBaseInput | EletricistaBaseHistoricoCreateOrConnectWithoutBaseInput[]
    upsert?: EletricistaBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput | EletricistaBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput[]
    createMany?: EletricistaBaseHistoricoCreateManyBaseInputEnvelope
    set?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    disconnect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    delete?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    connect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    update?: EletricistaBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput | EletricistaBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput[]
    updateMany?: EletricistaBaseHistoricoUpdateManyWithWhereWithoutBaseInput | EletricistaBaseHistoricoUpdateManyWithWhereWithoutBaseInput[]
    deleteMany?: EletricistaBaseHistoricoScalarWhereInput | EletricistaBaseHistoricoScalarWhereInput[]
  }

  export type VeiculoBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput = {
    create?: XOR<VeiculoBaseHistoricoCreateWithoutBaseInput, VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput> | VeiculoBaseHistoricoCreateWithoutBaseInput[] | VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: VeiculoBaseHistoricoCreateOrConnectWithoutBaseInput | VeiculoBaseHistoricoCreateOrConnectWithoutBaseInput[]
    upsert?: VeiculoBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput | VeiculoBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput[]
    createMany?: VeiculoBaseHistoricoCreateManyBaseInputEnvelope
    set?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    disconnect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    delete?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    connect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    update?: VeiculoBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput | VeiculoBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput[]
    updateMany?: VeiculoBaseHistoricoUpdateManyWithWhereWithoutBaseInput | VeiculoBaseHistoricoUpdateManyWithWhereWithoutBaseInput[]
    deleteMany?: VeiculoBaseHistoricoScalarWhereInput | VeiculoBaseHistoricoScalarWhereInput[]
  }

  export type EquipeBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput = {
    create?: XOR<EquipeBaseHistoricoCreateWithoutBaseInput, EquipeBaseHistoricoUncheckedCreateWithoutBaseInput> | EquipeBaseHistoricoCreateWithoutBaseInput[] | EquipeBaseHistoricoUncheckedCreateWithoutBaseInput[]
    connectOrCreate?: EquipeBaseHistoricoCreateOrConnectWithoutBaseInput | EquipeBaseHistoricoCreateOrConnectWithoutBaseInput[]
    upsert?: EquipeBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput | EquipeBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput[]
    createMany?: EquipeBaseHistoricoCreateManyBaseInputEnvelope
    set?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    disconnect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    delete?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    connect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    update?: EquipeBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput | EquipeBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput[]
    updateMany?: EquipeBaseHistoricoUpdateManyWithWhereWithoutBaseInput | EquipeBaseHistoricoUpdateManyWithWhereWithoutBaseInput[]
    deleteMany?: EquipeBaseHistoricoScalarWhereInput | EquipeBaseHistoricoScalarWhereInput[]
  }

  export type ChecklistCreateNestedManyWithoutTipoChecklistInput = {
    create?: XOR<ChecklistCreateWithoutTipoChecklistInput, ChecklistUncheckedCreateWithoutTipoChecklistInput> | ChecklistCreateWithoutTipoChecklistInput[] | ChecklistUncheckedCreateWithoutTipoChecklistInput[]
    connectOrCreate?: ChecklistCreateOrConnectWithoutTipoChecklistInput | ChecklistCreateOrConnectWithoutTipoChecklistInput[]
    createMany?: ChecklistCreateManyTipoChecklistInputEnvelope
    connect?: ChecklistWhereUniqueInput | ChecklistWhereUniqueInput[]
  }

  export type ChecklistTipoEquipeRelacaoCreateNestedManyWithoutTipoChecklistInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput> | ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoChecklistInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoChecklistInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyTipoChecklistInputEnvelope
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
  }

  export type ChecklistUncheckedCreateNestedManyWithoutTipoChecklistInput = {
    create?: XOR<ChecklistCreateWithoutTipoChecklistInput, ChecklistUncheckedCreateWithoutTipoChecklistInput> | ChecklistCreateWithoutTipoChecklistInput[] | ChecklistUncheckedCreateWithoutTipoChecklistInput[]
    connectOrCreate?: ChecklistCreateOrConnectWithoutTipoChecklistInput | ChecklistCreateOrConnectWithoutTipoChecklistInput[]
    createMany?: ChecklistCreateManyTipoChecklistInputEnvelope
    connect?: ChecklistWhereUniqueInput | ChecklistWhereUniqueInput[]
  }

  export type ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutTipoChecklistInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput> | ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoChecklistInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoChecklistInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyTipoChecklistInputEnvelope
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
  }

  export type ChecklistUpdateManyWithoutTipoChecklistNestedInput = {
    create?: XOR<ChecklistCreateWithoutTipoChecklistInput, ChecklistUncheckedCreateWithoutTipoChecklistInput> | ChecklistCreateWithoutTipoChecklistInput[] | ChecklistUncheckedCreateWithoutTipoChecklistInput[]
    connectOrCreate?: ChecklistCreateOrConnectWithoutTipoChecklistInput | ChecklistCreateOrConnectWithoutTipoChecklistInput[]
    upsert?: ChecklistUpsertWithWhereUniqueWithoutTipoChecklistInput | ChecklistUpsertWithWhereUniqueWithoutTipoChecklistInput[]
    createMany?: ChecklistCreateManyTipoChecklistInputEnvelope
    set?: ChecklistWhereUniqueInput | ChecklistWhereUniqueInput[]
    disconnect?: ChecklistWhereUniqueInput | ChecklistWhereUniqueInput[]
    delete?: ChecklistWhereUniqueInput | ChecklistWhereUniqueInput[]
    connect?: ChecklistWhereUniqueInput | ChecklistWhereUniqueInput[]
    update?: ChecklistUpdateWithWhereUniqueWithoutTipoChecklistInput | ChecklistUpdateWithWhereUniqueWithoutTipoChecklistInput[]
    updateMany?: ChecklistUpdateManyWithWhereWithoutTipoChecklistInput | ChecklistUpdateManyWithWhereWithoutTipoChecklistInput[]
    deleteMany?: ChecklistScalarWhereInput | ChecklistScalarWhereInput[]
  }

  export type ChecklistTipoEquipeRelacaoUpdateManyWithoutTipoChecklistNestedInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput> | ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoChecklistInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoChecklistInput[]
    upsert?: ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutTipoChecklistInput | ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutTipoChecklistInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyTipoChecklistInputEnvelope
    set?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    disconnect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    delete?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    update?: ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutTipoChecklistInput | ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutTipoChecklistInput[]
    updateMany?: ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutTipoChecklistInput | ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutTipoChecklistInput[]
    deleteMany?: ChecklistTipoEquipeRelacaoScalarWhereInput | ChecklistTipoEquipeRelacaoScalarWhereInput[]
  }

  export type ChecklistUncheckedUpdateManyWithoutTipoChecklistNestedInput = {
    create?: XOR<ChecklistCreateWithoutTipoChecklistInput, ChecklistUncheckedCreateWithoutTipoChecklistInput> | ChecklistCreateWithoutTipoChecklistInput[] | ChecklistUncheckedCreateWithoutTipoChecklistInput[]
    connectOrCreate?: ChecklistCreateOrConnectWithoutTipoChecklistInput | ChecklistCreateOrConnectWithoutTipoChecklistInput[]
    upsert?: ChecklistUpsertWithWhereUniqueWithoutTipoChecklistInput | ChecklistUpsertWithWhereUniqueWithoutTipoChecklistInput[]
    createMany?: ChecklistCreateManyTipoChecklistInputEnvelope
    set?: ChecklistWhereUniqueInput | ChecklistWhereUniqueInput[]
    disconnect?: ChecklistWhereUniqueInput | ChecklistWhereUniqueInput[]
    delete?: ChecklistWhereUniqueInput | ChecklistWhereUniqueInput[]
    connect?: ChecklistWhereUniqueInput | ChecklistWhereUniqueInput[]
    update?: ChecklistUpdateWithWhereUniqueWithoutTipoChecklistInput | ChecklistUpdateWithWhereUniqueWithoutTipoChecklistInput[]
    updateMany?: ChecklistUpdateManyWithWhereWithoutTipoChecklistInput | ChecklistUpdateManyWithWhereWithoutTipoChecklistInput[]
    deleteMany?: ChecklistScalarWhereInput | ChecklistScalarWhereInput[]
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutTipoChecklistNestedInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput> | ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoChecklistInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoChecklistInput[]
    upsert?: ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutTipoChecklistInput | ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutTipoChecklistInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyTipoChecklistInputEnvelope
    set?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    disconnect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    delete?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    update?: ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutTipoChecklistInput | ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutTipoChecklistInput[]
    updateMany?: ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutTipoChecklistInput | ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutTipoChecklistInput[]
    deleteMany?: ChecklistTipoEquipeRelacaoScalarWhereInput | ChecklistTipoEquipeRelacaoScalarWhereInput[]
  }

  export type TipoChecklistCreateNestedOneWithoutChecklistInput = {
    create?: XOR<TipoChecklistCreateWithoutChecklistInput, TipoChecklistUncheckedCreateWithoutChecklistInput>
    connectOrCreate?: TipoChecklistCreateOrConnectWithoutChecklistInput
    connect?: TipoChecklistWhereUniqueInput
  }

  export type ChecklistPerguntaRelacaoCreateNestedManyWithoutChecklistInput = {
    create?: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistPerguntaRelacaoCreateWithoutChecklistInput[] | ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistInput | ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistInput[]
    createMany?: ChecklistPerguntaRelacaoCreateManyChecklistInputEnvelope
    connect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
  }

  export type ChecklistOpcaoRespostaRelacaoCreateNestedManyWithoutChecklistInput = {
    create?: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput[] | ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistInput | ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistInput[]
    createMany?: ChecklistOpcaoRespostaRelacaoCreateManyChecklistInputEnvelope
    connect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
  }

  export type ChecklistTipoVeiculoRelacaoCreateNestedManyWithoutChecklistInput = {
    create?: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput[] | ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutChecklistInput | ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutChecklistInput[]
    createMany?: ChecklistTipoVeiculoRelacaoCreateManyChecklistInputEnvelope
    connect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
  }

  export type ChecklistTipoEquipeRelacaoCreateNestedManyWithoutChecklistInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutChecklistInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutChecklistInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyChecklistInputEnvelope
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
  }

  export type ChecklistPerguntaRelacaoUncheckedCreateNestedManyWithoutChecklistInput = {
    create?: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistPerguntaRelacaoCreateWithoutChecklistInput[] | ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistInput | ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistInput[]
    createMany?: ChecklistPerguntaRelacaoCreateManyChecklistInputEnvelope
    connect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutChecklistInput = {
    create?: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput[] | ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistInput | ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistInput[]
    createMany?: ChecklistOpcaoRespostaRelacaoCreateManyChecklistInputEnvelope
    connect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedCreateNestedManyWithoutChecklistInput = {
    create?: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput[] | ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutChecklistInput | ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutChecklistInput[]
    createMany?: ChecklistTipoVeiculoRelacaoCreateManyChecklistInputEnvelope
    connect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
  }

  export type ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutChecklistInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutChecklistInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutChecklistInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyChecklistInputEnvelope
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
  }

  export type TipoChecklistUpdateOneRequiredWithoutChecklistNestedInput = {
    create?: XOR<TipoChecklistCreateWithoutChecklistInput, TipoChecklistUncheckedCreateWithoutChecklistInput>
    connectOrCreate?: TipoChecklistCreateOrConnectWithoutChecklistInput
    upsert?: TipoChecklistUpsertWithoutChecklistInput
    connect?: TipoChecklistWhereUniqueInput
    update?: XOR<XOR<TipoChecklistUpdateToOneWithWhereWithoutChecklistInput, TipoChecklistUpdateWithoutChecklistInput>, TipoChecklistUncheckedUpdateWithoutChecklistInput>
  }

  export type ChecklistPerguntaRelacaoUpdateManyWithoutChecklistNestedInput = {
    create?: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistPerguntaRelacaoCreateWithoutChecklistInput[] | ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistInput | ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistInput[]
    upsert?: ChecklistPerguntaRelacaoUpsertWithWhereUniqueWithoutChecklistInput | ChecklistPerguntaRelacaoUpsertWithWhereUniqueWithoutChecklistInput[]
    createMany?: ChecklistPerguntaRelacaoCreateManyChecklistInputEnvelope
    set?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    disconnect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    delete?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    connect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    update?: ChecklistPerguntaRelacaoUpdateWithWhereUniqueWithoutChecklistInput | ChecklistPerguntaRelacaoUpdateWithWhereUniqueWithoutChecklistInput[]
    updateMany?: ChecklistPerguntaRelacaoUpdateManyWithWhereWithoutChecklistInput | ChecklistPerguntaRelacaoUpdateManyWithWhereWithoutChecklistInput[]
    deleteMany?: ChecklistPerguntaRelacaoScalarWhereInput | ChecklistPerguntaRelacaoScalarWhereInput[]
  }

  export type ChecklistOpcaoRespostaRelacaoUpdateManyWithoutChecklistNestedInput = {
    create?: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput[] | ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistInput | ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistInput[]
    upsert?: ChecklistOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutChecklistInput | ChecklistOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutChecklistInput[]
    createMany?: ChecklistOpcaoRespostaRelacaoCreateManyChecklistInputEnvelope
    set?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    disconnect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    delete?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    connect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    update?: ChecklistOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutChecklistInput | ChecklistOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutChecklistInput[]
    updateMany?: ChecklistOpcaoRespostaRelacaoUpdateManyWithWhereWithoutChecklistInput | ChecklistOpcaoRespostaRelacaoUpdateManyWithWhereWithoutChecklistInput[]
    deleteMany?: ChecklistOpcaoRespostaRelacaoScalarWhereInput | ChecklistOpcaoRespostaRelacaoScalarWhereInput[]
  }

  export type ChecklistTipoVeiculoRelacaoUpdateManyWithoutChecklistNestedInput = {
    create?: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput[] | ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutChecklistInput | ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutChecklistInput[]
    upsert?: ChecklistTipoVeiculoRelacaoUpsertWithWhereUniqueWithoutChecklistInput | ChecklistTipoVeiculoRelacaoUpsertWithWhereUniqueWithoutChecklistInput[]
    createMany?: ChecklistTipoVeiculoRelacaoCreateManyChecklistInputEnvelope
    set?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    disconnect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    delete?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    connect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    update?: ChecklistTipoVeiculoRelacaoUpdateWithWhereUniqueWithoutChecklistInput | ChecklistTipoVeiculoRelacaoUpdateWithWhereUniqueWithoutChecklistInput[]
    updateMany?: ChecklistTipoVeiculoRelacaoUpdateManyWithWhereWithoutChecklistInput | ChecklistTipoVeiculoRelacaoUpdateManyWithWhereWithoutChecklistInput[]
    deleteMany?: ChecklistTipoVeiculoRelacaoScalarWhereInput | ChecklistTipoVeiculoRelacaoScalarWhereInput[]
  }

  export type ChecklistTipoEquipeRelacaoUpdateManyWithoutChecklistNestedInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutChecklistInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutChecklistInput[]
    upsert?: ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutChecklistInput | ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutChecklistInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyChecklistInputEnvelope
    set?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    disconnect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    delete?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    update?: ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutChecklistInput | ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutChecklistInput[]
    updateMany?: ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutChecklistInput | ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutChecklistInput[]
    deleteMany?: ChecklistTipoEquipeRelacaoScalarWhereInput | ChecklistTipoEquipeRelacaoScalarWhereInput[]
  }

  export type ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput = {
    create?: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistPerguntaRelacaoCreateWithoutChecklistInput[] | ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistInput | ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistInput[]
    upsert?: ChecklistPerguntaRelacaoUpsertWithWhereUniqueWithoutChecklistInput | ChecklistPerguntaRelacaoUpsertWithWhereUniqueWithoutChecklistInput[]
    createMany?: ChecklistPerguntaRelacaoCreateManyChecklistInputEnvelope
    set?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    disconnect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    delete?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    connect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    update?: ChecklistPerguntaRelacaoUpdateWithWhereUniqueWithoutChecklistInput | ChecklistPerguntaRelacaoUpdateWithWhereUniqueWithoutChecklistInput[]
    updateMany?: ChecklistPerguntaRelacaoUpdateManyWithWhereWithoutChecklistInput | ChecklistPerguntaRelacaoUpdateManyWithWhereWithoutChecklistInput[]
    deleteMany?: ChecklistPerguntaRelacaoScalarWhereInput | ChecklistPerguntaRelacaoScalarWhereInput[]
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput = {
    create?: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput[] | ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistInput | ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistInput[]
    upsert?: ChecklistOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutChecklistInput | ChecklistOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutChecklistInput[]
    createMany?: ChecklistOpcaoRespostaRelacaoCreateManyChecklistInputEnvelope
    set?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    disconnect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    delete?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    connect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    update?: ChecklistOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutChecklistInput | ChecklistOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutChecklistInput[]
    updateMany?: ChecklistOpcaoRespostaRelacaoUpdateManyWithWhereWithoutChecklistInput | ChecklistOpcaoRespostaRelacaoUpdateManyWithWhereWithoutChecklistInput[]
    deleteMany?: ChecklistOpcaoRespostaRelacaoScalarWhereInput | ChecklistOpcaoRespostaRelacaoScalarWhereInput[]
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutChecklistNestedInput = {
    create?: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput[] | ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutChecklistInput | ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutChecklistInput[]
    upsert?: ChecklistTipoVeiculoRelacaoUpsertWithWhereUniqueWithoutChecklistInput | ChecklistTipoVeiculoRelacaoUpsertWithWhereUniqueWithoutChecklistInput[]
    createMany?: ChecklistTipoVeiculoRelacaoCreateManyChecklistInputEnvelope
    set?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    disconnect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    delete?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    connect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    update?: ChecklistTipoVeiculoRelacaoUpdateWithWhereUniqueWithoutChecklistInput | ChecklistTipoVeiculoRelacaoUpdateWithWhereUniqueWithoutChecklistInput[]
    updateMany?: ChecklistTipoVeiculoRelacaoUpdateManyWithWhereWithoutChecklistInput | ChecklistTipoVeiculoRelacaoUpdateManyWithWhereWithoutChecklistInput[]
    deleteMany?: ChecklistTipoVeiculoRelacaoScalarWhereInput | ChecklistTipoVeiculoRelacaoScalarWhereInput[]
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutChecklistNestedInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput> | ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutChecklistInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutChecklistInput[]
    upsert?: ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutChecklistInput | ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutChecklistInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyChecklistInputEnvelope
    set?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    disconnect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    delete?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    update?: ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutChecklistInput | ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutChecklistInput[]
    updateMany?: ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutChecklistInput | ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutChecklistInput[]
    deleteMany?: ChecklistTipoEquipeRelacaoScalarWhereInput | ChecklistTipoEquipeRelacaoScalarWhereInput[]
  }

  export type ChecklistPerguntaRelacaoCreateNestedManyWithoutChecklistPerguntaInput = {
    create?: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput> | ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput[] | ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput[]
    connectOrCreate?: ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistPerguntaInput | ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistPerguntaInput[]
    createMany?: ChecklistPerguntaRelacaoCreateManyChecklistPerguntaInputEnvelope
    connect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
  }

  export type ChecklistPerguntaRelacaoUncheckedCreateNestedManyWithoutChecklistPerguntaInput = {
    create?: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput> | ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput[] | ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput[]
    connectOrCreate?: ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistPerguntaInput | ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistPerguntaInput[]
    createMany?: ChecklistPerguntaRelacaoCreateManyChecklistPerguntaInputEnvelope
    connect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
  }

  export type ChecklistPerguntaRelacaoUpdateManyWithoutChecklistPerguntaNestedInput = {
    create?: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput> | ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput[] | ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput[]
    connectOrCreate?: ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistPerguntaInput | ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistPerguntaInput[]
    upsert?: ChecklistPerguntaRelacaoUpsertWithWhereUniqueWithoutChecklistPerguntaInput | ChecklistPerguntaRelacaoUpsertWithWhereUniqueWithoutChecklistPerguntaInput[]
    createMany?: ChecklistPerguntaRelacaoCreateManyChecklistPerguntaInputEnvelope
    set?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    disconnect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    delete?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    connect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    update?: ChecklistPerguntaRelacaoUpdateWithWhereUniqueWithoutChecklistPerguntaInput | ChecklistPerguntaRelacaoUpdateWithWhereUniqueWithoutChecklistPerguntaInput[]
    updateMany?: ChecklistPerguntaRelacaoUpdateManyWithWhereWithoutChecklistPerguntaInput | ChecklistPerguntaRelacaoUpdateManyWithWhereWithoutChecklistPerguntaInput[]
    deleteMany?: ChecklistPerguntaRelacaoScalarWhereInput | ChecklistPerguntaRelacaoScalarWhereInput[]
  }

  export type ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistPerguntaNestedInput = {
    create?: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput> | ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput[] | ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput[]
    connectOrCreate?: ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistPerguntaInput | ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistPerguntaInput[]
    upsert?: ChecklistPerguntaRelacaoUpsertWithWhereUniqueWithoutChecklistPerguntaInput | ChecklistPerguntaRelacaoUpsertWithWhereUniqueWithoutChecklistPerguntaInput[]
    createMany?: ChecklistPerguntaRelacaoCreateManyChecklistPerguntaInputEnvelope
    set?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    disconnect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    delete?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    connect?: ChecklistPerguntaRelacaoWhereUniqueInput | ChecklistPerguntaRelacaoWhereUniqueInput[]
    update?: ChecklistPerguntaRelacaoUpdateWithWhereUniqueWithoutChecklistPerguntaInput | ChecklistPerguntaRelacaoUpdateWithWhereUniqueWithoutChecklistPerguntaInput[]
    updateMany?: ChecklistPerguntaRelacaoUpdateManyWithWhereWithoutChecklistPerguntaInput | ChecklistPerguntaRelacaoUpdateManyWithWhereWithoutChecklistPerguntaInput[]
    deleteMany?: ChecklistPerguntaRelacaoScalarWhereInput | ChecklistPerguntaRelacaoScalarWhereInput[]
  }

  export type ChecklistPerguntaCreateNestedOneWithoutChecklistPerguntaRelacaoInput = {
    create?: XOR<ChecklistPerguntaCreateWithoutChecklistPerguntaRelacaoInput, ChecklistPerguntaUncheckedCreateWithoutChecklistPerguntaRelacaoInput>
    connectOrCreate?: ChecklistPerguntaCreateOrConnectWithoutChecklistPerguntaRelacaoInput
    connect?: ChecklistPerguntaWhereUniqueInput
  }

  export type ChecklistCreateNestedOneWithoutChecklistPerguntaRelacaoInput = {
    create?: XOR<ChecklistCreateWithoutChecklistPerguntaRelacaoInput, ChecklistUncheckedCreateWithoutChecklistPerguntaRelacaoInput>
    connectOrCreate?: ChecklistCreateOrConnectWithoutChecklistPerguntaRelacaoInput
    connect?: ChecklistWhereUniqueInput
  }

  export type ChecklistPerguntaUpdateOneRequiredWithoutChecklistPerguntaRelacaoNestedInput = {
    create?: XOR<ChecklistPerguntaCreateWithoutChecklistPerguntaRelacaoInput, ChecklistPerguntaUncheckedCreateWithoutChecklistPerguntaRelacaoInput>
    connectOrCreate?: ChecklistPerguntaCreateOrConnectWithoutChecklistPerguntaRelacaoInput
    upsert?: ChecklistPerguntaUpsertWithoutChecklistPerguntaRelacaoInput
    connect?: ChecklistPerguntaWhereUniqueInput
    update?: XOR<XOR<ChecklistPerguntaUpdateToOneWithWhereWithoutChecklistPerguntaRelacaoInput, ChecklistPerguntaUpdateWithoutChecklistPerguntaRelacaoInput>, ChecklistPerguntaUncheckedUpdateWithoutChecklistPerguntaRelacaoInput>
  }

  export type ChecklistUpdateOneRequiredWithoutChecklistPerguntaRelacaoNestedInput = {
    create?: XOR<ChecklistCreateWithoutChecklistPerguntaRelacaoInput, ChecklistUncheckedCreateWithoutChecklistPerguntaRelacaoInput>
    connectOrCreate?: ChecklistCreateOrConnectWithoutChecklistPerguntaRelacaoInput
    upsert?: ChecklistUpsertWithoutChecklistPerguntaRelacaoInput
    connect?: ChecklistWhereUniqueInput
    update?: XOR<XOR<ChecklistUpdateToOneWithWhereWithoutChecklistPerguntaRelacaoInput, ChecklistUpdateWithoutChecklistPerguntaRelacaoInput>, ChecklistUncheckedUpdateWithoutChecklistPerguntaRelacaoInput>
  }

  export type ChecklistOpcaoRespostaRelacaoCreateNestedManyWithoutChecklistOpcaoRespostaInput = {
    create?: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput> | ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput[] | ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput[]
    connectOrCreate?: ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistOpcaoRespostaInput[]
    createMany?: ChecklistOpcaoRespostaRelacaoCreateManyChecklistOpcaoRespostaInputEnvelope
    connect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutChecklistOpcaoRespostaInput = {
    create?: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput> | ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput[] | ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput[]
    connectOrCreate?: ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistOpcaoRespostaInput[]
    createMany?: ChecklistOpcaoRespostaRelacaoCreateManyChecklistOpcaoRespostaInputEnvelope
    connect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
  }

  export type ChecklistOpcaoRespostaRelacaoUpdateManyWithoutChecklistOpcaoRespostaNestedInput = {
    create?: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput> | ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput[] | ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput[]
    connectOrCreate?: ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistOpcaoRespostaInput[]
    upsert?: ChecklistOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutChecklistOpcaoRespostaInput[]
    createMany?: ChecklistOpcaoRespostaRelacaoCreateManyChecklistOpcaoRespostaInputEnvelope
    set?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    disconnect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    delete?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    connect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    update?: ChecklistOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutChecklistOpcaoRespostaInput[]
    updateMany?: ChecklistOpcaoRespostaRelacaoUpdateManyWithWhereWithoutChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoUpdateManyWithWhereWithoutChecklistOpcaoRespostaInput[]
    deleteMany?: ChecklistOpcaoRespostaRelacaoScalarWhereInput | ChecklistOpcaoRespostaRelacaoScalarWhereInput[]
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistOpcaoRespostaNestedInput = {
    create?: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput> | ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput[] | ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput[]
    connectOrCreate?: ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistOpcaoRespostaInput[]
    upsert?: ChecklistOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutChecklistOpcaoRespostaInput[]
    createMany?: ChecklistOpcaoRespostaRelacaoCreateManyChecklistOpcaoRespostaInputEnvelope
    set?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    disconnect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    delete?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    connect?: ChecklistOpcaoRespostaRelacaoWhereUniqueInput | ChecklistOpcaoRespostaRelacaoWhereUniqueInput[]
    update?: ChecklistOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutChecklistOpcaoRespostaInput[]
    updateMany?: ChecklistOpcaoRespostaRelacaoUpdateManyWithWhereWithoutChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoUpdateManyWithWhereWithoutChecklistOpcaoRespostaInput[]
    deleteMany?: ChecklistOpcaoRespostaRelacaoScalarWhereInput | ChecklistOpcaoRespostaRelacaoScalarWhereInput[]
  }

  export type ChecklistOpcaoRespostaCreateNestedOneWithoutChecklistOpcaoRespostaRelacaoInput = {
    create?: XOR<ChecklistOpcaoRespostaCreateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistOpcaoRespostaUncheckedCreateWithoutChecklistOpcaoRespostaRelacaoInput>
    connectOrCreate?: ChecklistOpcaoRespostaCreateOrConnectWithoutChecklistOpcaoRespostaRelacaoInput
    connect?: ChecklistOpcaoRespostaWhereUniqueInput
  }

  export type ChecklistCreateNestedOneWithoutChecklistOpcaoRespostaRelacaoInput = {
    create?: XOR<ChecklistCreateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistUncheckedCreateWithoutChecklistOpcaoRespostaRelacaoInput>
    connectOrCreate?: ChecklistCreateOrConnectWithoutChecklistOpcaoRespostaRelacaoInput
    connect?: ChecklistWhereUniqueInput
  }

  export type ChecklistOpcaoRespostaUpdateOneRequiredWithoutChecklistOpcaoRespostaRelacaoNestedInput = {
    create?: XOR<ChecklistOpcaoRespostaCreateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistOpcaoRespostaUncheckedCreateWithoutChecklistOpcaoRespostaRelacaoInput>
    connectOrCreate?: ChecklistOpcaoRespostaCreateOrConnectWithoutChecklistOpcaoRespostaRelacaoInput
    upsert?: ChecklistOpcaoRespostaUpsertWithoutChecklistOpcaoRespostaRelacaoInput
    connect?: ChecklistOpcaoRespostaWhereUniqueInput
    update?: XOR<XOR<ChecklistOpcaoRespostaUpdateToOneWithWhereWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistOpcaoRespostaUpdateWithoutChecklistOpcaoRespostaRelacaoInput>, ChecklistOpcaoRespostaUncheckedUpdateWithoutChecklistOpcaoRespostaRelacaoInput>
  }

  export type ChecklistUpdateOneRequiredWithoutChecklistOpcaoRespostaRelacaoNestedInput = {
    create?: XOR<ChecklistCreateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistUncheckedCreateWithoutChecklistOpcaoRespostaRelacaoInput>
    connectOrCreate?: ChecklistCreateOrConnectWithoutChecklistOpcaoRespostaRelacaoInput
    upsert?: ChecklistUpsertWithoutChecklistOpcaoRespostaRelacaoInput
    connect?: ChecklistWhereUniqueInput
    update?: XOR<XOR<ChecklistUpdateToOneWithWhereWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistUpdateWithoutChecklistOpcaoRespostaRelacaoInput>, ChecklistUncheckedUpdateWithoutChecklistOpcaoRespostaRelacaoInput>
  }

  export type ChecklistCreateNestedOneWithoutChecklistTipoVeiculoRelacaoInput = {
    create?: XOR<ChecklistCreateWithoutChecklistTipoVeiculoRelacaoInput, ChecklistUncheckedCreateWithoutChecklistTipoVeiculoRelacaoInput>
    connectOrCreate?: ChecklistCreateOrConnectWithoutChecklistTipoVeiculoRelacaoInput
    connect?: ChecklistWhereUniqueInput
  }

  export type TipoVeiculoCreateNestedOneWithoutChecklistTipoVeiculoRelacaoInput = {
    create?: XOR<TipoVeiculoCreateWithoutChecklistTipoVeiculoRelacaoInput, TipoVeiculoUncheckedCreateWithoutChecklistTipoVeiculoRelacaoInput>
    connectOrCreate?: TipoVeiculoCreateOrConnectWithoutChecklistTipoVeiculoRelacaoInput
    connect?: TipoVeiculoWhereUniqueInput
  }

  export type ChecklistUpdateOneRequiredWithoutChecklistTipoVeiculoRelacaoNestedInput = {
    create?: XOR<ChecklistCreateWithoutChecklistTipoVeiculoRelacaoInput, ChecklistUncheckedCreateWithoutChecklistTipoVeiculoRelacaoInput>
    connectOrCreate?: ChecklistCreateOrConnectWithoutChecklistTipoVeiculoRelacaoInput
    upsert?: ChecklistUpsertWithoutChecklistTipoVeiculoRelacaoInput
    connect?: ChecklistWhereUniqueInput
    update?: XOR<XOR<ChecklistUpdateToOneWithWhereWithoutChecklistTipoVeiculoRelacaoInput, ChecklistUpdateWithoutChecklistTipoVeiculoRelacaoInput>, ChecklistUncheckedUpdateWithoutChecklistTipoVeiculoRelacaoInput>
  }

  export type TipoVeiculoUpdateOneRequiredWithoutChecklistTipoVeiculoRelacaoNestedInput = {
    create?: XOR<TipoVeiculoCreateWithoutChecklistTipoVeiculoRelacaoInput, TipoVeiculoUncheckedCreateWithoutChecklistTipoVeiculoRelacaoInput>
    connectOrCreate?: TipoVeiculoCreateOrConnectWithoutChecklistTipoVeiculoRelacaoInput
    upsert?: TipoVeiculoUpsertWithoutChecklistTipoVeiculoRelacaoInput
    connect?: TipoVeiculoWhereUniqueInput
    update?: XOR<XOR<TipoVeiculoUpdateToOneWithWhereWithoutChecklistTipoVeiculoRelacaoInput, TipoVeiculoUpdateWithoutChecklistTipoVeiculoRelacaoInput>, TipoVeiculoUncheckedUpdateWithoutChecklistTipoVeiculoRelacaoInput>
  }

  export type ChecklistCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput = {
    create?: XOR<ChecklistCreateWithoutChecklistTipoEquipeRelacaoInput, ChecklistUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
    connectOrCreate?: ChecklistCreateOrConnectWithoutChecklistTipoEquipeRelacaoInput
    connect?: ChecklistWhereUniqueInput
  }

  export type TipoEquipeCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput = {
    create?: XOR<TipoEquipeCreateWithoutChecklistTipoEquipeRelacaoInput, TipoEquipeUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
    connectOrCreate?: TipoEquipeCreateOrConnectWithoutChecklistTipoEquipeRelacaoInput
    connect?: TipoEquipeWhereUniqueInput
  }

  export type TipoChecklistCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput = {
    create?: XOR<TipoChecklistCreateWithoutChecklistTipoEquipeRelacaoInput, TipoChecklistUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
    connectOrCreate?: TipoChecklistCreateOrConnectWithoutChecklistTipoEquipeRelacaoInput
    connect?: TipoChecklistWhereUniqueInput
  }

  export type ChecklistUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput = {
    create?: XOR<ChecklistCreateWithoutChecklistTipoEquipeRelacaoInput, ChecklistUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
    connectOrCreate?: ChecklistCreateOrConnectWithoutChecklistTipoEquipeRelacaoInput
    upsert?: ChecklistUpsertWithoutChecklistTipoEquipeRelacaoInput
    connect?: ChecklistWhereUniqueInput
    update?: XOR<XOR<ChecklistUpdateToOneWithWhereWithoutChecklistTipoEquipeRelacaoInput, ChecklistUpdateWithoutChecklistTipoEquipeRelacaoInput>, ChecklistUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput>
  }

  export type TipoEquipeUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput = {
    create?: XOR<TipoEquipeCreateWithoutChecklistTipoEquipeRelacaoInput, TipoEquipeUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
    connectOrCreate?: TipoEquipeCreateOrConnectWithoutChecklistTipoEquipeRelacaoInput
    upsert?: TipoEquipeUpsertWithoutChecklistTipoEquipeRelacaoInput
    connect?: TipoEquipeWhereUniqueInput
    update?: XOR<XOR<TipoEquipeUpdateToOneWithWhereWithoutChecklistTipoEquipeRelacaoInput, TipoEquipeUpdateWithoutChecklistTipoEquipeRelacaoInput>, TipoEquipeUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput>
  }

  export type TipoChecklistUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput = {
    create?: XOR<TipoChecklistCreateWithoutChecklistTipoEquipeRelacaoInput, TipoChecklistUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
    connectOrCreate?: TipoChecklistCreateOrConnectWithoutChecklistTipoEquipeRelacaoInput
    upsert?: TipoChecklistUpsertWithoutChecklistTipoEquipeRelacaoInput
    connect?: TipoChecklistWhereUniqueInput
    update?: XOR<XOR<TipoChecklistUpdateToOneWithWhereWithoutChecklistTipoEquipeRelacaoInput, TipoChecklistUpdateWithoutChecklistTipoEquipeRelacaoInput>, TipoChecklistUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput>
  }

  export type VeiculoCreateNestedManyWithoutContratoInput = {
    create?: XOR<VeiculoCreateWithoutContratoInput, VeiculoUncheckedCreateWithoutContratoInput> | VeiculoCreateWithoutContratoInput[] | VeiculoUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: VeiculoCreateOrConnectWithoutContratoInput | VeiculoCreateOrConnectWithoutContratoInput[]
    createMany?: VeiculoCreateManyContratoInputEnvelope
    connect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
  }

  export type EletricistaCreateNestedManyWithoutContratoInput = {
    create?: XOR<EletricistaCreateWithoutContratoInput, EletricistaUncheckedCreateWithoutContratoInput> | EletricistaCreateWithoutContratoInput[] | EletricistaUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: EletricistaCreateOrConnectWithoutContratoInput | EletricistaCreateOrConnectWithoutContratoInput[]
    createMany?: EletricistaCreateManyContratoInputEnvelope
    connect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
  }

  export type EquipeCreateNestedManyWithoutContratoInput = {
    create?: XOR<EquipeCreateWithoutContratoInput, EquipeUncheckedCreateWithoutContratoInput> | EquipeCreateWithoutContratoInput[] | EquipeUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: EquipeCreateOrConnectWithoutContratoInput | EquipeCreateOrConnectWithoutContratoInput[]
    createMany?: EquipeCreateManyContratoInputEnvelope
    connect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
  }

  export type SupervisorCreateNestedManyWithoutContratoInput = {
    create?: XOR<SupervisorCreateWithoutContratoInput, SupervisorUncheckedCreateWithoutContratoInput> | SupervisorCreateWithoutContratoInput[] | SupervisorUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: SupervisorCreateOrConnectWithoutContratoInput | SupervisorCreateOrConnectWithoutContratoInput[]
    createMany?: SupervisorCreateManyContratoInputEnvelope
    connect?: SupervisorWhereUniqueInput | SupervisorWhereUniqueInput[]
  }

  export type MobileContratoPermissaoCreateNestedManyWithoutContratoInput = {
    create?: XOR<MobileContratoPermissaoCreateWithoutContratoInput, MobileContratoPermissaoUncheckedCreateWithoutContratoInput> | MobileContratoPermissaoCreateWithoutContratoInput[] | MobileContratoPermissaoUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: MobileContratoPermissaoCreateOrConnectWithoutContratoInput | MobileContratoPermissaoCreateOrConnectWithoutContratoInput[]
    createMany?: MobileContratoPermissaoCreateManyContratoInputEnvelope
    connect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
  }

  export type BaseCreateNestedManyWithoutContratoInput = {
    create?: XOR<BaseCreateWithoutContratoInput, BaseUncheckedCreateWithoutContratoInput> | BaseCreateWithoutContratoInput[] | BaseUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: BaseCreateOrConnectWithoutContratoInput | BaseCreateOrConnectWithoutContratoInput[]
    createMany?: BaseCreateManyContratoInputEnvelope
    connect?: BaseWhereUniqueInput | BaseWhereUniqueInput[]
  }

  export type VeiculoUncheckedCreateNestedManyWithoutContratoInput = {
    create?: XOR<VeiculoCreateWithoutContratoInput, VeiculoUncheckedCreateWithoutContratoInput> | VeiculoCreateWithoutContratoInput[] | VeiculoUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: VeiculoCreateOrConnectWithoutContratoInput | VeiculoCreateOrConnectWithoutContratoInput[]
    createMany?: VeiculoCreateManyContratoInputEnvelope
    connect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
  }

  export type EletricistaUncheckedCreateNestedManyWithoutContratoInput = {
    create?: XOR<EletricistaCreateWithoutContratoInput, EletricistaUncheckedCreateWithoutContratoInput> | EletricistaCreateWithoutContratoInput[] | EletricistaUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: EletricistaCreateOrConnectWithoutContratoInput | EletricistaCreateOrConnectWithoutContratoInput[]
    createMany?: EletricistaCreateManyContratoInputEnvelope
    connect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
  }

  export type EquipeUncheckedCreateNestedManyWithoutContratoInput = {
    create?: XOR<EquipeCreateWithoutContratoInput, EquipeUncheckedCreateWithoutContratoInput> | EquipeCreateWithoutContratoInput[] | EquipeUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: EquipeCreateOrConnectWithoutContratoInput | EquipeCreateOrConnectWithoutContratoInput[]
    createMany?: EquipeCreateManyContratoInputEnvelope
    connect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
  }

  export type SupervisorUncheckedCreateNestedManyWithoutContratoInput = {
    create?: XOR<SupervisorCreateWithoutContratoInput, SupervisorUncheckedCreateWithoutContratoInput> | SupervisorCreateWithoutContratoInput[] | SupervisorUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: SupervisorCreateOrConnectWithoutContratoInput | SupervisorCreateOrConnectWithoutContratoInput[]
    createMany?: SupervisorCreateManyContratoInputEnvelope
    connect?: SupervisorWhereUniqueInput | SupervisorWhereUniqueInput[]
  }

  export type MobileContratoPermissaoUncheckedCreateNestedManyWithoutContratoInput = {
    create?: XOR<MobileContratoPermissaoCreateWithoutContratoInput, MobileContratoPermissaoUncheckedCreateWithoutContratoInput> | MobileContratoPermissaoCreateWithoutContratoInput[] | MobileContratoPermissaoUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: MobileContratoPermissaoCreateOrConnectWithoutContratoInput | MobileContratoPermissaoCreateOrConnectWithoutContratoInput[]
    createMany?: MobileContratoPermissaoCreateManyContratoInputEnvelope
    connect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
  }

  export type BaseUncheckedCreateNestedManyWithoutContratoInput = {
    create?: XOR<BaseCreateWithoutContratoInput, BaseUncheckedCreateWithoutContratoInput> | BaseCreateWithoutContratoInput[] | BaseUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: BaseCreateOrConnectWithoutContratoInput | BaseCreateOrConnectWithoutContratoInput[]
    createMany?: BaseCreateManyContratoInputEnvelope
    connect?: BaseWhereUniqueInput | BaseWhereUniqueInput[]
  }

  export type VeiculoUpdateManyWithoutContratoNestedInput = {
    create?: XOR<VeiculoCreateWithoutContratoInput, VeiculoUncheckedCreateWithoutContratoInput> | VeiculoCreateWithoutContratoInput[] | VeiculoUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: VeiculoCreateOrConnectWithoutContratoInput | VeiculoCreateOrConnectWithoutContratoInput[]
    upsert?: VeiculoUpsertWithWhereUniqueWithoutContratoInput | VeiculoUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: VeiculoCreateManyContratoInputEnvelope
    set?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    disconnect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    delete?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    connect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    update?: VeiculoUpdateWithWhereUniqueWithoutContratoInput | VeiculoUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: VeiculoUpdateManyWithWhereWithoutContratoInput | VeiculoUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: VeiculoScalarWhereInput | VeiculoScalarWhereInput[]
  }

  export type EletricistaUpdateManyWithoutContratoNestedInput = {
    create?: XOR<EletricistaCreateWithoutContratoInput, EletricistaUncheckedCreateWithoutContratoInput> | EletricistaCreateWithoutContratoInput[] | EletricistaUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: EletricistaCreateOrConnectWithoutContratoInput | EletricistaCreateOrConnectWithoutContratoInput[]
    upsert?: EletricistaUpsertWithWhereUniqueWithoutContratoInput | EletricistaUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: EletricistaCreateManyContratoInputEnvelope
    set?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    disconnect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    delete?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    connect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    update?: EletricistaUpdateWithWhereUniqueWithoutContratoInput | EletricistaUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: EletricistaUpdateManyWithWhereWithoutContratoInput | EletricistaUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: EletricistaScalarWhereInput | EletricistaScalarWhereInput[]
  }

  export type EquipeUpdateManyWithoutContratoNestedInput = {
    create?: XOR<EquipeCreateWithoutContratoInput, EquipeUncheckedCreateWithoutContratoInput> | EquipeCreateWithoutContratoInput[] | EquipeUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: EquipeCreateOrConnectWithoutContratoInput | EquipeCreateOrConnectWithoutContratoInput[]
    upsert?: EquipeUpsertWithWhereUniqueWithoutContratoInput | EquipeUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: EquipeCreateManyContratoInputEnvelope
    set?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    disconnect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    delete?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    connect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    update?: EquipeUpdateWithWhereUniqueWithoutContratoInput | EquipeUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: EquipeUpdateManyWithWhereWithoutContratoInput | EquipeUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: EquipeScalarWhereInput | EquipeScalarWhereInput[]
  }

  export type SupervisorUpdateManyWithoutContratoNestedInput = {
    create?: XOR<SupervisorCreateWithoutContratoInput, SupervisorUncheckedCreateWithoutContratoInput> | SupervisorCreateWithoutContratoInput[] | SupervisorUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: SupervisorCreateOrConnectWithoutContratoInput | SupervisorCreateOrConnectWithoutContratoInput[]
    upsert?: SupervisorUpsertWithWhereUniqueWithoutContratoInput | SupervisorUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: SupervisorCreateManyContratoInputEnvelope
    set?: SupervisorWhereUniqueInput | SupervisorWhereUniqueInput[]
    disconnect?: SupervisorWhereUniqueInput | SupervisorWhereUniqueInput[]
    delete?: SupervisorWhereUniqueInput | SupervisorWhereUniqueInput[]
    connect?: SupervisorWhereUniqueInput | SupervisorWhereUniqueInput[]
    update?: SupervisorUpdateWithWhereUniqueWithoutContratoInput | SupervisorUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: SupervisorUpdateManyWithWhereWithoutContratoInput | SupervisorUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: SupervisorScalarWhereInput | SupervisorScalarWhereInput[]
  }

  export type MobileContratoPermissaoUpdateManyWithoutContratoNestedInput = {
    create?: XOR<MobileContratoPermissaoCreateWithoutContratoInput, MobileContratoPermissaoUncheckedCreateWithoutContratoInput> | MobileContratoPermissaoCreateWithoutContratoInput[] | MobileContratoPermissaoUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: MobileContratoPermissaoCreateOrConnectWithoutContratoInput | MobileContratoPermissaoCreateOrConnectWithoutContratoInput[]
    upsert?: MobileContratoPermissaoUpsertWithWhereUniqueWithoutContratoInput | MobileContratoPermissaoUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: MobileContratoPermissaoCreateManyContratoInputEnvelope
    set?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    disconnect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    delete?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    connect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    update?: MobileContratoPermissaoUpdateWithWhereUniqueWithoutContratoInput | MobileContratoPermissaoUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: MobileContratoPermissaoUpdateManyWithWhereWithoutContratoInput | MobileContratoPermissaoUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: MobileContratoPermissaoScalarWhereInput | MobileContratoPermissaoScalarWhereInput[]
  }

  export type BaseUpdateManyWithoutContratoNestedInput = {
    create?: XOR<BaseCreateWithoutContratoInput, BaseUncheckedCreateWithoutContratoInput> | BaseCreateWithoutContratoInput[] | BaseUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: BaseCreateOrConnectWithoutContratoInput | BaseCreateOrConnectWithoutContratoInput[]
    upsert?: BaseUpsertWithWhereUniqueWithoutContratoInput | BaseUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: BaseCreateManyContratoInputEnvelope
    set?: BaseWhereUniqueInput | BaseWhereUniqueInput[]
    disconnect?: BaseWhereUniqueInput | BaseWhereUniqueInput[]
    delete?: BaseWhereUniqueInput | BaseWhereUniqueInput[]
    connect?: BaseWhereUniqueInput | BaseWhereUniqueInput[]
    update?: BaseUpdateWithWhereUniqueWithoutContratoInput | BaseUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: BaseUpdateManyWithWhereWithoutContratoInput | BaseUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: BaseScalarWhereInput | BaseScalarWhereInput[]
  }

  export type VeiculoUncheckedUpdateManyWithoutContratoNestedInput = {
    create?: XOR<VeiculoCreateWithoutContratoInput, VeiculoUncheckedCreateWithoutContratoInput> | VeiculoCreateWithoutContratoInput[] | VeiculoUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: VeiculoCreateOrConnectWithoutContratoInput | VeiculoCreateOrConnectWithoutContratoInput[]
    upsert?: VeiculoUpsertWithWhereUniqueWithoutContratoInput | VeiculoUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: VeiculoCreateManyContratoInputEnvelope
    set?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    disconnect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    delete?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    connect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    update?: VeiculoUpdateWithWhereUniqueWithoutContratoInput | VeiculoUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: VeiculoUpdateManyWithWhereWithoutContratoInput | VeiculoUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: VeiculoScalarWhereInput | VeiculoScalarWhereInput[]
  }

  export type EletricistaUncheckedUpdateManyWithoutContratoNestedInput = {
    create?: XOR<EletricistaCreateWithoutContratoInput, EletricistaUncheckedCreateWithoutContratoInput> | EletricistaCreateWithoutContratoInput[] | EletricistaUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: EletricistaCreateOrConnectWithoutContratoInput | EletricistaCreateOrConnectWithoutContratoInput[]
    upsert?: EletricistaUpsertWithWhereUniqueWithoutContratoInput | EletricistaUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: EletricistaCreateManyContratoInputEnvelope
    set?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    disconnect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    delete?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    connect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    update?: EletricistaUpdateWithWhereUniqueWithoutContratoInput | EletricistaUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: EletricistaUpdateManyWithWhereWithoutContratoInput | EletricistaUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: EletricistaScalarWhereInput | EletricistaScalarWhereInput[]
  }

  export type EquipeUncheckedUpdateManyWithoutContratoNestedInput = {
    create?: XOR<EquipeCreateWithoutContratoInput, EquipeUncheckedCreateWithoutContratoInput> | EquipeCreateWithoutContratoInput[] | EquipeUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: EquipeCreateOrConnectWithoutContratoInput | EquipeCreateOrConnectWithoutContratoInput[]
    upsert?: EquipeUpsertWithWhereUniqueWithoutContratoInput | EquipeUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: EquipeCreateManyContratoInputEnvelope
    set?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    disconnect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    delete?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    connect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    update?: EquipeUpdateWithWhereUniqueWithoutContratoInput | EquipeUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: EquipeUpdateManyWithWhereWithoutContratoInput | EquipeUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: EquipeScalarWhereInput | EquipeScalarWhereInput[]
  }

  export type SupervisorUncheckedUpdateManyWithoutContratoNestedInput = {
    create?: XOR<SupervisorCreateWithoutContratoInput, SupervisorUncheckedCreateWithoutContratoInput> | SupervisorCreateWithoutContratoInput[] | SupervisorUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: SupervisorCreateOrConnectWithoutContratoInput | SupervisorCreateOrConnectWithoutContratoInput[]
    upsert?: SupervisorUpsertWithWhereUniqueWithoutContratoInput | SupervisorUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: SupervisorCreateManyContratoInputEnvelope
    set?: SupervisorWhereUniqueInput | SupervisorWhereUniqueInput[]
    disconnect?: SupervisorWhereUniqueInput | SupervisorWhereUniqueInput[]
    delete?: SupervisorWhereUniqueInput | SupervisorWhereUniqueInput[]
    connect?: SupervisorWhereUniqueInput | SupervisorWhereUniqueInput[]
    update?: SupervisorUpdateWithWhereUniqueWithoutContratoInput | SupervisorUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: SupervisorUpdateManyWithWhereWithoutContratoInput | SupervisorUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: SupervisorScalarWhereInput | SupervisorScalarWhereInput[]
  }

  export type MobileContratoPermissaoUncheckedUpdateManyWithoutContratoNestedInput = {
    create?: XOR<MobileContratoPermissaoCreateWithoutContratoInput, MobileContratoPermissaoUncheckedCreateWithoutContratoInput> | MobileContratoPermissaoCreateWithoutContratoInput[] | MobileContratoPermissaoUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: MobileContratoPermissaoCreateOrConnectWithoutContratoInput | MobileContratoPermissaoCreateOrConnectWithoutContratoInput[]
    upsert?: MobileContratoPermissaoUpsertWithWhereUniqueWithoutContratoInput | MobileContratoPermissaoUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: MobileContratoPermissaoCreateManyContratoInputEnvelope
    set?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    disconnect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    delete?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    connect?: MobileContratoPermissaoWhereUniqueInput | MobileContratoPermissaoWhereUniqueInput[]
    update?: MobileContratoPermissaoUpdateWithWhereUniqueWithoutContratoInput | MobileContratoPermissaoUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: MobileContratoPermissaoUpdateManyWithWhereWithoutContratoInput | MobileContratoPermissaoUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: MobileContratoPermissaoScalarWhereInput | MobileContratoPermissaoScalarWhereInput[]
  }

  export type BaseUncheckedUpdateManyWithoutContratoNestedInput = {
    create?: XOR<BaseCreateWithoutContratoInput, BaseUncheckedCreateWithoutContratoInput> | BaseCreateWithoutContratoInput[] | BaseUncheckedCreateWithoutContratoInput[]
    connectOrCreate?: BaseCreateOrConnectWithoutContratoInput | BaseCreateOrConnectWithoutContratoInput[]
    upsert?: BaseUpsertWithWhereUniqueWithoutContratoInput | BaseUpsertWithWhereUniqueWithoutContratoInput[]
    createMany?: BaseCreateManyContratoInputEnvelope
    set?: BaseWhereUniqueInput | BaseWhereUniqueInput[]
    disconnect?: BaseWhereUniqueInput | BaseWhereUniqueInput[]
    delete?: BaseWhereUniqueInput | BaseWhereUniqueInput[]
    connect?: BaseWhereUniqueInput | BaseWhereUniqueInput[]
    update?: BaseUpdateWithWhereUniqueWithoutContratoInput | BaseUpdateWithWhereUniqueWithoutContratoInput[]
    updateMany?: BaseUpdateManyWithWhereWithoutContratoInput | BaseUpdateManyWithWhereWithoutContratoInput[]
    deleteMany?: BaseScalarWhereInput | BaseScalarWhereInput[]
  }

  export type ContratoCreateNestedOneWithoutMobileContratoPermissaoInput = {
    create?: XOR<ContratoCreateWithoutMobileContratoPermissaoInput, ContratoUncheckedCreateWithoutMobileContratoPermissaoInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutMobileContratoPermissaoInput
    connect?: ContratoWhereUniqueInput
  }

  export type MobileUserCreateNestedOneWithoutMobileContratoPermissaoInput = {
    create?: XOR<MobileUserCreateWithoutMobileContratoPermissaoInput, MobileUserUncheckedCreateWithoutMobileContratoPermissaoInput>
    connectOrCreate?: MobileUserCreateOrConnectWithoutMobileContratoPermissaoInput
    connect?: MobileUserWhereUniqueInput
  }

  export type ContratoUpdateOneRequiredWithoutMobileContratoPermissaoNestedInput = {
    create?: XOR<ContratoCreateWithoutMobileContratoPermissaoInput, ContratoUncheckedCreateWithoutMobileContratoPermissaoInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutMobileContratoPermissaoInput
    upsert?: ContratoUpsertWithoutMobileContratoPermissaoInput
    connect?: ContratoWhereUniqueInput
    update?: XOR<XOR<ContratoUpdateToOneWithWhereWithoutMobileContratoPermissaoInput, ContratoUpdateWithoutMobileContratoPermissaoInput>, ContratoUncheckedUpdateWithoutMobileContratoPermissaoInput>
  }

  export type MobileUserUpdateOneRequiredWithoutMobileContratoPermissaoNestedInput = {
    create?: XOR<MobileUserCreateWithoutMobileContratoPermissaoInput, MobileUserUncheckedCreateWithoutMobileContratoPermissaoInput>
    connectOrCreate?: MobileUserCreateOrConnectWithoutMobileContratoPermissaoInput
    upsert?: MobileUserUpsertWithoutMobileContratoPermissaoInput
    connect?: MobileUserWhereUniqueInput
    update?: XOR<XOR<MobileUserUpdateToOneWithWhereWithoutMobileContratoPermissaoInput, MobileUserUpdateWithoutMobileContratoPermissaoInput>, MobileUserUncheckedUpdateWithoutMobileContratoPermissaoInput>
  }

  export type EletricistaCreateNestedOneWithoutEletricistaBaseHistoricoInput = {
    create?: XOR<EletricistaCreateWithoutEletricistaBaseHistoricoInput, EletricistaUncheckedCreateWithoutEletricistaBaseHistoricoInput>
    connectOrCreate?: EletricistaCreateOrConnectWithoutEletricistaBaseHistoricoInput
    connect?: EletricistaWhereUniqueInput
  }

  export type BaseCreateNestedOneWithoutEletricistaBaseHistoricoInput = {
    create?: XOR<BaseCreateWithoutEletricistaBaseHistoricoInput, BaseUncheckedCreateWithoutEletricistaBaseHistoricoInput>
    connectOrCreate?: BaseCreateOrConnectWithoutEletricistaBaseHistoricoInput
    connect?: BaseWhereUniqueInput
  }

  export type EletricistaUpdateOneRequiredWithoutEletricistaBaseHistoricoNestedInput = {
    create?: XOR<EletricistaCreateWithoutEletricistaBaseHistoricoInput, EletricistaUncheckedCreateWithoutEletricistaBaseHistoricoInput>
    connectOrCreate?: EletricistaCreateOrConnectWithoutEletricistaBaseHistoricoInput
    upsert?: EletricistaUpsertWithoutEletricistaBaseHistoricoInput
    connect?: EletricistaWhereUniqueInput
    update?: XOR<XOR<EletricistaUpdateToOneWithWhereWithoutEletricistaBaseHistoricoInput, EletricistaUpdateWithoutEletricistaBaseHistoricoInput>, EletricistaUncheckedUpdateWithoutEletricistaBaseHistoricoInput>
  }

  export type BaseUpdateOneRequiredWithoutEletricistaBaseHistoricoNestedInput = {
    create?: XOR<BaseCreateWithoutEletricistaBaseHistoricoInput, BaseUncheckedCreateWithoutEletricistaBaseHistoricoInput>
    connectOrCreate?: BaseCreateOrConnectWithoutEletricistaBaseHistoricoInput
    upsert?: BaseUpsertWithoutEletricistaBaseHistoricoInput
    connect?: BaseWhereUniqueInput
    update?: XOR<XOR<BaseUpdateToOneWithWhereWithoutEletricistaBaseHistoricoInput, BaseUpdateWithoutEletricistaBaseHistoricoInput>, BaseUncheckedUpdateWithoutEletricistaBaseHistoricoInput>
  }

  export type CargoCreateNestedOneWithoutEletricistaInput = {
    create?: XOR<CargoCreateWithoutEletricistaInput, CargoUncheckedCreateWithoutEletricistaInput>
    connectOrCreate?: CargoCreateOrConnectWithoutEletricistaInput
    connect?: CargoWhereUniqueInput
  }

  export type ContratoCreateNestedOneWithoutEletricistaInput = {
    create?: XOR<ContratoCreateWithoutEletricistaInput, ContratoUncheckedCreateWithoutEletricistaInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutEletricistaInput
    connect?: ContratoWhereUniqueInput
  }

  export type TurnoEletricistaCreateNestedManyWithoutEletricistaInput = {
    create?: XOR<TurnoEletricistaCreateWithoutEletricistaInput, TurnoEletricistaUncheckedCreateWithoutEletricistaInput> | TurnoEletricistaCreateWithoutEletricistaInput[] | TurnoEletricistaUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: TurnoEletricistaCreateOrConnectWithoutEletricistaInput | TurnoEletricistaCreateOrConnectWithoutEletricistaInput[]
    createMany?: TurnoEletricistaCreateManyEletricistaInputEnvelope
    connect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
  }

  export type EletricistaBaseHistoricoCreateNestedManyWithoutEletricistaInput = {
    create?: XOR<EletricistaBaseHistoricoCreateWithoutEletricistaInput, EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput> | EletricistaBaseHistoricoCreateWithoutEletricistaInput[] | EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: EletricistaBaseHistoricoCreateOrConnectWithoutEletricistaInput | EletricistaBaseHistoricoCreateOrConnectWithoutEletricistaInput[]
    createMany?: EletricistaBaseHistoricoCreateManyEletricistaInputEnvelope
    connect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
  }

  export type EventoCoberturaCreateNestedManyWithoutEletricistaCobrindoInput = {
    create?: XOR<EventoCoberturaCreateWithoutEletricistaCobrindoInput, EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput> | EventoCoberturaCreateWithoutEletricistaCobrindoInput[] | EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput[]
    connectOrCreate?: EventoCoberturaCreateOrConnectWithoutEletricistaCobrindoInput | EventoCoberturaCreateOrConnectWithoutEletricistaCobrindoInput[]
    createMany?: EventoCoberturaCreateManyEletricistaCobrindoInputEnvelope
    connect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
  }

  export type SlotEscalaCreateNestedManyWithoutEletricistaInput = {
    create?: XOR<SlotEscalaCreateWithoutEletricistaInput, SlotEscalaUncheckedCreateWithoutEletricistaInput> | SlotEscalaCreateWithoutEletricistaInput[] | SlotEscalaUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: SlotEscalaCreateOrConnectWithoutEletricistaInput | SlotEscalaCreateOrConnectWithoutEletricistaInput[]
    createMany?: SlotEscalaCreateManyEletricistaInputEnvelope
    connect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
  }

  export type TurnoEletricistaUncheckedCreateNestedManyWithoutEletricistaInput = {
    create?: XOR<TurnoEletricistaCreateWithoutEletricistaInput, TurnoEletricistaUncheckedCreateWithoutEletricistaInput> | TurnoEletricistaCreateWithoutEletricistaInput[] | TurnoEletricistaUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: TurnoEletricistaCreateOrConnectWithoutEletricistaInput | TurnoEletricistaCreateOrConnectWithoutEletricistaInput[]
    createMany?: TurnoEletricistaCreateManyEletricistaInputEnvelope
    connect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
  }

  export type EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutEletricistaInput = {
    create?: XOR<EletricistaBaseHistoricoCreateWithoutEletricistaInput, EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput> | EletricistaBaseHistoricoCreateWithoutEletricistaInput[] | EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: EletricistaBaseHistoricoCreateOrConnectWithoutEletricistaInput | EletricistaBaseHistoricoCreateOrConnectWithoutEletricistaInput[]
    createMany?: EletricistaBaseHistoricoCreateManyEletricistaInputEnvelope
    connect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
  }

  export type EventoCoberturaUncheckedCreateNestedManyWithoutEletricistaCobrindoInput = {
    create?: XOR<EventoCoberturaCreateWithoutEletricistaCobrindoInput, EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput> | EventoCoberturaCreateWithoutEletricistaCobrindoInput[] | EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput[]
    connectOrCreate?: EventoCoberturaCreateOrConnectWithoutEletricistaCobrindoInput | EventoCoberturaCreateOrConnectWithoutEletricistaCobrindoInput[]
    createMany?: EventoCoberturaCreateManyEletricistaCobrindoInputEnvelope
    connect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
  }

  export type SlotEscalaUncheckedCreateNestedManyWithoutEletricistaInput = {
    create?: XOR<SlotEscalaCreateWithoutEletricistaInput, SlotEscalaUncheckedCreateWithoutEletricistaInput> | SlotEscalaCreateWithoutEletricistaInput[] | SlotEscalaUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: SlotEscalaCreateOrConnectWithoutEletricistaInput | SlotEscalaCreateOrConnectWithoutEletricistaInput[]
    createMany?: SlotEscalaCreateManyEletricistaInputEnvelope
    connect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
  }

  export type CargoUpdateOneRequiredWithoutEletricistaNestedInput = {
    create?: XOR<CargoCreateWithoutEletricistaInput, CargoUncheckedCreateWithoutEletricistaInput>
    connectOrCreate?: CargoCreateOrConnectWithoutEletricistaInput
    upsert?: CargoUpsertWithoutEletricistaInput
    connect?: CargoWhereUniqueInput
    update?: XOR<XOR<CargoUpdateToOneWithWhereWithoutEletricistaInput, CargoUpdateWithoutEletricistaInput>, CargoUncheckedUpdateWithoutEletricistaInput>
  }

  export type ContratoUpdateOneRequiredWithoutEletricistaNestedInput = {
    create?: XOR<ContratoCreateWithoutEletricistaInput, ContratoUncheckedCreateWithoutEletricistaInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutEletricistaInput
    upsert?: ContratoUpsertWithoutEletricistaInput
    connect?: ContratoWhereUniqueInput
    update?: XOR<XOR<ContratoUpdateToOneWithWhereWithoutEletricistaInput, ContratoUpdateWithoutEletricistaInput>, ContratoUncheckedUpdateWithoutEletricistaInput>
  }

  export type TurnoEletricistaUpdateManyWithoutEletricistaNestedInput = {
    create?: XOR<TurnoEletricistaCreateWithoutEletricistaInput, TurnoEletricistaUncheckedCreateWithoutEletricistaInput> | TurnoEletricistaCreateWithoutEletricistaInput[] | TurnoEletricistaUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: TurnoEletricistaCreateOrConnectWithoutEletricistaInput | TurnoEletricistaCreateOrConnectWithoutEletricistaInput[]
    upsert?: TurnoEletricistaUpsertWithWhereUniqueWithoutEletricistaInput | TurnoEletricistaUpsertWithWhereUniqueWithoutEletricistaInput[]
    createMany?: TurnoEletricistaCreateManyEletricistaInputEnvelope
    set?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    disconnect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    delete?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    connect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    update?: TurnoEletricistaUpdateWithWhereUniqueWithoutEletricistaInput | TurnoEletricistaUpdateWithWhereUniqueWithoutEletricistaInput[]
    updateMany?: TurnoEletricistaUpdateManyWithWhereWithoutEletricistaInput | TurnoEletricistaUpdateManyWithWhereWithoutEletricistaInput[]
    deleteMany?: TurnoEletricistaScalarWhereInput | TurnoEletricistaScalarWhereInput[]
  }

  export type EletricistaBaseHistoricoUpdateManyWithoutEletricistaNestedInput = {
    create?: XOR<EletricistaBaseHistoricoCreateWithoutEletricistaInput, EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput> | EletricistaBaseHistoricoCreateWithoutEletricistaInput[] | EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: EletricistaBaseHistoricoCreateOrConnectWithoutEletricistaInput | EletricistaBaseHistoricoCreateOrConnectWithoutEletricistaInput[]
    upsert?: EletricistaBaseHistoricoUpsertWithWhereUniqueWithoutEletricistaInput | EletricistaBaseHistoricoUpsertWithWhereUniqueWithoutEletricistaInput[]
    createMany?: EletricistaBaseHistoricoCreateManyEletricistaInputEnvelope
    set?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    disconnect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    delete?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    connect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    update?: EletricistaBaseHistoricoUpdateWithWhereUniqueWithoutEletricistaInput | EletricistaBaseHistoricoUpdateWithWhereUniqueWithoutEletricistaInput[]
    updateMany?: EletricistaBaseHistoricoUpdateManyWithWhereWithoutEletricistaInput | EletricistaBaseHistoricoUpdateManyWithWhereWithoutEletricistaInput[]
    deleteMany?: EletricistaBaseHistoricoScalarWhereInput | EletricistaBaseHistoricoScalarWhereInput[]
  }

  export type EventoCoberturaUpdateManyWithoutEletricistaCobrindoNestedInput = {
    create?: XOR<EventoCoberturaCreateWithoutEletricistaCobrindoInput, EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput> | EventoCoberturaCreateWithoutEletricistaCobrindoInput[] | EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput[]
    connectOrCreate?: EventoCoberturaCreateOrConnectWithoutEletricistaCobrindoInput | EventoCoberturaCreateOrConnectWithoutEletricistaCobrindoInput[]
    upsert?: EventoCoberturaUpsertWithWhereUniqueWithoutEletricistaCobrindoInput | EventoCoberturaUpsertWithWhereUniqueWithoutEletricistaCobrindoInput[]
    createMany?: EventoCoberturaCreateManyEletricistaCobrindoInputEnvelope
    set?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    disconnect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    delete?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    connect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    update?: EventoCoberturaUpdateWithWhereUniqueWithoutEletricistaCobrindoInput | EventoCoberturaUpdateWithWhereUniqueWithoutEletricistaCobrindoInput[]
    updateMany?: EventoCoberturaUpdateManyWithWhereWithoutEletricistaCobrindoInput | EventoCoberturaUpdateManyWithWhereWithoutEletricistaCobrindoInput[]
    deleteMany?: EventoCoberturaScalarWhereInput | EventoCoberturaScalarWhereInput[]
  }

  export type SlotEscalaUpdateManyWithoutEletricistaNestedInput = {
    create?: XOR<SlotEscalaCreateWithoutEletricistaInput, SlotEscalaUncheckedCreateWithoutEletricistaInput> | SlotEscalaCreateWithoutEletricistaInput[] | SlotEscalaUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: SlotEscalaCreateOrConnectWithoutEletricistaInput | SlotEscalaCreateOrConnectWithoutEletricistaInput[]
    upsert?: SlotEscalaUpsertWithWhereUniqueWithoutEletricistaInput | SlotEscalaUpsertWithWhereUniqueWithoutEletricistaInput[]
    createMany?: SlotEscalaCreateManyEletricistaInputEnvelope
    set?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    disconnect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    delete?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    connect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    update?: SlotEscalaUpdateWithWhereUniqueWithoutEletricistaInput | SlotEscalaUpdateWithWhereUniqueWithoutEletricistaInput[]
    updateMany?: SlotEscalaUpdateManyWithWhereWithoutEletricistaInput | SlotEscalaUpdateManyWithWhereWithoutEletricistaInput[]
    deleteMany?: SlotEscalaScalarWhereInput | SlotEscalaScalarWhereInput[]
  }

  export type TurnoEletricistaUncheckedUpdateManyWithoutEletricistaNestedInput = {
    create?: XOR<TurnoEletricistaCreateWithoutEletricistaInput, TurnoEletricistaUncheckedCreateWithoutEletricistaInput> | TurnoEletricistaCreateWithoutEletricistaInput[] | TurnoEletricistaUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: TurnoEletricistaCreateOrConnectWithoutEletricistaInput | TurnoEletricistaCreateOrConnectWithoutEletricistaInput[]
    upsert?: TurnoEletricistaUpsertWithWhereUniqueWithoutEletricistaInput | TurnoEletricistaUpsertWithWhereUniqueWithoutEletricistaInput[]
    createMany?: TurnoEletricistaCreateManyEletricistaInputEnvelope
    set?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    disconnect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    delete?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    connect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    update?: TurnoEletricistaUpdateWithWhereUniqueWithoutEletricistaInput | TurnoEletricistaUpdateWithWhereUniqueWithoutEletricistaInput[]
    updateMany?: TurnoEletricistaUpdateManyWithWhereWithoutEletricistaInput | TurnoEletricistaUpdateManyWithWhereWithoutEletricistaInput[]
    deleteMany?: TurnoEletricistaScalarWhereInput | TurnoEletricistaScalarWhereInput[]
  }

  export type EletricistaBaseHistoricoUncheckedUpdateManyWithoutEletricistaNestedInput = {
    create?: XOR<EletricistaBaseHistoricoCreateWithoutEletricistaInput, EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput> | EletricistaBaseHistoricoCreateWithoutEletricistaInput[] | EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: EletricistaBaseHistoricoCreateOrConnectWithoutEletricistaInput | EletricistaBaseHistoricoCreateOrConnectWithoutEletricistaInput[]
    upsert?: EletricistaBaseHistoricoUpsertWithWhereUniqueWithoutEletricistaInput | EletricistaBaseHistoricoUpsertWithWhereUniqueWithoutEletricistaInput[]
    createMany?: EletricistaBaseHistoricoCreateManyEletricistaInputEnvelope
    set?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    disconnect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    delete?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    connect?: EletricistaBaseHistoricoWhereUniqueInput | EletricistaBaseHistoricoWhereUniqueInput[]
    update?: EletricistaBaseHistoricoUpdateWithWhereUniqueWithoutEletricistaInput | EletricistaBaseHistoricoUpdateWithWhereUniqueWithoutEletricistaInput[]
    updateMany?: EletricistaBaseHistoricoUpdateManyWithWhereWithoutEletricistaInput | EletricistaBaseHistoricoUpdateManyWithWhereWithoutEletricistaInput[]
    deleteMany?: EletricistaBaseHistoricoScalarWhereInput | EletricistaBaseHistoricoScalarWhereInput[]
  }

  export type EventoCoberturaUncheckedUpdateManyWithoutEletricistaCobrindoNestedInput = {
    create?: XOR<EventoCoberturaCreateWithoutEletricistaCobrindoInput, EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput> | EventoCoberturaCreateWithoutEletricistaCobrindoInput[] | EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput[]
    connectOrCreate?: EventoCoberturaCreateOrConnectWithoutEletricistaCobrindoInput | EventoCoberturaCreateOrConnectWithoutEletricistaCobrindoInput[]
    upsert?: EventoCoberturaUpsertWithWhereUniqueWithoutEletricistaCobrindoInput | EventoCoberturaUpsertWithWhereUniqueWithoutEletricistaCobrindoInput[]
    createMany?: EventoCoberturaCreateManyEletricistaCobrindoInputEnvelope
    set?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    disconnect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    delete?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    connect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    update?: EventoCoberturaUpdateWithWhereUniqueWithoutEletricistaCobrindoInput | EventoCoberturaUpdateWithWhereUniqueWithoutEletricistaCobrindoInput[]
    updateMany?: EventoCoberturaUpdateManyWithWhereWithoutEletricistaCobrindoInput | EventoCoberturaUpdateManyWithWhereWithoutEletricistaCobrindoInput[]
    deleteMany?: EventoCoberturaScalarWhereInput | EventoCoberturaScalarWhereInput[]
  }

  export type SlotEscalaUncheckedUpdateManyWithoutEletricistaNestedInput = {
    create?: XOR<SlotEscalaCreateWithoutEletricistaInput, SlotEscalaUncheckedCreateWithoutEletricistaInput> | SlotEscalaCreateWithoutEletricistaInput[] | SlotEscalaUncheckedCreateWithoutEletricistaInput[]
    connectOrCreate?: SlotEscalaCreateOrConnectWithoutEletricistaInput | SlotEscalaCreateOrConnectWithoutEletricistaInput[]
    upsert?: SlotEscalaUpsertWithWhereUniqueWithoutEletricistaInput | SlotEscalaUpsertWithWhereUniqueWithoutEletricistaInput[]
    createMany?: SlotEscalaCreateManyEletricistaInputEnvelope
    set?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    disconnect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    delete?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    connect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    update?: SlotEscalaUpdateWithWhereUniqueWithoutEletricistaInput | SlotEscalaUpdateWithWhereUniqueWithoutEletricistaInput[]
    updateMany?: SlotEscalaUpdateManyWithWhereWithoutEletricistaInput | SlotEscalaUpdateManyWithWhereWithoutEletricistaInput[]
    deleteMany?: SlotEscalaScalarWhereInput | SlotEscalaScalarWhereInput[]
  }

  export type EletricistaCreateNestedManyWithoutCargoInput = {
    create?: XOR<EletricistaCreateWithoutCargoInput, EletricistaUncheckedCreateWithoutCargoInput> | EletricistaCreateWithoutCargoInput[] | EletricistaUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: EletricistaCreateOrConnectWithoutCargoInput | EletricistaCreateOrConnectWithoutCargoInput[]
    createMany?: EletricistaCreateManyCargoInputEnvelope
    connect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
  }

  export type EletricistaUncheckedCreateNestedManyWithoutCargoInput = {
    create?: XOR<EletricistaCreateWithoutCargoInput, EletricistaUncheckedCreateWithoutCargoInput> | EletricistaCreateWithoutCargoInput[] | EletricistaUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: EletricistaCreateOrConnectWithoutCargoInput | EletricistaCreateOrConnectWithoutCargoInput[]
    createMany?: EletricistaCreateManyCargoInputEnvelope
    connect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EletricistaUpdateManyWithoutCargoNestedInput = {
    create?: XOR<EletricistaCreateWithoutCargoInput, EletricistaUncheckedCreateWithoutCargoInput> | EletricistaCreateWithoutCargoInput[] | EletricistaUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: EletricistaCreateOrConnectWithoutCargoInput | EletricistaCreateOrConnectWithoutCargoInput[]
    upsert?: EletricistaUpsertWithWhereUniqueWithoutCargoInput | EletricistaUpsertWithWhereUniqueWithoutCargoInput[]
    createMany?: EletricistaCreateManyCargoInputEnvelope
    set?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    disconnect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    delete?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    connect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    update?: EletricistaUpdateWithWhereUniqueWithoutCargoInput | EletricistaUpdateWithWhereUniqueWithoutCargoInput[]
    updateMany?: EletricistaUpdateManyWithWhereWithoutCargoInput | EletricistaUpdateManyWithWhereWithoutCargoInput[]
    deleteMany?: EletricistaScalarWhereInput | EletricistaScalarWhereInput[]
  }

  export type EletricistaUncheckedUpdateManyWithoutCargoNestedInput = {
    create?: XOR<EletricistaCreateWithoutCargoInput, EletricistaUncheckedCreateWithoutCargoInput> | EletricistaCreateWithoutCargoInput[] | EletricistaUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: EletricistaCreateOrConnectWithoutCargoInput | EletricistaCreateOrConnectWithoutCargoInput[]
    upsert?: EletricistaUpsertWithWhereUniqueWithoutCargoInput | EletricistaUpsertWithWhereUniqueWithoutCargoInput[]
    createMany?: EletricistaCreateManyCargoInputEnvelope
    set?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    disconnect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    delete?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    connect?: EletricistaWhereUniqueInput | EletricistaWhereUniqueInput[]
    update?: EletricistaUpdateWithWhereUniqueWithoutCargoInput | EletricistaUpdateWithWhereUniqueWithoutCargoInput[]
    updateMany?: EletricistaUpdateManyWithWhereWithoutCargoInput | EletricistaUpdateManyWithWhereWithoutCargoInput[]
    deleteMany?: EletricistaScalarWhereInput | EletricistaScalarWhereInput[]
  }

  export type EquipeCreateNestedOneWithoutEquipeBaseHistoricoInput = {
    create?: XOR<EquipeCreateWithoutEquipeBaseHistoricoInput, EquipeUncheckedCreateWithoutEquipeBaseHistoricoInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutEquipeBaseHistoricoInput
    connect?: EquipeWhereUniqueInput
  }

  export type BaseCreateNestedOneWithoutEquipeBaseHistoricoInput = {
    create?: XOR<BaseCreateWithoutEquipeBaseHistoricoInput, BaseUncheckedCreateWithoutEquipeBaseHistoricoInput>
    connectOrCreate?: BaseCreateOrConnectWithoutEquipeBaseHistoricoInput
    connect?: BaseWhereUniqueInput
  }

  export type EquipeUpdateOneRequiredWithoutEquipeBaseHistoricoNestedInput = {
    create?: XOR<EquipeCreateWithoutEquipeBaseHistoricoInput, EquipeUncheckedCreateWithoutEquipeBaseHistoricoInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutEquipeBaseHistoricoInput
    upsert?: EquipeUpsertWithoutEquipeBaseHistoricoInput
    connect?: EquipeWhereUniqueInput
    update?: XOR<XOR<EquipeUpdateToOneWithWhereWithoutEquipeBaseHistoricoInput, EquipeUpdateWithoutEquipeBaseHistoricoInput>, EquipeUncheckedUpdateWithoutEquipeBaseHistoricoInput>
  }

  export type BaseUpdateOneRequiredWithoutEquipeBaseHistoricoNestedInput = {
    create?: XOR<BaseCreateWithoutEquipeBaseHistoricoInput, BaseUncheckedCreateWithoutEquipeBaseHistoricoInput>
    connectOrCreate?: BaseCreateOrConnectWithoutEquipeBaseHistoricoInput
    upsert?: BaseUpsertWithoutEquipeBaseHistoricoInput
    connect?: BaseWhereUniqueInput
    update?: XOR<XOR<BaseUpdateToOneWithWhereWithoutEquipeBaseHistoricoInput, BaseUpdateWithoutEquipeBaseHistoricoInput>, BaseUncheckedUpdateWithoutEquipeBaseHistoricoInput>
  }

  export type EquipeCreateNestedManyWithoutTipoEquipeInput = {
    create?: XOR<EquipeCreateWithoutTipoEquipeInput, EquipeUncheckedCreateWithoutTipoEquipeInput> | EquipeCreateWithoutTipoEquipeInput[] | EquipeUncheckedCreateWithoutTipoEquipeInput[]
    connectOrCreate?: EquipeCreateOrConnectWithoutTipoEquipeInput | EquipeCreateOrConnectWithoutTipoEquipeInput[]
    createMany?: EquipeCreateManyTipoEquipeInputEnvelope
    connect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
  }

  export type ChecklistTipoEquipeRelacaoCreateNestedManyWithoutTipoEquipeInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput> | ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoEquipeInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoEquipeInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyTipoEquipeInputEnvelope
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
  }

  export type EquipeUncheckedCreateNestedManyWithoutTipoEquipeInput = {
    create?: XOR<EquipeCreateWithoutTipoEquipeInput, EquipeUncheckedCreateWithoutTipoEquipeInput> | EquipeCreateWithoutTipoEquipeInput[] | EquipeUncheckedCreateWithoutTipoEquipeInput[]
    connectOrCreate?: EquipeCreateOrConnectWithoutTipoEquipeInput | EquipeCreateOrConnectWithoutTipoEquipeInput[]
    createMany?: EquipeCreateManyTipoEquipeInputEnvelope
    connect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
  }

  export type ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutTipoEquipeInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput> | ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoEquipeInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoEquipeInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyTipoEquipeInputEnvelope
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
  }

  export type EquipeUpdateManyWithoutTipoEquipeNestedInput = {
    create?: XOR<EquipeCreateWithoutTipoEquipeInput, EquipeUncheckedCreateWithoutTipoEquipeInput> | EquipeCreateWithoutTipoEquipeInput[] | EquipeUncheckedCreateWithoutTipoEquipeInput[]
    connectOrCreate?: EquipeCreateOrConnectWithoutTipoEquipeInput | EquipeCreateOrConnectWithoutTipoEquipeInput[]
    upsert?: EquipeUpsertWithWhereUniqueWithoutTipoEquipeInput | EquipeUpsertWithWhereUniqueWithoutTipoEquipeInput[]
    createMany?: EquipeCreateManyTipoEquipeInputEnvelope
    set?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    disconnect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    delete?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    connect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    update?: EquipeUpdateWithWhereUniqueWithoutTipoEquipeInput | EquipeUpdateWithWhereUniqueWithoutTipoEquipeInput[]
    updateMany?: EquipeUpdateManyWithWhereWithoutTipoEquipeInput | EquipeUpdateManyWithWhereWithoutTipoEquipeInput[]
    deleteMany?: EquipeScalarWhereInput | EquipeScalarWhereInput[]
  }

  export type ChecklistTipoEquipeRelacaoUpdateManyWithoutTipoEquipeNestedInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput> | ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoEquipeInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoEquipeInput[]
    upsert?: ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutTipoEquipeInput | ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutTipoEquipeInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyTipoEquipeInputEnvelope
    set?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    disconnect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    delete?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    update?: ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutTipoEquipeInput | ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutTipoEquipeInput[]
    updateMany?: ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutTipoEquipeInput | ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutTipoEquipeInput[]
    deleteMany?: ChecklistTipoEquipeRelacaoScalarWhereInput | ChecklistTipoEquipeRelacaoScalarWhereInput[]
  }

  export type EquipeUncheckedUpdateManyWithoutTipoEquipeNestedInput = {
    create?: XOR<EquipeCreateWithoutTipoEquipeInput, EquipeUncheckedCreateWithoutTipoEquipeInput> | EquipeCreateWithoutTipoEquipeInput[] | EquipeUncheckedCreateWithoutTipoEquipeInput[]
    connectOrCreate?: EquipeCreateOrConnectWithoutTipoEquipeInput | EquipeCreateOrConnectWithoutTipoEquipeInput[]
    upsert?: EquipeUpsertWithWhereUniqueWithoutTipoEquipeInput | EquipeUpsertWithWhereUniqueWithoutTipoEquipeInput[]
    createMany?: EquipeCreateManyTipoEquipeInputEnvelope
    set?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    disconnect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    delete?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    connect?: EquipeWhereUniqueInput | EquipeWhereUniqueInput[]
    update?: EquipeUpdateWithWhereUniqueWithoutTipoEquipeInput | EquipeUpdateWithWhereUniqueWithoutTipoEquipeInput[]
    updateMany?: EquipeUpdateManyWithWhereWithoutTipoEquipeInput | EquipeUpdateManyWithWhereWithoutTipoEquipeInput[]
    deleteMany?: EquipeScalarWhereInput | EquipeScalarWhereInput[]
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutTipoEquipeNestedInput = {
    create?: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput> | ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput[] | ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput[]
    connectOrCreate?: ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoEquipeInput | ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoEquipeInput[]
    upsert?: ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutTipoEquipeInput | ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutTipoEquipeInput[]
    createMany?: ChecklistTipoEquipeRelacaoCreateManyTipoEquipeInputEnvelope
    set?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    disconnect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    delete?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    connect?: ChecklistTipoEquipeRelacaoWhereUniqueInput | ChecklistTipoEquipeRelacaoWhereUniqueInput[]
    update?: ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutTipoEquipeInput | ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutTipoEquipeInput[]
    updateMany?: ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutTipoEquipeInput | ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutTipoEquipeInput[]
    deleteMany?: ChecklistTipoEquipeRelacaoScalarWhereInput | ChecklistTipoEquipeRelacaoScalarWhereInput[]
  }

  export type TipoEquipeCreateNestedOneWithoutEquipeInput = {
    create?: XOR<TipoEquipeCreateWithoutEquipeInput, TipoEquipeUncheckedCreateWithoutEquipeInput>
    connectOrCreate?: TipoEquipeCreateOrConnectWithoutEquipeInput
    connect?: TipoEquipeWhereUniqueInput
  }

  export type ContratoCreateNestedOneWithoutEquipeInput = {
    create?: XOR<ContratoCreateWithoutEquipeInput, ContratoUncheckedCreateWithoutEquipeInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutEquipeInput
    connect?: ContratoWhereUniqueInput
  }

  export type EquipeSupervisorCreateNestedManyWithoutEquipeInput = {
    create?: XOR<EquipeSupervisorCreateWithoutEquipeInput, EquipeSupervisorUncheckedCreateWithoutEquipeInput> | EquipeSupervisorCreateWithoutEquipeInput[] | EquipeSupervisorUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeSupervisorCreateOrConnectWithoutEquipeInput | EquipeSupervisorCreateOrConnectWithoutEquipeInput[]
    createMany?: EquipeSupervisorCreateManyEquipeInputEnvelope
    connect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
  }

  export type TurnoCreateNestedManyWithoutEquipeInput = {
    create?: XOR<TurnoCreateWithoutEquipeInput, TurnoUncheckedCreateWithoutEquipeInput> | TurnoCreateWithoutEquipeInput[] | TurnoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: TurnoCreateOrConnectWithoutEquipeInput | TurnoCreateOrConnectWithoutEquipeInput[]
    createMany?: TurnoCreateManyEquipeInputEnvelope
    connect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
  }

  export type EscalaEquipePeriodoCreateNestedManyWithoutEquipeInput = {
    create?: XOR<EscalaEquipePeriodoCreateWithoutEquipeInput, EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput> | EscalaEquipePeriodoCreateWithoutEquipeInput[] | EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EscalaEquipePeriodoCreateOrConnectWithoutEquipeInput | EscalaEquipePeriodoCreateOrConnectWithoutEquipeInput[]
    createMany?: EscalaEquipePeriodoCreateManyEquipeInputEnvelope
    connect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
  }

  export type EquipeHorarioVigenciaCreateNestedManyWithoutEquipeInput = {
    create?: XOR<EquipeHorarioVigenciaCreateWithoutEquipeInput, EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput> | EquipeHorarioVigenciaCreateWithoutEquipeInput[] | EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeHorarioVigenciaCreateOrConnectWithoutEquipeInput | EquipeHorarioVigenciaCreateOrConnectWithoutEquipeInput[]
    createMany?: EquipeHorarioVigenciaCreateManyEquipeInputEnvelope
    connect?: EquipeHorarioVigenciaWhereUniqueInput | EquipeHorarioVigenciaWhereUniqueInput[]
  }

  export type EquipeTurnoHistoricoCreateNestedManyWithoutEquipeInput = {
    create?: XOR<EquipeTurnoHistoricoCreateWithoutEquipeInput, EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput> | EquipeTurnoHistoricoCreateWithoutEquipeInput[] | EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeTurnoHistoricoCreateOrConnectWithoutEquipeInput | EquipeTurnoHistoricoCreateOrConnectWithoutEquipeInput[]
    createMany?: EquipeTurnoHistoricoCreateManyEquipeInputEnvelope
    connect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
  }

  export type EquipeBaseHistoricoCreateNestedManyWithoutEquipeInput = {
    create?: XOR<EquipeBaseHistoricoCreateWithoutEquipeInput, EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput> | EquipeBaseHistoricoCreateWithoutEquipeInput[] | EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeBaseHistoricoCreateOrConnectWithoutEquipeInput | EquipeBaseHistoricoCreateOrConnectWithoutEquipeInput[]
    createMany?: EquipeBaseHistoricoCreateManyEquipeInputEnvelope
    connect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
  }

  export type EquipeSupervisorUncheckedCreateNestedManyWithoutEquipeInput = {
    create?: XOR<EquipeSupervisorCreateWithoutEquipeInput, EquipeSupervisorUncheckedCreateWithoutEquipeInput> | EquipeSupervisorCreateWithoutEquipeInput[] | EquipeSupervisorUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeSupervisorCreateOrConnectWithoutEquipeInput | EquipeSupervisorCreateOrConnectWithoutEquipeInput[]
    createMany?: EquipeSupervisorCreateManyEquipeInputEnvelope
    connect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
  }

  export type TurnoUncheckedCreateNestedManyWithoutEquipeInput = {
    create?: XOR<TurnoCreateWithoutEquipeInput, TurnoUncheckedCreateWithoutEquipeInput> | TurnoCreateWithoutEquipeInput[] | TurnoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: TurnoCreateOrConnectWithoutEquipeInput | TurnoCreateOrConnectWithoutEquipeInput[]
    createMany?: TurnoCreateManyEquipeInputEnvelope
    connect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
  }

  export type EscalaEquipePeriodoUncheckedCreateNestedManyWithoutEquipeInput = {
    create?: XOR<EscalaEquipePeriodoCreateWithoutEquipeInput, EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput> | EscalaEquipePeriodoCreateWithoutEquipeInput[] | EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EscalaEquipePeriodoCreateOrConnectWithoutEquipeInput | EscalaEquipePeriodoCreateOrConnectWithoutEquipeInput[]
    createMany?: EscalaEquipePeriodoCreateManyEquipeInputEnvelope
    connect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
  }

  export type EquipeHorarioVigenciaUncheckedCreateNestedManyWithoutEquipeInput = {
    create?: XOR<EquipeHorarioVigenciaCreateWithoutEquipeInput, EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput> | EquipeHorarioVigenciaCreateWithoutEquipeInput[] | EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeHorarioVigenciaCreateOrConnectWithoutEquipeInput | EquipeHorarioVigenciaCreateOrConnectWithoutEquipeInput[]
    createMany?: EquipeHorarioVigenciaCreateManyEquipeInputEnvelope
    connect?: EquipeHorarioVigenciaWhereUniqueInput | EquipeHorarioVigenciaWhereUniqueInput[]
  }

  export type EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutEquipeInput = {
    create?: XOR<EquipeTurnoHistoricoCreateWithoutEquipeInput, EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput> | EquipeTurnoHistoricoCreateWithoutEquipeInput[] | EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeTurnoHistoricoCreateOrConnectWithoutEquipeInput | EquipeTurnoHistoricoCreateOrConnectWithoutEquipeInput[]
    createMany?: EquipeTurnoHistoricoCreateManyEquipeInputEnvelope
    connect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
  }

  export type EquipeBaseHistoricoUncheckedCreateNestedManyWithoutEquipeInput = {
    create?: XOR<EquipeBaseHistoricoCreateWithoutEquipeInput, EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput> | EquipeBaseHistoricoCreateWithoutEquipeInput[] | EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeBaseHistoricoCreateOrConnectWithoutEquipeInput | EquipeBaseHistoricoCreateOrConnectWithoutEquipeInput[]
    createMany?: EquipeBaseHistoricoCreateManyEquipeInputEnvelope
    connect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
  }

  export type TipoEquipeUpdateOneRequiredWithoutEquipeNestedInput = {
    create?: XOR<TipoEquipeCreateWithoutEquipeInput, TipoEquipeUncheckedCreateWithoutEquipeInput>
    connectOrCreate?: TipoEquipeCreateOrConnectWithoutEquipeInput
    upsert?: TipoEquipeUpsertWithoutEquipeInput
    connect?: TipoEquipeWhereUniqueInput
    update?: XOR<XOR<TipoEquipeUpdateToOneWithWhereWithoutEquipeInput, TipoEquipeUpdateWithoutEquipeInput>, TipoEquipeUncheckedUpdateWithoutEquipeInput>
  }

  export type ContratoUpdateOneRequiredWithoutEquipeNestedInput = {
    create?: XOR<ContratoCreateWithoutEquipeInput, ContratoUncheckedCreateWithoutEquipeInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutEquipeInput
    upsert?: ContratoUpsertWithoutEquipeInput
    connect?: ContratoWhereUniqueInput
    update?: XOR<XOR<ContratoUpdateToOneWithWhereWithoutEquipeInput, ContratoUpdateWithoutEquipeInput>, ContratoUncheckedUpdateWithoutEquipeInput>
  }

  export type EquipeSupervisorUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<EquipeSupervisorCreateWithoutEquipeInput, EquipeSupervisorUncheckedCreateWithoutEquipeInput> | EquipeSupervisorCreateWithoutEquipeInput[] | EquipeSupervisorUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeSupervisorCreateOrConnectWithoutEquipeInput | EquipeSupervisorCreateOrConnectWithoutEquipeInput[]
    upsert?: EquipeSupervisorUpsertWithWhereUniqueWithoutEquipeInput | EquipeSupervisorUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: EquipeSupervisorCreateManyEquipeInputEnvelope
    set?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    disconnect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    delete?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    connect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    update?: EquipeSupervisorUpdateWithWhereUniqueWithoutEquipeInput | EquipeSupervisorUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: EquipeSupervisorUpdateManyWithWhereWithoutEquipeInput | EquipeSupervisorUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: EquipeSupervisorScalarWhereInput | EquipeSupervisorScalarWhereInput[]
  }

  export type TurnoUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<TurnoCreateWithoutEquipeInput, TurnoUncheckedCreateWithoutEquipeInput> | TurnoCreateWithoutEquipeInput[] | TurnoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: TurnoCreateOrConnectWithoutEquipeInput | TurnoCreateOrConnectWithoutEquipeInput[]
    upsert?: TurnoUpsertWithWhereUniqueWithoutEquipeInput | TurnoUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: TurnoCreateManyEquipeInputEnvelope
    set?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    disconnect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    delete?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    connect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    update?: TurnoUpdateWithWhereUniqueWithoutEquipeInput | TurnoUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: TurnoUpdateManyWithWhereWithoutEquipeInput | TurnoUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: TurnoScalarWhereInput | TurnoScalarWhereInput[]
  }

  export type EscalaEquipePeriodoUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<EscalaEquipePeriodoCreateWithoutEquipeInput, EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput> | EscalaEquipePeriodoCreateWithoutEquipeInput[] | EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EscalaEquipePeriodoCreateOrConnectWithoutEquipeInput | EscalaEquipePeriodoCreateOrConnectWithoutEquipeInput[]
    upsert?: EscalaEquipePeriodoUpsertWithWhereUniqueWithoutEquipeInput | EscalaEquipePeriodoUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: EscalaEquipePeriodoCreateManyEquipeInputEnvelope
    set?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    disconnect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    delete?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    connect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    update?: EscalaEquipePeriodoUpdateWithWhereUniqueWithoutEquipeInput | EscalaEquipePeriodoUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: EscalaEquipePeriodoUpdateManyWithWhereWithoutEquipeInput | EscalaEquipePeriodoUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: EscalaEquipePeriodoScalarWhereInput | EscalaEquipePeriodoScalarWhereInput[]
  }

  export type EquipeHorarioVigenciaUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<EquipeHorarioVigenciaCreateWithoutEquipeInput, EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput> | EquipeHorarioVigenciaCreateWithoutEquipeInput[] | EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeHorarioVigenciaCreateOrConnectWithoutEquipeInput | EquipeHorarioVigenciaCreateOrConnectWithoutEquipeInput[]
    upsert?: EquipeHorarioVigenciaUpsertWithWhereUniqueWithoutEquipeInput | EquipeHorarioVigenciaUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: EquipeHorarioVigenciaCreateManyEquipeInputEnvelope
    set?: EquipeHorarioVigenciaWhereUniqueInput | EquipeHorarioVigenciaWhereUniqueInput[]
    disconnect?: EquipeHorarioVigenciaWhereUniqueInput | EquipeHorarioVigenciaWhereUniqueInput[]
    delete?: EquipeHorarioVigenciaWhereUniqueInput | EquipeHorarioVigenciaWhereUniqueInput[]
    connect?: EquipeHorarioVigenciaWhereUniqueInput | EquipeHorarioVigenciaWhereUniqueInput[]
    update?: EquipeHorarioVigenciaUpdateWithWhereUniqueWithoutEquipeInput | EquipeHorarioVigenciaUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: EquipeHorarioVigenciaUpdateManyWithWhereWithoutEquipeInput | EquipeHorarioVigenciaUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: EquipeHorarioVigenciaScalarWhereInput | EquipeHorarioVigenciaScalarWhereInput[]
  }

  export type EquipeTurnoHistoricoUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<EquipeTurnoHistoricoCreateWithoutEquipeInput, EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput> | EquipeTurnoHistoricoCreateWithoutEquipeInput[] | EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeTurnoHistoricoCreateOrConnectWithoutEquipeInput | EquipeTurnoHistoricoCreateOrConnectWithoutEquipeInput[]
    upsert?: EquipeTurnoHistoricoUpsertWithWhereUniqueWithoutEquipeInput | EquipeTurnoHistoricoUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: EquipeTurnoHistoricoCreateManyEquipeInputEnvelope
    set?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    disconnect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    delete?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    connect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    update?: EquipeTurnoHistoricoUpdateWithWhereUniqueWithoutEquipeInput | EquipeTurnoHistoricoUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: EquipeTurnoHistoricoUpdateManyWithWhereWithoutEquipeInput | EquipeTurnoHistoricoUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: EquipeTurnoHistoricoScalarWhereInput | EquipeTurnoHistoricoScalarWhereInput[]
  }

  export type EquipeBaseHistoricoUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<EquipeBaseHistoricoCreateWithoutEquipeInput, EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput> | EquipeBaseHistoricoCreateWithoutEquipeInput[] | EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeBaseHistoricoCreateOrConnectWithoutEquipeInput | EquipeBaseHistoricoCreateOrConnectWithoutEquipeInput[]
    upsert?: EquipeBaseHistoricoUpsertWithWhereUniqueWithoutEquipeInput | EquipeBaseHistoricoUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: EquipeBaseHistoricoCreateManyEquipeInputEnvelope
    set?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    disconnect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    delete?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    connect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    update?: EquipeBaseHistoricoUpdateWithWhereUniqueWithoutEquipeInput | EquipeBaseHistoricoUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: EquipeBaseHistoricoUpdateManyWithWhereWithoutEquipeInput | EquipeBaseHistoricoUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: EquipeBaseHistoricoScalarWhereInput | EquipeBaseHistoricoScalarWhereInput[]
  }

  export type EquipeSupervisorUncheckedUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<EquipeSupervisorCreateWithoutEquipeInput, EquipeSupervisorUncheckedCreateWithoutEquipeInput> | EquipeSupervisorCreateWithoutEquipeInput[] | EquipeSupervisorUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeSupervisorCreateOrConnectWithoutEquipeInput | EquipeSupervisorCreateOrConnectWithoutEquipeInput[]
    upsert?: EquipeSupervisorUpsertWithWhereUniqueWithoutEquipeInput | EquipeSupervisorUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: EquipeSupervisorCreateManyEquipeInputEnvelope
    set?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    disconnect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    delete?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    connect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    update?: EquipeSupervisorUpdateWithWhereUniqueWithoutEquipeInput | EquipeSupervisorUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: EquipeSupervisorUpdateManyWithWhereWithoutEquipeInput | EquipeSupervisorUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: EquipeSupervisorScalarWhereInput | EquipeSupervisorScalarWhereInput[]
  }

  export type TurnoUncheckedUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<TurnoCreateWithoutEquipeInput, TurnoUncheckedCreateWithoutEquipeInput> | TurnoCreateWithoutEquipeInput[] | TurnoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: TurnoCreateOrConnectWithoutEquipeInput | TurnoCreateOrConnectWithoutEquipeInput[]
    upsert?: TurnoUpsertWithWhereUniqueWithoutEquipeInput | TurnoUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: TurnoCreateManyEquipeInputEnvelope
    set?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    disconnect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    delete?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    connect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    update?: TurnoUpdateWithWhereUniqueWithoutEquipeInput | TurnoUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: TurnoUpdateManyWithWhereWithoutEquipeInput | TurnoUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: TurnoScalarWhereInput | TurnoScalarWhereInput[]
  }

  export type EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<EscalaEquipePeriodoCreateWithoutEquipeInput, EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput> | EscalaEquipePeriodoCreateWithoutEquipeInput[] | EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EscalaEquipePeriodoCreateOrConnectWithoutEquipeInput | EscalaEquipePeriodoCreateOrConnectWithoutEquipeInput[]
    upsert?: EscalaEquipePeriodoUpsertWithWhereUniqueWithoutEquipeInput | EscalaEquipePeriodoUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: EscalaEquipePeriodoCreateManyEquipeInputEnvelope
    set?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    disconnect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    delete?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    connect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    update?: EscalaEquipePeriodoUpdateWithWhereUniqueWithoutEquipeInput | EscalaEquipePeriodoUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: EscalaEquipePeriodoUpdateManyWithWhereWithoutEquipeInput | EscalaEquipePeriodoUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: EscalaEquipePeriodoScalarWhereInput | EscalaEquipePeriodoScalarWhereInput[]
  }

  export type EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<EquipeHorarioVigenciaCreateWithoutEquipeInput, EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput> | EquipeHorarioVigenciaCreateWithoutEquipeInput[] | EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeHorarioVigenciaCreateOrConnectWithoutEquipeInput | EquipeHorarioVigenciaCreateOrConnectWithoutEquipeInput[]
    upsert?: EquipeHorarioVigenciaUpsertWithWhereUniqueWithoutEquipeInput | EquipeHorarioVigenciaUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: EquipeHorarioVigenciaCreateManyEquipeInputEnvelope
    set?: EquipeHorarioVigenciaWhereUniqueInput | EquipeHorarioVigenciaWhereUniqueInput[]
    disconnect?: EquipeHorarioVigenciaWhereUniqueInput | EquipeHorarioVigenciaWhereUniqueInput[]
    delete?: EquipeHorarioVigenciaWhereUniqueInput | EquipeHorarioVigenciaWhereUniqueInput[]
    connect?: EquipeHorarioVigenciaWhereUniqueInput | EquipeHorarioVigenciaWhereUniqueInput[]
    update?: EquipeHorarioVigenciaUpdateWithWhereUniqueWithoutEquipeInput | EquipeHorarioVigenciaUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: EquipeHorarioVigenciaUpdateManyWithWhereWithoutEquipeInput | EquipeHorarioVigenciaUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: EquipeHorarioVigenciaScalarWhereInput | EquipeHorarioVigenciaScalarWhereInput[]
  }

  export type EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<EquipeTurnoHistoricoCreateWithoutEquipeInput, EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput> | EquipeTurnoHistoricoCreateWithoutEquipeInput[] | EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeTurnoHistoricoCreateOrConnectWithoutEquipeInput | EquipeTurnoHistoricoCreateOrConnectWithoutEquipeInput[]
    upsert?: EquipeTurnoHistoricoUpsertWithWhereUniqueWithoutEquipeInput | EquipeTurnoHistoricoUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: EquipeTurnoHistoricoCreateManyEquipeInputEnvelope
    set?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    disconnect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    delete?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    connect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    update?: EquipeTurnoHistoricoUpdateWithWhereUniqueWithoutEquipeInput | EquipeTurnoHistoricoUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: EquipeTurnoHistoricoUpdateManyWithWhereWithoutEquipeInput | EquipeTurnoHistoricoUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: EquipeTurnoHistoricoScalarWhereInput | EquipeTurnoHistoricoScalarWhereInput[]
  }

  export type EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeNestedInput = {
    create?: XOR<EquipeBaseHistoricoCreateWithoutEquipeInput, EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput> | EquipeBaseHistoricoCreateWithoutEquipeInput[] | EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput[]
    connectOrCreate?: EquipeBaseHistoricoCreateOrConnectWithoutEquipeInput | EquipeBaseHistoricoCreateOrConnectWithoutEquipeInput[]
    upsert?: EquipeBaseHistoricoUpsertWithWhereUniqueWithoutEquipeInput | EquipeBaseHistoricoUpsertWithWhereUniqueWithoutEquipeInput[]
    createMany?: EquipeBaseHistoricoCreateManyEquipeInputEnvelope
    set?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    disconnect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    delete?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    connect?: EquipeBaseHistoricoWhereUniqueInput | EquipeBaseHistoricoWhereUniqueInput[]
    update?: EquipeBaseHistoricoUpdateWithWhereUniqueWithoutEquipeInput | EquipeBaseHistoricoUpdateWithWhereUniqueWithoutEquipeInput[]
    updateMany?: EquipeBaseHistoricoUpdateManyWithWhereWithoutEquipeInput | EquipeBaseHistoricoUpdateManyWithWhereWithoutEquipeInput[]
    deleteMany?: EquipeBaseHistoricoScalarWhereInput | EquipeBaseHistoricoScalarWhereInput[]
  }

  export type EquipeCreateNestedOneWithoutEquipeSupervisorInput = {
    create?: XOR<EquipeCreateWithoutEquipeSupervisorInput, EquipeUncheckedCreateWithoutEquipeSupervisorInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutEquipeSupervisorInput
    connect?: EquipeWhereUniqueInput
  }

  export type SupervisorCreateNestedOneWithoutEquipeSupervisorInput = {
    create?: XOR<SupervisorCreateWithoutEquipeSupervisorInput, SupervisorUncheckedCreateWithoutEquipeSupervisorInput>
    connectOrCreate?: SupervisorCreateOrConnectWithoutEquipeSupervisorInput
    connect?: SupervisorWhereUniqueInput
  }

  export type EquipeUpdateOneRequiredWithoutEquipeSupervisorNestedInput = {
    create?: XOR<EquipeCreateWithoutEquipeSupervisorInput, EquipeUncheckedCreateWithoutEquipeSupervisorInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutEquipeSupervisorInput
    upsert?: EquipeUpsertWithoutEquipeSupervisorInput
    connect?: EquipeWhereUniqueInput
    update?: XOR<XOR<EquipeUpdateToOneWithWhereWithoutEquipeSupervisorInput, EquipeUpdateWithoutEquipeSupervisorInput>, EquipeUncheckedUpdateWithoutEquipeSupervisorInput>
  }

  export type SupervisorUpdateOneRequiredWithoutEquipeSupervisorNestedInput = {
    create?: XOR<SupervisorCreateWithoutEquipeSupervisorInput, SupervisorUncheckedCreateWithoutEquipeSupervisorInput>
    connectOrCreate?: SupervisorCreateOrConnectWithoutEquipeSupervisorInput
    upsert?: SupervisorUpsertWithoutEquipeSupervisorInput
    connect?: SupervisorWhereUniqueInput
    update?: XOR<XOR<SupervisorUpdateToOneWithWhereWithoutEquipeSupervisorInput, SupervisorUpdateWithoutEquipeSupervisorInput>, SupervisorUncheckedUpdateWithoutEquipeSupervisorInput>
  }

  export type TipoEscalaCicloPosicaoCreateNestedManyWithoutTipoEscalaInput = {
    create?: XOR<TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput, TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput> | TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput[] | TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: TipoEscalaCicloPosicaoCreateOrConnectWithoutTipoEscalaInput | TipoEscalaCicloPosicaoCreateOrConnectWithoutTipoEscalaInput[]
    createMany?: TipoEscalaCicloPosicaoCreateManyTipoEscalaInputEnvelope
    connect?: TipoEscalaCicloPosicaoWhereUniqueInput | TipoEscalaCicloPosicaoWhereUniqueInput[]
  }

  export type TipoEscalaSemanaMascaraCreateNestedManyWithoutTipoEscalaInput = {
    create?: XOR<TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput, TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput> | TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput[] | TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: TipoEscalaSemanaMascaraCreateOrConnectWithoutTipoEscalaInput | TipoEscalaSemanaMascaraCreateOrConnectWithoutTipoEscalaInput[]
    createMany?: TipoEscalaSemanaMascaraCreateManyTipoEscalaInputEnvelope
    connect?: TipoEscalaSemanaMascaraWhereUniqueInput | TipoEscalaSemanaMascaraWhereUniqueInput[]
  }

  export type EscalaEquipePeriodoCreateNestedManyWithoutTipoEscalaInput = {
    create?: XOR<EscalaEquipePeriodoCreateWithoutTipoEscalaInput, EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput> | EscalaEquipePeriodoCreateWithoutTipoEscalaInput[] | EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: EscalaEquipePeriodoCreateOrConnectWithoutTipoEscalaInput | EscalaEquipePeriodoCreateOrConnectWithoutTipoEscalaInput[]
    createMany?: EscalaEquipePeriodoCreateManyTipoEscalaInputEnvelope
    connect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
  }

  export type TipoEscalaCicloPosicaoUncheckedCreateNestedManyWithoutTipoEscalaInput = {
    create?: XOR<TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput, TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput> | TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput[] | TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: TipoEscalaCicloPosicaoCreateOrConnectWithoutTipoEscalaInput | TipoEscalaCicloPosicaoCreateOrConnectWithoutTipoEscalaInput[]
    createMany?: TipoEscalaCicloPosicaoCreateManyTipoEscalaInputEnvelope
    connect?: TipoEscalaCicloPosicaoWhereUniqueInput | TipoEscalaCicloPosicaoWhereUniqueInput[]
  }

  export type TipoEscalaSemanaMascaraUncheckedCreateNestedManyWithoutTipoEscalaInput = {
    create?: XOR<TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput, TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput> | TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput[] | TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: TipoEscalaSemanaMascaraCreateOrConnectWithoutTipoEscalaInput | TipoEscalaSemanaMascaraCreateOrConnectWithoutTipoEscalaInput[]
    createMany?: TipoEscalaSemanaMascaraCreateManyTipoEscalaInputEnvelope
    connect?: TipoEscalaSemanaMascaraWhereUniqueInput | TipoEscalaSemanaMascaraWhereUniqueInput[]
  }

  export type EscalaEquipePeriodoUncheckedCreateNestedManyWithoutTipoEscalaInput = {
    create?: XOR<EscalaEquipePeriodoCreateWithoutTipoEscalaInput, EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput> | EscalaEquipePeriodoCreateWithoutTipoEscalaInput[] | EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: EscalaEquipePeriodoCreateOrConnectWithoutTipoEscalaInput | EscalaEquipePeriodoCreateOrConnectWithoutTipoEscalaInput[]
    createMany?: EscalaEquipePeriodoCreateManyTipoEscalaInputEnvelope
    connect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
  }

  export type EnumModoRepeticaoFieldUpdateOperationsInput = {
    set?: $Enums.ModoRepeticao
  }

  export type TipoEscalaCicloPosicaoUpdateManyWithoutTipoEscalaNestedInput = {
    create?: XOR<TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput, TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput> | TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput[] | TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: TipoEscalaCicloPosicaoCreateOrConnectWithoutTipoEscalaInput | TipoEscalaCicloPosicaoCreateOrConnectWithoutTipoEscalaInput[]
    upsert?: TipoEscalaCicloPosicaoUpsertWithWhereUniqueWithoutTipoEscalaInput | TipoEscalaCicloPosicaoUpsertWithWhereUniqueWithoutTipoEscalaInput[]
    createMany?: TipoEscalaCicloPosicaoCreateManyTipoEscalaInputEnvelope
    set?: TipoEscalaCicloPosicaoWhereUniqueInput | TipoEscalaCicloPosicaoWhereUniqueInput[]
    disconnect?: TipoEscalaCicloPosicaoWhereUniqueInput | TipoEscalaCicloPosicaoWhereUniqueInput[]
    delete?: TipoEscalaCicloPosicaoWhereUniqueInput | TipoEscalaCicloPosicaoWhereUniqueInput[]
    connect?: TipoEscalaCicloPosicaoWhereUniqueInput | TipoEscalaCicloPosicaoWhereUniqueInput[]
    update?: TipoEscalaCicloPosicaoUpdateWithWhereUniqueWithoutTipoEscalaInput | TipoEscalaCicloPosicaoUpdateWithWhereUniqueWithoutTipoEscalaInput[]
    updateMany?: TipoEscalaCicloPosicaoUpdateManyWithWhereWithoutTipoEscalaInput | TipoEscalaCicloPosicaoUpdateManyWithWhereWithoutTipoEscalaInput[]
    deleteMany?: TipoEscalaCicloPosicaoScalarWhereInput | TipoEscalaCicloPosicaoScalarWhereInput[]
  }

  export type TipoEscalaSemanaMascaraUpdateManyWithoutTipoEscalaNestedInput = {
    create?: XOR<TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput, TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput> | TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput[] | TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: TipoEscalaSemanaMascaraCreateOrConnectWithoutTipoEscalaInput | TipoEscalaSemanaMascaraCreateOrConnectWithoutTipoEscalaInput[]
    upsert?: TipoEscalaSemanaMascaraUpsertWithWhereUniqueWithoutTipoEscalaInput | TipoEscalaSemanaMascaraUpsertWithWhereUniqueWithoutTipoEscalaInput[]
    createMany?: TipoEscalaSemanaMascaraCreateManyTipoEscalaInputEnvelope
    set?: TipoEscalaSemanaMascaraWhereUniqueInput | TipoEscalaSemanaMascaraWhereUniqueInput[]
    disconnect?: TipoEscalaSemanaMascaraWhereUniqueInput | TipoEscalaSemanaMascaraWhereUniqueInput[]
    delete?: TipoEscalaSemanaMascaraWhereUniqueInput | TipoEscalaSemanaMascaraWhereUniqueInput[]
    connect?: TipoEscalaSemanaMascaraWhereUniqueInput | TipoEscalaSemanaMascaraWhereUniqueInput[]
    update?: TipoEscalaSemanaMascaraUpdateWithWhereUniqueWithoutTipoEscalaInput | TipoEscalaSemanaMascaraUpdateWithWhereUniqueWithoutTipoEscalaInput[]
    updateMany?: TipoEscalaSemanaMascaraUpdateManyWithWhereWithoutTipoEscalaInput | TipoEscalaSemanaMascaraUpdateManyWithWhereWithoutTipoEscalaInput[]
    deleteMany?: TipoEscalaSemanaMascaraScalarWhereInput | TipoEscalaSemanaMascaraScalarWhereInput[]
  }

  export type EscalaEquipePeriodoUpdateManyWithoutTipoEscalaNestedInput = {
    create?: XOR<EscalaEquipePeriodoCreateWithoutTipoEscalaInput, EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput> | EscalaEquipePeriodoCreateWithoutTipoEscalaInput[] | EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: EscalaEquipePeriodoCreateOrConnectWithoutTipoEscalaInput | EscalaEquipePeriodoCreateOrConnectWithoutTipoEscalaInput[]
    upsert?: EscalaEquipePeriodoUpsertWithWhereUniqueWithoutTipoEscalaInput | EscalaEquipePeriodoUpsertWithWhereUniqueWithoutTipoEscalaInput[]
    createMany?: EscalaEquipePeriodoCreateManyTipoEscalaInputEnvelope
    set?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    disconnect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    delete?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    connect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    update?: EscalaEquipePeriodoUpdateWithWhereUniqueWithoutTipoEscalaInput | EscalaEquipePeriodoUpdateWithWhereUniqueWithoutTipoEscalaInput[]
    updateMany?: EscalaEquipePeriodoUpdateManyWithWhereWithoutTipoEscalaInput | EscalaEquipePeriodoUpdateManyWithWhereWithoutTipoEscalaInput[]
    deleteMany?: EscalaEquipePeriodoScalarWhereInput | EscalaEquipePeriodoScalarWhereInput[]
  }

  export type TipoEscalaCicloPosicaoUncheckedUpdateManyWithoutTipoEscalaNestedInput = {
    create?: XOR<TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput, TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput> | TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput[] | TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: TipoEscalaCicloPosicaoCreateOrConnectWithoutTipoEscalaInput | TipoEscalaCicloPosicaoCreateOrConnectWithoutTipoEscalaInput[]
    upsert?: TipoEscalaCicloPosicaoUpsertWithWhereUniqueWithoutTipoEscalaInput | TipoEscalaCicloPosicaoUpsertWithWhereUniqueWithoutTipoEscalaInput[]
    createMany?: TipoEscalaCicloPosicaoCreateManyTipoEscalaInputEnvelope
    set?: TipoEscalaCicloPosicaoWhereUniqueInput | TipoEscalaCicloPosicaoWhereUniqueInput[]
    disconnect?: TipoEscalaCicloPosicaoWhereUniqueInput | TipoEscalaCicloPosicaoWhereUniqueInput[]
    delete?: TipoEscalaCicloPosicaoWhereUniqueInput | TipoEscalaCicloPosicaoWhereUniqueInput[]
    connect?: TipoEscalaCicloPosicaoWhereUniqueInput | TipoEscalaCicloPosicaoWhereUniqueInput[]
    update?: TipoEscalaCicloPosicaoUpdateWithWhereUniqueWithoutTipoEscalaInput | TipoEscalaCicloPosicaoUpdateWithWhereUniqueWithoutTipoEscalaInput[]
    updateMany?: TipoEscalaCicloPosicaoUpdateManyWithWhereWithoutTipoEscalaInput | TipoEscalaCicloPosicaoUpdateManyWithWhereWithoutTipoEscalaInput[]
    deleteMany?: TipoEscalaCicloPosicaoScalarWhereInput | TipoEscalaCicloPosicaoScalarWhereInput[]
  }

  export type TipoEscalaSemanaMascaraUncheckedUpdateManyWithoutTipoEscalaNestedInput = {
    create?: XOR<TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput, TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput> | TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput[] | TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: TipoEscalaSemanaMascaraCreateOrConnectWithoutTipoEscalaInput | TipoEscalaSemanaMascaraCreateOrConnectWithoutTipoEscalaInput[]
    upsert?: TipoEscalaSemanaMascaraUpsertWithWhereUniqueWithoutTipoEscalaInput | TipoEscalaSemanaMascaraUpsertWithWhereUniqueWithoutTipoEscalaInput[]
    createMany?: TipoEscalaSemanaMascaraCreateManyTipoEscalaInputEnvelope
    set?: TipoEscalaSemanaMascaraWhereUniqueInput | TipoEscalaSemanaMascaraWhereUniqueInput[]
    disconnect?: TipoEscalaSemanaMascaraWhereUniqueInput | TipoEscalaSemanaMascaraWhereUniqueInput[]
    delete?: TipoEscalaSemanaMascaraWhereUniqueInput | TipoEscalaSemanaMascaraWhereUniqueInput[]
    connect?: TipoEscalaSemanaMascaraWhereUniqueInput | TipoEscalaSemanaMascaraWhereUniqueInput[]
    update?: TipoEscalaSemanaMascaraUpdateWithWhereUniqueWithoutTipoEscalaInput | TipoEscalaSemanaMascaraUpdateWithWhereUniqueWithoutTipoEscalaInput[]
    updateMany?: TipoEscalaSemanaMascaraUpdateManyWithWhereWithoutTipoEscalaInput | TipoEscalaSemanaMascaraUpdateManyWithWhereWithoutTipoEscalaInput[]
    deleteMany?: TipoEscalaSemanaMascaraScalarWhereInput | TipoEscalaSemanaMascaraScalarWhereInput[]
  }

  export type EscalaEquipePeriodoUncheckedUpdateManyWithoutTipoEscalaNestedInput = {
    create?: XOR<EscalaEquipePeriodoCreateWithoutTipoEscalaInput, EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput> | EscalaEquipePeriodoCreateWithoutTipoEscalaInput[] | EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput[]
    connectOrCreate?: EscalaEquipePeriodoCreateOrConnectWithoutTipoEscalaInput | EscalaEquipePeriodoCreateOrConnectWithoutTipoEscalaInput[]
    upsert?: EscalaEquipePeriodoUpsertWithWhereUniqueWithoutTipoEscalaInput | EscalaEquipePeriodoUpsertWithWhereUniqueWithoutTipoEscalaInput[]
    createMany?: EscalaEquipePeriodoCreateManyTipoEscalaInputEnvelope
    set?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    disconnect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    delete?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    connect?: EscalaEquipePeriodoWhereUniqueInput | EscalaEquipePeriodoWhereUniqueInput[]
    update?: EscalaEquipePeriodoUpdateWithWhereUniqueWithoutTipoEscalaInput | EscalaEquipePeriodoUpdateWithWhereUniqueWithoutTipoEscalaInput[]
    updateMany?: EscalaEquipePeriodoUpdateManyWithWhereWithoutTipoEscalaInput | EscalaEquipePeriodoUpdateManyWithWhereWithoutTipoEscalaInput[]
    deleteMany?: EscalaEquipePeriodoScalarWhereInput | EscalaEquipePeriodoScalarWhereInput[]
  }

  export type TipoEscalaCreateNestedOneWithoutCicloPosicoesInput = {
    create?: XOR<TipoEscalaCreateWithoutCicloPosicoesInput, TipoEscalaUncheckedCreateWithoutCicloPosicoesInput>
    connectOrCreate?: TipoEscalaCreateOrConnectWithoutCicloPosicoesInput
    connect?: TipoEscalaWhereUniqueInput
  }

  export type EnumStatusTrabalhoFieldUpdateOperationsInput = {
    set?: $Enums.StatusTrabalho
  }

  export type TipoEscalaUpdateOneRequiredWithoutCicloPosicoesNestedInput = {
    create?: XOR<TipoEscalaCreateWithoutCicloPosicoesInput, TipoEscalaUncheckedCreateWithoutCicloPosicoesInput>
    connectOrCreate?: TipoEscalaCreateOrConnectWithoutCicloPosicoesInput
    upsert?: TipoEscalaUpsertWithoutCicloPosicoesInput
    connect?: TipoEscalaWhereUniqueInput
    update?: XOR<XOR<TipoEscalaUpdateToOneWithWhereWithoutCicloPosicoesInput, TipoEscalaUpdateWithoutCicloPosicoesInput>, TipoEscalaUncheckedUpdateWithoutCicloPosicoesInput>
  }

  export type TipoEscalaCreateNestedOneWithoutSemanaMascarasInput = {
    create?: XOR<TipoEscalaCreateWithoutSemanaMascarasInput, TipoEscalaUncheckedCreateWithoutSemanaMascarasInput>
    connectOrCreate?: TipoEscalaCreateOrConnectWithoutSemanaMascarasInput
    connect?: TipoEscalaWhereUniqueInput
  }

  export type EnumDiaSemanaFieldUpdateOperationsInput = {
    set?: $Enums.DiaSemana
  }

  export type TipoEscalaUpdateOneRequiredWithoutSemanaMascarasNestedInput = {
    create?: XOR<TipoEscalaCreateWithoutSemanaMascarasInput, TipoEscalaUncheckedCreateWithoutSemanaMascarasInput>
    connectOrCreate?: TipoEscalaCreateOrConnectWithoutSemanaMascarasInput
    upsert?: TipoEscalaUpsertWithoutSemanaMascarasInput
    connect?: TipoEscalaWhereUniqueInput
    update?: XOR<XOR<TipoEscalaUpdateToOneWithWhereWithoutSemanaMascarasInput, TipoEscalaUpdateWithoutSemanaMascarasInput>, TipoEscalaUncheckedUpdateWithoutSemanaMascarasInput>
  }

  export type EquipeCreateNestedOneWithoutEscalaEquipePeriodoInput = {
    create?: XOR<EquipeCreateWithoutEscalaEquipePeriodoInput, EquipeUncheckedCreateWithoutEscalaEquipePeriodoInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutEscalaEquipePeriodoInput
    connect?: EquipeWhereUniqueInput
  }

  export type TipoEscalaCreateNestedOneWithoutEscalasEquipePeriodoInput = {
    create?: XOR<TipoEscalaCreateWithoutEscalasEquipePeriodoInput, TipoEscalaUncheckedCreateWithoutEscalasEquipePeriodoInput>
    connectOrCreate?: TipoEscalaCreateOrConnectWithoutEscalasEquipePeriodoInput
    connect?: TipoEscalaWhereUniqueInput
  }

  export type SlotEscalaCreateNestedManyWithoutEscalaEquipePeriodoInput = {
    create?: XOR<SlotEscalaCreateWithoutEscalaEquipePeriodoInput, SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput> | SlotEscalaCreateWithoutEscalaEquipePeriodoInput[] | SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput[]
    connectOrCreate?: SlotEscalaCreateOrConnectWithoutEscalaEquipePeriodoInput | SlotEscalaCreateOrConnectWithoutEscalaEquipePeriodoInput[]
    createMany?: SlotEscalaCreateManyEscalaEquipePeriodoInputEnvelope
    connect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
  }

  export type SlotEscalaUncheckedCreateNestedManyWithoutEscalaEquipePeriodoInput = {
    create?: XOR<SlotEscalaCreateWithoutEscalaEquipePeriodoInput, SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput> | SlotEscalaCreateWithoutEscalaEquipePeriodoInput[] | SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput[]
    connectOrCreate?: SlotEscalaCreateOrConnectWithoutEscalaEquipePeriodoInput | SlotEscalaCreateOrConnectWithoutEscalaEquipePeriodoInput[]
    createMany?: SlotEscalaCreateManyEscalaEquipePeriodoInputEnvelope
    connect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
  }

  export type EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput = {
    set?: $Enums.StatusEscalaEquipePeriodo
  }

  export type EquipeUpdateOneRequiredWithoutEscalaEquipePeriodoNestedInput = {
    create?: XOR<EquipeCreateWithoutEscalaEquipePeriodoInput, EquipeUncheckedCreateWithoutEscalaEquipePeriodoInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutEscalaEquipePeriodoInput
    upsert?: EquipeUpsertWithoutEscalaEquipePeriodoInput
    connect?: EquipeWhereUniqueInput
    update?: XOR<XOR<EquipeUpdateToOneWithWhereWithoutEscalaEquipePeriodoInput, EquipeUpdateWithoutEscalaEquipePeriodoInput>, EquipeUncheckedUpdateWithoutEscalaEquipePeriodoInput>
  }

  export type TipoEscalaUpdateOneRequiredWithoutEscalasEquipePeriodoNestedInput = {
    create?: XOR<TipoEscalaCreateWithoutEscalasEquipePeriodoInput, TipoEscalaUncheckedCreateWithoutEscalasEquipePeriodoInput>
    connectOrCreate?: TipoEscalaCreateOrConnectWithoutEscalasEquipePeriodoInput
    upsert?: TipoEscalaUpsertWithoutEscalasEquipePeriodoInput
    connect?: TipoEscalaWhereUniqueInput
    update?: XOR<XOR<TipoEscalaUpdateToOneWithWhereWithoutEscalasEquipePeriodoInput, TipoEscalaUpdateWithoutEscalasEquipePeriodoInput>, TipoEscalaUncheckedUpdateWithoutEscalasEquipePeriodoInput>
  }

  export type SlotEscalaUpdateManyWithoutEscalaEquipePeriodoNestedInput = {
    create?: XOR<SlotEscalaCreateWithoutEscalaEquipePeriodoInput, SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput> | SlotEscalaCreateWithoutEscalaEquipePeriodoInput[] | SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput[]
    connectOrCreate?: SlotEscalaCreateOrConnectWithoutEscalaEquipePeriodoInput | SlotEscalaCreateOrConnectWithoutEscalaEquipePeriodoInput[]
    upsert?: SlotEscalaUpsertWithWhereUniqueWithoutEscalaEquipePeriodoInput | SlotEscalaUpsertWithWhereUniqueWithoutEscalaEquipePeriodoInput[]
    createMany?: SlotEscalaCreateManyEscalaEquipePeriodoInputEnvelope
    set?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    disconnect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    delete?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    connect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    update?: SlotEscalaUpdateWithWhereUniqueWithoutEscalaEquipePeriodoInput | SlotEscalaUpdateWithWhereUniqueWithoutEscalaEquipePeriodoInput[]
    updateMany?: SlotEscalaUpdateManyWithWhereWithoutEscalaEquipePeriodoInput | SlotEscalaUpdateManyWithWhereWithoutEscalaEquipePeriodoInput[]
    deleteMany?: SlotEscalaScalarWhereInput | SlotEscalaScalarWhereInput[]
  }

  export type SlotEscalaUncheckedUpdateManyWithoutEscalaEquipePeriodoNestedInput = {
    create?: XOR<SlotEscalaCreateWithoutEscalaEquipePeriodoInput, SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput> | SlotEscalaCreateWithoutEscalaEquipePeriodoInput[] | SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput[]
    connectOrCreate?: SlotEscalaCreateOrConnectWithoutEscalaEquipePeriodoInput | SlotEscalaCreateOrConnectWithoutEscalaEquipePeriodoInput[]
    upsert?: SlotEscalaUpsertWithWhereUniqueWithoutEscalaEquipePeriodoInput | SlotEscalaUpsertWithWhereUniqueWithoutEscalaEquipePeriodoInput[]
    createMany?: SlotEscalaCreateManyEscalaEquipePeriodoInputEnvelope
    set?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    disconnect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    delete?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    connect?: SlotEscalaWhereUniqueInput | SlotEscalaWhereUniqueInput[]
    update?: SlotEscalaUpdateWithWhereUniqueWithoutEscalaEquipePeriodoInput | SlotEscalaUpdateWithWhereUniqueWithoutEscalaEquipePeriodoInput[]
    updateMany?: SlotEscalaUpdateManyWithWhereWithoutEscalaEquipePeriodoInput | SlotEscalaUpdateManyWithWhereWithoutEscalaEquipePeriodoInput[]
    deleteMany?: SlotEscalaScalarWhereInput | SlotEscalaScalarWhereInput[]
  }

  export type EscalaEquipePeriodoCreateNestedOneWithoutSlotsInput = {
    create?: XOR<EscalaEquipePeriodoCreateWithoutSlotsInput, EscalaEquipePeriodoUncheckedCreateWithoutSlotsInput>
    connectOrCreate?: EscalaEquipePeriodoCreateOrConnectWithoutSlotsInput
    connect?: EscalaEquipePeriodoWhereUniqueInput
  }

  export type EletricistaCreateNestedOneWithoutSlotEscalaInput = {
    create?: XOR<EletricistaCreateWithoutSlotEscalaInput, EletricistaUncheckedCreateWithoutSlotEscalaInput>
    connectOrCreate?: EletricistaCreateOrConnectWithoutSlotEscalaInput
    connect?: EletricistaWhereUniqueInput
  }

  export type EventoCoberturaCreateNestedManyWithoutSlotEscalaInput = {
    create?: XOR<EventoCoberturaCreateWithoutSlotEscalaInput, EventoCoberturaUncheckedCreateWithoutSlotEscalaInput> | EventoCoberturaCreateWithoutSlotEscalaInput[] | EventoCoberturaUncheckedCreateWithoutSlotEscalaInput[]
    connectOrCreate?: EventoCoberturaCreateOrConnectWithoutSlotEscalaInput | EventoCoberturaCreateOrConnectWithoutSlotEscalaInput[]
    createMany?: EventoCoberturaCreateManySlotEscalaInputEnvelope
    connect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
  }

  export type EventoCoberturaUncheckedCreateNestedManyWithoutSlotEscalaInput = {
    create?: XOR<EventoCoberturaCreateWithoutSlotEscalaInput, EventoCoberturaUncheckedCreateWithoutSlotEscalaInput> | EventoCoberturaCreateWithoutSlotEscalaInput[] | EventoCoberturaUncheckedCreateWithoutSlotEscalaInput[]
    connectOrCreate?: EventoCoberturaCreateOrConnectWithoutSlotEscalaInput | EventoCoberturaCreateOrConnectWithoutSlotEscalaInput[]
    createMany?: EventoCoberturaCreateManySlotEscalaInputEnvelope
    connect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
  }

  export type EnumEstadoSlotFieldUpdateOperationsInput = {
    set?: $Enums.EstadoSlot
  }

  export type EnumOrigemAtribuicaoFieldUpdateOperationsInput = {
    set?: $Enums.OrigemAtribuicao
  }

  export type EscalaEquipePeriodoUpdateOneRequiredWithoutSlotsNestedInput = {
    create?: XOR<EscalaEquipePeriodoCreateWithoutSlotsInput, EscalaEquipePeriodoUncheckedCreateWithoutSlotsInput>
    connectOrCreate?: EscalaEquipePeriodoCreateOrConnectWithoutSlotsInput
    upsert?: EscalaEquipePeriodoUpsertWithoutSlotsInput
    connect?: EscalaEquipePeriodoWhereUniqueInput
    update?: XOR<XOR<EscalaEquipePeriodoUpdateToOneWithWhereWithoutSlotsInput, EscalaEquipePeriodoUpdateWithoutSlotsInput>, EscalaEquipePeriodoUncheckedUpdateWithoutSlotsInput>
  }

  export type EletricistaUpdateOneRequiredWithoutSlotEscalaNestedInput = {
    create?: XOR<EletricistaCreateWithoutSlotEscalaInput, EletricistaUncheckedCreateWithoutSlotEscalaInput>
    connectOrCreate?: EletricistaCreateOrConnectWithoutSlotEscalaInput
    upsert?: EletricistaUpsertWithoutSlotEscalaInput
    connect?: EletricistaWhereUniqueInput
    update?: XOR<XOR<EletricistaUpdateToOneWithWhereWithoutSlotEscalaInput, EletricistaUpdateWithoutSlotEscalaInput>, EletricistaUncheckedUpdateWithoutSlotEscalaInput>
  }

  export type EventoCoberturaUpdateManyWithoutSlotEscalaNestedInput = {
    create?: XOR<EventoCoberturaCreateWithoutSlotEscalaInput, EventoCoberturaUncheckedCreateWithoutSlotEscalaInput> | EventoCoberturaCreateWithoutSlotEscalaInput[] | EventoCoberturaUncheckedCreateWithoutSlotEscalaInput[]
    connectOrCreate?: EventoCoberturaCreateOrConnectWithoutSlotEscalaInput | EventoCoberturaCreateOrConnectWithoutSlotEscalaInput[]
    upsert?: EventoCoberturaUpsertWithWhereUniqueWithoutSlotEscalaInput | EventoCoberturaUpsertWithWhereUniqueWithoutSlotEscalaInput[]
    createMany?: EventoCoberturaCreateManySlotEscalaInputEnvelope
    set?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    disconnect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    delete?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    connect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    update?: EventoCoberturaUpdateWithWhereUniqueWithoutSlotEscalaInput | EventoCoberturaUpdateWithWhereUniqueWithoutSlotEscalaInput[]
    updateMany?: EventoCoberturaUpdateManyWithWhereWithoutSlotEscalaInput | EventoCoberturaUpdateManyWithWhereWithoutSlotEscalaInput[]
    deleteMany?: EventoCoberturaScalarWhereInput | EventoCoberturaScalarWhereInput[]
  }

  export type EventoCoberturaUncheckedUpdateManyWithoutSlotEscalaNestedInput = {
    create?: XOR<EventoCoberturaCreateWithoutSlotEscalaInput, EventoCoberturaUncheckedCreateWithoutSlotEscalaInput> | EventoCoberturaCreateWithoutSlotEscalaInput[] | EventoCoberturaUncheckedCreateWithoutSlotEscalaInput[]
    connectOrCreate?: EventoCoberturaCreateOrConnectWithoutSlotEscalaInput | EventoCoberturaCreateOrConnectWithoutSlotEscalaInput[]
    upsert?: EventoCoberturaUpsertWithWhereUniqueWithoutSlotEscalaInput | EventoCoberturaUpsertWithWhereUniqueWithoutSlotEscalaInput[]
    createMany?: EventoCoberturaCreateManySlotEscalaInputEnvelope
    set?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    disconnect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    delete?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    connect?: EventoCoberturaWhereUniqueInput | EventoCoberturaWhereUniqueInput[]
    update?: EventoCoberturaUpdateWithWhereUniqueWithoutSlotEscalaInput | EventoCoberturaUpdateWithWhereUniqueWithoutSlotEscalaInput[]
    updateMany?: EventoCoberturaUpdateManyWithWhereWithoutSlotEscalaInput | EventoCoberturaUpdateManyWithWhereWithoutSlotEscalaInput[]
    deleteMany?: EventoCoberturaScalarWhereInput | EventoCoberturaScalarWhereInput[]
  }

  export type SlotEscalaCreateNestedOneWithoutCoberturasInput = {
    create?: XOR<SlotEscalaCreateWithoutCoberturasInput, SlotEscalaUncheckedCreateWithoutCoberturasInput>
    connectOrCreate?: SlotEscalaCreateOrConnectWithoutCoberturasInput
    connect?: SlotEscalaWhereUniqueInput
  }

  export type EletricistaCreateNestedOneWithoutEventoCoberturaInput = {
    create?: XOR<EletricistaCreateWithoutEventoCoberturaInput, EletricistaUncheckedCreateWithoutEventoCoberturaInput>
    connectOrCreate?: EletricistaCreateOrConnectWithoutEventoCoberturaInput
    connect?: EletricistaWhereUniqueInput
  }

  export type EnumEventoCoberturaTipoFieldUpdateOperationsInput = {
    set?: $Enums.EventoCoberturaTipo
  }

  export type EnumEventoCoberturaResultadoFieldUpdateOperationsInput = {
    set?: $Enums.EventoCoberturaResultado
  }

  export type SlotEscalaUpdateOneRequiredWithoutCoberturasNestedInput = {
    create?: XOR<SlotEscalaCreateWithoutCoberturasInput, SlotEscalaUncheckedCreateWithoutCoberturasInput>
    connectOrCreate?: SlotEscalaCreateOrConnectWithoutCoberturasInput
    upsert?: SlotEscalaUpsertWithoutCoberturasInput
    connect?: SlotEscalaWhereUniqueInput
    update?: XOR<XOR<SlotEscalaUpdateToOneWithWhereWithoutCoberturasInput, SlotEscalaUpdateWithoutCoberturasInput>, SlotEscalaUncheckedUpdateWithoutCoberturasInput>
  }

  export type EletricistaUpdateOneWithoutEventoCoberturaNestedInput = {
    create?: XOR<EletricistaCreateWithoutEventoCoberturaInput, EletricistaUncheckedCreateWithoutEventoCoberturaInput>
    connectOrCreate?: EletricistaCreateOrConnectWithoutEventoCoberturaInput
    upsert?: EletricistaUpsertWithoutEventoCoberturaInput
    disconnect?: EletricistaWhereInput | boolean
    delete?: EletricistaWhereInput | boolean
    connect?: EletricistaWhereUniqueInput
    update?: XOR<XOR<EletricistaUpdateToOneWithWhereWithoutEventoCoberturaInput, EletricistaUpdateWithoutEventoCoberturaInput>, EletricistaUncheckedUpdateWithoutEventoCoberturaInput>
  }

  export type EquipeCreateNestedOneWithoutEquipeHorarioVigenciaInput = {
    create?: XOR<EquipeCreateWithoutEquipeHorarioVigenciaInput, EquipeUncheckedCreateWithoutEquipeHorarioVigenciaInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutEquipeHorarioVigenciaInput
    connect?: EquipeWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EquipeUpdateOneRequiredWithoutEquipeHorarioVigenciaNestedInput = {
    create?: XOR<EquipeCreateWithoutEquipeHorarioVigenciaInput, EquipeUncheckedCreateWithoutEquipeHorarioVigenciaInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutEquipeHorarioVigenciaInput
    upsert?: EquipeUpsertWithoutEquipeHorarioVigenciaInput
    connect?: EquipeWhereUniqueInput
    update?: XOR<XOR<EquipeUpdateToOneWithWhereWithoutEquipeHorarioVigenciaInput, EquipeUpdateWithoutEquipeHorarioVigenciaInput>, EquipeUncheckedUpdateWithoutEquipeHorarioVigenciaInput>
  }

  export type EquipeTurnoHistoricoCreateNestedManyWithoutHorarioAberturaCatalogoInput = {
    create?: XOR<EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput, EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput> | EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput[] | EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput[]
    connectOrCreate?: EquipeTurnoHistoricoCreateOrConnectWithoutHorarioAberturaCatalogoInput | EquipeTurnoHistoricoCreateOrConnectWithoutHorarioAberturaCatalogoInput[]
    createMany?: EquipeTurnoHistoricoCreateManyHorarioAberturaCatalogoInputEnvelope
    connect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
  }

  export type EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutHorarioAberturaCatalogoInput = {
    create?: XOR<EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput, EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput> | EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput[] | EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput[]
    connectOrCreate?: EquipeTurnoHistoricoCreateOrConnectWithoutHorarioAberturaCatalogoInput | EquipeTurnoHistoricoCreateOrConnectWithoutHorarioAberturaCatalogoInput[]
    createMany?: EquipeTurnoHistoricoCreateManyHorarioAberturaCatalogoInputEnvelope
    connect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
  }

  export type EquipeTurnoHistoricoUpdateManyWithoutHorarioAberturaCatalogoNestedInput = {
    create?: XOR<EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput, EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput> | EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput[] | EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput[]
    connectOrCreate?: EquipeTurnoHistoricoCreateOrConnectWithoutHorarioAberturaCatalogoInput | EquipeTurnoHistoricoCreateOrConnectWithoutHorarioAberturaCatalogoInput[]
    upsert?: EquipeTurnoHistoricoUpsertWithWhereUniqueWithoutHorarioAberturaCatalogoInput | EquipeTurnoHistoricoUpsertWithWhereUniqueWithoutHorarioAberturaCatalogoInput[]
    createMany?: EquipeTurnoHistoricoCreateManyHorarioAberturaCatalogoInputEnvelope
    set?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    disconnect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    delete?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    connect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    update?: EquipeTurnoHistoricoUpdateWithWhereUniqueWithoutHorarioAberturaCatalogoInput | EquipeTurnoHistoricoUpdateWithWhereUniqueWithoutHorarioAberturaCatalogoInput[]
    updateMany?: EquipeTurnoHistoricoUpdateManyWithWhereWithoutHorarioAberturaCatalogoInput | EquipeTurnoHistoricoUpdateManyWithWhereWithoutHorarioAberturaCatalogoInput[]
    deleteMany?: EquipeTurnoHistoricoScalarWhereInput | EquipeTurnoHistoricoScalarWhereInput[]
  }

  export type EquipeTurnoHistoricoUncheckedUpdateManyWithoutHorarioAberturaCatalogoNestedInput = {
    create?: XOR<EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput, EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput> | EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput[] | EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput[]
    connectOrCreate?: EquipeTurnoHistoricoCreateOrConnectWithoutHorarioAberturaCatalogoInput | EquipeTurnoHistoricoCreateOrConnectWithoutHorarioAberturaCatalogoInput[]
    upsert?: EquipeTurnoHistoricoUpsertWithWhereUniqueWithoutHorarioAberturaCatalogoInput | EquipeTurnoHistoricoUpsertWithWhereUniqueWithoutHorarioAberturaCatalogoInput[]
    createMany?: EquipeTurnoHistoricoCreateManyHorarioAberturaCatalogoInputEnvelope
    set?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    disconnect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    delete?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    connect?: EquipeTurnoHistoricoWhereUniqueInput | EquipeTurnoHistoricoWhereUniqueInput[]
    update?: EquipeTurnoHistoricoUpdateWithWhereUniqueWithoutHorarioAberturaCatalogoInput | EquipeTurnoHistoricoUpdateWithWhereUniqueWithoutHorarioAberturaCatalogoInput[]
    updateMany?: EquipeTurnoHistoricoUpdateManyWithWhereWithoutHorarioAberturaCatalogoInput | EquipeTurnoHistoricoUpdateManyWithWhereWithoutHorarioAberturaCatalogoInput[]
    deleteMany?: EquipeTurnoHistoricoScalarWhereInput | EquipeTurnoHistoricoScalarWhereInput[]
  }

  export type EquipeCreateNestedOneWithoutEquipeTurnoHistoricoInput = {
    create?: XOR<EquipeCreateWithoutEquipeTurnoHistoricoInput, EquipeUncheckedCreateWithoutEquipeTurnoHistoricoInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutEquipeTurnoHistoricoInput
    connect?: EquipeWhereUniqueInput
  }

  export type HorarioAberturaCatalogoCreateNestedOneWithoutHistoricosInput = {
    create?: XOR<HorarioAberturaCatalogoCreateWithoutHistoricosInput, HorarioAberturaCatalogoUncheckedCreateWithoutHistoricosInput>
    connectOrCreate?: HorarioAberturaCatalogoCreateOrConnectWithoutHistoricosInput
    connect?: HorarioAberturaCatalogoWhereUniqueInput
  }

  export type EquipeUpdateOneRequiredWithoutEquipeTurnoHistoricoNestedInput = {
    create?: XOR<EquipeCreateWithoutEquipeTurnoHistoricoInput, EquipeUncheckedCreateWithoutEquipeTurnoHistoricoInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutEquipeTurnoHistoricoInput
    upsert?: EquipeUpsertWithoutEquipeTurnoHistoricoInput
    connect?: EquipeWhereUniqueInput
    update?: XOR<XOR<EquipeUpdateToOneWithWhereWithoutEquipeTurnoHistoricoInput, EquipeUpdateWithoutEquipeTurnoHistoricoInput>, EquipeUncheckedUpdateWithoutEquipeTurnoHistoricoInput>
  }

  export type HorarioAberturaCatalogoUpdateOneWithoutHistoricosNestedInput = {
    create?: XOR<HorarioAberturaCatalogoCreateWithoutHistoricosInput, HorarioAberturaCatalogoUncheckedCreateWithoutHistoricosInput>
    connectOrCreate?: HorarioAberturaCatalogoCreateOrConnectWithoutHistoricosInput
    upsert?: HorarioAberturaCatalogoUpsertWithoutHistoricosInput
    disconnect?: HorarioAberturaCatalogoWhereInput | boolean
    delete?: HorarioAberturaCatalogoWhereInput | boolean
    connect?: HorarioAberturaCatalogoWhereUniqueInput
    update?: XOR<XOR<HorarioAberturaCatalogoUpdateToOneWithWhereWithoutHistoricosInput, HorarioAberturaCatalogoUpdateWithoutHistoricosInput>, HorarioAberturaCatalogoUncheckedUpdateWithoutHistoricosInput>
  }

  export type ContratoCreateNestedOneWithoutSupervisorInput = {
    create?: XOR<ContratoCreateWithoutSupervisorInput, ContratoUncheckedCreateWithoutSupervisorInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutSupervisorInput
    connect?: ContratoWhereUniqueInput
  }

  export type EquipeSupervisorCreateNestedManyWithoutSupervisorInput = {
    create?: XOR<EquipeSupervisorCreateWithoutSupervisorInput, EquipeSupervisorUncheckedCreateWithoutSupervisorInput> | EquipeSupervisorCreateWithoutSupervisorInput[] | EquipeSupervisorUncheckedCreateWithoutSupervisorInput[]
    connectOrCreate?: EquipeSupervisorCreateOrConnectWithoutSupervisorInput | EquipeSupervisorCreateOrConnectWithoutSupervisorInput[]
    createMany?: EquipeSupervisorCreateManySupervisorInputEnvelope
    connect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
  }

  export type EquipeSupervisorUncheckedCreateNestedManyWithoutSupervisorInput = {
    create?: XOR<EquipeSupervisorCreateWithoutSupervisorInput, EquipeSupervisorUncheckedCreateWithoutSupervisorInput> | EquipeSupervisorCreateWithoutSupervisorInput[] | EquipeSupervisorUncheckedCreateWithoutSupervisorInput[]
    connectOrCreate?: EquipeSupervisorCreateOrConnectWithoutSupervisorInput | EquipeSupervisorCreateOrConnectWithoutSupervisorInput[]
    createMany?: EquipeSupervisorCreateManySupervisorInputEnvelope
    connect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
  }

  export type ContratoUpdateOneRequiredWithoutSupervisorNestedInput = {
    create?: XOR<ContratoCreateWithoutSupervisorInput, ContratoUncheckedCreateWithoutSupervisorInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutSupervisorInput
    upsert?: ContratoUpsertWithoutSupervisorInput
    connect?: ContratoWhereUniqueInput
    update?: XOR<XOR<ContratoUpdateToOneWithWhereWithoutSupervisorInput, ContratoUpdateWithoutSupervisorInput>, ContratoUncheckedUpdateWithoutSupervisorInput>
  }

  export type EquipeSupervisorUpdateManyWithoutSupervisorNestedInput = {
    create?: XOR<EquipeSupervisorCreateWithoutSupervisorInput, EquipeSupervisorUncheckedCreateWithoutSupervisorInput> | EquipeSupervisorCreateWithoutSupervisorInput[] | EquipeSupervisorUncheckedCreateWithoutSupervisorInput[]
    connectOrCreate?: EquipeSupervisorCreateOrConnectWithoutSupervisorInput | EquipeSupervisorCreateOrConnectWithoutSupervisorInput[]
    upsert?: EquipeSupervisorUpsertWithWhereUniqueWithoutSupervisorInput | EquipeSupervisorUpsertWithWhereUniqueWithoutSupervisorInput[]
    createMany?: EquipeSupervisorCreateManySupervisorInputEnvelope
    set?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    disconnect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    delete?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    connect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    update?: EquipeSupervisorUpdateWithWhereUniqueWithoutSupervisorInput | EquipeSupervisorUpdateWithWhereUniqueWithoutSupervisorInput[]
    updateMany?: EquipeSupervisorUpdateManyWithWhereWithoutSupervisorInput | EquipeSupervisorUpdateManyWithWhereWithoutSupervisorInput[]
    deleteMany?: EquipeSupervisorScalarWhereInput | EquipeSupervisorScalarWhereInput[]
  }

  export type EquipeSupervisorUncheckedUpdateManyWithoutSupervisorNestedInput = {
    create?: XOR<EquipeSupervisorCreateWithoutSupervisorInput, EquipeSupervisorUncheckedCreateWithoutSupervisorInput> | EquipeSupervisorCreateWithoutSupervisorInput[] | EquipeSupervisorUncheckedCreateWithoutSupervisorInput[]
    connectOrCreate?: EquipeSupervisorCreateOrConnectWithoutSupervisorInput | EquipeSupervisorCreateOrConnectWithoutSupervisorInput[]
    upsert?: EquipeSupervisorUpsertWithWhereUniqueWithoutSupervisorInput | EquipeSupervisorUpsertWithWhereUniqueWithoutSupervisorInput[]
    createMany?: EquipeSupervisorCreateManySupervisorInputEnvelope
    set?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    disconnect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    delete?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    connect?: EquipeSupervisorWhereUniqueInput | EquipeSupervisorWhereUniqueInput[]
    update?: EquipeSupervisorUpdateWithWhereUniqueWithoutSupervisorInput | EquipeSupervisorUpdateWithWhereUniqueWithoutSupervisorInput[]
    updateMany?: EquipeSupervisorUpdateManyWithWhereWithoutSupervisorInput | EquipeSupervisorUpdateManyWithWhereWithoutSupervisorInput[]
    deleteMany?: EquipeSupervisorScalarWhereInput | EquipeSupervisorScalarWhereInput[]
  }

  export type VeiculoCreateNestedOneWithoutTurnoInput = {
    create?: XOR<VeiculoCreateWithoutTurnoInput, VeiculoUncheckedCreateWithoutTurnoInput>
    connectOrCreate?: VeiculoCreateOrConnectWithoutTurnoInput
    connect?: VeiculoWhereUniqueInput
  }

  export type EquipeCreateNestedOneWithoutTurnoInput = {
    create?: XOR<EquipeCreateWithoutTurnoInput, EquipeUncheckedCreateWithoutTurnoInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutTurnoInput
    connect?: EquipeWhereUniqueInput
  }

  export type TurnoEletricistaCreateNestedManyWithoutTurnoInput = {
    create?: XOR<TurnoEletricistaCreateWithoutTurnoInput, TurnoEletricistaUncheckedCreateWithoutTurnoInput> | TurnoEletricistaCreateWithoutTurnoInput[] | TurnoEletricistaUncheckedCreateWithoutTurnoInput[]
    connectOrCreate?: TurnoEletricistaCreateOrConnectWithoutTurnoInput | TurnoEletricistaCreateOrConnectWithoutTurnoInput[]
    createMany?: TurnoEletricistaCreateManyTurnoInputEnvelope
    connect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
  }

  export type TurnoEletricistaUncheckedCreateNestedManyWithoutTurnoInput = {
    create?: XOR<TurnoEletricistaCreateWithoutTurnoInput, TurnoEletricistaUncheckedCreateWithoutTurnoInput> | TurnoEletricistaCreateWithoutTurnoInput[] | TurnoEletricistaUncheckedCreateWithoutTurnoInput[]
    connectOrCreate?: TurnoEletricistaCreateOrConnectWithoutTurnoInput | TurnoEletricistaCreateOrConnectWithoutTurnoInput[]
    createMany?: TurnoEletricistaCreateManyTurnoInputEnvelope
    connect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
  }

  export type VeiculoUpdateOneRequiredWithoutTurnoNestedInput = {
    create?: XOR<VeiculoCreateWithoutTurnoInput, VeiculoUncheckedCreateWithoutTurnoInput>
    connectOrCreate?: VeiculoCreateOrConnectWithoutTurnoInput
    upsert?: VeiculoUpsertWithoutTurnoInput
    connect?: VeiculoWhereUniqueInput
    update?: XOR<XOR<VeiculoUpdateToOneWithWhereWithoutTurnoInput, VeiculoUpdateWithoutTurnoInput>, VeiculoUncheckedUpdateWithoutTurnoInput>
  }

  export type EquipeUpdateOneRequiredWithoutTurnoNestedInput = {
    create?: XOR<EquipeCreateWithoutTurnoInput, EquipeUncheckedCreateWithoutTurnoInput>
    connectOrCreate?: EquipeCreateOrConnectWithoutTurnoInput
    upsert?: EquipeUpsertWithoutTurnoInput
    connect?: EquipeWhereUniqueInput
    update?: XOR<XOR<EquipeUpdateToOneWithWhereWithoutTurnoInput, EquipeUpdateWithoutTurnoInput>, EquipeUncheckedUpdateWithoutTurnoInput>
  }

  export type TurnoEletricistaUpdateManyWithoutTurnoNestedInput = {
    create?: XOR<TurnoEletricistaCreateWithoutTurnoInput, TurnoEletricistaUncheckedCreateWithoutTurnoInput> | TurnoEletricistaCreateWithoutTurnoInput[] | TurnoEletricistaUncheckedCreateWithoutTurnoInput[]
    connectOrCreate?: TurnoEletricistaCreateOrConnectWithoutTurnoInput | TurnoEletricistaCreateOrConnectWithoutTurnoInput[]
    upsert?: TurnoEletricistaUpsertWithWhereUniqueWithoutTurnoInput | TurnoEletricistaUpsertWithWhereUniqueWithoutTurnoInput[]
    createMany?: TurnoEletricistaCreateManyTurnoInputEnvelope
    set?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    disconnect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    delete?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    connect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    update?: TurnoEletricistaUpdateWithWhereUniqueWithoutTurnoInput | TurnoEletricistaUpdateWithWhereUniqueWithoutTurnoInput[]
    updateMany?: TurnoEletricistaUpdateManyWithWhereWithoutTurnoInput | TurnoEletricistaUpdateManyWithWhereWithoutTurnoInput[]
    deleteMany?: TurnoEletricistaScalarWhereInput | TurnoEletricistaScalarWhereInput[]
  }

  export type TurnoEletricistaUncheckedUpdateManyWithoutTurnoNestedInput = {
    create?: XOR<TurnoEletricistaCreateWithoutTurnoInput, TurnoEletricistaUncheckedCreateWithoutTurnoInput> | TurnoEletricistaCreateWithoutTurnoInput[] | TurnoEletricistaUncheckedCreateWithoutTurnoInput[]
    connectOrCreate?: TurnoEletricistaCreateOrConnectWithoutTurnoInput | TurnoEletricistaCreateOrConnectWithoutTurnoInput[]
    upsert?: TurnoEletricistaUpsertWithWhereUniqueWithoutTurnoInput | TurnoEletricistaUpsertWithWhereUniqueWithoutTurnoInput[]
    createMany?: TurnoEletricistaCreateManyTurnoInputEnvelope
    set?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    disconnect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    delete?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    connect?: TurnoEletricistaWhereUniqueInput | TurnoEletricistaWhereUniqueInput[]
    update?: TurnoEletricistaUpdateWithWhereUniqueWithoutTurnoInput | TurnoEletricistaUpdateWithWhereUniqueWithoutTurnoInput[]
    updateMany?: TurnoEletricistaUpdateManyWithWhereWithoutTurnoInput | TurnoEletricistaUpdateManyWithWhereWithoutTurnoInput[]
    deleteMany?: TurnoEletricistaScalarWhereInput | TurnoEletricistaScalarWhereInput[]
  }

  export type TurnoCreateNestedOneWithoutTurnoEletricistasInput = {
    create?: XOR<TurnoCreateWithoutTurnoEletricistasInput, TurnoUncheckedCreateWithoutTurnoEletricistasInput>
    connectOrCreate?: TurnoCreateOrConnectWithoutTurnoEletricistasInput
    connect?: TurnoWhereUniqueInput
  }

  export type EletricistaCreateNestedOneWithoutTurnoEletricistasInput = {
    create?: XOR<EletricistaCreateWithoutTurnoEletricistasInput, EletricistaUncheckedCreateWithoutTurnoEletricistasInput>
    connectOrCreate?: EletricistaCreateOrConnectWithoutTurnoEletricistasInput
    connect?: EletricistaWhereUniqueInput
  }

  export type TurnoUpdateOneRequiredWithoutTurnoEletricistasNestedInput = {
    create?: XOR<TurnoCreateWithoutTurnoEletricistasInput, TurnoUncheckedCreateWithoutTurnoEletricistasInput>
    connectOrCreate?: TurnoCreateOrConnectWithoutTurnoEletricistasInput
    upsert?: TurnoUpsertWithoutTurnoEletricistasInput
    connect?: TurnoWhereUniqueInput
    update?: XOR<XOR<TurnoUpdateToOneWithWhereWithoutTurnoEletricistasInput, TurnoUpdateWithoutTurnoEletricistasInput>, TurnoUncheckedUpdateWithoutTurnoEletricistasInput>
  }

  export type EletricistaUpdateOneRequiredWithoutTurnoEletricistasNestedInput = {
    create?: XOR<EletricistaCreateWithoutTurnoEletricistasInput, EletricistaUncheckedCreateWithoutTurnoEletricistasInput>
    connectOrCreate?: EletricistaCreateOrConnectWithoutTurnoEletricistasInput
    upsert?: EletricistaUpsertWithoutTurnoEletricistasInput
    connect?: EletricistaWhereUniqueInput
    update?: XOR<XOR<EletricistaUpdateToOneWithWhereWithoutTurnoEletricistasInput, EletricistaUpdateWithoutTurnoEletricistasInput>, EletricistaUncheckedUpdateWithoutTurnoEletricistasInput>
  }

  export type VeiculoCreateNestedOneWithoutVeiculoBaseHistoricoInput = {
    create?: XOR<VeiculoCreateWithoutVeiculoBaseHistoricoInput, VeiculoUncheckedCreateWithoutVeiculoBaseHistoricoInput>
    connectOrCreate?: VeiculoCreateOrConnectWithoutVeiculoBaseHistoricoInput
    connect?: VeiculoWhereUniqueInput
  }

  export type BaseCreateNestedOneWithoutVeiculoBaseHistoricoInput = {
    create?: XOR<BaseCreateWithoutVeiculoBaseHistoricoInput, BaseUncheckedCreateWithoutVeiculoBaseHistoricoInput>
    connectOrCreate?: BaseCreateOrConnectWithoutVeiculoBaseHistoricoInput
    connect?: BaseWhereUniqueInput
  }

  export type VeiculoUpdateOneRequiredWithoutVeiculoBaseHistoricoNestedInput = {
    create?: XOR<VeiculoCreateWithoutVeiculoBaseHistoricoInput, VeiculoUncheckedCreateWithoutVeiculoBaseHistoricoInput>
    connectOrCreate?: VeiculoCreateOrConnectWithoutVeiculoBaseHistoricoInput
    upsert?: VeiculoUpsertWithoutVeiculoBaseHistoricoInput
    connect?: VeiculoWhereUniqueInput
    update?: XOR<XOR<VeiculoUpdateToOneWithWhereWithoutVeiculoBaseHistoricoInput, VeiculoUpdateWithoutVeiculoBaseHistoricoInput>, VeiculoUncheckedUpdateWithoutVeiculoBaseHistoricoInput>
  }

  export type BaseUpdateOneRequiredWithoutVeiculoBaseHistoricoNestedInput = {
    create?: XOR<BaseCreateWithoutVeiculoBaseHistoricoInput, BaseUncheckedCreateWithoutVeiculoBaseHistoricoInput>
    connectOrCreate?: BaseCreateOrConnectWithoutVeiculoBaseHistoricoInput
    upsert?: BaseUpsertWithoutVeiculoBaseHistoricoInput
    connect?: BaseWhereUniqueInput
    update?: XOR<XOR<BaseUpdateToOneWithWhereWithoutVeiculoBaseHistoricoInput, BaseUpdateWithoutVeiculoBaseHistoricoInput>, BaseUncheckedUpdateWithoutVeiculoBaseHistoricoInput>
  }

  export type VeiculoCreateNestedManyWithoutTipoVeiculoInput = {
    create?: XOR<VeiculoCreateWithoutTipoVeiculoInput, VeiculoUncheckedCreateWithoutTipoVeiculoInput> | VeiculoCreateWithoutTipoVeiculoInput[] | VeiculoUncheckedCreateWithoutTipoVeiculoInput[]
    connectOrCreate?: VeiculoCreateOrConnectWithoutTipoVeiculoInput | VeiculoCreateOrConnectWithoutTipoVeiculoInput[]
    createMany?: VeiculoCreateManyTipoVeiculoInputEnvelope
    connect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
  }

  export type ChecklistTipoVeiculoRelacaoCreateNestedManyWithoutTipoVeiculoInput = {
    create?: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput> | ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput[] | ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput[]
    connectOrCreate?: ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutTipoVeiculoInput | ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutTipoVeiculoInput[]
    createMany?: ChecklistTipoVeiculoRelacaoCreateManyTipoVeiculoInputEnvelope
    connect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
  }

  export type VeiculoUncheckedCreateNestedManyWithoutTipoVeiculoInput = {
    create?: XOR<VeiculoCreateWithoutTipoVeiculoInput, VeiculoUncheckedCreateWithoutTipoVeiculoInput> | VeiculoCreateWithoutTipoVeiculoInput[] | VeiculoUncheckedCreateWithoutTipoVeiculoInput[]
    connectOrCreate?: VeiculoCreateOrConnectWithoutTipoVeiculoInput | VeiculoCreateOrConnectWithoutTipoVeiculoInput[]
    createMany?: VeiculoCreateManyTipoVeiculoInputEnvelope
    connect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedCreateNestedManyWithoutTipoVeiculoInput = {
    create?: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput> | ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput[] | ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput[]
    connectOrCreate?: ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutTipoVeiculoInput | ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutTipoVeiculoInput[]
    createMany?: ChecklistTipoVeiculoRelacaoCreateManyTipoVeiculoInputEnvelope
    connect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
  }

  export type VeiculoUpdateManyWithoutTipoVeiculoNestedInput = {
    create?: XOR<VeiculoCreateWithoutTipoVeiculoInput, VeiculoUncheckedCreateWithoutTipoVeiculoInput> | VeiculoCreateWithoutTipoVeiculoInput[] | VeiculoUncheckedCreateWithoutTipoVeiculoInput[]
    connectOrCreate?: VeiculoCreateOrConnectWithoutTipoVeiculoInput | VeiculoCreateOrConnectWithoutTipoVeiculoInput[]
    upsert?: VeiculoUpsertWithWhereUniqueWithoutTipoVeiculoInput | VeiculoUpsertWithWhereUniqueWithoutTipoVeiculoInput[]
    createMany?: VeiculoCreateManyTipoVeiculoInputEnvelope
    set?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    disconnect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    delete?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    connect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    update?: VeiculoUpdateWithWhereUniqueWithoutTipoVeiculoInput | VeiculoUpdateWithWhereUniqueWithoutTipoVeiculoInput[]
    updateMany?: VeiculoUpdateManyWithWhereWithoutTipoVeiculoInput | VeiculoUpdateManyWithWhereWithoutTipoVeiculoInput[]
    deleteMany?: VeiculoScalarWhereInput | VeiculoScalarWhereInput[]
  }

  export type ChecklistTipoVeiculoRelacaoUpdateManyWithoutTipoVeiculoNestedInput = {
    create?: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput> | ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput[] | ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput[]
    connectOrCreate?: ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutTipoVeiculoInput | ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutTipoVeiculoInput[]
    upsert?: ChecklistTipoVeiculoRelacaoUpsertWithWhereUniqueWithoutTipoVeiculoInput | ChecklistTipoVeiculoRelacaoUpsertWithWhereUniqueWithoutTipoVeiculoInput[]
    createMany?: ChecklistTipoVeiculoRelacaoCreateManyTipoVeiculoInputEnvelope
    set?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    disconnect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    delete?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    connect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    update?: ChecklistTipoVeiculoRelacaoUpdateWithWhereUniqueWithoutTipoVeiculoInput | ChecklistTipoVeiculoRelacaoUpdateWithWhereUniqueWithoutTipoVeiculoInput[]
    updateMany?: ChecklistTipoVeiculoRelacaoUpdateManyWithWhereWithoutTipoVeiculoInput | ChecklistTipoVeiculoRelacaoUpdateManyWithWhereWithoutTipoVeiculoInput[]
    deleteMany?: ChecklistTipoVeiculoRelacaoScalarWhereInput | ChecklistTipoVeiculoRelacaoScalarWhereInput[]
  }

  export type VeiculoUncheckedUpdateManyWithoutTipoVeiculoNestedInput = {
    create?: XOR<VeiculoCreateWithoutTipoVeiculoInput, VeiculoUncheckedCreateWithoutTipoVeiculoInput> | VeiculoCreateWithoutTipoVeiculoInput[] | VeiculoUncheckedCreateWithoutTipoVeiculoInput[]
    connectOrCreate?: VeiculoCreateOrConnectWithoutTipoVeiculoInput | VeiculoCreateOrConnectWithoutTipoVeiculoInput[]
    upsert?: VeiculoUpsertWithWhereUniqueWithoutTipoVeiculoInput | VeiculoUpsertWithWhereUniqueWithoutTipoVeiculoInput[]
    createMany?: VeiculoCreateManyTipoVeiculoInputEnvelope
    set?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    disconnect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    delete?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    connect?: VeiculoWhereUniqueInput | VeiculoWhereUniqueInput[]
    update?: VeiculoUpdateWithWhereUniqueWithoutTipoVeiculoInput | VeiculoUpdateWithWhereUniqueWithoutTipoVeiculoInput[]
    updateMany?: VeiculoUpdateManyWithWhereWithoutTipoVeiculoInput | VeiculoUpdateManyWithWhereWithoutTipoVeiculoInput[]
    deleteMany?: VeiculoScalarWhereInput | VeiculoScalarWhereInput[]
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutTipoVeiculoNestedInput = {
    create?: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput> | ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput[] | ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput[]
    connectOrCreate?: ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutTipoVeiculoInput | ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutTipoVeiculoInput[]
    upsert?: ChecklistTipoVeiculoRelacaoUpsertWithWhereUniqueWithoutTipoVeiculoInput | ChecklistTipoVeiculoRelacaoUpsertWithWhereUniqueWithoutTipoVeiculoInput[]
    createMany?: ChecklistTipoVeiculoRelacaoCreateManyTipoVeiculoInputEnvelope
    set?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    disconnect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    delete?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    connect?: ChecklistTipoVeiculoRelacaoWhereUniqueInput | ChecklistTipoVeiculoRelacaoWhereUniqueInput[]
    update?: ChecklistTipoVeiculoRelacaoUpdateWithWhereUniqueWithoutTipoVeiculoInput | ChecklistTipoVeiculoRelacaoUpdateWithWhereUniqueWithoutTipoVeiculoInput[]
    updateMany?: ChecklistTipoVeiculoRelacaoUpdateManyWithWhereWithoutTipoVeiculoInput | ChecklistTipoVeiculoRelacaoUpdateManyWithWhereWithoutTipoVeiculoInput[]
    deleteMany?: ChecklistTipoVeiculoRelacaoScalarWhereInput | ChecklistTipoVeiculoRelacaoScalarWhereInput[]
  }

  export type TipoVeiculoCreateNestedOneWithoutVeiculoInput = {
    create?: XOR<TipoVeiculoCreateWithoutVeiculoInput, TipoVeiculoUncheckedCreateWithoutVeiculoInput>
    connectOrCreate?: TipoVeiculoCreateOrConnectWithoutVeiculoInput
    connect?: TipoVeiculoWhereUniqueInput
  }

  export type ContratoCreateNestedOneWithoutVeiculoInput = {
    create?: XOR<ContratoCreateWithoutVeiculoInput, ContratoUncheckedCreateWithoutVeiculoInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutVeiculoInput
    connect?: ContratoWhereUniqueInput
  }

  export type VeiculoOdometroCreateNestedManyWithoutVeiculoInput = {
    create?: XOR<VeiculoOdometroCreateWithoutVeiculoInput, VeiculoOdometroUncheckedCreateWithoutVeiculoInput> | VeiculoOdometroCreateWithoutVeiculoInput[] | VeiculoOdometroUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: VeiculoOdometroCreateOrConnectWithoutVeiculoInput | VeiculoOdometroCreateOrConnectWithoutVeiculoInput[]
    createMany?: VeiculoOdometroCreateManyVeiculoInputEnvelope
    connect?: VeiculoOdometroWhereUniqueInput | VeiculoOdometroWhereUniqueInput[]
  }

  export type VeiculoBaseHistoricoCreateNestedManyWithoutVeiculoInput = {
    create?: XOR<VeiculoBaseHistoricoCreateWithoutVeiculoInput, VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput> | VeiculoBaseHistoricoCreateWithoutVeiculoInput[] | VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: VeiculoBaseHistoricoCreateOrConnectWithoutVeiculoInput | VeiculoBaseHistoricoCreateOrConnectWithoutVeiculoInput[]
    createMany?: VeiculoBaseHistoricoCreateManyVeiculoInputEnvelope
    connect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
  }

  export type TurnoCreateNestedManyWithoutVeiculoInput = {
    create?: XOR<TurnoCreateWithoutVeiculoInput, TurnoUncheckedCreateWithoutVeiculoInput> | TurnoCreateWithoutVeiculoInput[] | TurnoUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: TurnoCreateOrConnectWithoutVeiculoInput | TurnoCreateOrConnectWithoutVeiculoInput[]
    createMany?: TurnoCreateManyVeiculoInputEnvelope
    connect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
  }

  export type VeiculoOdometroUncheckedCreateNestedManyWithoutVeiculoInput = {
    create?: XOR<VeiculoOdometroCreateWithoutVeiculoInput, VeiculoOdometroUncheckedCreateWithoutVeiculoInput> | VeiculoOdometroCreateWithoutVeiculoInput[] | VeiculoOdometroUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: VeiculoOdometroCreateOrConnectWithoutVeiculoInput | VeiculoOdometroCreateOrConnectWithoutVeiculoInput[]
    createMany?: VeiculoOdometroCreateManyVeiculoInputEnvelope
    connect?: VeiculoOdometroWhereUniqueInput | VeiculoOdometroWhereUniqueInput[]
  }

  export type VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutVeiculoInput = {
    create?: XOR<VeiculoBaseHistoricoCreateWithoutVeiculoInput, VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput> | VeiculoBaseHistoricoCreateWithoutVeiculoInput[] | VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: VeiculoBaseHistoricoCreateOrConnectWithoutVeiculoInput | VeiculoBaseHistoricoCreateOrConnectWithoutVeiculoInput[]
    createMany?: VeiculoBaseHistoricoCreateManyVeiculoInputEnvelope
    connect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
  }

  export type TurnoUncheckedCreateNestedManyWithoutVeiculoInput = {
    create?: XOR<TurnoCreateWithoutVeiculoInput, TurnoUncheckedCreateWithoutVeiculoInput> | TurnoCreateWithoutVeiculoInput[] | TurnoUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: TurnoCreateOrConnectWithoutVeiculoInput | TurnoCreateOrConnectWithoutVeiculoInput[]
    createMany?: TurnoCreateManyVeiculoInputEnvelope
    connect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
  }

  export type TipoVeiculoUpdateOneRequiredWithoutVeiculoNestedInput = {
    create?: XOR<TipoVeiculoCreateWithoutVeiculoInput, TipoVeiculoUncheckedCreateWithoutVeiculoInput>
    connectOrCreate?: TipoVeiculoCreateOrConnectWithoutVeiculoInput
    upsert?: TipoVeiculoUpsertWithoutVeiculoInput
    connect?: TipoVeiculoWhereUniqueInput
    update?: XOR<XOR<TipoVeiculoUpdateToOneWithWhereWithoutVeiculoInput, TipoVeiculoUpdateWithoutVeiculoInput>, TipoVeiculoUncheckedUpdateWithoutVeiculoInput>
  }

  export type ContratoUpdateOneRequiredWithoutVeiculoNestedInput = {
    create?: XOR<ContratoCreateWithoutVeiculoInput, ContratoUncheckedCreateWithoutVeiculoInput>
    connectOrCreate?: ContratoCreateOrConnectWithoutVeiculoInput
    upsert?: ContratoUpsertWithoutVeiculoInput
    connect?: ContratoWhereUniqueInput
    update?: XOR<XOR<ContratoUpdateToOneWithWhereWithoutVeiculoInput, ContratoUpdateWithoutVeiculoInput>, ContratoUncheckedUpdateWithoutVeiculoInput>
  }

  export type VeiculoOdometroUpdateManyWithoutVeiculoNestedInput = {
    create?: XOR<VeiculoOdometroCreateWithoutVeiculoInput, VeiculoOdometroUncheckedCreateWithoutVeiculoInput> | VeiculoOdometroCreateWithoutVeiculoInput[] | VeiculoOdometroUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: VeiculoOdometroCreateOrConnectWithoutVeiculoInput | VeiculoOdometroCreateOrConnectWithoutVeiculoInput[]
    upsert?: VeiculoOdometroUpsertWithWhereUniqueWithoutVeiculoInput | VeiculoOdometroUpsertWithWhereUniqueWithoutVeiculoInput[]
    createMany?: VeiculoOdometroCreateManyVeiculoInputEnvelope
    set?: VeiculoOdometroWhereUniqueInput | VeiculoOdometroWhereUniqueInput[]
    disconnect?: VeiculoOdometroWhereUniqueInput | VeiculoOdometroWhereUniqueInput[]
    delete?: VeiculoOdometroWhereUniqueInput | VeiculoOdometroWhereUniqueInput[]
    connect?: VeiculoOdometroWhereUniqueInput | VeiculoOdometroWhereUniqueInput[]
    update?: VeiculoOdometroUpdateWithWhereUniqueWithoutVeiculoInput | VeiculoOdometroUpdateWithWhereUniqueWithoutVeiculoInput[]
    updateMany?: VeiculoOdometroUpdateManyWithWhereWithoutVeiculoInput | VeiculoOdometroUpdateManyWithWhereWithoutVeiculoInput[]
    deleteMany?: VeiculoOdometroScalarWhereInput | VeiculoOdometroScalarWhereInput[]
  }

  export type VeiculoBaseHistoricoUpdateManyWithoutVeiculoNestedInput = {
    create?: XOR<VeiculoBaseHistoricoCreateWithoutVeiculoInput, VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput> | VeiculoBaseHistoricoCreateWithoutVeiculoInput[] | VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: VeiculoBaseHistoricoCreateOrConnectWithoutVeiculoInput | VeiculoBaseHistoricoCreateOrConnectWithoutVeiculoInput[]
    upsert?: VeiculoBaseHistoricoUpsertWithWhereUniqueWithoutVeiculoInput | VeiculoBaseHistoricoUpsertWithWhereUniqueWithoutVeiculoInput[]
    createMany?: VeiculoBaseHistoricoCreateManyVeiculoInputEnvelope
    set?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    disconnect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    delete?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    connect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    update?: VeiculoBaseHistoricoUpdateWithWhereUniqueWithoutVeiculoInput | VeiculoBaseHistoricoUpdateWithWhereUniqueWithoutVeiculoInput[]
    updateMany?: VeiculoBaseHistoricoUpdateManyWithWhereWithoutVeiculoInput | VeiculoBaseHistoricoUpdateManyWithWhereWithoutVeiculoInput[]
    deleteMany?: VeiculoBaseHistoricoScalarWhereInput | VeiculoBaseHistoricoScalarWhereInput[]
  }

  export type TurnoUpdateManyWithoutVeiculoNestedInput = {
    create?: XOR<TurnoCreateWithoutVeiculoInput, TurnoUncheckedCreateWithoutVeiculoInput> | TurnoCreateWithoutVeiculoInput[] | TurnoUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: TurnoCreateOrConnectWithoutVeiculoInput | TurnoCreateOrConnectWithoutVeiculoInput[]
    upsert?: TurnoUpsertWithWhereUniqueWithoutVeiculoInput | TurnoUpsertWithWhereUniqueWithoutVeiculoInput[]
    createMany?: TurnoCreateManyVeiculoInputEnvelope
    set?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    disconnect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    delete?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    connect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    update?: TurnoUpdateWithWhereUniqueWithoutVeiculoInput | TurnoUpdateWithWhereUniqueWithoutVeiculoInput[]
    updateMany?: TurnoUpdateManyWithWhereWithoutVeiculoInput | TurnoUpdateManyWithWhereWithoutVeiculoInput[]
    deleteMany?: TurnoScalarWhereInput | TurnoScalarWhereInput[]
  }

  export type VeiculoOdometroUncheckedUpdateManyWithoutVeiculoNestedInput = {
    create?: XOR<VeiculoOdometroCreateWithoutVeiculoInput, VeiculoOdometroUncheckedCreateWithoutVeiculoInput> | VeiculoOdometroCreateWithoutVeiculoInput[] | VeiculoOdometroUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: VeiculoOdometroCreateOrConnectWithoutVeiculoInput | VeiculoOdometroCreateOrConnectWithoutVeiculoInput[]
    upsert?: VeiculoOdometroUpsertWithWhereUniqueWithoutVeiculoInput | VeiculoOdometroUpsertWithWhereUniqueWithoutVeiculoInput[]
    createMany?: VeiculoOdometroCreateManyVeiculoInputEnvelope
    set?: VeiculoOdometroWhereUniqueInput | VeiculoOdometroWhereUniqueInput[]
    disconnect?: VeiculoOdometroWhereUniqueInput | VeiculoOdometroWhereUniqueInput[]
    delete?: VeiculoOdometroWhereUniqueInput | VeiculoOdometroWhereUniqueInput[]
    connect?: VeiculoOdometroWhereUniqueInput | VeiculoOdometroWhereUniqueInput[]
    update?: VeiculoOdometroUpdateWithWhereUniqueWithoutVeiculoInput | VeiculoOdometroUpdateWithWhereUniqueWithoutVeiculoInput[]
    updateMany?: VeiculoOdometroUpdateManyWithWhereWithoutVeiculoInput | VeiculoOdometroUpdateManyWithWhereWithoutVeiculoInput[]
    deleteMany?: VeiculoOdometroScalarWhereInput | VeiculoOdometroScalarWhereInput[]
  }

  export type VeiculoBaseHistoricoUncheckedUpdateManyWithoutVeiculoNestedInput = {
    create?: XOR<VeiculoBaseHistoricoCreateWithoutVeiculoInput, VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput> | VeiculoBaseHistoricoCreateWithoutVeiculoInput[] | VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: VeiculoBaseHistoricoCreateOrConnectWithoutVeiculoInput | VeiculoBaseHistoricoCreateOrConnectWithoutVeiculoInput[]
    upsert?: VeiculoBaseHistoricoUpsertWithWhereUniqueWithoutVeiculoInput | VeiculoBaseHistoricoUpsertWithWhereUniqueWithoutVeiculoInput[]
    createMany?: VeiculoBaseHistoricoCreateManyVeiculoInputEnvelope
    set?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    disconnect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    delete?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    connect?: VeiculoBaseHistoricoWhereUniqueInput | VeiculoBaseHistoricoWhereUniqueInput[]
    update?: VeiculoBaseHistoricoUpdateWithWhereUniqueWithoutVeiculoInput | VeiculoBaseHistoricoUpdateWithWhereUniqueWithoutVeiculoInput[]
    updateMany?: VeiculoBaseHistoricoUpdateManyWithWhereWithoutVeiculoInput | VeiculoBaseHistoricoUpdateManyWithWhereWithoutVeiculoInput[]
    deleteMany?: VeiculoBaseHistoricoScalarWhereInput | VeiculoBaseHistoricoScalarWhereInput[]
  }

  export type TurnoUncheckedUpdateManyWithoutVeiculoNestedInput = {
    create?: XOR<TurnoCreateWithoutVeiculoInput, TurnoUncheckedCreateWithoutVeiculoInput> | TurnoCreateWithoutVeiculoInput[] | TurnoUncheckedCreateWithoutVeiculoInput[]
    connectOrCreate?: TurnoCreateOrConnectWithoutVeiculoInput | TurnoCreateOrConnectWithoutVeiculoInput[]
    upsert?: TurnoUpsertWithWhereUniqueWithoutVeiculoInput | TurnoUpsertWithWhereUniqueWithoutVeiculoInput[]
    createMany?: TurnoCreateManyVeiculoInputEnvelope
    set?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    disconnect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    delete?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    connect?: TurnoWhereUniqueInput | TurnoWhereUniqueInput[]
    update?: TurnoUpdateWithWhereUniqueWithoutVeiculoInput | TurnoUpdateWithWhereUniqueWithoutVeiculoInput[]
    updateMany?: TurnoUpdateManyWithWhereWithoutVeiculoInput | TurnoUpdateManyWithWhereWithoutVeiculoInput[]
    deleteMany?: TurnoScalarWhereInput | TurnoScalarWhereInput[]
  }

  export type VeiculoCreateNestedOneWithoutVeiculoOdometroInput = {
    create?: XOR<VeiculoCreateWithoutVeiculoOdometroInput, VeiculoUncheckedCreateWithoutVeiculoOdometroInput>
    connectOrCreate?: VeiculoCreateOrConnectWithoutVeiculoOdometroInput
    connect?: VeiculoWhereUniqueInput
  }

  export type VeiculoUpdateOneRequiredWithoutVeiculoOdometroNestedInput = {
    create?: XOR<VeiculoCreateWithoutVeiculoOdometroInput, VeiculoUncheckedCreateWithoutVeiculoOdometroInput>
    connectOrCreate?: VeiculoCreateOrConnectWithoutVeiculoOdometroInput
    upsert?: VeiculoUpsertWithoutVeiculoOdometroInput
    connect?: VeiculoWhereUniqueInput
    update?: XOR<XOR<VeiculoUpdateToOneWithWhereWithoutVeiculoOdometroInput, VeiculoUpdateWithoutVeiculoOdometroInput>, VeiculoUncheckedUpdateWithoutVeiculoOdometroInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumModoRepeticaoFilter<$PrismaModel = never> = {
    equals?: $Enums.ModoRepeticao | EnumModoRepeticaoFieldRefInput<$PrismaModel>
    in?: $Enums.ModoRepeticao[]
    notIn?: $Enums.ModoRepeticao[]
    not?: NestedEnumModoRepeticaoFilter<$PrismaModel> | $Enums.ModoRepeticao
  }

  export type NestedEnumModoRepeticaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ModoRepeticao | EnumModoRepeticaoFieldRefInput<$PrismaModel>
    in?: $Enums.ModoRepeticao[]
    notIn?: $Enums.ModoRepeticao[]
    not?: NestedEnumModoRepeticaoWithAggregatesFilter<$PrismaModel> | $Enums.ModoRepeticao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumModoRepeticaoFilter<$PrismaModel>
    _max?: NestedEnumModoRepeticaoFilter<$PrismaModel>
  }

  export type NestedEnumStatusTrabalhoFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusTrabalho | EnumStatusTrabalhoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusTrabalho[]
    notIn?: $Enums.StatusTrabalho[]
    not?: NestedEnumStatusTrabalhoFilter<$PrismaModel> | $Enums.StatusTrabalho
  }

  export type NestedEnumStatusTrabalhoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusTrabalho | EnumStatusTrabalhoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusTrabalho[]
    notIn?: $Enums.StatusTrabalho[]
    not?: NestedEnumStatusTrabalhoWithAggregatesFilter<$PrismaModel> | $Enums.StatusTrabalho
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusTrabalhoFilter<$PrismaModel>
    _max?: NestedEnumStatusTrabalhoFilter<$PrismaModel>
  }

  export type NestedEnumDiaSemanaFilter<$PrismaModel = never> = {
    equals?: $Enums.DiaSemana | EnumDiaSemanaFieldRefInput<$PrismaModel>
    in?: $Enums.DiaSemana[]
    notIn?: $Enums.DiaSemana[]
    not?: NestedEnumDiaSemanaFilter<$PrismaModel> | $Enums.DiaSemana
  }

  export type NestedEnumDiaSemanaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DiaSemana | EnumDiaSemanaFieldRefInput<$PrismaModel>
    in?: $Enums.DiaSemana[]
    notIn?: $Enums.DiaSemana[]
    not?: NestedEnumDiaSemanaWithAggregatesFilter<$PrismaModel> | $Enums.DiaSemana
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDiaSemanaFilter<$PrismaModel>
    _max?: NestedEnumDiaSemanaFilter<$PrismaModel>
  }

  export type NestedEnumStatusEscalaEquipePeriodoFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusEscalaEquipePeriodo | EnumStatusEscalaEquipePeriodoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusEscalaEquipePeriodo[]
    notIn?: $Enums.StatusEscalaEquipePeriodo[]
    not?: NestedEnumStatusEscalaEquipePeriodoFilter<$PrismaModel> | $Enums.StatusEscalaEquipePeriodo
  }

  export type NestedEnumStatusEscalaEquipePeriodoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusEscalaEquipePeriodo | EnumStatusEscalaEquipePeriodoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusEscalaEquipePeriodo[]
    notIn?: $Enums.StatusEscalaEquipePeriodo[]
    not?: NestedEnumStatusEscalaEquipePeriodoWithAggregatesFilter<$PrismaModel> | $Enums.StatusEscalaEquipePeriodo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusEscalaEquipePeriodoFilter<$PrismaModel>
    _max?: NestedEnumStatusEscalaEquipePeriodoFilter<$PrismaModel>
  }

  export type NestedEnumEstadoSlotFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSlot | EnumEstadoSlotFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSlot[]
    notIn?: $Enums.EstadoSlot[]
    not?: NestedEnumEstadoSlotFilter<$PrismaModel> | $Enums.EstadoSlot
  }

  export type NestedEnumOrigemAtribuicaoFilter<$PrismaModel = never> = {
    equals?: $Enums.OrigemAtribuicao | EnumOrigemAtribuicaoFieldRefInput<$PrismaModel>
    in?: $Enums.OrigemAtribuicao[]
    notIn?: $Enums.OrigemAtribuicao[]
    not?: NestedEnumOrigemAtribuicaoFilter<$PrismaModel> | $Enums.OrigemAtribuicao
  }

  export type NestedEnumEstadoSlotWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSlot | EnumEstadoSlotFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSlot[]
    notIn?: $Enums.EstadoSlot[]
    not?: NestedEnumEstadoSlotWithAggregatesFilter<$PrismaModel> | $Enums.EstadoSlot
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoSlotFilter<$PrismaModel>
    _max?: NestedEnumEstadoSlotFilter<$PrismaModel>
  }

  export type NestedEnumOrigemAtribuicaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrigemAtribuicao | EnumOrigemAtribuicaoFieldRefInput<$PrismaModel>
    in?: $Enums.OrigemAtribuicao[]
    notIn?: $Enums.OrigemAtribuicao[]
    not?: NestedEnumOrigemAtribuicaoWithAggregatesFilter<$PrismaModel> | $Enums.OrigemAtribuicao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrigemAtribuicaoFilter<$PrismaModel>
    _max?: NestedEnumOrigemAtribuicaoFilter<$PrismaModel>
  }

  export type NestedEnumEventoCoberturaTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.EventoCoberturaTipo | EnumEventoCoberturaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.EventoCoberturaTipo[]
    notIn?: $Enums.EventoCoberturaTipo[]
    not?: NestedEnumEventoCoberturaTipoFilter<$PrismaModel> | $Enums.EventoCoberturaTipo
  }

  export type NestedEnumEventoCoberturaResultadoFilter<$PrismaModel = never> = {
    equals?: $Enums.EventoCoberturaResultado | EnumEventoCoberturaResultadoFieldRefInput<$PrismaModel>
    in?: $Enums.EventoCoberturaResultado[]
    notIn?: $Enums.EventoCoberturaResultado[]
    not?: NestedEnumEventoCoberturaResultadoFilter<$PrismaModel> | $Enums.EventoCoberturaResultado
  }

  export type NestedEnumEventoCoberturaTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EventoCoberturaTipo | EnumEventoCoberturaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.EventoCoberturaTipo[]
    notIn?: $Enums.EventoCoberturaTipo[]
    not?: NestedEnumEventoCoberturaTipoWithAggregatesFilter<$PrismaModel> | $Enums.EventoCoberturaTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEventoCoberturaTipoFilter<$PrismaModel>
    _max?: NestedEnumEventoCoberturaTipoFilter<$PrismaModel>
  }

  export type NestedEnumEventoCoberturaResultadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EventoCoberturaResultado | EnumEventoCoberturaResultadoFieldRefInput<$PrismaModel>
    in?: $Enums.EventoCoberturaResultado[]
    notIn?: $Enums.EventoCoberturaResultado[]
    not?: NestedEnumEventoCoberturaResultadoWithAggregatesFilter<$PrismaModel> | $Enums.EventoCoberturaResultado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEventoCoberturaResultadoFilter<$PrismaModel>
    _max?: NestedEnumEventoCoberturaResultadoFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type AprPerguntaRelacaoCreateWithoutAprInput = {
    ordem?: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    aprPergunta: AprPerguntaCreateNestedOneWithoutAprPerguntaRelacaoInput
  }

  export type AprPerguntaRelacaoUncheckedCreateWithoutAprInput = {
    id?: number
    aprPerguntaId: number
    ordem?: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprPerguntaRelacaoCreateOrConnectWithoutAprInput = {
    where: AprPerguntaRelacaoWhereUniqueInput
    create: XOR<AprPerguntaRelacaoCreateWithoutAprInput, AprPerguntaRelacaoUncheckedCreateWithoutAprInput>
  }

  export type AprPerguntaRelacaoCreateManyAprInputEnvelope = {
    data: AprPerguntaRelacaoCreateManyAprInput | AprPerguntaRelacaoCreateManyAprInput[]
    skipDuplicates?: boolean
  }

  export type AprOpcaoRespostaRelacaoCreateWithoutAprInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    aprOpcaoResposta: AprOpcaoRespostaCreateNestedOneWithoutAprOpcaoRespostaRelacaoInput
  }

  export type AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput = {
    id?: number
    aprOpcaoRespostaId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprInput = {
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
    create: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput>
  }

  export type AprOpcaoRespostaRelacaoCreateManyAprInputEnvelope = {
    data: AprOpcaoRespostaRelacaoCreateManyAprInput | AprOpcaoRespostaRelacaoCreateManyAprInput[]
    skipDuplicates?: boolean
  }

  export type AprTipoAtividadeRelacaoCreateWithoutAprInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoAtividade: TipoAtividadeCreateNestedOneWithoutAprTipoAtividadeRelacaoInput
  }

  export type AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput = {
    id?: number
    tipoAtividadeId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprTipoAtividadeRelacaoCreateOrConnectWithoutAprInput = {
    where: AprTipoAtividadeRelacaoWhereUniqueInput
    create: XOR<AprTipoAtividadeRelacaoCreateWithoutAprInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput>
  }

  export type AprTipoAtividadeRelacaoCreateManyAprInputEnvelope = {
    data: AprTipoAtividadeRelacaoCreateManyAprInput | AprTipoAtividadeRelacaoCreateManyAprInput[]
    skipDuplicates?: boolean
  }

  export type AprPerguntaRelacaoUpsertWithWhereUniqueWithoutAprInput = {
    where: AprPerguntaRelacaoWhereUniqueInput
    update: XOR<AprPerguntaRelacaoUpdateWithoutAprInput, AprPerguntaRelacaoUncheckedUpdateWithoutAprInput>
    create: XOR<AprPerguntaRelacaoCreateWithoutAprInput, AprPerguntaRelacaoUncheckedCreateWithoutAprInput>
  }

  export type AprPerguntaRelacaoUpdateWithWhereUniqueWithoutAprInput = {
    where: AprPerguntaRelacaoWhereUniqueInput
    data: XOR<AprPerguntaRelacaoUpdateWithoutAprInput, AprPerguntaRelacaoUncheckedUpdateWithoutAprInput>
  }

  export type AprPerguntaRelacaoUpdateManyWithWhereWithoutAprInput = {
    where: AprPerguntaRelacaoScalarWhereInput
    data: XOR<AprPerguntaRelacaoUpdateManyMutationInput, AprPerguntaRelacaoUncheckedUpdateManyWithoutAprInput>
  }

  export type AprPerguntaRelacaoScalarWhereInput = {
    AND?: AprPerguntaRelacaoScalarWhereInput | AprPerguntaRelacaoScalarWhereInput[]
    OR?: AprPerguntaRelacaoScalarWhereInput[]
    NOT?: AprPerguntaRelacaoScalarWhereInput | AprPerguntaRelacaoScalarWhereInput[]
    id?: IntFilter<"AprPerguntaRelacao"> | number
    aprPerguntaId?: IntFilter<"AprPerguntaRelacao"> | number
    ordem?: IntFilter<"AprPerguntaRelacao"> | number
    aprId?: IntFilter<"AprPerguntaRelacao"> | number
    createdAt?: DateTimeFilter<"AprPerguntaRelacao"> | Date | string
    createdBy?: StringFilter<"AprPerguntaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"AprPerguntaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprPerguntaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprPerguntaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprPerguntaRelacao"> | string | null
  }

  export type AprOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutAprInput = {
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
    update: XOR<AprOpcaoRespostaRelacaoUpdateWithoutAprInput, AprOpcaoRespostaRelacaoUncheckedUpdateWithoutAprInput>
    create: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprInput>
  }

  export type AprOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutAprInput = {
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
    data: XOR<AprOpcaoRespostaRelacaoUpdateWithoutAprInput, AprOpcaoRespostaRelacaoUncheckedUpdateWithoutAprInput>
  }

  export type AprOpcaoRespostaRelacaoUpdateManyWithWhereWithoutAprInput = {
    where: AprOpcaoRespostaRelacaoScalarWhereInput
    data: XOR<AprOpcaoRespostaRelacaoUpdateManyMutationInput, AprOpcaoRespostaRelacaoUncheckedUpdateManyWithoutAprInput>
  }

  export type AprOpcaoRespostaRelacaoScalarWhereInput = {
    AND?: AprOpcaoRespostaRelacaoScalarWhereInput | AprOpcaoRespostaRelacaoScalarWhereInput[]
    OR?: AprOpcaoRespostaRelacaoScalarWhereInput[]
    NOT?: AprOpcaoRespostaRelacaoScalarWhereInput | AprOpcaoRespostaRelacaoScalarWhereInput[]
    id?: IntFilter<"AprOpcaoRespostaRelacao"> | number
    aprOpcaoRespostaId?: IntFilter<"AprOpcaoRespostaRelacao"> | number
    aprId?: IntFilter<"AprOpcaoRespostaRelacao"> | number
    createdAt?: DateTimeFilter<"AprOpcaoRespostaRelacao"> | Date | string
    createdBy?: StringFilter<"AprOpcaoRespostaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"AprOpcaoRespostaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprOpcaoRespostaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprOpcaoRespostaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprOpcaoRespostaRelacao"> | string | null
  }

  export type AprTipoAtividadeRelacaoUpsertWithWhereUniqueWithoutAprInput = {
    where: AprTipoAtividadeRelacaoWhereUniqueInput
    update: XOR<AprTipoAtividadeRelacaoUpdateWithoutAprInput, AprTipoAtividadeRelacaoUncheckedUpdateWithoutAprInput>
    create: XOR<AprTipoAtividadeRelacaoCreateWithoutAprInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutAprInput>
  }

  export type AprTipoAtividadeRelacaoUpdateWithWhereUniqueWithoutAprInput = {
    where: AprTipoAtividadeRelacaoWhereUniqueInput
    data: XOR<AprTipoAtividadeRelacaoUpdateWithoutAprInput, AprTipoAtividadeRelacaoUncheckedUpdateWithoutAprInput>
  }

  export type AprTipoAtividadeRelacaoUpdateManyWithWhereWithoutAprInput = {
    where: AprTipoAtividadeRelacaoScalarWhereInput
    data: XOR<AprTipoAtividadeRelacaoUpdateManyMutationInput, AprTipoAtividadeRelacaoUncheckedUpdateManyWithoutAprInput>
  }

  export type AprTipoAtividadeRelacaoScalarWhereInput = {
    AND?: AprTipoAtividadeRelacaoScalarWhereInput | AprTipoAtividadeRelacaoScalarWhereInput[]
    OR?: AprTipoAtividadeRelacaoScalarWhereInput[]
    NOT?: AprTipoAtividadeRelacaoScalarWhereInput | AprTipoAtividadeRelacaoScalarWhereInput[]
    id?: IntFilter<"AprTipoAtividadeRelacao"> | number
    aprId?: IntFilter<"AprTipoAtividadeRelacao"> | number
    tipoAtividadeId?: IntFilter<"AprTipoAtividadeRelacao"> | number
    createdAt?: DateTimeFilter<"AprTipoAtividadeRelacao"> | Date | string
    createdBy?: StringFilter<"AprTipoAtividadeRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"AprTipoAtividadeRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"AprTipoAtividadeRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"AprTipoAtividadeRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"AprTipoAtividadeRelacao"> | string | null
  }

  export type AprPerguntaRelacaoCreateWithoutAprPerguntaInput = {
    ordem?: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    apr: AprCreateNestedOneWithoutAprPerguntaRelacaoInput
  }

  export type AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput = {
    id?: number
    ordem?: number
    aprId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprPerguntaRelacaoCreateOrConnectWithoutAprPerguntaInput = {
    where: AprPerguntaRelacaoWhereUniqueInput
    create: XOR<AprPerguntaRelacaoCreateWithoutAprPerguntaInput, AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput>
  }

  export type AprPerguntaRelacaoCreateManyAprPerguntaInputEnvelope = {
    data: AprPerguntaRelacaoCreateManyAprPerguntaInput | AprPerguntaRelacaoCreateManyAprPerguntaInput[]
    skipDuplicates?: boolean
  }

  export type AprPerguntaRelacaoUpsertWithWhereUniqueWithoutAprPerguntaInput = {
    where: AprPerguntaRelacaoWhereUniqueInput
    update: XOR<AprPerguntaRelacaoUpdateWithoutAprPerguntaInput, AprPerguntaRelacaoUncheckedUpdateWithoutAprPerguntaInput>
    create: XOR<AprPerguntaRelacaoCreateWithoutAprPerguntaInput, AprPerguntaRelacaoUncheckedCreateWithoutAprPerguntaInput>
  }

  export type AprPerguntaRelacaoUpdateWithWhereUniqueWithoutAprPerguntaInput = {
    where: AprPerguntaRelacaoWhereUniqueInput
    data: XOR<AprPerguntaRelacaoUpdateWithoutAprPerguntaInput, AprPerguntaRelacaoUncheckedUpdateWithoutAprPerguntaInput>
  }

  export type AprPerguntaRelacaoUpdateManyWithWhereWithoutAprPerguntaInput = {
    where: AprPerguntaRelacaoScalarWhereInput
    data: XOR<AprPerguntaRelacaoUpdateManyMutationInput, AprPerguntaRelacaoUncheckedUpdateManyWithoutAprPerguntaInput>
  }

  export type AprPerguntaCreateWithoutAprPerguntaRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprPerguntaUncheckedCreateWithoutAprPerguntaRelacaoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprPerguntaCreateOrConnectWithoutAprPerguntaRelacaoInput = {
    where: AprPerguntaWhereUniqueInput
    create: XOR<AprPerguntaCreateWithoutAprPerguntaRelacaoInput, AprPerguntaUncheckedCreateWithoutAprPerguntaRelacaoInput>
  }

  export type AprCreateWithoutAprPerguntaRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoCreateNestedManyWithoutAprInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoCreateNestedManyWithoutAprInput
  }

  export type AprUncheckedCreateWithoutAprPerguntaRelacaoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutAprInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUncheckedCreateNestedManyWithoutAprInput
  }

  export type AprCreateOrConnectWithoutAprPerguntaRelacaoInput = {
    where: AprWhereUniqueInput
    create: XOR<AprCreateWithoutAprPerguntaRelacaoInput, AprUncheckedCreateWithoutAprPerguntaRelacaoInput>
  }

  export type AprPerguntaUpsertWithoutAprPerguntaRelacaoInput = {
    update: XOR<AprPerguntaUpdateWithoutAprPerguntaRelacaoInput, AprPerguntaUncheckedUpdateWithoutAprPerguntaRelacaoInput>
    create: XOR<AprPerguntaCreateWithoutAprPerguntaRelacaoInput, AprPerguntaUncheckedCreateWithoutAprPerguntaRelacaoInput>
    where?: AprPerguntaWhereInput
  }

  export type AprPerguntaUpdateToOneWithWhereWithoutAprPerguntaRelacaoInput = {
    where?: AprPerguntaWhereInput
    data: XOR<AprPerguntaUpdateWithoutAprPerguntaRelacaoInput, AprPerguntaUncheckedUpdateWithoutAprPerguntaRelacaoInput>
  }

  export type AprPerguntaUpdateWithoutAprPerguntaRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprPerguntaUncheckedUpdateWithoutAprPerguntaRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprUpsertWithoutAprPerguntaRelacaoInput = {
    update: XOR<AprUpdateWithoutAprPerguntaRelacaoInput, AprUncheckedUpdateWithoutAprPerguntaRelacaoInput>
    create: XOR<AprCreateWithoutAprPerguntaRelacaoInput, AprUncheckedCreateWithoutAprPerguntaRelacaoInput>
    where?: AprWhereInput
  }

  export type AprUpdateToOneWithWhereWithoutAprPerguntaRelacaoInput = {
    where?: AprWhereInput
    data: XOR<AprUpdateWithoutAprPerguntaRelacaoInput, AprUncheckedUpdateWithoutAprPerguntaRelacaoInput>
  }

  export type AprUpdateWithoutAprPerguntaRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUpdateManyWithoutAprNestedInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUpdateManyWithoutAprNestedInput
  }

  export type AprUncheckedUpdateWithoutAprPerguntaRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUncheckedUpdateManyWithoutAprNestedInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUncheckedUpdateManyWithoutAprNestedInput
  }

  export type AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    apr: AprCreateNestedOneWithoutAprOpcaoRespostaRelacaoInput
  }

  export type AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput = {
    id?: number
    aprId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprOpcaoRespostaRelacaoCreateOrConnectWithoutAprOpcaoRespostaInput = {
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
    create: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput>
  }

  export type AprOpcaoRespostaRelacaoCreateManyAprOpcaoRespostaInputEnvelope = {
    data: AprOpcaoRespostaRelacaoCreateManyAprOpcaoRespostaInput | AprOpcaoRespostaRelacaoCreateManyAprOpcaoRespostaInput[]
    skipDuplicates?: boolean
  }

  export type AprOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutAprOpcaoRespostaInput = {
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
    update: XOR<AprOpcaoRespostaRelacaoUpdateWithoutAprOpcaoRespostaInput, AprOpcaoRespostaRelacaoUncheckedUpdateWithoutAprOpcaoRespostaInput>
    create: XOR<AprOpcaoRespostaRelacaoCreateWithoutAprOpcaoRespostaInput, AprOpcaoRespostaRelacaoUncheckedCreateWithoutAprOpcaoRespostaInput>
  }

  export type AprOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutAprOpcaoRespostaInput = {
    where: AprOpcaoRespostaRelacaoWhereUniqueInput
    data: XOR<AprOpcaoRespostaRelacaoUpdateWithoutAprOpcaoRespostaInput, AprOpcaoRespostaRelacaoUncheckedUpdateWithoutAprOpcaoRespostaInput>
  }

  export type AprOpcaoRespostaRelacaoUpdateManyWithWhereWithoutAprOpcaoRespostaInput = {
    where: AprOpcaoRespostaRelacaoScalarWhereInput
    data: XOR<AprOpcaoRespostaRelacaoUpdateManyMutationInput, AprOpcaoRespostaRelacaoUncheckedUpdateManyWithoutAprOpcaoRespostaInput>
  }

  export type AprOpcaoRespostaCreateWithoutAprOpcaoRespostaRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprOpcaoRespostaUncheckedCreateWithoutAprOpcaoRespostaRelacaoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprOpcaoRespostaCreateOrConnectWithoutAprOpcaoRespostaRelacaoInput = {
    where: AprOpcaoRespostaWhereUniqueInput
    create: XOR<AprOpcaoRespostaCreateWithoutAprOpcaoRespostaRelacaoInput, AprOpcaoRespostaUncheckedCreateWithoutAprOpcaoRespostaRelacaoInput>
  }

  export type AprCreateWithoutAprOpcaoRespostaRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoCreateNestedManyWithoutAprInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoCreateNestedManyWithoutAprInput
  }

  export type AprUncheckedCreateWithoutAprOpcaoRespostaRelacaoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUncheckedCreateNestedManyWithoutAprInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUncheckedCreateNestedManyWithoutAprInput
  }

  export type AprCreateOrConnectWithoutAprOpcaoRespostaRelacaoInput = {
    where: AprWhereUniqueInput
    create: XOR<AprCreateWithoutAprOpcaoRespostaRelacaoInput, AprUncheckedCreateWithoutAprOpcaoRespostaRelacaoInput>
  }

  export type AprOpcaoRespostaUpsertWithoutAprOpcaoRespostaRelacaoInput = {
    update: XOR<AprOpcaoRespostaUpdateWithoutAprOpcaoRespostaRelacaoInput, AprOpcaoRespostaUncheckedUpdateWithoutAprOpcaoRespostaRelacaoInput>
    create: XOR<AprOpcaoRespostaCreateWithoutAprOpcaoRespostaRelacaoInput, AprOpcaoRespostaUncheckedCreateWithoutAprOpcaoRespostaRelacaoInput>
    where?: AprOpcaoRespostaWhereInput
  }

  export type AprOpcaoRespostaUpdateToOneWithWhereWithoutAprOpcaoRespostaRelacaoInput = {
    where?: AprOpcaoRespostaWhereInput
    data: XOR<AprOpcaoRespostaUpdateWithoutAprOpcaoRespostaRelacaoInput, AprOpcaoRespostaUncheckedUpdateWithoutAprOpcaoRespostaRelacaoInput>
  }

  export type AprOpcaoRespostaUpdateWithoutAprOpcaoRespostaRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprOpcaoRespostaUncheckedUpdateWithoutAprOpcaoRespostaRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprUpsertWithoutAprOpcaoRespostaRelacaoInput = {
    update: XOR<AprUpdateWithoutAprOpcaoRespostaRelacaoInput, AprUncheckedUpdateWithoutAprOpcaoRespostaRelacaoInput>
    create: XOR<AprCreateWithoutAprOpcaoRespostaRelacaoInput, AprUncheckedCreateWithoutAprOpcaoRespostaRelacaoInput>
    where?: AprWhereInput
  }

  export type AprUpdateToOneWithWhereWithoutAprOpcaoRespostaRelacaoInput = {
    where?: AprWhereInput
    data: XOR<AprUpdateWithoutAprOpcaoRespostaRelacaoInput, AprUncheckedUpdateWithoutAprOpcaoRespostaRelacaoInput>
  }

  export type AprUpdateWithoutAprOpcaoRespostaRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUpdateManyWithoutAprNestedInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUpdateManyWithoutAprNestedInput
  }

  export type AprUncheckedUpdateWithoutAprOpcaoRespostaRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUncheckedUpdateManyWithoutAprNestedInput
    AprTipoAtividadeRelacao?: AprTipoAtividadeRelacaoUncheckedUpdateManyWithoutAprNestedInput
  }

  export type AprCreateWithoutAprTipoAtividadeRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoCreateNestedManyWithoutAprInput
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoCreateNestedManyWithoutAprInput
  }

  export type AprUncheckedCreateWithoutAprTipoAtividadeRelacaoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUncheckedCreateNestedManyWithoutAprInput
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutAprInput
  }

  export type AprCreateOrConnectWithoutAprTipoAtividadeRelacaoInput = {
    where: AprWhereUniqueInput
    create: XOR<AprCreateWithoutAprTipoAtividadeRelacaoInput, AprUncheckedCreateWithoutAprTipoAtividadeRelacaoInput>
  }

  export type TipoAtividadeCreateWithoutAprTipoAtividadeRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoAtividadeUncheckedCreateWithoutAprTipoAtividadeRelacaoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoAtividadeCreateOrConnectWithoutAprTipoAtividadeRelacaoInput = {
    where: TipoAtividadeWhereUniqueInput
    create: XOR<TipoAtividadeCreateWithoutAprTipoAtividadeRelacaoInput, TipoAtividadeUncheckedCreateWithoutAprTipoAtividadeRelacaoInput>
  }

  export type AprUpsertWithoutAprTipoAtividadeRelacaoInput = {
    update: XOR<AprUpdateWithoutAprTipoAtividadeRelacaoInput, AprUncheckedUpdateWithoutAprTipoAtividadeRelacaoInput>
    create: XOR<AprCreateWithoutAprTipoAtividadeRelacaoInput, AprUncheckedCreateWithoutAprTipoAtividadeRelacaoInput>
    where?: AprWhereInput
  }

  export type AprUpdateToOneWithWhereWithoutAprTipoAtividadeRelacaoInput = {
    where?: AprWhereInput
    data: XOR<AprUpdateWithoutAprTipoAtividadeRelacaoInput, AprUncheckedUpdateWithoutAprTipoAtividadeRelacaoInput>
  }

  export type AprUpdateWithoutAprTipoAtividadeRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUpdateManyWithoutAprNestedInput
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUpdateManyWithoutAprNestedInput
  }

  export type AprUncheckedUpdateWithoutAprTipoAtividadeRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    AprPerguntaRelacao?: AprPerguntaRelacaoUncheckedUpdateManyWithoutAprNestedInput
    AprOpcaoRespostaRelacao?: AprOpcaoRespostaRelacaoUncheckedUpdateManyWithoutAprNestedInput
  }

  export type TipoAtividadeUpsertWithoutAprTipoAtividadeRelacaoInput = {
    update: XOR<TipoAtividadeUpdateWithoutAprTipoAtividadeRelacaoInput, TipoAtividadeUncheckedUpdateWithoutAprTipoAtividadeRelacaoInput>
    create: XOR<TipoAtividadeCreateWithoutAprTipoAtividadeRelacaoInput, TipoAtividadeUncheckedCreateWithoutAprTipoAtividadeRelacaoInput>
    where?: TipoAtividadeWhereInput
  }

  export type TipoAtividadeUpdateToOneWithWhereWithoutAprTipoAtividadeRelacaoInput = {
    where?: TipoAtividadeWhereInput
    data: XOR<TipoAtividadeUpdateWithoutAprTipoAtividadeRelacaoInput, TipoAtividadeUncheckedUpdateWithoutAprTipoAtividadeRelacaoInput>
  }

  export type TipoAtividadeUpdateWithoutAprTipoAtividadeRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoAtividadeUncheckedUpdateWithoutAprTipoAtividadeRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    apr: AprCreateNestedOneWithoutAprTipoAtividadeRelacaoInput
  }

  export type AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput = {
    id?: number
    aprId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprTipoAtividadeRelacaoCreateOrConnectWithoutTipoAtividadeInput = {
    where: AprTipoAtividadeRelacaoWhereUniqueInput
    create: XOR<AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput>
  }

  export type AprTipoAtividadeRelacaoCreateManyTipoAtividadeInputEnvelope = {
    data: AprTipoAtividadeRelacaoCreateManyTipoAtividadeInput | AprTipoAtividadeRelacaoCreateManyTipoAtividadeInput[]
    skipDuplicates?: boolean
  }

  export type AprTipoAtividadeRelacaoUpsertWithWhereUniqueWithoutTipoAtividadeInput = {
    where: AprTipoAtividadeRelacaoWhereUniqueInput
    update: XOR<AprTipoAtividadeRelacaoUpdateWithoutTipoAtividadeInput, AprTipoAtividadeRelacaoUncheckedUpdateWithoutTipoAtividadeInput>
    create: XOR<AprTipoAtividadeRelacaoCreateWithoutTipoAtividadeInput, AprTipoAtividadeRelacaoUncheckedCreateWithoutTipoAtividadeInput>
  }

  export type AprTipoAtividadeRelacaoUpdateWithWhereUniqueWithoutTipoAtividadeInput = {
    where: AprTipoAtividadeRelacaoWhereUniqueInput
    data: XOR<AprTipoAtividadeRelacaoUpdateWithoutTipoAtividadeInput, AprTipoAtividadeRelacaoUncheckedUpdateWithoutTipoAtividadeInput>
  }

  export type AprTipoAtividadeRelacaoUpdateManyWithWhereWithoutTipoAtividadeInput = {
    where: AprTipoAtividadeRelacaoScalarWhereInput
    data: XOR<AprTipoAtividadeRelacaoUpdateManyMutationInput, AprTipoAtividadeRelacaoUncheckedUpdateManyWithoutTipoAtividadeInput>
  }

  export type MobileSessionCreateWithoutMobileUserInput = {
    id?: string
    deviceInfo?: string | null
    lastActive?: Date | string
    createdAt?: Date | string
    expiresAt: Date | string
    ativa?: boolean
  }

  export type MobileSessionUncheckedCreateWithoutMobileUserInput = {
    id?: string
    deviceInfo?: string | null
    lastActive?: Date | string
    createdAt?: Date | string
    expiresAt: Date | string
    ativa?: boolean
  }

  export type MobileSessionCreateOrConnectWithoutMobileUserInput = {
    where: MobileSessionWhereUniqueInput
    create: XOR<MobileSessionCreateWithoutMobileUserInput, MobileSessionUncheckedCreateWithoutMobileUserInput>
  }

  export type MobileSessionCreateManyMobileUserInputEnvelope = {
    data: MobileSessionCreateManyMobileUserInput | MobileSessionCreateManyMobileUserInput[]
    skipDuplicates?: boolean
  }

  export type MobileTokenCreateWithoutMobileUserInput = {
    token: string
    refreshToken?: string | null
    refreshTokenExpiresAt?: Date | string | null
    usuarioMobileId: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    revoked?: boolean
  }

  export type MobileTokenUncheckedCreateWithoutMobileUserInput = {
    id?: number
    token: string
    refreshToken?: string | null
    refreshTokenExpiresAt?: Date | string | null
    usuarioMobileId: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    revoked?: boolean
  }

  export type MobileTokenCreateOrConnectWithoutMobileUserInput = {
    where: MobileTokenWhereUniqueInput
    create: XOR<MobileTokenCreateWithoutMobileUserInput, MobileTokenUncheckedCreateWithoutMobileUserInput>
  }

  export type MobileTokenCreateManyMobileUserInputEnvelope = {
    data: MobileTokenCreateManyMobileUserInput | MobileTokenCreateManyMobileUserInput[]
    skipDuplicates?: boolean
  }

  export type MobileContratoPermissaoCreateWithoutMobileUserInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutMobileContratoPermissaoInput
  }

  export type MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput = {
    id?: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type MobileContratoPermissaoCreateOrConnectWithoutMobileUserInput = {
    where: MobileContratoPermissaoWhereUniqueInput
    create: XOR<MobileContratoPermissaoCreateWithoutMobileUserInput, MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput>
  }

  export type MobileContratoPermissaoCreateManyMobileUserInputEnvelope = {
    data: MobileContratoPermissaoCreateManyMobileUserInput | MobileContratoPermissaoCreateManyMobileUserInput[]
    skipDuplicates?: boolean
  }

  export type MobileSessionUpsertWithWhereUniqueWithoutMobileUserInput = {
    where: MobileSessionWhereUniqueInput
    update: XOR<MobileSessionUpdateWithoutMobileUserInput, MobileSessionUncheckedUpdateWithoutMobileUserInput>
    create: XOR<MobileSessionCreateWithoutMobileUserInput, MobileSessionUncheckedCreateWithoutMobileUserInput>
  }

  export type MobileSessionUpdateWithWhereUniqueWithoutMobileUserInput = {
    where: MobileSessionWhereUniqueInput
    data: XOR<MobileSessionUpdateWithoutMobileUserInput, MobileSessionUncheckedUpdateWithoutMobileUserInput>
  }

  export type MobileSessionUpdateManyWithWhereWithoutMobileUserInput = {
    where: MobileSessionScalarWhereInput
    data: XOR<MobileSessionUpdateManyMutationInput, MobileSessionUncheckedUpdateManyWithoutMobileUserInput>
  }

  export type MobileSessionScalarWhereInput = {
    AND?: MobileSessionScalarWhereInput | MobileSessionScalarWhereInput[]
    OR?: MobileSessionScalarWhereInput[]
    NOT?: MobileSessionScalarWhereInput | MobileSessionScalarWhereInput[]
    id?: StringFilter<"MobileSession"> | string
    deviceInfo?: StringNullableFilter<"MobileSession"> | string | null
    lastActive?: DateTimeFilter<"MobileSession"> | Date | string
    createdAt?: DateTimeFilter<"MobileSession"> | Date | string
    expiresAt?: DateTimeFilter<"MobileSession"> | Date | string
    ativa?: BoolFilter<"MobileSession"> | boolean
    mobileUserId?: IntFilter<"MobileSession"> | number
  }

  export type MobileTokenUpsertWithWhereUniqueWithoutMobileUserInput = {
    where: MobileTokenWhereUniqueInput
    update: XOR<MobileTokenUpdateWithoutMobileUserInput, MobileTokenUncheckedUpdateWithoutMobileUserInput>
    create: XOR<MobileTokenCreateWithoutMobileUserInput, MobileTokenUncheckedCreateWithoutMobileUserInput>
  }

  export type MobileTokenUpdateWithWhereUniqueWithoutMobileUserInput = {
    where: MobileTokenWhereUniqueInput
    data: XOR<MobileTokenUpdateWithoutMobileUserInput, MobileTokenUncheckedUpdateWithoutMobileUserInput>
  }

  export type MobileTokenUpdateManyWithWhereWithoutMobileUserInput = {
    where: MobileTokenScalarWhereInput
    data: XOR<MobileTokenUpdateManyMutationInput, MobileTokenUncheckedUpdateManyWithoutMobileUserInput>
  }

  export type MobileTokenScalarWhereInput = {
    AND?: MobileTokenScalarWhereInput | MobileTokenScalarWhereInput[]
    OR?: MobileTokenScalarWhereInput[]
    NOT?: MobileTokenScalarWhereInput | MobileTokenScalarWhereInput[]
    id?: IntFilter<"MobileToken"> | number
    token?: StringFilter<"MobileToken"> | string
    refreshToken?: StringNullableFilter<"MobileToken"> | string | null
    refreshTokenExpiresAt?: DateTimeNullableFilter<"MobileToken"> | Date | string | null
    usuarioMobileId?: StringFilter<"MobileToken"> | string
    expiresAt?: DateTimeFilter<"MobileToken"> | Date | string
    createdAt?: DateTimeFilter<"MobileToken"> | Date | string
    updatedAt?: DateTimeFilter<"MobileToken"> | Date | string
    revoked?: BoolFilter<"MobileToken"> | boolean
    mobileUserId?: IntFilter<"MobileToken"> | number
  }

  export type MobileContratoPermissaoUpsertWithWhereUniqueWithoutMobileUserInput = {
    where: MobileContratoPermissaoWhereUniqueInput
    update: XOR<MobileContratoPermissaoUpdateWithoutMobileUserInput, MobileContratoPermissaoUncheckedUpdateWithoutMobileUserInput>
    create: XOR<MobileContratoPermissaoCreateWithoutMobileUserInput, MobileContratoPermissaoUncheckedCreateWithoutMobileUserInput>
  }

  export type MobileContratoPermissaoUpdateWithWhereUniqueWithoutMobileUserInput = {
    where: MobileContratoPermissaoWhereUniqueInput
    data: XOR<MobileContratoPermissaoUpdateWithoutMobileUserInput, MobileContratoPermissaoUncheckedUpdateWithoutMobileUserInput>
  }

  export type MobileContratoPermissaoUpdateManyWithWhereWithoutMobileUserInput = {
    where: MobileContratoPermissaoScalarWhereInput
    data: XOR<MobileContratoPermissaoUpdateManyMutationInput, MobileContratoPermissaoUncheckedUpdateManyWithoutMobileUserInput>
  }

  export type MobileContratoPermissaoScalarWhereInput = {
    AND?: MobileContratoPermissaoScalarWhereInput | MobileContratoPermissaoScalarWhereInput[]
    OR?: MobileContratoPermissaoScalarWhereInput[]
    NOT?: MobileContratoPermissaoScalarWhereInput | MobileContratoPermissaoScalarWhereInput[]
    id?: IntFilter<"MobileContratoPermissao"> | number
    contratoId?: IntFilter<"MobileContratoPermissao"> | number
    mobileUserId?: IntFilter<"MobileContratoPermissao"> | number
    createdAt?: DateTimeFilter<"MobileContratoPermissao"> | Date | string
    createdBy?: StringFilter<"MobileContratoPermissao"> | string
    updatedAt?: DateTimeNullableFilter<"MobileContratoPermissao"> | Date | string | null
    updatedBy?: StringNullableFilter<"MobileContratoPermissao"> | string | null
    deletedAt?: DateTimeNullableFilter<"MobileContratoPermissao"> | Date | string | null
    deletedBy?: StringNullableFilter<"MobileContratoPermissao"> | string | null
  }

  export type MobileUserCreateWithoutMobileSessionInput = {
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    MobileToken?: MobileTokenCreateNestedManyWithoutMobileUserInput
    MobileContratoPermissao?: MobileContratoPermissaoCreateNestedManyWithoutMobileUserInput
  }

  export type MobileUserUncheckedCreateWithoutMobileSessionInput = {
    id?: number
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    MobileToken?: MobileTokenUncheckedCreateNestedManyWithoutMobileUserInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedCreateNestedManyWithoutMobileUserInput
  }

  export type MobileUserCreateOrConnectWithoutMobileSessionInput = {
    where: MobileUserWhereUniqueInput
    create: XOR<MobileUserCreateWithoutMobileSessionInput, MobileUserUncheckedCreateWithoutMobileSessionInput>
  }

  export type MobileUserUpsertWithoutMobileSessionInput = {
    update: XOR<MobileUserUpdateWithoutMobileSessionInput, MobileUserUncheckedUpdateWithoutMobileSessionInput>
    create: XOR<MobileUserCreateWithoutMobileSessionInput, MobileUserUncheckedCreateWithoutMobileSessionInput>
    where?: MobileUserWhereInput
  }

  export type MobileUserUpdateToOneWithWhereWithoutMobileSessionInput = {
    where?: MobileUserWhereInput
    data: XOR<MobileUserUpdateWithoutMobileSessionInput, MobileUserUncheckedUpdateWithoutMobileSessionInput>
  }

  export type MobileUserUpdateWithoutMobileSessionInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    MobileToken?: MobileTokenUpdateManyWithoutMobileUserNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUpdateManyWithoutMobileUserNestedInput
  }

  export type MobileUserUncheckedUpdateWithoutMobileSessionInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    MobileToken?: MobileTokenUncheckedUpdateManyWithoutMobileUserNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedUpdateManyWithoutMobileUserNestedInput
  }

  export type MobileUserCreateWithoutMobileTokenInput = {
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    mobileSession?: MobileSessionCreateNestedManyWithoutMobileUserInput
    MobileContratoPermissao?: MobileContratoPermissaoCreateNestedManyWithoutMobileUserInput
  }

  export type MobileUserUncheckedCreateWithoutMobileTokenInput = {
    id?: number
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    mobileSession?: MobileSessionUncheckedCreateNestedManyWithoutMobileUserInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedCreateNestedManyWithoutMobileUserInput
  }

  export type MobileUserCreateOrConnectWithoutMobileTokenInput = {
    where: MobileUserWhereUniqueInput
    create: XOR<MobileUserCreateWithoutMobileTokenInput, MobileUserUncheckedCreateWithoutMobileTokenInput>
  }

  export type MobileUserUpsertWithoutMobileTokenInput = {
    update: XOR<MobileUserUpdateWithoutMobileTokenInput, MobileUserUncheckedUpdateWithoutMobileTokenInput>
    create: XOR<MobileUserCreateWithoutMobileTokenInput, MobileUserUncheckedCreateWithoutMobileTokenInput>
    where?: MobileUserWhereInput
  }

  export type MobileUserUpdateToOneWithWhereWithoutMobileTokenInput = {
    where?: MobileUserWhereInput
    data: XOR<MobileUserUpdateWithoutMobileTokenInput, MobileUserUncheckedUpdateWithoutMobileTokenInput>
  }

  export type MobileUserUpdateWithoutMobileTokenInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    mobileSession?: MobileSessionUpdateManyWithoutMobileUserNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUpdateManyWithoutMobileUserNestedInput
  }

  export type MobileUserUncheckedUpdateWithoutMobileTokenInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    mobileSession?: MobileSessionUncheckedUpdateManyWithoutMobileUserNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedUpdateManyWithoutMobileUserNestedInput
  }

  export type SessionCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AccountCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RoleUserCreateWithoutUserInput = {
    role: RoleCreateNestedOneWithoutRoleUserInput
  }

  export type RoleUserUncheckedCreateWithoutUserInput = {
    id?: number
    roleId: number
  }

  export type RoleUserCreateOrConnectWithoutUserInput = {
    where: RoleUserWhereUniqueInput
    create: XOR<RoleUserCreateWithoutUserInput, RoleUserUncheckedCreateWithoutUserInput>
  }

  export type RoleUserCreateManyUserInputEnvelope = {
    data: RoleUserCreateManyUserInput | RoleUserCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    userId?: IntFilter<"Session"> | number
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    userId?: IntFilter<"Account"> | number
  }

  export type RoleUserUpsertWithWhereUniqueWithoutUserInput = {
    where: RoleUserWhereUniqueInput
    update: XOR<RoleUserUpdateWithoutUserInput, RoleUserUncheckedUpdateWithoutUserInput>
    create: XOR<RoleUserCreateWithoutUserInput, RoleUserUncheckedCreateWithoutUserInput>
  }

  export type RoleUserUpdateWithWhereUniqueWithoutUserInput = {
    where: RoleUserWhereUniqueInput
    data: XOR<RoleUserUpdateWithoutUserInput, RoleUserUncheckedUpdateWithoutUserInput>
  }

  export type RoleUserUpdateManyWithWhereWithoutUserInput = {
    where: RoleUserScalarWhereInput
    data: XOR<RoleUserUpdateManyMutationInput, RoleUserUncheckedUpdateManyWithoutUserInput>
  }

  export type RoleUserScalarWhereInput = {
    AND?: RoleUserScalarWhereInput | RoleUserScalarWhereInput[]
    OR?: RoleUserScalarWhereInput[]
    NOT?: RoleUserScalarWhereInput | RoleUserScalarWhereInput[]
    id?: IntFilter<"RoleUser"> | number
    userId?: IntFilter<"RoleUser"> | number
    roleId?: IntFilter<"RoleUser"> | number
  }

  export type UserCreateWithoutAccountInput = {
    nome: string
    email: string
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Session?: SessionCreateNestedManyWithoutUserInput
    RoleUser?: RoleUserCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAccountInput = {
    id?: number
    nome: string
    email: string
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Session?: SessionUncheckedCreateNestedManyWithoutUserInput
    RoleUser?: RoleUserUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAccountInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountInput, UserUncheckedCreateWithoutAccountInput>
  }

  export type UserUpsertWithoutAccountInput = {
    update: XOR<UserUpdateWithoutAccountInput, UserUncheckedUpdateWithoutAccountInput>
    create: XOR<UserCreateWithoutAccountInput, UserUncheckedCreateWithoutAccountInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountInput, UserUncheckedUpdateWithoutAccountInput>
  }

  export type UserUpdateWithoutAccountInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Session?: SessionUpdateManyWithoutUserNestedInput
    RoleUser?: RoleUserUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Session?: SessionUncheckedUpdateManyWithoutUserNestedInput
    RoleUser?: RoleUserUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutSessionInput = {
    nome: string
    email: string
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Account?: AccountCreateNestedManyWithoutUserInput
    RoleUser?: RoleUserCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSessionInput = {
    id?: number
    nome: string
    email: string
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Account?: AccountUncheckedCreateNestedManyWithoutUserInput
    RoleUser?: RoleUserUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSessionInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionInput, UserUncheckedCreateWithoutSessionInput>
  }

  export type UserUpsertWithoutSessionInput = {
    update: XOR<UserUpdateWithoutSessionInput, UserUncheckedUpdateWithoutSessionInput>
    create: XOR<UserCreateWithoutSessionInput, UserUncheckedCreateWithoutSessionInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionInput, UserUncheckedUpdateWithoutSessionInput>
  }

  export type UserUpdateWithoutSessionInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Account?: AccountUpdateManyWithoutUserNestedInput
    RoleUser?: RoleUserUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Account?: AccountUncheckedUpdateManyWithoutUserNestedInput
    RoleUser?: RoleUserUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RoleUserCreateWithoutRoleInput = {
    user: UserCreateNestedOneWithoutRoleUserInput
  }

  export type RoleUserUncheckedCreateWithoutRoleInput = {
    id?: number
    userId: number
  }

  export type RoleUserCreateOrConnectWithoutRoleInput = {
    where: RoleUserWhereUniqueInput
    create: XOR<RoleUserCreateWithoutRoleInput, RoleUserUncheckedCreateWithoutRoleInput>
  }

  export type RoleUserCreateManyRoleInputEnvelope = {
    data: RoleUserCreateManyRoleInput | RoleUserCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type RoleUserUpsertWithWhereUniqueWithoutRoleInput = {
    where: RoleUserWhereUniqueInput
    update: XOR<RoleUserUpdateWithoutRoleInput, RoleUserUncheckedUpdateWithoutRoleInput>
    create: XOR<RoleUserCreateWithoutRoleInput, RoleUserUncheckedCreateWithoutRoleInput>
  }

  export type RoleUserUpdateWithWhereUniqueWithoutRoleInput = {
    where: RoleUserWhereUniqueInput
    data: XOR<RoleUserUpdateWithoutRoleInput, RoleUserUncheckedUpdateWithoutRoleInput>
  }

  export type RoleUserUpdateManyWithWhereWithoutRoleInput = {
    where: RoleUserScalarWhereInput
    data: XOR<RoleUserUpdateManyMutationInput, RoleUserUncheckedUpdateManyWithoutRoleInput>
  }

  export type UserCreateWithoutRoleUserInput = {
    nome: string
    email: string
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Session?: SessionCreateNestedManyWithoutUserInput
    Account?: AccountCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRoleUserInput = {
    id?: number
    nome: string
    email: string
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Session?: SessionUncheckedCreateNestedManyWithoutUserInput
    Account?: AccountUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRoleUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRoleUserInput, UserUncheckedCreateWithoutRoleUserInput>
  }

  export type RoleCreateWithoutRoleUserInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
  }

  export type RoleUncheckedCreateWithoutRoleUserInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
  }

  export type RoleCreateOrConnectWithoutRoleUserInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutRoleUserInput, RoleUncheckedCreateWithoutRoleUserInput>
  }

  export type UserUpsertWithoutRoleUserInput = {
    update: XOR<UserUpdateWithoutRoleUserInput, UserUncheckedUpdateWithoutRoleUserInput>
    create: XOR<UserCreateWithoutRoleUserInput, UserUncheckedCreateWithoutRoleUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRoleUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRoleUserInput, UserUncheckedUpdateWithoutRoleUserInput>
  }

  export type UserUpdateWithoutRoleUserInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Session?: SessionUpdateManyWithoutUserNestedInput
    Account?: AccountUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRoleUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Session?: SessionUncheckedUpdateManyWithoutUserNestedInput
    Account?: AccountUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RoleUpsertWithoutRoleUserInput = {
    update: XOR<RoleUpdateWithoutRoleUserInput, RoleUncheckedUpdateWithoutRoleUserInput>
    create: XOR<RoleCreateWithoutRoleUserInput, RoleUncheckedCreateWithoutRoleUserInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutRoleUserInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutRoleUserInput, RoleUncheckedUpdateWithoutRoleUserInput>
  }

  export type RoleUpdateWithoutRoleUserInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RoleUncheckedUpdateWithoutRoleUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContratoCreateWithoutBaseInput = {
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoCreateNestedManyWithoutContratoInput
    Eletricista?: EletricistaCreateNestedManyWithoutContratoInput
    Equipe?: EquipeCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoCreateNestedManyWithoutContratoInput
  }

  export type ContratoUncheckedCreateWithoutBaseInput = {
    id?: number
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoUncheckedCreateNestedManyWithoutContratoInput
    Eletricista?: EletricistaUncheckedCreateNestedManyWithoutContratoInput
    Equipe?: EquipeUncheckedCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorUncheckedCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedCreateNestedManyWithoutContratoInput
  }

  export type ContratoCreateOrConnectWithoutBaseInput = {
    where: ContratoWhereUniqueInput
    create: XOR<ContratoCreateWithoutBaseInput, ContratoUncheckedCreateWithoutBaseInput>
  }

  export type EletricistaBaseHistoricoCreateWithoutBaseInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    eletricista: EletricistaCreateNestedOneWithoutEletricistaBaseHistoricoInput
  }

  export type EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput = {
    id?: number
    eletricistaId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EletricistaBaseHistoricoCreateOrConnectWithoutBaseInput = {
    where: EletricistaBaseHistoricoWhereUniqueInput
    create: XOR<EletricistaBaseHistoricoCreateWithoutBaseInput, EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput>
  }

  export type EletricistaBaseHistoricoCreateManyBaseInputEnvelope = {
    data: EletricistaBaseHistoricoCreateManyBaseInput | EletricistaBaseHistoricoCreateManyBaseInput[]
    skipDuplicates?: boolean
  }

  export type VeiculoBaseHistoricoCreateWithoutBaseInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    veiculo: VeiculoCreateNestedOneWithoutVeiculoBaseHistoricoInput
  }

  export type VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput = {
    id?: number
    veiculoId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoBaseHistoricoCreateOrConnectWithoutBaseInput = {
    where: VeiculoBaseHistoricoWhereUniqueInput
    create: XOR<VeiculoBaseHistoricoCreateWithoutBaseInput, VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput>
  }

  export type VeiculoBaseHistoricoCreateManyBaseInputEnvelope = {
    data: VeiculoBaseHistoricoCreateManyBaseInput | VeiculoBaseHistoricoCreateManyBaseInput[]
    skipDuplicates?: boolean
  }

  export type EquipeBaseHistoricoCreateWithoutBaseInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutEquipeBaseHistoricoInput
  }

  export type EquipeBaseHistoricoUncheckedCreateWithoutBaseInput = {
    id?: number
    equipeId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeBaseHistoricoCreateOrConnectWithoutBaseInput = {
    where: EquipeBaseHistoricoWhereUniqueInput
    create: XOR<EquipeBaseHistoricoCreateWithoutBaseInput, EquipeBaseHistoricoUncheckedCreateWithoutBaseInput>
  }

  export type EquipeBaseHistoricoCreateManyBaseInputEnvelope = {
    data: EquipeBaseHistoricoCreateManyBaseInput | EquipeBaseHistoricoCreateManyBaseInput[]
    skipDuplicates?: boolean
  }

  export type ContratoUpsertWithoutBaseInput = {
    update: XOR<ContratoUpdateWithoutBaseInput, ContratoUncheckedUpdateWithoutBaseInput>
    create: XOR<ContratoCreateWithoutBaseInput, ContratoUncheckedCreateWithoutBaseInput>
    where?: ContratoWhereInput
  }

  export type ContratoUpdateToOneWithWhereWithoutBaseInput = {
    where?: ContratoWhereInput
    data: XOR<ContratoUpdateWithoutBaseInput, ContratoUncheckedUpdateWithoutBaseInput>
  }

  export type ContratoUpdateWithoutBaseInput = {
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUpdateManyWithoutContratoNestedInput
    Eletricista?: EletricistaUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUpdateManyWithoutContratoNestedInput
  }

  export type ContratoUncheckedUpdateWithoutBaseInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUncheckedUpdateManyWithoutContratoNestedInput
    Eletricista?: EletricistaUncheckedUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUncheckedUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUncheckedUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedUpdateManyWithoutContratoNestedInput
  }

  export type EletricistaBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput = {
    where: EletricistaBaseHistoricoWhereUniqueInput
    update: XOR<EletricistaBaseHistoricoUpdateWithoutBaseInput, EletricistaBaseHistoricoUncheckedUpdateWithoutBaseInput>
    create: XOR<EletricistaBaseHistoricoCreateWithoutBaseInput, EletricistaBaseHistoricoUncheckedCreateWithoutBaseInput>
  }

  export type EletricistaBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput = {
    where: EletricistaBaseHistoricoWhereUniqueInput
    data: XOR<EletricistaBaseHistoricoUpdateWithoutBaseInput, EletricistaBaseHistoricoUncheckedUpdateWithoutBaseInput>
  }

  export type EletricistaBaseHistoricoUpdateManyWithWhereWithoutBaseInput = {
    where: EletricistaBaseHistoricoScalarWhereInput
    data: XOR<EletricistaBaseHistoricoUpdateManyMutationInput, EletricistaBaseHistoricoUncheckedUpdateManyWithoutBaseInput>
  }

  export type EletricistaBaseHistoricoScalarWhereInput = {
    AND?: EletricistaBaseHistoricoScalarWhereInput | EletricistaBaseHistoricoScalarWhereInput[]
    OR?: EletricistaBaseHistoricoScalarWhereInput[]
    NOT?: EletricistaBaseHistoricoScalarWhereInput | EletricistaBaseHistoricoScalarWhereInput[]
    id?: IntFilter<"EletricistaBaseHistorico"> | number
    eletricistaId?: IntFilter<"EletricistaBaseHistorico"> | number
    baseId?: IntFilter<"EletricistaBaseHistorico"> | number
    dataInicio?: DateTimeFilter<"EletricistaBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"EletricistaBaseHistorico"> | Date | string | null
    motivo?: StringNullableFilter<"EletricistaBaseHistorico"> | string | null
    createdAt?: DateTimeFilter<"EletricistaBaseHistorico"> | Date | string
    createdBy?: StringFilter<"EletricistaBaseHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"EletricistaBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"EletricistaBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"EletricistaBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"EletricistaBaseHistorico"> | string | null
  }

  export type VeiculoBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput = {
    where: VeiculoBaseHistoricoWhereUniqueInput
    update: XOR<VeiculoBaseHistoricoUpdateWithoutBaseInput, VeiculoBaseHistoricoUncheckedUpdateWithoutBaseInput>
    create: XOR<VeiculoBaseHistoricoCreateWithoutBaseInput, VeiculoBaseHistoricoUncheckedCreateWithoutBaseInput>
  }

  export type VeiculoBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput = {
    where: VeiculoBaseHistoricoWhereUniqueInput
    data: XOR<VeiculoBaseHistoricoUpdateWithoutBaseInput, VeiculoBaseHistoricoUncheckedUpdateWithoutBaseInput>
  }

  export type VeiculoBaseHistoricoUpdateManyWithWhereWithoutBaseInput = {
    where: VeiculoBaseHistoricoScalarWhereInput
    data: XOR<VeiculoBaseHistoricoUpdateManyMutationInput, VeiculoBaseHistoricoUncheckedUpdateManyWithoutBaseInput>
  }

  export type VeiculoBaseHistoricoScalarWhereInput = {
    AND?: VeiculoBaseHistoricoScalarWhereInput | VeiculoBaseHistoricoScalarWhereInput[]
    OR?: VeiculoBaseHistoricoScalarWhereInput[]
    NOT?: VeiculoBaseHistoricoScalarWhereInput | VeiculoBaseHistoricoScalarWhereInput[]
    id?: IntFilter<"VeiculoBaseHistorico"> | number
    veiculoId?: IntFilter<"VeiculoBaseHistorico"> | number
    baseId?: IntFilter<"VeiculoBaseHistorico"> | number
    dataInicio?: DateTimeFilter<"VeiculoBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"VeiculoBaseHistorico"> | Date | string | null
    motivo?: StringNullableFilter<"VeiculoBaseHistorico"> | string | null
    createdAt?: DateTimeFilter<"VeiculoBaseHistorico"> | Date | string
    createdBy?: StringFilter<"VeiculoBaseHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"VeiculoBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"VeiculoBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"VeiculoBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"VeiculoBaseHistorico"> | string | null
  }

  export type EquipeBaseHistoricoUpsertWithWhereUniqueWithoutBaseInput = {
    where: EquipeBaseHistoricoWhereUniqueInput
    update: XOR<EquipeBaseHistoricoUpdateWithoutBaseInput, EquipeBaseHistoricoUncheckedUpdateWithoutBaseInput>
    create: XOR<EquipeBaseHistoricoCreateWithoutBaseInput, EquipeBaseHistoricoUncheckedCreateWithoutBaseInput>
  }

  export type EquipeBaseHistoricoUpdateWithWhereUniqueWithoutBaseInput = {
    where: EquipeBaseHistoricoWhereUniqueInput
    data: XOR<EquipeBaseHistoricoUpdateWithoutBaseInput, EquipeBaseHistoricoUncheckedUpdateWithoutBaseInput>
  }

  export type EquipeBaseHistoricoUpdateManyWithWhereWithoutBaseInput = {
    where: EquipeBaseHistoricoScalarWhereInput
    data: XOR<EquipeBaseHistoricoUpdateManyMutationInput, EquipeBaseHistoricoUncheckedUpdateManyWithoutBaseInput>
  }

  export type EquipeBaseHistoricoScalarWhereInput = {
    AND?: EquipeBaseHistoricoScalarWhereInput | EquipeBaseHistoricoScalarWhereInput[]
    OR?: EquipeBaseHistoricoScalarWhereInput[]
    NOT?: EquipeBaseHistoricoScalarWhereInput | EquipeBaseHistoricoScalarWhereInput[]
    id?: IntFilter<"EquipeBaseHistorico"> | number
    equipeId?: IntFilter<"EquipeBaseHistorico"> | number
    baseId?: IntFilter<"EquipeBaseHistorico"> | number
    dataInicio?: DateTimeFilter<"EquipeBaseHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"EquipeBaseHistorico"> | Date | string | null
    motivo?: StringNullableFilter<"EquipeBaseHistorico"> | string | null
    createdAt?: DateTimeFilter<"EquipeBaseHistorico"> | Date | string
    createdBy?: StringFilter<"EquipeBaseHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeBaseHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeBaseHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeBaseHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeBaseHistorico"> | string | null
  }

  export type ChecklistCreateWithoutTipoChecklistInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistUncheckedCreateWithoutTipoChecklistInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistCreateOrConnectWithoutTipoChecklistInput = {
    where: ChecklistWhereUniqueInput
    create: XOR<ChecklistCreateWithoutTipoChecklistInput, ChecklistUncheckedCreateWithoutTipoChecklistInput>
  }

  export type ChecklistCreateManyTipoChecklistInputEnvelope = {
    data: ChecklistCreateManyTipoChecklistInput | ChecklistCreateManyTipoChecklistInput[]
    skipDuplicates?: boolean
  }

  export type ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklist: ChecklistCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput
    tipoEquipe: TipoEquipeCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput
  }

  export type ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput = {
    id?: number
    checklistId: number
    tipoEquipeId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoChecklistInput = {
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
    create: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput>
  }

  export type ChecklistTipoEquipeRelacaoCreateManyTipoChecklistInputEnvelope = {
    data: ChecklistTipoEquipeRelacaoCreateManyTipoChecklistInput | ChecklistTipoEquipeRelacaoCreateManyTipoChecklistInput[]
    skipDuplicates?: boolean
  }

  export type ChecklistUpsertWithWhereUniqueWithoutTipoChecklistInput = {
    where: ChecklistWhereUniqueInput
    update: XOR<ChecklistUpdateWithoutTipoChecklistInput, ChecklistUncheckedUpdateWithoutTipoChecklistInput>
    create: XOR<ChecklistCreateWithoutTipoChecklistInput, ChecklistUncheckedCreateWithoutTipoChecklistInput>
  }

  export type ChecklistUpdateWithWhereUniqueWithoutTipoChecklistInput = {
    where: ChecklistWhereUniqueInput
    data: XOR<ChecklistUpdateWithoutTipoChecklistInput, ChecklistUncheckedUpdateWithoutTipoChecklistInput>
  }

  export type ChecklistUpdateManyWithWhereWithoutTipoChecklistInput = {
    where: ChecklistScalarWhereInput
    data: XOR<ChecklistUpdateManyMutationInput, ChecklistUncheckedUpdateManyWithoutTipoChecklistInput>
  }

  export type ChecklistScalarWhereInput = {
    AND?: ChecklistScalarWhereInput | ChecklistScalarWhereInput[]
    OR?: ChecklistScalarWhereInput[]
    NOT?: ChecklistScalarWhereInput | ChecklistScalarWhereInput[]
    id?: IntFilter<"Checklist"> | number
    nome?: StringFilter<"Checklist"> | string
    tipoChecklistId?: IntFilter<"Checklist"> | number
    createdAt?: DateTimeFilter<"Checklist"> | Date | string
    createdBy?: StringFilter<"Checklist"> | string
    updatedAt?: DateTimeNullableFilter<"Checklist"> | Date | string | null
    updatedBy?: StringNullableFilter<"Checklist"> | string | null
    deletedAt?: DateTimeNullableFilter<"Checklist"> | Date | string | null
    deletedBy?: StringNullableFilter<"Checklist"> | string | null
  }

  export type ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutTipoChecklistInput = {
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
    update: XOR<ChecklistTipoEquipeRelacaoUpdateWithoutTipoChecklistInput, ChecklistTipoEquipeRelacaoUncheckedUpdateWithoutTipoChecklistInput>
    create: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoChecklistInput>
  }

  export type ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutTipoChecklistInput = {
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
    data: XOR<ChecklistTipoEquipeRelacaoUpdateWithoutTipoChecklistInput, ChecklistTipoEquipeRelacaoUncheckedUpdateWithoutTipoChecklistInput>
  }

  export type ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutTipoChecklistInput = {
    where: ChecklistTipoEquipeRelacaoScalarWhereInput
    data: XOR<ChecklistTipoEquipeRelacaoUpdateManyMutationInput, ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutTipoChecklistInput>
  }

  export type ChecklistTipoEquipeRelacaoScalarWhereInput = {
    AND?: ChecklistTipoEquipeRelacaoScalarWhereInput | ChecklistTipoEquipeRelacaoScalarWhereInput[]
    OR?: ChecklistTipoEquipeRelacaoScalarWhereInput[]
    NOT?: ChecklistTipoEquipeRelacaoScalarWhereInput | ChecklistTipoEquipeRelacaoScalarWhereInput[]
    id?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    checklistId?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    tipoEquipeId?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    tipoChecklistId?: IntFilter<"ChecklistTipoEquipeRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistTipoEquipeRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistTipoEquipeRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistTipoEquipeRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistTipoEquipeRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistTipoEquipeRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistTipoEquipeRelacao"> | string | null
  }

  export type TipoChecklistCreateWithoutChecklistInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoCreateNestedManyWithoutTipoChecklistInput
  }

  export type TipoChecklistUncheckedCreateWithoutChecklistInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutTipoChecklistInput
  }

  export type TipoChecklistCreateOrConnectWithoutChecklistInput = {
    where: TipoChecklistWhereUniqueInput
    create: XOR<TipoChecklistCreateWithoutChecklistInput, TipoChecklistUncheckedCreateWithoutChecklistInput>
  }

  export type ChecklistPerguntaRelacaoCreateWithoutChecklistInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklistPergunta: ChecklistPerguntaCreateNestedOneWithoutChecklistPerguntaRelacaoInput
  }

  export type ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput = {
    id?: number
    checklistPerguntaId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistInput = {
    where: ChecklistPerguntaRelacaoWhereUniqueInput
    create: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput>
  }

  export type ChecklistPerguntaRelacaoCreateManyChecklistInputEnvelope = {
    data: ChecklistPerguntaRelacaoCreateManyChecklistInput | ChecklistPerguntaRelacaoCreateManyChecklistInput[]
    skipDuplicates?: boolean
  }

  export type ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklistOpcaoResposta: ChecklistOpcaoRespostaCreateNestedOneWithoutChecklistOpcaoRespostaRelacaoInput
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput = {
    id?: number
    checklistOpcaoRespostaId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistInput = {
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    create: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput>
  }

  export type ChecklistOpcaoRespostaRelacaoCreateManyChecklistInputEnvelope = {
    data: ChecklistOpcaoRespostaRelacaoCreateManyChecklistInput | ChecklistOpcaoRespostaRelacaoCreateManyChecklistInput[]
    skipDuplicates?: boolean
  }

  export type ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoVeiculo: TipoVeiculoCreateNestedOneWithoutChecklistTipoVeiculoRelacaoInput
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput = {
    id?: number
    tipoVeiculoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutChecklistInput = {
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    create: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput>
  }

  export type ChecklistTipoVeiculoRelacaoCreateManyChecklistInputEnvelope = {
    data: ChecklistTipoVeiculoRelacaoCreateManyChecklistInput | ChecklistTipoVeiculoRelacaoCreateManyChecklistInput[]
    skipDuplicates?: boolean
  }

  export type ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEquipe: TipoEquipeCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput
    tipoChecklist: TipoChecklistCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput
  }

  export type ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput = {
    id?: number
    tipoEquipeId: number
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoEquipeRelacaoCreateOrConnectWithoutChecklistInput = {
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
    create: XOR<ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput>
  }

  export type ChecklistTipoEquipeRelacaoCreateManyChecklistInputEnvelope = {
    data: ChecklistTipoEquipeRelacaoCreateManyChecklistInput | ChecklistTipoEquipeRelacaoCreateManyChecklistInput[]
    skipDuplicates?: boolean
  }

  export type TipoChecklistUpsertWithoutChecklistInput = {
    update: XOR<TipoChecklistUpdateWithoutChecklistInput, TipoChecklistUncheckedUpdateWithoutChecklistInput>
    create: XOR<TipoChecklistCreateWithoutChecklistInput, TipoChecklistUncheckedCreateWithoutChecklistInput>
    where?: TipoChecklistWhereInput
  }

  export type TipoChecklistUpdateToOneWithWhereWithoutChecklistInput = {
    where?: TipoChecklistWhereInput
    data: XOR<TipoChecklistUpdateWithoutChecklistInput, TipoChecklistUncheckedUpdateWithoutChecklistInput>
  }

  export type TipoChecklistUpdateWithoutChecklistInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUpdateManyWithoutTipoChecklistNestedInput
  }

  export type TipoChecklistUncheckedUpdateWithoutChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutTipoChecklistNestedInput
  }

  export type ChecklistPerguntaRelacaoUpsertWithWhereUniqueWithoutChecklistInput = {
    where: ChecklistPerguntaRelacaoWhereUniqueInput
    update: XOR<ChecklistPerguntaRelacaoUpdateWithoutChecklistInput, ChecklistPerguntaRelacaoUncheckedUpdateWithoutChecklistInput>
    create: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistInput>
  }

  export type ChecklistPerguntaRelacaoUpdateWithWhereUniqueWithoutChecklistInput = {
    where: ChecklistPerguntaRelacaoWhereUniqueInput
    data: XOR<ChecklistPerguntaRelacaoUpdateWithoutChecklistInput, ChecklistPerguntaRelacaoUncheckedUpdateWithoutChecklistInput>
  }

  export type ChecklistPerguntaRelacaoUpdateManyWithWhereWithoutChecklistInput = {
    where: ChecklistPerguntaRelacaoScalarWhereInput
    data: XOR<ChecklistPerguntaRelacaoUpdateManyMutationInput, ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistInput>
  }

  export type ChecklistPerguntaRelacaoScalarWhereInput = {
    AND?: ChecklistPerguntaRelacaoScalarWhereInput | ChecklistPerguntaRelacaoScalarWhereInput[]
    OR?: ChecklistPerguntaRelacaoScalarWhereInput[]
    NOT?: ChecklistPerguntaRelacaoScalarWhereInput | ChecklistPerguntaRelacaoScalarWhereInput[]
    id?: IntFilter<"ChecklistPerguntaRelacao"> | number
    checklistPerguntaId?: IntFilter<"ChecklistPerguntaRelacao"> | number
    checklistId?: IntFilter<"ChecklistPerguntaRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistPerguntaRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistPerguntaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistPerguntaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistPerguntaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistPerguntaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistPerguntaRelacao"> | string | null
  }

  export type ChecklistOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutChecklistInput = {
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    update: XOR<ChecklistOpcaoRespostaRelacaoUpdateWithoutChecklistInput, ChecklistOpcaoRespostaRelacaoUncheckedUpdateWithoutChecklistInput>
    create: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistInput>
  }

  export type ChecklistOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutChecklistInput = {
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    data: XOR<ChecklistOpcaoRespostaRelacaoUpdateWithoutChecklistInput, ChecklistOpcaoRespostaRelacaoUncheckedUpdateWithoutChecklistInput>
  }

  export type ChecklistOpcaoRespostaRelacaoUpdateManyWithWhereWithoutChecklistInput = {
    where: ChecklistOpcaoRespostaRelacaoScalarWhereInput
    data: XOR<ChecklistOpcaoRespostaRelacaoUpdateManyMutationInput, ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistInput>
  }

  export type ChecklistOpcaoRespostaRelacaoScalarWhereInput = {
    AND?: ChecklistOpcaoRespostaRelacaoScalarWhereInput | ChecklistOpcaoRespostaRelacaoScalarWhereInput[]
    OR?: ChecklistOpcaoRespostaRelacaoScalarWhereInput[]
    NOT?: ChecklistOpcaoRespostaRelacaoScalarWhereInput | ChecklistOpcaoRespostaRelacaoScalarWhereInput[]
    id?: IntFilter<"ChecklistOpcaoRespostaRelacao"> | number
    checklistOpcaoRespostaId?: IntFilter<"ChecklistOpcaoRespostaRelacao"> | number
    checklistId?: IntFilter<"ChecklistOpcaoRespostaRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistOpcaoRespostaRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistOpcaoRespostaRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistOpcaoRespostaRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistOpcaoRespostaRelacao"> | string | null
  }

  export type ChecklistTipoVeiculoRelacaoUpsertWithWhereUniqueWithoutChecklistInput = {
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    update: XOR<ChecklistTipoVeiculoRelacaoUpdateWithoutChecklistInput, ChecklistTipoVeiculoRelacaoUncheckedUpdateWithoutChecklistInput>
    create: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutChecklistInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutChecklistInput>
  }

  export type ChecklistTipoVeiculoRelacaoUpdateWithWhereUniqueWithoutChecklistInput = {
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    data: XOR<ChecklistTipoVeiculoRelacaoUpdateWithoutChecklistInput, ChecklistTipoVeiculoRelacaoUncheckedUpdateWithoutChecklistInput>
  }

  export type ChecklistTipoVeiculoRelacaoUpdateManyWithWhereWithoutChecklistInput = {
    where: ChecklistTipoVeiculoRelacaoScalarWhereInput
    data: XOR<ChecklistTipoVeiculoRelacaoUpdateManyMutationInput, ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutChecklistInput>
  }

  export type ChecklistTipoVeiculoRelacaoScalarWhereInput = {
    AND?: ChecklistTipoVeiculoRelacaoScalarWhereInput | ChecklistTipoVeiculoRelacaoScalarWhereInput[]
    OR?: ChecklistTipoVeiculoRelacaoScalarWhereInput[]
    NOT?: ChecklistTipoVeiculoRelacaoScalarWhereInput | ChecklistTipoVeiculoRelacaoScalarWhereInput[]
    id?: IntFilter<"ChecklistTipoVeiculoRelacao"> | number
    checklistId?: IntFilter<"ChecklistTipoVeiculoRelacao"> | number
    tipoVeiculoId?: IntFilter<"ChecklistTipoVeiculoRelacao"> | number
    createdAt?: DateTimeFilter<"ChecklistTipoVeiculoRelacao"> | Date | string
    createdBy?: StringFilter<"ChecklistTipoVeiculoRelacao"> | string
    updatedAt?: DateTimeNullableFilter<"ChecklistTipoVeiculoRelacao"> | Date | string | null
    updatedBy?: StringNullableFilter<"ChecklistTipoVeiculoRelacao"> | string | null
    deletedAt?: DateTimeNullableFilter<"ChecklistTipoVeiculoRelacao"> | Date | string | null
    deletedBy?: StringNullableFilter<"ChecklistTipoVeiculoRelacao"> | string | null
  }

  export type ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutChecklistInput = {
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
    update: XOR<ChecklistTipoEquipeRelacaoUpdateWithoutChecklistInput, ChecklistTipoEquipeRelacaoUncheckedUpdateWithoutChecklistInput>
    create: XOR<ChecklistTipoEquipeRelacaoCreateWithoutChecklistInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutChecklistInput>
  }

  export type ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutChecklistInput = {
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
    data: XOR<ChecklistTipoEquipeRelacaoUpdateWithoutChecklistInput, ChecklistTipoEquipeRelacaoUncheckedUpdateWithoutChecklistInput>
  }

  export type ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutChecklistInput = {
    where: ChecklistTipoEquipeRelacaoScalarWhereInput
    data: XOR<ChecklistTipoEquipeRelacaoUpdateManyMutationInput, ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutChecklistInput>
  }

  export type ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklist: ChecklistCreateNestedOneWithoutChecklistPerguntaRelacaoInput
  }

  export type ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput = {
    id?: number
    checklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistPerguntaRelacaoCreateOrConnectWithoutChecklistPerguntaInput = {
    where: ChecklistPerguntaRelacaoWhereUniqueInput
    create: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput>
  }

  export type ChecklistPerguntaRelacaoCreateManyChecklistPerguntaInputEnvelope = {
    data: ChecklistPerguntaRelacaoCreateManyChecklistPerguntaInput | ChecklistPerguntaRelacaoCreateManyChecklistPerguntaInput[]
    skipDuplicates?: boolean
  }

  export type ChecklistPerguntaRelacaoUpsertWithWhereUniqueWithoutChecklistPerguntaInput = {
    where: ChecklistPerguntaRelacaoWhereUniqueInput
    update: XOR<ChecklistPerguntaRelacaoUpdateWithoutChecklistPerguntaInput, ChecklistPerguntaRelacaoUncheckedUpdateWithoutChecklistPerguntaInput>
    create: XOR<ChecklistPerguntaRelacaoCreateWithoutChecklistPerguntaInput, ChecklistPerguntaRelacaoUncheckedCreateWithoutChecklistPerguntaInput>
  }

  export type ChecklistPerguntaRelacaoUpdateWithWhereUniqueWithoutChecklistPerguntaInput = {
    where: ChecklistPerguntaRelacaoWhereUniqueInput
    data: XOR<ChecklistPerguntaRelacaoUpdateWithoutChecklistPerguntaInput, ChecklistPerguntaRelacaoUncheckedUpdateWithoutChecklistPerguntaInput>
  }

  export type ChecklistPerguntaRelacaoUpdateManyWithWhereWithoutChecklistPerguntaInput = {
    where: ChecklistPerguntaRelacaoScalarWhereInput
    data: XOR<ChecklistPerguntaRelacaoUpdateManyMutationInput, ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistPerguntaInput>
  }

  export type ChecklistPerguntaCreateWithoutChecklistPerguntaRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistPerguntaUncheckedCreateWithoutChecklistPerguntaRelacaoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistPerguntaCreateOrConnectWithoutChecklistPerguntaRelacaoInput = {
    where: ChecklistPerguntaWhereUniqueInput
    create: XOR<ChecklistPerguntaCreateWithoutChecklistPerguntaRelacaoInput, ChecklistPerguntaUncheckedCreateWithoutChecklistPerguntaRelacaoInput>
  }

  export type ChecklistCreateWithoutChecklistPerguntaRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoChecklist: TipoChecklistCreateNestedOneWithoutChecklistInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistUncheckedCreateWithoutChecklistPerguntaRelacaoInput = {
    id?: number
    nome: string
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistCreateOrConnectWithoutChecklistPerguntaRelacaoInput = {
    where: ChecklistWhereUniqueInput
    create: XOR<ChecklistCreateWithoutChecklistPerguntaRelacaoInput, ChecklistUncheckedCreateWithoutChecklistPerguntaRelacaoInput>
  }

  export type ChecklistPerguntaUpsertWithoutChecklistPerguntaRelacaoInput = {
    update: XOR<ChecklistPerguntaUpdateWithoutChecklistPerguntaRelacaoInput, ChecklistPerguntaUncheckedUpdateWithoutChecklistPerguntaRelacaoInput>
    create: XOR<ChecklistPerguntaCreateWithoutChecklistPerguntaRelacaoInput, ChecklistPerguntaUncheckedCreateWithoutChecklistPerguntaRelacaoInput>
    where?: ChecklistPerguntaWhereInput
  }

  export type ChecklistPerguntaUpdateToOneWithWhereWithoutChecklistPerguntaRelacaoInput = {
    where?: ChecklistPerguntaWhereInput
    data: XOR<ChecklistPerguntaUpdateWithoutChecklistPerguntaRelacaoInput, ChecklistPerguntaUncheckedUpdateWithoutChecklistPerguntaRelacaoInput>
  }

  export type ChecklistPerguntaUpdateWithoutChecklistPerguntaRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistPerguntaUncheckedUpdateWithoutChecklistPerguntaRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistUpsertWithoutChecklistPerguntaRelacaoInput = {
    update: XOR<ChecklistUpdateWithoutChecklistPerguntaRelacaoInput, ChecklistUncheckedUpdateWithoutChecklistPerguntaRelacaoInput>
    create: XOR<ChecklistCreateWithoutChecklistPerguntaRelacaoInput, ChecklistUncheckedCreateWithoutChecklistPerguntaRelacaoInput>
    where?: ChecklistWhereInput
  }

  export type ChecklistUpdateToOneWithWhereWithoutChecklistPerguntaRelacaoInput = {
    where?: ChecklistWhereInput
    data: XOR<ChecklistUpdateWithoutChecklistPerguntaRelacaoInput, ChecklistUncheckedUpdateWithoutChecklistPerguntaRelacaoInput>
  }

  export type ChecklistUpdateWithoutChecklistPerguntaRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoChecklist?: TipoChecklistUpdateOneRequiredWithoutChecklistNestedInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUpdateManyWithoutChecklistNestedInput
  }

  export type ChecklistUncheckedUpdateWithoutChecklistPerguntaRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
  }

  export type ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklist: ChecklistCreateNestedOneWithoutChecklistOpcaoRespostaRelacaoInput
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput = {
    id?: number
    checklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistOpcaoRespostaRelacaoCreateOrConnectWithoutChecklistOpcaoRespostaInput = {
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    create: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput>
  }

  export type ChecklistOpcaoRespostaRelacaoCreateManyChecklistOpcaoRespostaInputEnvelope = {
    data: ChecklistOpcaoRespostaRelacaoCreateManyChecklistOpcaoRespostaInput | ChecklistOpcaoRespostaRelacaoCreateManyChecklistOpcaoRespostaInput[]
    skipDuplicates?: boolean
  }

  export type ChecklistOpcaoRespostaRelacaoUpsertWithWhereUniqueWithoutChecklistOpcaoRespostaInput = {
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    update: XOR<ChecklistOpcaoRespostaRelacaoUpdateWithoutChecklistOpcaoRespostaInput, ChecklistOpcaoRespostaRelacaoUncheckedUpdateWithoutChecklistOpcaoRespostaInput>
    create: XOR<ChecklistOpcaoRespostaRelacaoCreateWithoutChecklistOpcaoRespostaInput, ChecklistOpcaoRespostaRelacaoUncheckedCreateWithoutChecklistOpcaoRespostaInput>
  }

  export type ChecklistOpcaoRespostaRelacaoUpdateWithWhereUniqueWithoutChecklistOpcaoRespostaInput = {
    where: ChecklistOpcaoRespostaRelacaoWhereUniqueInput
    data: XOR<ChecklistOpcaoRespostaRelacaoUpdateWithoutChecklistOpcaoRespostaInput, ChecklistOpcaoRespostaRelacaoUncheckedUpdateWithoutChecklistOpcaoRespostaInput>
  }

  export type ChecklistOpcaoRespostaRelacaoUpdateManyWithWhereWithoutChecklistOpcaoRespostaInput = {
    where: ChecklistOpcaoRespostaRelacaoScalarWhereInput
    data: XOR<ChecklistOpcaoRespostaRelacaoUpdateManyMutationInput, ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistOpcaoRespostaInput>
  }

  export type ChecklistOpcaoRespostaCreateWithoutChecklistOpcaoRespostaRelacaoInput = {
    nome: string
    geraPendencia?: boolean
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistOpcaoRespostaUncheckedCreateWithoutChecklistOpcaoRespostaRelacaoInput = {
    id?: number
    nome: string
    geraPendencia?: boolean
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistOpcaoRespostaCreateOrConnectWithoutChecklistOpcaoRespostaRelacaoInput = {
    where: ChecklistOpcaoRespostaWhereUniqueInput
    create: XOR<ChecklistOpcaoRespostaCreateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistOpcaoRespostaUncheckedCreateWithoutChecklistOpcaoRespostaRelacaoInput>
  }

  export type ChecklistCreateWithoutChecklistOpcaoRespostaRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoChecklist: TipoChecklistCreateNestedOneWithoutChecklistInput
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistUncheckedCreateWithoutChecklistOpcaoRespostaRelacaoInput = {
    id?: number
    nome: string
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistCreateOrConnectWithoutChecklistOpcaoRespostaRelacaoInput = {
    where: ChecklistWhereUniqueInput
    create: XOR<ChecklistCreateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistUncheckedCreateWithoutChecklistOpcaoRespostaRelacaoInput>
  }

  export type ChecklistOpcaoRespostaUpsertWithoutChecklistOpcaoRespostaRelacaoInput = {
    update: XOR<ChecklistOpcaoRespostaUpdateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistOpcaoRespostaUncheckedUpdateWithoutChecklistOpcaoRespostaRelacaoInput>
    create: XOR<ChecklistOpcaoRespostaCreateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistOpcaoRespostaUncheckedCreateWithoutChecklistOpcaoRespostaRelacaoInput>
    where?: ChecklistOpcaoRespostaWhereInput
  }

  export type ChecklistOpcaoRespostaUpdateToOneWithWhereWithoutChecklistOpcaoRespostaRelacaoInput = {
    where?: ChecklistOpcaoRespostaWhereInput
    data: XOR<ChecklistOpcaoRespostaUpdateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistOpcaoRespostaUncheckedUpdateWithoutChecklistOpcaoRespostaRelacaoInput>
  }

  export type ChecklistOpcaoRespostaUpdateWithoutChecklistOpcaoRespostaRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    geraPendencia?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistOpcaoRespostaUncheckedUpdateWithoutChecklistOpcaoRespostaRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    geraPendencia?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistUpsertWithoutChecklistOpcaoRespostaRelacaoInput = {
    update: XOR<ChecklistUpdateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistUncheckedUpdateWithoutChecklistOpcaoRespostaRelacaoInput>
    create: XOR<ChecklistCreateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistUncheckedCreateWithoutChecklistOpcaoRespostaRelacaoInput>
    where?: ChecklistWhereInput
  }

  export type ChecklistUpdateToOneWithWhereWithoutChecklistOpcaoRespostaRelacaoInput = {
    where?: ChecklistWhereInput
    data: XOR<ChecklistUpdateWithoutChecklistOpcaoRespostaRelacaoInput, ChecklistUncheckedUpdateWithoutChecklistOpcaoRespostaRelacaoInput>
  }

  export type ChecklistUpdateWithoutChecklistOpcaoRespostaRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoChecklist?: TipoChecklistUpdateOneRequiredWithoutChecklistNestedInput
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUpdateManyWithoutChecklistNestedInput
  }

  export type ChecklistUncheckedUpdateWithoutChecklistOpcaoRespostaRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
  }

  export type ChecklistCreateWithoutChecklistTipoVeiculoRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoChecklist: TipoChecklistCreateNestedOneWithoutChecklistInput
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistUncheckedCreateWithoutChecklistTipoVeiculoRelacaoInput = {
    id?: number
    nome: string
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistCreateOrConnectWithoutChecklistTipoVeiculoRelacaoInput = {
    where: ChecklistWhereUniqueInput
    create: XOR<ChecklistCreateWithoutChecklistTipoVeiculoRelacaoInput, ChecklistUncheckedCreateWithoutChecklistTipoVeiculoRelacaoInput>
  }

  export type TipoVeiculoCreateWithoutChecklistTipoVeiculoRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoCreateNestedManyWithoutTipoVeiculoInput
  }

  export type TipoVeiculoUncheckedCreateWithoutChecklistTipoVeiculoRelacaoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoUncheckedCreateNestedManyWithoutTipoVeiculoInput
  }

  export type TipoVeiculoCreateOrConnectWithoutChecklistTipoVeiculoRelacaoInput = {
    where: TipoVeiculoWhereUniqueInput
    create: XOR<TipoVeiculoCreateWithoutChecklistTipoVeiculoRelacaoInput, TipoVeiculoUncheckedCreateWithoutChecklistTipoVeiculoRelacaoInput>
  }

  export type ChecklistUpsertWithoutChecklistTipoVeiculoRelacaoInput = {
    update: XOR<ChecklistUpdateWithoutChecklistTipoVeiculoRelacaoInput, ChecklistUncheckedUpdateWithoutChecklistTipoVeiculoRelacaoInput>
    create: XOR<ChecklistCreateWithoutChecklistTipoVeiculoRelacaoInput, ChecklistUncheckedCreateWithoutChecklistTipoVeiculoRelacaoInput>
    where?: ChecklistWhereInput
  }

  export type ChecklistUpdateToOneWithWhereWithoutChecklistTipoVeiculoRelacaoInput = {
    where?: ChecklistWhereInput
    data: XOR<ChecklistUpdateWithoutChecklistTipoVeiculoRelacaoInput, ChecklistUncheckedUpdateWithoutChecklistTipoVeiculoRelacaoInput>
  }

  export type ChecklistUpdateWithoutChecklistTipoVeiculoRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoChecklist?: TipoChecklistUpdateOneRequiredWithoutChecklistNestedInput
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUpdateManyWithoutChecklistNestedInput
  }

  export type ChecklistUncheckedUpdateWithoutChecklistTipoVeiculoRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
  }

  export type TipoVeiculoUpsertWithoutChecklistTipoVeiculoRelacaoInput = {
    update: XOR<TipoVeiculoUpdateWithoutChecklistTipoVeiculoRelacaoInput, TipoVeiculoUncheckedUpdateWithoutChecklistTipoVeiculoRelacaoInput>
    create: XOR<TipoVeiculoCreateWithoutChecklistTipoVeiculoRelacaoInput, TipoVeiculoUncheckedCreateWithoutChecklistTipoVeiculoRelacaoInput>
    where?: TipoVeiculoWhereInput
  }

  export type TipoVeiculoUpdateToOneWithWhereWithoutChecklistTipoVeiculoRelacaoInput = {
    where?: TipoVeiculoWhereInput
    data: XOR<TipoVeiculoUpdateWithoutChecklistTipoVeiculoRelacaoInput, TipoVeiculoUncheckedUpdateWithoutChecklistTipoVeiculoRelacaoInput>
  }

  export type TipoVeiculoUpdateWithoutChecklistTipoVeiculoRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUpdateManyWithoutTipoVeiculoNestedInput
  }

  export type TipoVeiculoUncheckedUpdateWithoutChecklistTipoVeiculoRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUncheckedUpdateManyWithoutTipoVeiculoNestedInput
  }

  export type ChecklistCreateWithoutChecklistTipoEquipeRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoChecklist: TipoChecklistCreateNestedOneWithoutChecklistInput
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoCreateNestedManyWithoutChecklistInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput = {
    id?: number
    nome: string
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedCreateNestedManyWithoutChecklistInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedCreateNestedManyWithoutChecklistInput
  }

  export type ChecklistCreateOrConnectWithoutChecklistTipoEquipeRelacaoInput = {
    where: ChecklistWhereUniqueInput
    create: XOR<ChecklistCreateWithoutChecklistTipoEquipeRelacaoInput, ChecklistUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
  }

  export type TipoEquipeCreateWithoutChecklistTipoEquipeRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Equipe?: EquipeCreateNestedManyWithoutTipoEquipeInput
  }

  export type TipoEquipeUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Equipe?: EquipeUncheckedCreateNestedManyWithoutTipoEquipeInput
  }

  export type TipoEquipeCreateOrConnectWithoutChecklistTipoEquipeRelacaoInput = {
    where: TipoEquipeWhereUniqueInput
    create: XOR<TipoEquipeCreateWithoutChecklistTipoEquipeRelacaoInput, TipoEquipeUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
  }

  export type TipoChecklistCreateWithoutChecklistTipoEquipeRelacaoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Checklist?: ChecklistCreateNestedManyWithoutTipoChecklistInput
  }

  export type TipoChecklistUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Checklist?: ChecklistUncheckedCreateNestedManyWithoutTipoChecklistInput
  }

  export type TipoChecklistCreateOrConnectWithoutChecklistTipoEquipeRelacaoInput = {
    where: TipoChecklistWhereUniqueInput
    create: XOR<TipoChecklistCreateWithoutChecklistTipoEquipeRelacaoInput, TipoChecklistUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
  }

  export type ChecklistUpsertWithoutChecklistTipoEquipeRelacaoInput = {
    update: XOR<ChecklistUpdateWithoutChecklistTipoEquipeRelacaoInput, ChecklistUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput>
    create: XOR<ChecklistCreateWithoutChecklistTipoEquipeRelacaoInput, ChecklistUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
    where?: ChecklistWhereInput
  }

  export type ChecklistUpdateToOneWithWhereWithoutChecklistTipoEquipeRelacaoInput = {
    where?: ChecklistWhereInput
    data: XOR<ChecklistUpdateWithoutChecklistTipoEquipeRelacaoInput, ChecklistUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput>
  }

  export type ChecklistUpdateWithoutChecklistTipoEquipeRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoChecklist?: TipoChecklistUpdateOneRequiredWithoutChecklistNestedInput
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUpdateManyWithoutChecklistNestedInput
  }

  export type ChecklistUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
  }

  export type TipoEquipeUpsertWithoutChecklistTipoEquipeRelacaoInput = {
    update: XOR<TipoEquipeUpdateWithoutChecklistTipoEquipeRelacaoInput, TipoEquipeUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput>
    create: XOR<TipoEquipeCreateWithoutChecklistTipoEquipeRelacaoInput, TipoEquipeUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
    where?: TipoEquipeWhereInput
  }

  export type TipoEquipeUpdateToOneWithWhereWithoutChecklistTipoEquipeRelacaoInput = {
    where?: TipoEquipeWhereInput
    data: XOR<TipoEquipeUpdateWithoutChecklistTipoEquipeRelacaoInput, TipoEquipeUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput>
  }

  export type TipoEquipeUpdateWithoutChecklistTipoEquipeRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Equipe?: EquipeUpdateManyWithoutTipoEquipeNestedInput
  }

  export type TipoEquipeUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Equipe?: EquipeUncheckedUpdateManyWithoutTipoEquipeNestedInput
  }

  export type TipoChecklistUpsertWithoutChecklistTipoEquipeRelacaoInput = {
    update: XOR<TipoChecklistUpdateWithoutChecklistTipoEquipeRelacaoInput, TipoChecklistUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput>
    create: XOR<TipoChecklistCreateWithoutChecklistTipoEquipeRelacaoInput, TipoChecklistUncheckedCreateWithoutChecklistTipoEquipeRelacaoInput>
    where?: TipoChecklistWhereInput
  }

  export type TipoChecklistUpdateToOneWithWhereWithoutChecklistTipoEquipeRelacaoInput = {
    where?: TipoChecklistWhereInput
    data: XOR<TipoChecklistUpdateWithoutChecklistTipoEquipeRelacaoInput, TipoChecklistUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput>
  }

  export type TipoChecklistUpdateWithoutChecklistTipoEquipeRelacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Checklist?: ChecklistUpdateManyWithoutTipoChecklistNestedInput
  }

  export type TipoChecklistUncheckedUpdateWithoutChecklistTipoEquipeRelacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Checklist?: ChecklistUncheckedUpdateManyWithoutTipoChecklistNestedInput
  }

  export type VeiculoCreateWithoutContratoInput = {
    placa: string
    modelo: string
    ano: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoVeiculo: TipoVeiculoCreateNestedOneWithoutVeiculoInput
    VeiculoOdometro?: VeiculoOdometroCreateNestedManyWithoutVeiculoInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoCreateNestedManyWithoutVeiculoInput
    Turno?: TurnoCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoUncheckedCreateWithoutContratoInput = {
    id?: number
    placa: string
    modelo: string
    ano: number
    tipoVeiculoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    VeiculoOdometro?: VeiculoOdometroUncheckedCreateNestedManyWithoutVeiculoInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutVeiculoInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoCreateOrConnectWithoutContratoInput = {
    where: VeiculoWhereUniqueInput
    create: XOR<VeiculoCreateWithoutContratoInput, VeiculoUncheckedCreateWithoutContratoInput>
  }

  export type VeiculoCreateManyContratoInputEnvelope = {
    data: VeiculoCreateManyContratoInput | VeiculoCreateManyContratoInput[]
    skipDuplicates?: boolean
  }

  export type EletricistaCreateWithoutContratoInput = {
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    cargo: CargoCreateNestedOneWithoutEletricistaInput
    TurnoEletricistas?: TurnoEletricistaCreateNestedManyWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaCreateNestedManyWithoutEletricistaCobrindoInput
    SlotEscala?: SlotEscalaCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaUncheckedCreateWithoutContratoInput = {
    id?: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    cargoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    TurnoEletricistas?: TurnoEletricistaUncheckedCreateNestedManyWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaUncheckedCreateNestedManyWithoutEletricistaCobrindoInput
    SlotEscala?: SlotEscalaUncheckedCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaCreateOrConnectWithoutContratoInput = {
    where: EletricistaWhereUniqueInput
    create: XOR<EletricistaCreateWithoutContratoInput, EletricistaUncheckedCreateWithoutContratoInput>
  }

  export type EletricistaCreateManyContratoInputEnvelope = {
    data: EletricistaCreateManyContratoInput | EletricistaCreateManyContratoInput[]
    skipDuplicates?: boolean
  }

  export type EquipeCreateWithoutContratoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEquipe: TipoEquipeCreateNestedOneWithoutEquipeInput
    EquipeSupervisor?: EquipeSupervisorCreateNestedManyWithoutEquipeInput
    Turno?: TurnoCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutEquipeInput
  }

  export type EquipeUncheckedCreateWithoutContratoInput = {
    id?: number
    nome: string
    tipoEquipeId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedCreateNestedManyWithoutEquipeInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutEquipeInput
  }

  export type EquipeCreateOrConnectWithoutContratoInput = {
    where: EquipeWhereUniqueInput
    create: XOR<EquipeCreateWithoutContratoInput, EquipeUncheckedCreateWithoutContratoInput>
  }

  export type EquipeCreateManyContratoInputEnvelope = {
    data: EquipeCreateManyContratoInput | EquipeCreateManyContratoInput[]
    skipDuplicates?: boolean
  }

  export type SupervisorCreateWithoutContratoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorCreateNestedManyWithoutSupervisorInput
  }

  export type SupervisorUncheckedCreateWithoutContratoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedCreateNestedManyWithoutSupervisorInput
  }

  export type SupervisorCreateOrConnectWithoutContratoInput = {
    where: SupervisorWhereUniqueInput
    create: XOR<SupervisorCreateWithoutContratoInput, SupervisorUncheckedCreateWithoutContratoInput>
  }

  export type SupervisorCreateManyContratoInputEnvelope = {
    data: SupervisorCreateManyContratoInput | SupervisorCreateManyContratoInput[]
    skipDuplicates?: boolean
  }

  export type MobileContratoPermissaoCreateWithoutContratoInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    mobileUser: MobileUserCreateNestedOneWithoutMobileContratoPermissaoInput
  }

  export type MobileContratoPermissaoUncheckedCreateWithoutContratoInput = {
    id?: number
    mobileUserId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type MobileContratoPermissaoCreateOrConnectWithoutContratoInput = {
    where: MobileContratoPermissaoWhereUniqueInput
    create: XOR<MobileContratoPermissaoCreateWithoutContratoInput, MobileContratoPermissaoUncheckedCreateWithoutContratoInput>
  }

  export type MobileContratoPermissaoCreateManyContratoInputEnvelope = {
    data: MobileContratoPermissaoCreateManyContratoInput | MobileContratoPermissaoCreateManyContratoInput[]
    skipDuplicates?: boolean
  }

  export type BaseCreateWithoutContratoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EletricistaBaseHistorico?: EletricistaBaseHistoricoCreateNestedManyWithoutBaseInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoCreateNestedManyWithoutBaseInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutBaseInput
  }

  export type BaseUncheckedCreateWithoutContratoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
  }

  export type BaseCreateOrConnectWithoutContratoInput = {
    where: BaseWhereUniqueInput
    create: XOR<BaseCreateWithoutContratoInput, BaseUncheckedCreateWithoutContratoInput>
  }

  export type BaseCreateManyContratoInputEnvelope = {
    data: BaseCreateManyContratoInput | BaseCreateManyContratoInput[]
    skipDuplicates?: boolean
  }

  export type VeiculoUpsertWithWhereUniqueWithoutContratoInput = {
    where: VeiculoWhereUniqueInput
    update: XOR<VeiculoUpdateWithoutContratoInput, VeiculoUncheckedUpdateWithoutContratoInput>
    create: XOR<VeiculoCreateWithoutContratoInput, VeiculoUncheckedCreateWithoutContratoInput>
  }

  export type VeiculoUpdateWithWhereUniqueWithoutContratoInput = {
    where: VeiculoWhereUniqueInput
    data: XOR<VeiculoUpdateWithoutContratoInput, VeiculoUncheckedUpdateWithoutContratoInput>
  }

  export type VeiculoUpdateManyWithWhereWithoutContratoInput = {
    where: VeiculoScalarWhereInput
    data: XOR<VeiculoUpdateManyMutationInput, VeiculoUncheckedUpdateManyWithoutContratoInput>
  }

  export type VeiculoScalarWhereInput = {
    AND?: VeiculoScalarWhereInput | VeiculoScalarWhereInput[]
    OR?: VeiculoScalarWhereInput[]
    NOT?: VeiculoScalarWhereInput | VeiculoScalarWhereInput[]
    id?: IntFilter<"Veiculo"> | number
    placa?: StringFilter<"Veiculo"> | string
    modelo?: StringFilter<"Veiculo"> | string
    ano?: IntFilter<"Veiculo"> | number
    tipoVeiculoId?: IntFilter<"Veiculo"> | number
    contratoId?: IntFilter<"Veiculo"> | number
    createdAt?: DateTimeFilter<"Veiculo"> | Date | string
    createdBy?: StringFilter<"Veiculo"> | string
    updatedAt?: DateTimeNullableFilter<"Veiculo"> | Date | string | null
    updatedBy?: StringNullableFilter<"Veiculo"> | string | null
    deletedAt?: DateTimeNullableFilter<"Veiculo"> | Date | string | null
    deletedBy?: StringNullableFilter<"Veiculo"> | string | null
  }

  export type EletricistaUpsertWithWhereUniqueWithoutContratoInput = {
    where: EletricistaWhereUniqueInput
    update: XOR<EletricistaUpdateWithoutContratoInput, EletricistaUncheckedUpdateWithoutContratoInput>
    create: XOR<EletricistaCreateWithoutContratoInput, EletricistaUncheckedCreateWithoutContratoInput>
  }

  export type EletricistaUpdateWithWhereUniqueWithoutContratoInput = {
    where: EletricistaWhereUniqueInput
    data: XOR<EletricistaUpdateWithoutContratoInput, EletricistaUncheckedUpdateWithoutContratoInput>
  }

  export type EletricistaUpdateManyWithWhereWithoutContratoInput = {
    where: EletricistaScalarWhereInput
    data: XOR<EletricistaUpdateManyMutationInput, EletricistaUncheckedUpdateManyWithoutContratoInput>
  }

  export type EletricistaScalarWhereInput = {
    AND?: EletricistaScalarWhereInput | EletricistaScalarWhereInput[]
    OR?: EletricistaScalarWhereInput[]
    NOT?: EletricistaScalarWhereInput | EletricistaScalarWhereInput[]
    id?: IntFilter<"Eletricista"> | number
    nome?: StringFilter<"Eletricista"> | string
    matricula?: StringFilter<"Eletricista"> | string
    telefone?: StringFilter<"Eletricista"> | string
    estado?: StringFilter<"Eletricista"> | string
    admissao?: DateTimeFilter<"Eletricista"> | Date | string
    cargoId?: IntFilter<"Eletricista"> | number
    createdAt?: DateTimeFilter<"Eletricista"> | Date | string
    createdBy?: StringFilter<"Eletricista"> | string
    updatedAt?: DateTimeNullableFilter<"Eletricista"> | Date | string | null
    updatedBy?: StringNullableFilter<"Eletricista"> | string | null
    deletedAt?: DateTimeNullableFilter<"Eletricista"> | Date | string | null
    deletedBy?: StringNullableFilter<"Eletricista"> | string | null
    contratoId?: IntFilter<"Eletricista"> | number
  }

  export type EquipeUpsertWithWhereUniqueWithoutContratoInput = {
    where: EquipeWhereUniqueInput
    update: XOR<EquipeUpdateWithoutContratoInput, EquipeUncheckedUpdateWithoutContratoInput>
    create: XOR<EquipeCreateWithoutContratoInput, EquipeUncheckedCreateWithoutContratoInput>
  }

  export type EquipeUpdateWithWhereUniqueWithoutContratoInput = {
    where: EquipeWhereUniqueInput
    data: XOR<EquipeUpdateWithoutContratoInput, EquipeUncheckedUpdateWithoutContratoInput>
  }

  export type EquipeUpdateManyWithWhereWithoutContratoInput = {
    where: EquipeScalarWhereInput
    data: XOR<EquipeUpdateManyMutationInput, EquipeUncheckedUpdateManyWithoutContratoInput>
  }

  export type EquipeScalarWhereInput = {
    AND?: EquipeScalarWhereInput | EquipeScalarWhereInput[]
    OR?: EquipeScalarWhereInput[]
    NOT?: EquipeScalarWhereInput | EquipeScalarWhereInput[]
    id?: IntFilter<"Equipe"> | number
    nome?: StringFilter<"Equipe"> | string
    tipoEquipeId?: IntFilter<"Equipe"> | number
    contratoId?: IntFilter<"Equipe"> | number
    createdAt?: DateTimeFilter<"Equipe"> | Date | string
    createdBy?: StringFilter<"Equipe"> | string
    updatedAt?: DateTimeNullableFilter<"Equipe"> | Date | string | null
    updatedBy?: StringNullableFilter<"Equipe"> | string | null
    deletedAt?: DateTimeNullableFilter<"Equipe"> | Date | string | null
    deletedBy?: StringNullableFilter<"Equipe"> | string | null
  }

  export type SupervisorUpsertWithWhereUniqueWithoutContratoInput = {
    where: SupervisorWhereUniqueInput
    update: XOR<SupervisorUpdateWithoutContratoInput, SupervisorUncheckedUpdateWithoutContratoInput>
    create: XOR<SupervisorCreateWithoutContratoInput, SupervisorUncheckedCreateWithoutContratoInput>
  }

  export type SupervisorUpdateWithWhereUniqueWithoutContratoInput = {
    where: SupervisorWhereUniqueInput
    data: XOR<SupervisorUpdateWithoutContratoInput, SupervisorUncheckedUpdateWithoutContratoInput>
  }

  export type SupervisorUpdateManyWithWhereWithoutContratoInput = {
    where: SupervisorScalarWhereInput
    data: XOR<SupervisorUpdateManyMutationInput, SupervisorUncheckedUpdateManyWithoutContratoInput>
  }

  export type SupervisorScalarWhereInput = {
    AND?: SupervisorScalarWhereInput | SupervisorScalarWhereInput[]
    OR?: SupervisorScalarWhereInput[]
    NOT?: SupervisorScalarWhereInput | SupervisorScalarWhereInput[]
    id?: IntFilter<"Supervisor"> | number
    nome?: StringFilter<"Supervisor"> | string
    contratoId?: IntFilter<"Supervisor"> | number
    createdAt?: DateTimeFilter<"Supervisor"> | Date | string
    createdBy?: StringFilter<"Supervisor"> | string
    updatedAt?: DateTimeNullableFilter<"Supervisor"> | Date | string | null
    updatedBy?: StringNullableFilter<"Supervisor"> | string | null
    deletedAt?: DateTimeNullableFilter<"Supervisor"> | Date | string | null
    deletedBy?: StringNullableFilter<"Supervisor"> | string | null
  }

  export type MobileContratoPermissaoUpsertWithWhereUniqueWithoutContratoInput = {
    where: MobileContratoPermissaoWhereUniqueInput
    update: XOR<MobileContratoPermissaoUpdateWithoutContratoInput, MobileContratoPermissaoUncheckedUpdateWithoutContratoInput>
    create: XOR<MobileContratoPermissaoCreateWithoutContratoInput, MobileContratoPermissaoUncheckedCreateWithoutContratoInput>
  }

  export type MobileContratoPermissaoUpdateWithWhereUniqueWithoutContratoInput = {
    where: MobileContratoPermissaoWhereUniqueInput
    data: XOR<MobileContratoPermissaoUpdateWithoutContratoInput, MobileContratoPermissaoUncheckedUpdateWithoutContratoInput>
  }

  export type MobileContratoPermissaoUpdateManyWithWhereWithoutContratoInput = {
    where: MobileContratoPermissaoScalarWhereInput
    data: XOR<MobileContratoPermissaoUpdateManyMutationInput, MobileContratoPermissaoUncheckedUpdateManyWithoutContratoInput>
  }

  export type BaseUpsertWithWhereUniqueWithoutContratoInput = {
    where: BaseWhereUniqueInput
    update: XOR<BaseUpdateWithoutContratoInput, BaseUncheckedUpdateWithoutContratoInput>
    create: XOR<BaseCreateWithoutContratoInput, BaseUncheckedCreateWithoutContratoInput>
  }

  export type BaseUpdateWithWhereUniqueWithoutContratoInput = {
    where: BaseWhereUniqueInput
    data: XOR<BaseUpdateWithoutContratoInput, BaseUncheckedUpdateWithoutContratoInput>
  }

  export type BaseUpdateManyWithWhereWithoutContratoInput = {
    where: BaseScalarWhereInput
    data: XOR<BaseUpdateManyMutationInput, BaseUncheckedUpdateManyWithoutContratoInput>
  }

  export type BaseScalarWhereInput = {
    AND?: BaseScalarWhereInput | BaseScalarWhereInput[]
    OR?: BaseScalarWhereInput[]
    NOT?: BaseScalarWhereInput | BaseScalarWhereInput[]
    id?: IntFilter<"Base"> | number
    nome?: StringFilter<"Base"> | string
    contratoId?: IntFilter<"Base"> | number
    createdAt?: DateTimeFilter<"Base"> | Date | string
    createdBy?: StringFilter<"Base"> | string
    updatedAt?: DateTimeNullableFilter<"Base"> | Date | string | null
    updatedBy?: StringNullableFilter<"Base"> | string | null
    deletedAt?: DateTimeNullableFilter<"Base"> | Date | string | null
    deletedBy?: StringNullableFilter<"Base"> | string | null
  }

  export type ContratoCreateWithoutMobileContratoPermissaoInput = {
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoCreateNestedManyWithoutContratoInput
    Eletricista?: EletricistaCreateNestedManyWithoutContratoInput
    Equipe?: EquipeCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorCreateNestedManyWithoutContratoInput
    Base?: BaseCreateNestedManyWithoutContratoInput
  }

  export type ContratoUncheckedCreateWithoutMobileContratoPermissaoInput = {
    id?: number
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoUncheckedCreateNestedManyWithoutContratoInput
    Eletricista?: EletricistaUncheckedCreateNestedManyWithoutContratoInput
    Equipe?: EquipeUncheckedCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorUncheckedCreateNestedManyWithoutContratoInput
    Base?: BaseUncheckedCreateNestedManyWithoutContratoInput
  }

  export type ContratoCreateOrConnectWithoutMobileContratoPermissaoInput = {
    where: ContratoWhereUniqueInput
    create: XOR<ContratoCreateWithoutMobileContratoPermissaoInput, ContratoUncheckedCreateWithoutMobileContratoPermissaoInput>
  }

  export type MobileUserCreateWithoutMobileContratoPermissaoInput = {
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    mobileSession?: MobileSessionCreateNestedManyWithoutMobileUserInput
    MobileToken?: MobileTokenCreateNestedManyWithoutMobileUserInput
  }

  export type MobileUserUncheckedCreateWithoutMobileContratoPermissaoInput = {
    id?: number
    username: string
    password: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    mobileSession?: MobileSessionUncheckedCreateNestedManyWithoutMobileUserInput
    MobileToken?: MobileTokenUncheckedCreateNestedManyWithoutMobileUserInput
  }

  export type MobileUserCreateOrConnectWithoutMobileContratoPermissaoInput = {
    where: MobileUserWhereUniqueInput
    create: XOR<MobileUserCreateWithoutMobileContratoPermissaoInput, MobileUserUncheckedCreateWithoutMobileContratoPermissaoInput>
  }

  export type ContratoUpsertWithoutMobileContratoPermissaoInput = {
    update: XOR<ContratoUpdateWithoutMobileContratoPermissaoInput, ContratoUncheckedUpdateWithoutMobileContratoPermissaoInput>
    create: XOR<ContratoCreateWithoutMobileContratoPermissaoInput, ContratoUncheckedCreateWithoutMobileContratoPermissaoInput>
    where?: ContratoWhereInput
  }

  export type ContratoUpdateToOneWithWhereWithoutMobileContratoPermissaoInput = {
    where?: ContratoWhereInput
    data: XOR<ContratoUpdateWithoutMobileContratoPermissaoInput, ContratoUncheckedUpdateWithoutMobileContratoPermissaoInput>
  }

  export type ContratoUpdateWithoutMobileContratoPermissaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUpdateManyWithoutContratoNestedInput
    Eletricista?: EletricistaUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUpdateManyWithoutContratoNestedInput
    Base?: BaseUpdateManyWithoutContratoNestedInput
  }

  export type ContratoUncheckedUpdateWithoutMobileContratoPermissaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUncheckedUpdateManyWithoutContratoNestedInput
    Eletricista?: EletricistaUncheckedUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUncheckedUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUncheckedUpdateManyWithoutContratoNestedInput
    Base?: BaseUncheckedUpdateManyWithoutContratoNestedInput
  }

  export type MobileUserUpsertWithoutMobileContratoPermissaoInput = {
    update: XOR<MobileUserUpdateWithoutMobileContratoPermissaoInput, MobileUserUncheckedUpdateWithoutMobileContratoPermissaoInput>
    create: XOR<MobileUserCreateWithoutMobileContratoPermissaoInput, MobileUserUncheckedCreateWithoutMobileContratoPermissaoInput>
    where?: MobileUserWhereInput
  }

  export type MobileUserUpdateToOneWithWhereWithoutMobileContratoPermissaoInput = {
    where?: MobileUserWhereInput
    data: XOR<MobileUserUpdateWithoutMobileContratoPermissaoInput, MobileUserUncheckedUpdateWithoutMobileContratoPermissaoInput>
  }

  export type MobileUserUpdateWithoutMobileContratoPermissaoInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    mobileSession?: MobileSessionUpdateManyWithoutMobileUserNestedInput
    MobileToken?: MobileTokenUpdateManyWithoutMobileUserNestedInput
  }

  export type MobileUserUncheckedUpdateWithoutMobileContratoPermissaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    mobileSession?: MobileSessionUncheckedUpdateManyWithoutMobileUserNestedInput
    MobileToken?: MobileTokenUncheckedUpdateManyWithoutMobileUserNestedInput
  }

  export type EletricistaCreateWithoutEletricistaBaseHistoricoInput = {
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    cargo: CargoCreateNestedOneWithoutEletricistaInput
    contrato: ContratoCreateNestedOneWithoutEletricistaInput
    TurnoEletricistas?: TurnoEletricistaCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaCreateNestedManyWithoutEletricistaCobrindoInput
    SlotEscala?: SlotEscalaCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaUncheckedCreateWithoutEletricistaBaseHistoricoInput = {
    id?: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    cargoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contratoId: number
    TurnoEletricistas?: TurnoEletricistaUncheckedCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaUncheckedCreateNestedManyWithoutEletricistaCobrindoInput
    SlotEscala?: SlotEscalaUncheckedCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaCreateOrConnectWithoutEletricistaBaseHistoricoInput = {
    where: EletricistaWhereUniqueInput
    create: XOR<EletricistaCreateWithoutEletricistaBaseHistoricoInput, EletricistaUncheckedCreateWithoutEletricistaBaseHistoricoInput>
  }

  export type BaseCreateWithoutEletricistaBaseHistoricoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutBaseInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoCreateNestedManyWithoutBaseInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutBaseInput
  }

  export type BaseUncheckedCreateWithoutEletricistaBaseHistoricoInput = {
    id?: number
    nome: string
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
  }

  export type BaseCreateOrConnectWithoutEletricistaBaseHistoricoInput = {
    where: BaseWhereUniqueInput
    create: XOR<BaseCreateWithoutEletricistaBaseHistoricoInput, BaseUncheckedCreateWithoutEletricistaBaseHistoricoInput>
  }

  export type EletricistaUpsertWithoutEletricistaBaseHistoricoInput = {
    update: XOR<EletricistaUpdateWithoutEletricistaBaseHistoricoInput, EletricistaUncheckedUpdateWithoutEletricistaBaseHistoricoInput>
    create: XOR<EletricistaCreateWithoutEletricistaBaseHistoricoInput, EletricistaUncheckedCreateWithoutEletricistaBaseHistoricoInput>
    where?: EletricistaWhereInput
  }

  export type EletricistaUpdateToOneWithWhereWithoutEletricistaBaseHistoricoInput = {
    where?: EletricistaWhereInput
    data: XOR<EletricistaUpdateWithoutEletricistaBaseHistoricoInput, EletricistaUncheckedUpdateWithoutEletricistaBaseHistoricoInput>
  }

  export type EletricistaUpdateWithoutEletricistaBaseHistoricoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: CargoUpdateOneRequiredWithoutEletricistaNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEletricistaNestedInput
    TurnoEletricistas?: TurnoEletricistaUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUpdateManyWithoutEletricistaCobrindoNestedInput
    SlotEscala?: SlotEscalaUpdateManyWithoutEletricistaNestedInput
  }

  export type EletricistaUncheckedUpdateWithoutEletricistaBaseHistoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contratoId?: IntFieldUpdateOperationsInput | number
    TurnoEletricistas?: TurnoEletricistaUncheckedUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUncheckedUpdateManyWithoutEletricistaCobrindoNestedInput
    SlotEscala?: SlotEscalaUncheckedUpdateManyWithoutEletricistaNestedInput
  }

  export type BaseUpsertWithoutEletricistaBaseHistoricoInput = {
    update: XOR<BaseUpdateWithoutEletricistaBaseHistoricoInput, BaseUncheckedUpdateWithoutEletricistaBaseHistoricoInput>
    create: XOR<BaseCreateWithoutEletricistaBaseHistoricoInput, BaseUncheckedCreateWithoutEletricistaBaseHistoricoInput>
    where?: BaseWhereInput
  }

  export type BaseUpdateToOneWithWhereWithoutEletricistaBaseHistoricoInput = {
    where?: BaseWhereInput
    data: XOR<BaseUpdateWithoutEletricistaBaseHistoricoInput, BaseUncheckedUpdateWithoutEletricistaBaseHistoricoInput>
  }

  export type BaseUpdateWithoutEletricistaBaseHistoricoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutBaseNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUpdateManyWithoutBaseNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutBaseNestedInput
  }

  export type BaseUncheckedUpdateWithoutEletricistaBaseHistoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
  }

  export type CargoCreateWithoutEletricistaInput = {
    nome: string
    salarioBase?: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type CargoUncheckedCreateWithoutEletricistaInput = {
    id?: number
    nome: string
    salarioBase?: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type CargoCreateOrConnectWithoutEletricistaInput = {
    where: CargoWhereUniqueInput
    create: XOR<CargoCreateWithoutEletricistaInput, CargoUncheckedCreateWithoutEletricistaInput>
  }

  export type ContratoCreateWithoutEletricistaInput = {
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoCreateNestedManyWithoutContratoInput
    Equipe?: EquipeCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoCreateNestedManyWithoutContratoInput
    Base?: BaseCreateNestedManyWithoutContratoInput
  }

  export type ContratoUncheckedCreateWithoutEletricistaInput = {
    id?: number
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoUncheckedCreateNestedManyWithoutContratoInput
    Equipe?: EquipeUncheckedCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorUncheckedCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedCreateNestedManyWithoutContratoInput
    Base?: BaseUncheckedCreateNestedManyWithoutContratoInput
  }

  export type ContratoCreateOrConnectWithoutEletricistaInput = {
    where: ContratoWhereUniqueInput
    create: XOR<ContratoCreateWithoutEletricistaInput, ContratoUncheckedCreateWithoutEletricistaInput>
  }

  export type TurnoEletricistaCreateWithoutEletricistaInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    turno: TurnoCreateNestedOneWithoutTurnoEletricistasInput
  }

  export type TurnoEletricistaUncheckedCreateWithoutEletricistaInput = {
    id?: number
    turnoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TurnoEletricistaCreateOrConnectWithoutEletricistaInput = {
    where: TurnoEletricistaWhereUniqueInput
    create: XOR<TurnoEletricistaCreateWithoutEletricistaInput, TurnoEletricistaUncheckedCreateWithoutEletricistaInput>
  }

  export type TurnoEletricistaCreateManyEletricistaInputEnvelope = {
    data: TurnoEletricistaCreateManyEletricistaInput | TurnoEletricistaCreateManyEletricistaInput[]
    skipDuplicates?: boolean
  }

  export type EletricistaBaseHistoricoCreateWithoutEletricistaInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    base: BaseCreateNestedOneWithoutEletricistaBaseHistoricoInput
  }

  export type EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput = {
    id?: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EletricistaBaseHistoricoCreateOrConnectWithoutEletricistaInput = {
    where: EletricistaBaseHistoricoWhereUniqueInput
    create: XOR<EletricistaBaseHistoricoCreateWithoutEletricistaInput, EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput>
  }

  export type EletricistaBaseHistoricoCreateManyEletricistaInputEnvelope = {
    data: EletricistaBaseHistoricoCreateManyEletricistaInput | EletricistaBaseHistoricoCreateManyEletricistaInput[]
    skipDuplicates?: boolean
  }

  export type EventoCoberturaCreateWithoutEletricistaCobrindoInput = {
    tipo: $Enums.EventoCoberturaTipo
    resultado: $Enums.EventoCoberturaResultado
    justificativa?: string | null
    registradoEm?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    slotEscala: SlotEscalaCreateNestedOneWithoutCoberturasInput
  }

  export type EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput = {
    id?: number
    slotEscalaId: number
    tipo: $Enums.EventoCoberturaTipo
    resultado: $Enums.EventoCoberturaResultado
    justificativa?: string | null
    registradoEm?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EventoCoberturaCreateOrConnectWithoutEletricistaCobrindoInput = {
    where: EventoCoberturaWhereUniqueInput
    create: XOR<EventoCoberturaCreateWithoutEletricistaCobrindoInput, EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput>
  }

  export type EventoCoberturaCreateManyEletricistaCobrindoInputEnvelope = {
    data: EventoCoberturaCreateManyEletricistaCobrindoInput | EventoCoberturaCreateManyEletricistaCobrindoInput[]
    skipDuplicates?: boolean
  }

  export type SlotEscalaCreateWithoutEletricistaInput = {
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    escalaEquipePeriodo: EscalaEquipePeriodoCreateNestedOneWithoutSlotsInput
    Coberturas?: EventoCoberturaCreateNestedManyWithoutSlotEscalaInput
  }

  export type SlotEscalaUncheckedCreateWithoutEletricistaInput = {
    id?: number
    escalaEquipePeriodoId: number
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Coberturas?: EventoCoberturaUncheckedCreateNestedManyWithoutSlotEscalaInput
  }

  export type SlotEscalaCreateOrConnectWithoutEletricistaInput = {
    where: SlotEscalaWhereUniqueInput
    create: XOR<SlotEscalaCreateWithoutEletricistaInput, SlotEscalaUncheckedCreateWithoutEletricistaInput>
  }

  export type SlotEscalaCreateManyEletricistaInputEnvelope = {
    data: SlotEscalaCreateManyEletricistaInput | SlotEscalaCreateManyEletricistaInput[]
    skipDuplicates?: boolean
  }

  export type CargoUpsertWithoutEletricistaInput = {
    update: XOR<CargoUpdateWithoutEletricistaInput, CargoUncheckedUpdateWithoutEletricistaInput>
    create: XOR<CargoCreateWithoutEletricistaInput, CargoUncheckedCreateWithoutEletricistaInput>
    where?: CargoWhereInput
  }

  export type CargoUpdateToOneWithWhereWithoutEletricistaInput = {
    where?: CargoWhereInput
    data: XOR<CargoUpdateWithoutEletricistaInput, CargoUncheckedUpdateWithoutEletricistaInput>
  }

  export type CargoUpdateWithoutEletricistaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    salarioBase?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CargoUncheckedUpdateWithoutEletricistaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    salarioBase?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContratoUpsertWithoutEletricistaInput = {
    update: XOR<ContratoUpdateWithoutEletricistaInput, ContratoUncheckedUpdateWithoutEletricistaInput>
    create: XOR<ContratoCreateWithoutEletricistaInput, ContratoUncheckedCreateWithoutEletricistaInput>
    where?: ContratoWhereInput
  }

  export type ContratoUpdateToOneWithWhereWithoutEletricistaInput = {
    where?: ContratoWhereInput
    data: XOR<ContratoUpdateWithoutEletricistaInput, ContratoUncheckedUpdateWithoutEletricistaInput>
  }

  export type ContratoUpdateWithoutEletricistaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUpdateManyWithoutContratoNestedInput
    Base?: BaseUpdateManyWithoutContratoNestedInput
  }

  export type ContratoUncheckedUpdateWithoutEletricistaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUncheckedUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUncheckedUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUncheckedUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedUpdateManyWithoutContratoNestedInput
    Base?: BaseUncheckedUpdateManyWithoutContratoNestedInput
  }

  export type TurnoEletricistaUpsertWithWhereUniqueWithoutEletricistaInput = {
    where: TurnoEletricistaWhereUniqueInput
    update: XOR<TurnoEletricistaUpdateWithoutEletricistaInput, TurnoEletricistaUncheckedUpdateWithoutEletricistaInput>
    create: XOR<TurnoEletricistaCreateWithoutEletricistaInput, TurnoEletricistaUncheckedCreateWithoutEletricistaInput>
  }

  export type TurnoEletricistaUpdateWithWhereUniqueWithoutEletricistaInput = {
    where: TurnoEletricistaWhereUniqueInput
    data: XOR<TurnoEletricistaUpdateWithoutEletricistaInput, TurnoEletricistaUncheckedUpdateWithoutEletricistaInput>
  }

  export type TurnoEletricistaUpdateManyWithWhereWithoutEletricistaInput = {
    where: TurnoEletricistaScalarWhereInput
    data: XOR<TurnoEletricistaUpdateManyMutationInput, TurnoEletricistaUncheckedUpdateManyWithoutEletricistaInput>
  }

  export type TurnoEletricistaScalarWhereInput = {
    AND?: TurnoEletricistaScalarWhereInput | TurnoEletricistaScalarWhereInput[]
    OR?: TurnoEletricistaScalarWhereInput[]
    NOT?: TurnoEletricistaScalarWhereInput | TurnoEletricistaScalarWhereInput[]
    id?: IntFilter<"TurnoEletricista"> | number
    turnoId?: IntFilter<"TurnoEletricista"> | number
    eletricistaId?: IntFilter<"TurnoEletricista"> | number
    createdAt?: DateTimeFilter<"TurnoEletricista"> | Date | string
    createdBy?: StringFilter<"TurnoEletricista"> | string
    updatedAt?: DateTimeNullableFilter<"TurnoEletricista"> | Date | string | null
    updatedBy?: StringNullableFilter<"TurnoEletricista"> | string | null
    deletedAt?: DateTimeNullableFilter<"TurnoEletricista"> | Date | string | null
    deletedBy?: StringNullableFilter<"TurnoEletricista"> | string | null
  }

  export type EletricistaBaseHistoricoUpsertWithWhereUniqueWithoutEletricistaInput = {
    where: EletricistaBaseHistoricoWhereUniqueInput
    update: XOR<EletricistaBaseHistoricoUpdateWithoutEletricistaInput, EletricistaBaseHistoricoUncheckedUpdateWithoutEletricistaInput>
    create: XOR<EletricistaBaseHistoricoCreateWithoutEletricistaInput, EletricistaBaseHistoricoUncheckedCreateWithoutEletricistaInput>
  }

  export type EletricistaBaseHistoricoUpdateWithWhereUniqueWithoutEletricistaInput = {
    where: EletricistaBaseHistoricoWhereUniqueInput
    data: XOR<EletricistaBaseHistoricoUpdateWithoutEletricistaInput, EletricistaBaseHistoricoUncheckedUpdateWithoutEletricistaInput>
  }

  export type EletricistaBaseHistoricoUpdateManyWithWhereWithoutEletricistaInput = {
    where: EletricistaBaseHistoricoScalarWhereInput
    data: XOR<EletricistaBaseHistoricoUpdateManyMutationInput, EletricistaBaseHistoricoUncheckedUpdateManyWithoutEletricistaInput>
  }

  export type EventoCoberturaUpsertWithWhereUniqueWithoutEletricistaCobrindoInput = {
    where: EventoCoberturaWhereUniqueInput
    update: XOR<EventoCoberturaUpdateWithoutEletricistaCobrindoInput, EventoCoberturaUncheckedUpdateWithoutEletricistaCobrindoInput>
    create: XOR<EventoCoberturaCreateWithoutEletricistaCobrindoInput, EventoCoberturaUncheckedCreateWithoutEletricistaCobrindoInput>
  }

  export type EventoCoberturaUpdateWithWhereUniqueWithoutEletricistaCobrindoInput = {
    where: EventoCoberturaWhereUniqueInput
    data: XOR<EventoCoberturaUpdateWithoutEletricistaCobrindoInput, EventoCoberturaUncheckedUpdateWithoutEletricistaCobrindoInput>
  }

  export type EventoCoberturaUpdateManyWithWhereWithoutEletricistaCobrindoInput = {
    where: EventoCoberturaScalarWhereInput
    data: XOR<EventoCoberturaUpdateManyMutationInput, EventoCoberturaUncheckedUpdateManyWithoutEletricistaCobrindoInput>
  }

  export type EventoCoberturaScalarWhereInput = {
    AND?: EventoCoberturaScalarWhereInput | EventoCoberturaScalarWhereInput[]
    OR?: EventoCoberturaScalarWhereInput[]
    NOT?: EventoCoberturaScalarWhereInput | EventoCoberturaScalarWhereInput[]
    id?: IntFilter<"EventoCobertura"> | number
    slotEscalaId?: IntFilter<"EventoCobertura"> | number
    eletricistaCobrindoId?: IntNullableFilter<"EventoCobertura"> | number | null
    tipo?: EnumEventoCoberturaTipoFilter<"EventoCobertura"> | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFilter<"EventoCobertura"> | $Enums.EventoCoberturaResultado
    justificativa?: StringNullableFilter<"EventoCobertura"> | string | null
    registradoEm?: DateTimeFilter<"EventoCobertura"> | Date | string
    createdAt?: DateTimeFilter<"EventoCobertura"> | Date | string
    createdBy?: StringFilter<"EventoCobertura"> | string
    updatedAt?: DateTimeNullableFilter<"EventoCobertura"> | Date | string | null
    updatedBy?: StringNullableFilter<"EventoCobertura"> | string | null
    deletedAt?: DateTimeNullableFilter<"EventoCobertura"> | Date | string | null
    deletedBy?: StringNullableFilter<"EventoCobertura"> | string | null
  }

  export type SlotEscalaUpsertWithWhereUniqueWithoutEletricistaInput = {
    where: SlotEscalaWhereUniqueInput
    update: XOR<SlotEscalaUpdateWithoutEletricistaInput, SlotEscalaUncheckedUpdateWithoutEletricistaInput>
    create: XOR<SlotEscalaCreateWithoutEletricistaInput, SlotEscalaUncheckedCreateWithoutEletricistaInput>
  }

  export type SlotEscalaUpdateWithWhereUniqueWithoutEletricistaInput = {
    where: SlotEscalaWhereUniqueInput
    data: XOR<SlotEscalaUpdateWithoutEletricistaInput, SlotEscalaUncheckedUpdateWithoutEletricistaInput>
  }

  export type SlotEscalaUpdateManyWithWhereWithoutEletricistaInput = {
    where: SlotEscalaScalarWhereInput
    data: XOR<SlotEscalaUpdateManyMutationInput, SlotEscalaUncheckedUpdateManyWithoutEletricistaInput>
  }

  export type SlotEscalaScalarWhereInput = {
    AND?: SlotEscalaScalarWhereInput | SlotEscalaScalarWhereInput[]
    OR?: SlotEscalaScalarWhereInput[]
    NOT?: SlotEscalaScalarWhereInput | SlotEscalaScalarWhereInput[]
    id?: IntFilter<"SlotEscala"> | number
    escalaEquipePeriodoId?: IntFilter<"SlotEscala"> | number
    eletricistaId?: IntFilter<"SlotEscala"> | number
    data?: DateTimeFilter<"SlotEscala"> | Date | string
    estado?: EnumEstadoSlotFilter<"SlotEscala"> | $Enums.EstadoSlot
    inicioPrevisto?: StringNullableFilter<"SlotEscala"> | string | null
    fimPrevisto?: StringNullableFilter<"SlotEscala"> | string | null
    anotacoesDia?: StringNullableFilter<"SlotEscala"> | string | null
    origem?: EnumOrigemAtribuicaoFilter<"SlotEscala"> | $Enums.OrigemAtribuicao
    observacoes?: StringNullableFilter<"SlotEscala"> | string | null
    createdAt?: DateTimeFilter<"SlotEscala"> | Date | string
    createdBy?: StringFilter<"SlotEscala"> | string
    updatedAt?: DateTimeNullableFilter<"SlotEscala"> | Date | string | null
    updatedBy?: StringNullableFilter<"SlotEscala"> | string | null
    deletedAt?: DateTimeNullableFilter<"SlotEscala"> | Date | string | null
    deletedBy?: StringNullableFilter<"SlotEscala"> | string | null
  }

  export type EletricistaCreateWithoutCargoInput = {
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutEletricistaInput
    TurnoEletricistas?: TurnoEletricistaCreateNestedManyWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaCreateNestedManyWithoutEletricistaCobrindoInput
    SlotEscala?: SlotEscalaCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaUncheckedCreateWithoutCargoInput = {
    id?: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contratoId: number
    TurnoEletricistas?: TurnoEletricistaUncheckedCreateNestedManyWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaUncheckedCreateNestedManyWithoutEletricistaCobrindoInput
    SlotEscala?: SlotEscalaUncheckedCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaCreateOrConnectWithoutCargoInput = {
    where: EletricistaWhereUniqueInput
    create: XOR<EletricistaCreateWithoutCargoInput, EletricistaUncheckedCreateWithoutCargoInput>
  }

  export type EletricistaCreateManyCargoInputEnvelope = {
    data: EletricistaCreateManyCargoInput | EletricistaCreateManyCargoInput[]
    skipDuplicates?: boolean
  }

  export type EletricistaUpsertWithWhereUniqueWithoutCargoInput = {
    where: EletricistaWhereUniqueInput
    update: XOR<EletricistaUpdateWithoutCargoInput, EletricistaUncheckedUpdateWithoutCargoInput>
    create: XOR<EletricistaCreateWithoutCargoInput, EletricistaUncheckedCreateWithoutCargoInput>
  }

  export type EletricistaUpdateWithWhereUniqueWithoutCargoInput = {
    where: EletricistaWhereUniqueInput
    data: XOR<EletricistaUpdateWithoutCargoInput, EletricistaUncheckedUpdateWithoutCargoInput>
  }

  export type EletricistaUpdateManyWithWhereWithoutCargoInput = {
    where: EletricistaScalarWhereInput
    data: XOR<EletricistaUpdateManyMutationInput, EletricistaUncheckedUpdateManyWithoutCargoInput>
  }

  export type EquipeCreateWithoutEquipeBaseHistoricoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEquipe: TipoEquipeCreateNestedOneWithoutEquipeInput
    contrato: ContratoCreateNestedOneWithoutEquipeInput
    EquipeSupervisor?: EquipeSupervisorCreateNestedManyWithoutEquipeInput
    Turno?: TurnoCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoCreateNestedManyWithoutEquipeInput
  }

  export type EquipeUncheckedCreateWithoutEquipeBaseHistoricoInput = {
    id?: number
    nome: string
    tipoEquipeId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedCreateNestedManyWithoutEquipeInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutEquipeInput
  }

  export type EquipeCreateOrConnectWithoutEquipeBaseHistoricoInput = {
    where: EquipeWhereUniqueInput
    create: XOR<EquipeCreateWithoutEquipeBaseHistoricoInput, EquipeUncheckedCreateWithoutEquipeBaseHistoricoInput>
  }

  export type BaseCreateWithoutEquipeBaseHistoricoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutBaseInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoCreateNestedManyWithoutBaseInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoCreateNestedManyWithoutBaseInput
  }

  export type BaseUncheckedCreateWithoutEquipeBaseHistoricoInput = {
    id?: number
    nome: string
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
  }

  export type BaseCreateOrConnectWithoutEquipeBaseHistoricoInput = {
    where: BaseWhereUniqueInput
    create: XOR<BaseCreateWithoutEquipeBaseHistoricoInput, BaseUncheckedCreateWithoutEquipeBaseHistoricoInput>
  }

  export type EquipeUpsertWithoutEquipeBaseHistoricoInput = {
    update: XOR<EquipeUpdateWithoutEquipeBaseHistoricoInput, EquipeUncheckedUpdateWithoutEquipeBaseHistoricoInput>
    create: XOR<EquipeCreateWithoutEquipeBaseHistoricoInput, EquipeUncheckedCreateWithoutEquipeBaseHistoricoInput>
    where?: EquipeWhereInput
  }

  export type EquipeUpdateToOneWithWhereWithoutEquipeBaseHistoricoInput = {
    where?: EquipeWhereInput
    data: XOR<EquipeUpdateWithoutEquipeBaseHistoricoInput, EquipeUncheckedUpdateWithoutEquipeBaseHistoricoInput>
  }

  export type EquipeUpdateWithoutEquipeBaseHistoricoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutEquipeNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEquipeNestedInput
    EquipeSupervisor?: EquipeSupervisorUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateWithoutEquipeBaseHistoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
  }

  export type BaseUpsertWithoutEquipeBaseHistoricoInput = {
    update: XOR<BaseUpdateWithoutEquipeBaseHistoricoInput, BaseUncheckedUpdateWithoutEquipeBaseHistoricoInput>
    create: XOR<BaseCreateWithoutEquipeBaseHistoricoInput, BaseUncheckedCreateWithoutEquipeBaseHistoricoInput>
    where?: BaseWhereInput
  }

  export type BaseUpdateToOneWithWhereWithoutEquipeBaseHistoricoInput = {
    where?: BaseWhereInput
    data: XOR<BaseUpdateWithoutEquipeBaseHistoricoInput, BaseUncheckedUpdateWithoutEquipeBaseHistoricoInput>
  }

  export type BaseUpdateWithoutEquipeBaseHistoricoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutBaseNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUpdateManyWithoutBaseNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUpdateManyWithoutBaseNestedInput
  }

  export type BaseUncheckedUpdateWithoutEquipeBaseHistoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
  }

  export type EquipeCreateWithoutTipoEquipeInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutEquipeInput
    EquipeSupervisor?: EquipeSupervisorCreateNestedManyWithoutEquipeInput
    Turno?: TurnoCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutEquipeInput
  }

  export type EquipeUncheckedCreateWithoutTipoEquipeInput = {
    id?: number
    nome: string
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedCreateNestedManyWithoutEquipeInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutEquipeInput
  }

  export type EquipeCreateOrConnectWithoutTipoEquipeInput = {
    where: EquipeWhereUniqueInput
    create: XOR<EquipeCreateWithoutTipoEquipeInput, EquipeUncheckedCreateWithoutTipoEquipeInput>
  }

  export type EquipeCreateManyTipoEquipeInputEnvelope = {
    data: EquipeCreateManyTipoEquipeInput | EquipeCreateManyTipoEquipeInput[]
    skipDuplicates?: boolean
  }

  export type ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklist: ChecklistCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput
    tipoChecklist: TipoChecklistCreateNestedOneWithoutChecklistTipoEquipeRelacaoInput
  }

  export type ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput = {
    id?: number
    checklistId: number
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoEquipeRelacaoCreateOrConnectWithoutTipoEquipeInput = {
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
    create: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput>
  }

  export type ChecklistTipoEquipeRelacaoCreateManyTipoEquipeInputEnvelope = {
    data: ChecklistTipoEquipeRelacaoCreateManyTipoEquipeInput | ChecklistTipoEquipeRelacaoCreateManyTipoEquipeInput[]
    skipDuplicates?: boolean
  }

  export type EquipeUpsertWithWhereUniqueWithoutTipoEquipeInput = {
    where: EquipeWhereUniqueInput
    update: XOR<EquipeUpdateWithoutTipoEquipeInput, EquipeUncheckedUpdateWithoutTipoEquipeInput>
    create: XOR<EquipeCreateWithoutTipoEquipeInput, EquipeUncheckedCreateWithoutTipoEquipeInput>
  }

  export type EquipeUpdateWithWhereUniqueWithoutTipoEquipeInput = {
    where: EquipeWhereUniqueInput
    data: XOR<EquipeUpdateWithoutTipoEquipeInput, EquipeUncheckedUpdateWithoutTipoEquipeInput>
  }

  export type EquipeUpdateManyWithWhereWithoutTipoEquipeInput = {
    where: EquipeScalarWhereInput
    data: XOR<EquipeUpdateManyMutationInput, EquipeUncheckedUpdateManyWithoutTipoEquipeInput>
  }

  export type ChecklistTipoEquipeRelacaoUpsertWithWhereUniqueWithoutTipoEquipeInput = {
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
    update: XOR<ChecklistTipoEquipeRelacaoUpdateWithoutTipoEquipeInput, ChecklistTipoEquipeRelacaoUncheckedUpdateWithoutTipoEquipeInput>
    create: XOR<ChecklistTipoEquipeRelacaoCreateWithoutTipoEquipeInput, ChecklistTipoEquipeRelacaoUncheckedCreateWithoutTipoEquipeInput>
  }

  export type ChecklistTipoEquipeRelacaoUpdateWithWhereUniqueWithoutTipoEquipeInput = {
    where: ChecklistTipoEquipeRelacaoWhereUniqueInput
    data: XOR<ChecklistTipoEquipeRelacaoUpdateWithoutTipoEquipeInput, ChecklistTipoEquipeRelacaoUncheckedUpdateWithoutTipoEquipeInput>
  }

  export type ChecklistTipoEquipeRelacaoUpdateManyWithWhereWithoutTipoEquipeInput = {
    where: ChecklistTipoEquipeRelacaoScalarWhereInput
    data: XOR<ChecklistTipoEquipeRelacaoUpdateManyMutationInput, ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutTipoEquipeInput>
  }

  export type TipoEquipeCreateWithoutEquipeInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoCreateNestedManyWithoutTipoEquipeInput
  }

  export type TipoEquipeUncheckedCreateWithoutEquipeInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedCreateNestedManyWithoutTipoEquipeInput
  }

  export type TipoEquipeCreateOrConnectWithoutEquipeInput = {
    where: TipoEquipeWhereUniqueInput
    create: XOR<TipoEquipeCreateWithoutEquipeInput, TipoEquipeUncheckedCreateWithoutEquipeInput>
  }

  export type ContratoCreateWithoutEquipeInput = {
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoCreateNestedManyWithoutContratoInput
    Eletricista?: EletricistaCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoCreateNestedManyWithoutContratoInput
    Base?: BaseCreateNestedManyWithoutContratoInput
  }

  export type ContratoUncheckedCreateWithoutEquipeInput = {
    id?: number
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoUncheckedCreateNestedManyWithoutContratoInput
    Eletricista?: EletricistaUncheckedCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorUncheckedCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedCreateNestedManyWithoutContratoInput
    Base?: BaseUncheckedCreateNestedManyWithoutContratoInput
  }

  export type ContratoCreateOrConnectWithoutEquipeInput = {
    where: ContratoWhereUniqueInput
    create: XOR<ContratoCreateWithoutEquipeInput, ContratoUncheckedCreateWithoutEquipeInput>
  }

  export type EquipeSupervisorCreateWithoutEquipeInput = {
    inicio: Date | string
    fim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    supervisor: SupervisorCreateNestedOneWithoutEquipeSupervisorInput
  }

  export type EquipeSupervisorUncheckedCreateWithoutEquipeInput = {
    id?: number
    supervisorId: number
    inicio: Date | string
    fim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeSupervisorCreateOrConnectWithoutEquipeInput = {
    where: EquipeSupervisorWhereUniqueInput
    create: XOR<EquipeSupervisorCreateWithoutEquipeInput, EquipeSupervisorUncheckedCreateWithoutEquipeInput>
  }

  export type EquipeSupervisorCreateManyEquipeInputEnvelope = {
    data: EquipeSupervisorCreateManyEquipeInput | EquipeSupervisorCreateManyEquipeInput[]
    skipDuplicates?: boolean
  }

  export type TurnoCreateWithoutEquipeInput = {
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    veiculo: VeiculoCreateNestedOneWithoutTurnoInput
    TurnoEletricistas?: TurnoEletricistaCreateNestedManyWithoutTurnoInput
  }

  export type TurnoUncheckedCreateWithoutEquipeInput = {
    id?: number
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    veiculoId: number
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    TurnoEletricistas?: TurnoEletricistaUncheckedCreateNestedManyWithoutTurnoInput
  }

  export type TurnoCreateOrConnectWithoutEquipeInput = {
    where: TurnoWhereUniqueInput
    create: XOR<TurnoCreateWithoutEquipeInput, TurnoUncheckedCreateWithoutEquipeInput>
  }

  export type TurnoCreateManyEquipeInputEnvelope = {
    data: TurnoCreateManyEquipeInput | TurnoCreateManyEquipeInput[]
    skipDuplicates?: boolean
  }

  export type EscalaEquipePeriodoCreateWithoutEquipeInput = {
    periodoInicio: Date | string
    periodoFim: Date | string
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEscala: TipoEscalaCreateNestedOneWithoutEscalasEquipePeriodoInput
    Slots?: SlotEscalaCreateNestedManyWithoutEscalaEquipePeriodoInput
  }

  export type EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput = {
    id?: number
    periodoInicio: Date | string
    periodoFim: Date | string
    tipoEscalaId: number
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Slots?: SlotEscalaUncheckedCreateNestedManyWithoutEscalaEquipePeriodoInput
  }

  export type EscalaEquipePeriodoCreateOrConnectWithoutEquipeInput = {
    where: EscalaEquipePeriodoWhereUniqueInput
    create: XOR<EscalaEquipePeriodoCreateWithoutEquipeInput, EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput>
  }

  export type EscalaEquipePeriodoCreateManyEquipeInputEnvelope = {
    data: EscalaEquipePeriodoCreateManyEquipeInput | EscalaEquipePeriodoCreateManyEquipeInput[]
    skipDuplicates?: boolean
  }

  export type EquipeHorarioVigenciaCreateWithoutEquipeInput = {
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    vigenciaInicio: Date | string
    vigenciaFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput = {
    id?: number
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    vigenciaInicio: Date | string
    vigenciaFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeHorarioVigenciaCreateOrConnectWithoutEquipeInput = {
    where: EquipeHorarioVigenciaWhereUniqueInput
    create: XOR<EquipeHorarioVigenciaCreateWithoutEquipeInput, EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput>
  }

  export type EquipeHorarioVigenciaCreateManyEquipeInputEnvelope = {
    data: EquipeHorarioVigenciaCreateManyEquipeInput | EquipeHorarioVigenciaCreateManyEquipeInput[]
    skipDuplicates?: boolean
  }

  export type EquipeTurnoHistoricoCreateWithoutEquipeInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    fimTurnoHora?: string | null
    motivo?: string | null
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    horarioAberturaCatalogo?: HorarioAberturaCatalogoCreateNestedOneWithoutHistoricosInput
  }

  export type EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput = {
    id?: number
    horarioAberturaCatalogoId?: number | null
    dataInicio: Date | string
    dataFim?: Date | string | null
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    fimTurnoHora?: string | null
    motivo?: string | null
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeTurnoHistoricoCreateOrConnectWithoutEquipeInput = {
    where: EquipeTurnoHistoricoWhereUniqueInput
    create: XOR<EquipeTurnoHistoricoCreateWithoutEquipeInput, EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput>
  }

  export type EquipeTurnoHistoricoCreateManyEquipeInputEnvelope = {
    data: EquipeTurnoHistoricoCreateManyEquipeInput | EquipeTurnoHistoricoCreateManyEquipeInput[]
    skipDuplicates?: boolean
  }

  export type EquipeBaseHistoricoCreateWithoutEquipeInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    base: BaseCreateNestedOneWithoutEquipeBaseHistoricoInput
  }

  export type EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput = {
    id?: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeBaseHistoricoCreateOrConnectWithoutEquipeInput = {
    where: EquipeBaseHistoricoWhereUniqueInput
    create: XOR<EquipeBaseHistoricoCreateWithoutEquipeInput, EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput>
  }

  export type EquipeBaseHistoricoCreateManyEquipeInputEnvelope = {
    data: EquipeBaseHistoricoCreateManyEquipeInput | EquipeBaseHistoricoCreateManyEquipeInput[]
    skipDuplicates?: boolean
  }

  export type TipoEquipeUpsertWithoutEquipeInput = {
    update: XOR<TipoEquipeUpdateWithoutEquipeInput, TipoEquipeUncheckedUpdateWithoutEquipeInput>
    create: XOR<TipoEquipeCreateWithoutEquipeInput, TipoEquipeUncheckedCreateWithoutEquipeInput>
    where?: TipoEquipeWhereInput
  }

  export type TipoEquipeUpdateToOneWithWhereWithoutEquipeInput = {
    where?: TipoEquipeWhereInput
    data: XOR<TipoEquipeUpdateWithoutEquipeInput, TipoEquipeUncheckedUpdateWithoutEquipeInput>
  }

  export type TipoEquipeUpdateWithoutEquipeInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUpdateManyWithoutTipoEquipeNestedInput
  }

  export type TipoEquipeUncheckedUpdateWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutTipoEquipeNestedInput
  }

  export type ContratoUpsertWithoutEquipeInput = {
    update: XOR<ContratoUpdateWithoutEquipeInput, ContratoUncheckedUpdateWithoutEquipeInput>
    create: XOR<ContratoCreateWithoutEquipeInput, ContratoUncheckedCreateWithoutEquipeInput>
    where?: ContratoWhereInput
  }

  export type ContratoUpdateToOneWithWhereWithoutEquipeInput = {
    where?: ContratoWhereInput
    data: XOR<ContratoUpdateWithoutEquipeInput, ContratoUncheckedUpdateWithoutEquipeInput>
  }

  export type ContratoUpdateWithoutEquipeInput = {
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUpdateManyWithoutContratoNestedInput
    Eletricista?: EletricistaUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUpdateManyWithoutContratoNestedInput
    Base?: BaseUpdateManyWithoutContratoNestedInput
  }

  export type ContratoUncheckedUpdateWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUncheckedUpdateManyWithoutContratoNestedInput
    Eletricista?: EletricistaUncheckedUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUncheckedUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedUpdateManyWithoutContratoNestedInput
    Base?: BaseUncheckedUpdateManyWithoutContratoNestedInput
  }

  export type EquipeSupervisorUpsertWithWhereUniqueWithoutEquipeInput = {
    where: EquipeSupervisorWhereUniqueInput
    update: XOR<EquipeSupervisorUpdateWithoutEquipeInput, EquipeSupervisorUncheckedUpdateWithoutEquipeInput>
    create: XOR<EquipeSupervisorCreateWithoutEquipeInput, EquipeSupervisorUncheckedCreateWithoutEquipeInput>
  }

  export type EquipeSupervisorUpdateWithWhereUniqueWithoutEquipeInput = {
    where: EquipeSupervisorWhereUniqueInput
    data: XOR<EquipeSupervisorUpdateWithoutEquipeInput, EquipeSupervisorUncheckedUpdateWithoutEquipeInput>
  }

  export type EquipeSupervisorUpdateManyWithWhereWithoutEquipeInput = {
    where: EquipeSupervisorScalarWhereInput
    data: XOR<EquipeSupervisorUpdateManyMutationInput, EquipeSupervisorUncheckedUpdateManyWithoutEquipeInput>
  }

  export type EquipeSupervisorScalarWhereInput = {
    AND?: EquipeSupervisorScalarWhereInput | EquipeSupervisorScalarWhereInput[]
    OR?: EquipeSupervisorScalarWhereInput[]
    NOT?: EquipeSupervisorScalarWhereInput | EquipeSupervisorScalarWhereInput[]
    id?: IntFilter<"EquipeSupervisor"> | number
    equipeId?: IntFilter<"EquipeSupervisor"> | number
    supervisorId?: IntFilter<"EquipeSupervisor"> | number
    inicio?: DateTimeFilter<"EquipeSupervisor"> | Date | string
    fim?: DateTimeNullableFilter<"EquipeSupervisor"> | Date | string | null
    createdAt?: DateTimeFilter<"EquipeSupervisor"> | Date | string
    createdBy?: StringFilter<"EquipeSupervisor"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeSupervisor"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeSupervisor"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeSupervisor"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeSupervisor"> | string | null
  }

  export type TurnoUpsertWithWhereUniqueWithoutEquipeInput = {
    where: TurnoWhereUniqueInput
    update: XOR<TurnoUpdateWithoutEquipeInput, TurnoUncheckedUpdateWithoutEquipeInput>
    create: XOR<TurnoCreateWithoutEquipeInput, TurnoUncheckedCreateWithoutEquipeInput>
  }

  export type TurnoUpdateWithWhereUniqueWithoutEquipeInput = {
    where: TurnoWhereUniqueInput
    data: XOR<TurnoUpdateWithoutEquipeInput, TurnoUncheckedUpdateWithoutEquipeInput>
  }

  export type TurnoUpdateManyWithWhereWithoutEquipeInput = {
    where: TurnoScalarWhereInput
    data: XOR<TurnoUpdateManyMutationInput, TurnoUncheckedUpdateManyWithoutEquipeInput>
  }

  export type TurnoScalarWhereInput = {
    AND?: TurnoScalarWhereInput | TurnoScalarWhereInput[]
    OR?: TurnoScalarWhereInput[]
    NOT?: TurnoScalarWhereInput | TurnoScalarWhereInput[]
    id?: IntFilter<"Turno"> | number
    dataSolicitacao?: DateTimeFilter<"Turno"> | Date | string
    dataInicio?: DateTimeFilter<"Turno"> | Date | string
    dataFim?: DateTimeNullableFilter<"Turno"> | Date | string | null
    veiculoId?: IntFilter<"Turno"> | number
    equipeId?: IntFilter<"Turno"> | number
    dispositivo?: StringFilter<"Turno"> | string
    kmInicio?: IntFilter<"Turno"> | number
    KmFim?: IntNullableFilter<"Turno"> | number | null
    createdAt?: DateTimeFilter<"Turno"> | Date | string
    createdBy?: StringFilter<"Turno"> | string
    updatedAt?: DateTimeNullableFilter<"Turno"> | Date | string | null
    updatedBy?: StringNullableFilter<"Turno"> | string | null
    deletedAt?: DateTimeNullableFilter<"Turno"> | Date | string | null
    deletedBy?: StringNullableFilter<"Turno"> | string | null
  }

  export type EscalaEquipePeriodoUpsertWithWhereUniqueWithoutEquipeInput = {
    where: EscalaEquipePeriodoWhereUniqueInput
    update: XOR<EscalaEquipePeriodoUpdateWithoutEquipeInput, EscalaEquipePeriodoUncheckedUpdateWithoutEquipeInput>
    create: XOR<EscalaEquipePeriodoCreateWithoutEquipeInput, EscalaEquipePeriodoUncheckedCreateWithoutEquipeInput>
  }

  export type EscalaEquipePeriodoUpdateWithWhereUniqueWithoutEquipeInput = {
    where: EscalaEquipePeriodoWhereUniqueInput
    data: XOR<EscalaEquipePeriodoUpdateWithoutEquipeInput, EscalaEquipePeriodoUncheckedUpdateWithoutEquipeInput>
  }

  export type EscalaEquipePeriodoUpdateManyWithWhereWithoutEquipeInput = {
    where: EscalaEquipePeriodoScalarWhereInput
    data: XOR<EscalaEquipePeriodoUpdateManyMutationInput, EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeInput>
  }

  export type EscalaEquipePeriodoScalarWhereInput = {
    AND?: EscalaEquipePeriodoScalarWhereInput | EscalaEquipePeriodoScalarWhereInput[]
    OR?: EscalaEquipePeriodoScalarWhereInput[]
    NOT?: EscalaEquipePeriodoScalarWhereInput | EscalaEquipePeriodoScalarWhereInput[]
    id?: IntFilter<"EscalaEquipePeriodo"> | number
    equipeId?: IntFilter<"EscalaEquipePeriodo"> | number
    periodoInicio?: DateTimeFilter<"EscalaEquipePeriodo"> | Date | string
    periodoFim?: DateTimeFilter<"EscalaEquipePeriodo"> | Date | string
    tipoEscalaId?: IntFilter<"EscalaEquipePeriodo"> | number
    status?: EnumStatusEscalaEquipePeriodoFilter<"EscalaEquipePeriodo"> | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFilter<"EscalaEquipePeriodo"> | number
    observacoes?: StringNullableFilter<"EscalaEquipePeriodo"> | string | null
    createdAt?: DateTimeFilter<"EscalaEquipePeriodo"> | Date | string
    createdBy?: StringFilter<"EscalaEquipePeriodo"> | string
    updatedAt?: DateTimeNullableFilter<"EscalaEquipePeriodo"> | Date | string | null
    updatedBy?: StringNullableFilter<"EscalaEquipePeriodo"> | string | null
    deletedAt?: DateTimeNullableFilter<"EscalaEquipePeriodo"> | Date | string | null
    deletedBy?: StringNullableFilter<"EscalaEquipePeriodo"> | string | null
  }

  export type EquipeHorarioVigenciaUpsertWithWhereUniqueWithoutEquipeInput = {
    where: EquipeHorarioVigenciaWhereUniqueInput
    update: XOR<EquipeHorarioVigenciaUpdateWithoutEquipeInput, EquipeHorarioVigenciaUncheckedUpdateWithoutEquipeInput>
    create: XOR<EquipeHorarioVigenciaCreateWithoutEquipeInput, EquipeHorarioVigenciaUncheckedCreateWithoutEquipeInput>
  }

  export type EquipeHorarioVigenciaUpdateWithWhereUniqueWithoutEquipeInput = {
    where: EquipeHorarioVigenciaWhereUniqueInput
    data: XOR<EquipeHorarioVigenciaUpdateWithoutEquipeInput, EquipeHorarioVigenciaUncheckedUpdateWithoutEquipeInput>
  }

  export type EquipeHorarioVigenciaUpdateManyWithWhereWithoutEquipeInput = {
    where: EquipeHorarioVigenciaScalarWhereInput
    data: XOR<EquipeHorarioVigenciaUpdateManyMutationInput, EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeInput>
  }

  export type EquipeHorarioVigenciaScalarWhereInput = {
    AND?: EquipeHorarioVigenciaScalarWhereInput | EquipeHorarioVigenciaScalarWhereInput[]
    OR?: EquipeHorarioVigenciaScalarWhereInput[]
    NOT?: EquipeHorarioVigenciaScalarWhereInput | EquipeHorarioVigenciaScalarWhereInput[]
    id?: IntFilter<"EquipeHorarioVigencia"> | number
    equipeId?: IntFilter<"EquipeHorarioVigencia"> | number
    inicioTurnoHora?: StringFilter<"EquipeHorarioVigencia"> | string
    duracaoHoras?: DecimalFilter<"EquipeHorarioVigencia"> | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeFilter<"EquipeHorarioVigencia"> | Date | string
    vigenciaFim?: DateTimeNullableFilter<"EquipeHorarioVigencia"> | Date | string | null
    createdAt?: DateTimeFilter<"EquipeHorarioVigencia"> | Date | string
    createdBy?: StringFilter<"EquipeHorarioVigencia"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeHorarioVigencia"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeHorarioVigencia"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeHorarioVigencia"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeHorarioVigencia"> | string | null
  }

  export type EquipeTurnoHistoricoUpsertWithWhereUniqueWithoutEquipeInput = {
    where: EquipeTurnoHistoricoWhereUniqueInput
    update: XOR<EquipeTurnoHistoricoUpdateWithoutEquipeInput, EquipeTurnoHistoricoUncheckedUpdateWithoutEquipeInput>
    create: XOR<EquipeTurnoHistoricoCreateWithoutEquipeInput, EquipeTurnoHistoricoUncheckedCreateWithoutEquipeInput>
  }

  export type EquipeTurnoHistoricoUpdateWithWhereUniqueWithoutEquipeInput = {
    where: EquipeTurnoHistoricoWhereUniqueInput
    data: XOR<EquipeTurnoHistoricoUpdateWithoutEquipeInput, EquipeTurnoHistoricoUncheckedUpdateWithoutEquipeInput>
  }

  export type EquipeTurnoHistoricoUpdateManyWithWhereWithoutEquipeInput = {
    where: EquipeTurnoHistoricoScalarWhereInput
    data: XOR<EquipeTurnoHistoricoUpdateManyMutationInput, EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeInput>
  }

  export type EquipeTurnoHistoricoScalarWhereInput = {
    AND?: EquipeTurnoHistoricoScalarWhereInput | EquipeTurnoHistoricoScalarWhereInput[]
    OR?: EquipeTurnoHistoricoScalarWhereInput[]
    NOT?: EquipeTurnoHistoricoScalarWhereInput | EquipeTurnoHistoricoScalarWhereInput[]
    id?: IntFilter<"EquipeTurnoHistorico"> | number
    equipeId?: IntFilter<"EquipeTurnoHistorico"> | number
    horarioAberturaCatalogoId?: IntNullableFilter<"EquipeTurnoHistorico"> | number | null
    dataInicio?: DateTimeFilter<"EquipeTurnoHistorico"> | Date | string
    dataFim?: DateTimeNullableFilter<"EquipeTurnoHistorico"> | Date | string | null
    inicioTurnoHora?: StringFilter<"EquipeTurnoHistorico"> | string
    duracaoHoras?: DecimalFilter<"EquipeTurnoHistorico"> | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFilter<"EquipeTurnoHistorico"> | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    motivo?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    observacoes?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    createdAt?: DateTimeFilter<"EquipeTurnoHistorico"> | Date | string
    createdBy?: StringFilter<"EquipeTurnoHistorico"> | string
    updatedAt?: DateTimeNullableFilter<"EquipeTurnoHistorico"> | Date | string | null
    updatedBy?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
    deletedAt?: DateTimeNullableFilter<"EquipeTurnoHistorico"> | Date | string | null
    deletedBy?: StringNullableFilter<"EquipeTurnoHistorico"> | string | null
  }

  export type EquipeBaseHistoricoUpsertWithWhereUniqueWithoutEquipeInput = {
    where: EquipeBaseHistoricoWhereUniqueInput
    update: XOR<EquipeBaseHistoricoUpdateWithoutEquipeInput, EquipeBaseHistoricoUncheckedUpdateWithoutEquipeInput>
    create: XOR<EquipeBaseHistoricoCreateWithoutEquipeInput, EquipeBaseHistoricoUncheckedCreateWithoutEquipeInput>
  }

  export type EquipeBaseHistoricoUpdateWithWhereUniqueWithoutEquipeInput = {
    where: EquipeBaseHistoricoWhereUniqueInput
    data: XOR<EquipeBaseHistoricoUpdateWithoutEquipeInput, EquipeBaseHistoricoUncheckedUpdateWithoutEquipeInput>
  }

  export type EquipeBaseHistoricoUpdateManyWithWhereWithoutEquipeInput = {
    where: EquipeBaseHistoricoScalarWhereInput
    data: XOR<EquipeBaseHistoricoUpdateManyMutationInput, EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeInput>
  }

  export type EquipeCreateWithoutEquipeSupervisorInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEquipe: TipoEquipeCreateNestedOneWithoutEquipeInput
    contrato: ContratoCreateNestedOneWithoutEquipeInput
    Turno?: TurnoCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutEquipeInput
  }

  export type EquipeUncheckedCreateWithoutEquipeSupervisorInput = {
    id?: number
    nome: string
    tipoEquipeId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Turno?: TurnoUncheckedCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutEquipeInput
  }

  export type EquipeCreateOrConnectWithoutEquipeSupervisorInput = {
    where: EquipeWhereUniqueInput
    create: XOR<EquipeCreateWithoutEquipeSupervisorInput, EquipeUncheckedCreateWithoutEquipeSupervisorInput>
  }

  export type SupervisorCreateWithoutEquipeSupervisorInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutSupervisorInput
  }

  export type SupervisorUncheckedCreateWithoutEquipeSupervisorInput = {
    id?: number
    nome: string
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type SupervisorCreateOrConnectWithoutEquipeSupervisorInput = {
    where: SupervisorWhereUniqueInput
    create: XOR<SupervisorCreateWithoutEquipeSupervisorInput, SupervisorUncheckedCreateWithoutEquipeSupervisorInput>
  }

  export type EquipeUpsertWithoutEquipeSupervisorInput = {
    update: XOR<EquipeUpdateWithoutEquipeSupervisorInput, EquipeUncheckedUpdateWithoutEquipeSupervisorInput>
    create: XOR<EquipeCreateWithoutEquipeSupervisorInput, EquipeUncheckedCreateWithoutEquipeSupervisorInput>
    where?: EquipeWhereInput
  }

  export type EquipeUpdateToOneWithWhereWithoutEquipeSupervisorInput = {
    where?: EquipeWhereInput
    data: XOR<EquipeUpdateWithoutEquipeSupervisorInput, EquipeUncheckedUpdateWithoutEquipeSupervisorInput>
  }

  export type EquipeUpdateWithoutEquipeSupervisorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutEquipeNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEquipeNestedInput
    Turno?: TurnoUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateWithoutEquipeSupervisorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Turno?: TurnoUncheckedUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
  }

  export type SupervisorUpsertWithoutEquipeSupervisorInput = {
    update: XOR<SupervisorUpdateWithoutEquipeSupervisorInput, SupervisorUncheckedUpdateWithoutEquipeSupervisorInput>
    create: XOR<SupervisorCreateWithoutEquipeSupervisorInput, SupervisorUncheckedCreateWithoutEquipeSupervisorInput>
    where?: SupervisorWhereInput
  }

  export type SupervisorUpdateToOneWithWhereWithoutEquipeSupervisorInput = {
    where?: SupervisorWhereInput
    data: XOR<SupervisorUpdateWithoutEquipeSupervisorInput, SupervisorUncheckedUpdateWithoutEquipeSupervisorInput>
  }

  export type SupervisorUpdateWithoutEquipeSupervisorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutSupervisorNestedInput
  }

  export type SupervisorUncheckedUpdateWithoutEquipeSupervisorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput = {
    posicao: number
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput = {
    id?: number
    posicao: number
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaCicloPosicaoCreateOrConnectWithoutTipoEscalaInput = {
    where: TipoEscalaCicloPosicaoWhereUniqueInput
    create: XOR<TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput, TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput>
  }

  export type TipoEscalaCicloPosicaoCreateManyTipoEscalaInputEnvelope = {
    data: TipoEscalaCicloPosicaoCreateManyTipoEscalaInput | TipoEscalaCicloPosicaoCreateManyTipoEscalaInput[]
    skipDuplicates?: boolean
  }

  export type TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput = {
    semanaIndex: number
    dia: $Enums.DiaSemana
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput = {
    id?: number
    semanaIndex: number
    dia: $Enums.DiaSemana
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaSemanaMascaraCreateOrConnectWithoutTipoEscalaInput = {
    where: TipoEscalaSemanaMascaraWhereUniqueInput
    create: XOR<TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput, TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput>
  }

  export type TipoEscalaSemanaMascaraCreateManyTipoEscalaInputEnvelope = {
    data: TipoEscalaSemanaMascaraCreateManyTipoEscalaInput | TipoEscalaSemanaMascaraCreateManyTipoEscalaInput[]
    skipDuplicates?: boolean
  }

  export type EscalaEquipePeriodoCreateWithoutTipoEscalaInput = {
    periodoInicio: Date | string
    periodoFim: Date | string
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutEscalaEquipePeriodoInput
    Slots?: SlotEscalaCreateNestedManyWithoutEscalaEquipePeriodoInput
  }

  export type EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput = {
    id?: number
    equipeId: number
    periodoInicio: Date | string
    periodoFim: Date | string
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Slots?: SlotEscalaUncheckedCreateNestedManyWithoutEscalaEquipePeriodoInput
  }

  export type EscalaEquipePeriodoCreateOrConnectWithoutTipoEscalaInput = {
    where: EscalaEquipePeriodoWhereUniqueInput
    create: XOR<EscalaEquipePeriodoCreateWithoutTipoEscalaInput, EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput>
  }

  export type EscalaEquipePeriodoCreateManyTipoEscalaInputEnvelope = {
    data: EscalaEquipePeriodoCreateManyTipoEscalaInput | EscalaEquipePeriodoCreateManyTipoEscalaInput[]
    skipDuplicates?: boolean
  }

  export type TipoEscalaCicloPosicaoUpsertWithWhereUniqueWithoutTipoEscalaInput = {
    where: TipoEscalaCicloPosicaoWhereUniqueInput
    update: XOR<TipoEscalaCicloPosicaoUpdateWithoutTipoEscalaInput, TipoEscalaCicloPosicaoUncheckedUpdateWithoutTipoEscalaInput>
    create: XOR<TipoEscalaCicloPosicaoCreateWithoutTipoEscalaInput, TipoEscalaCicloPosicaoUncheckedCreateWithoutTipoEscalaInput>
  }

  export type TipoEscalaCicloPosicaoUpdateWithWhereUniqueWithoutTipoEscalaInput = {
    where: TipoEscalaCicloPosicaoWhereUniqueInput
    data: XOR<TipoEscalaCicloPosicaoUpdateWithoutTipoEscalaInput, TipoEscalaCicloPosicaoUncheckedUpdateWithoutTipoEscalaInput>
  }

  export type TipoEscalaCicloPosicaoUpdateManyWithWhereWithoutTipoEscalaInput = {
    where: TipoEscalaCicloPosicaoScalarWhereInput
    data: XOR<TipoEscalaCicloPosicaoUpdateManyMutationInput, TipoEscalaCicloPosicaoUncheckedUpdateManyWithoutTipoEscalaInput>
  }

  export type TipoEscalaCicloPosicaoScalarWhereInput = {
    AND?: TipoEscalaCicloPosicaoScalarWhereInput | TipoEscalaCicloPosicaoScalarWhereInput[]
    OR?: TipoEscalaCicloPosicaoScalarWhereInput[]
    NOT?: TipoEscalaCicloPosicaoScalarWhereInput | TipoEscalaCicloPosicaoScalarWhereInput[]
    id?: IntFilter<"TipoEscalaCicloPosicao"> | number
    tipoEscalaId?: IntFilter<"TipoEscalaCicloPosicao"> | number
    posicao?: IntFilter<"TipoEscalaCicloPosicao"> | number
    status?: EnumStatusTrabalhoFilter<"TipoEscalaCicloPosicao"> | $Enums.StatusTrabalho
    createdAt?: DateTimeFilter<"TipoEscalaCicloPosicao"> | Date | string
    createdBy?: StringFilter<"TipoEscalaCicloPosicao"> | string
    updatedAt?: DateTimeNullableFilter<"TipoEscalaCicloPosicao"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoEscalaCicloPosicao"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoEscalaCicloPosicao"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoEscalaCicloPosicao"> | string | null
  }

  export type TipoEscalaSemanaMascaraUpsertWithWhereUniqueWithoutTipoEscalaInput = {
    where: TipoEscalaSemanaMascaraWhereUniqueInput
    update: XOR<TipoEscalaSemanaMascaraUpdateWithoutTipoEscalaInput, TipoEscalaSemanaMascaraUncheckedUpdateWithoutTipoEscalaInput>
    create: XOR<TipoEscalaSemanaMascaraCreateWithoutTipoEscalaInput, TipoEscalaSemanaMascaraUncheckedCreateWithoutTipoEscalaInput>
  }

  export type TipoEscalaSemanaMascaraUpdateWithWhereUniqueWithoutTipoEscalaInput = {
    where: TipoEscalaSemanaMascaraWhereUniqueInput
    data: XOR<TipoEscalaSemanaMascaraUpdateWithoutTipoEscalaInput, TipoEscalaSemanaMascaraUncheckedUpdateWithoutTipoEscalaInput>
  }

  export type TipoEscalaSemanaMascaraUpdateManyWithWhereWithoutTipoEscalaInput = {
    where: TipoEscalaSemanaMascaraScalarWhereInput
    data: XOR<TipoEscalaSemanaMascaraUpdateManyMutationInput, TipoEscalaSemanaMascaraUncheckedUpdateManyWithoutTipoEscalaInput>
  }

  export type TipoEscalaSemanaMascaraScalarWhereInput = {
    AND?: TipoEscalaSemanaMascaraScalarWhereInput | TipoEscalaSemanaMascaraScalarWhereInput[]
    OR?: TipoEscalaSemanaMascaraScalarWhereInput[]
    NOT?: TipoEscalaSemanaMascaraScalarWhereInput | TipoEscalaSemanaMascaraScalarWhereInput[]
    id?: IntFilter<"TipoEscalaSemanaMascara"> | number
    tipoEscalaId?: IntFilter<"TipoEscalaSemanaMascara"> | number
    semanaIndex?: IntFilter<"TipoEscalaSemanaMascara"> | number
    dia?: EnumDiaSemanaFilter<"TipoEscalaSemanaMascara"> | $Enums.DiaSemana
    status?: EnumStatusTrabalhoFilter<"TipoEscalaSemanaMascara"> | $Enums.StatusTrabalho
    createdAt?: DateTimeFilter<"TipoEscalaSemanaMascara"> | Date | string
    createdBy?: StringFilter<"TipoEscalaSemanaMascara"> | string
    updatedAt?: DateTimeNullableFilter<"TipoEscalaSemanaMascara"> | Date | string | null
    updatedBy?: StringNullableFilter<"TipoEscalaSemanaMascara"> | string | null
    deletedAt?: DateTimeNullableFilter<"TipoEscalaSemanaMascara"> | Date | string | null
    deletedBy?: StringNullableFilter<"TipoEscalaSemanaMascara"> | string | null
  }

  export type EscalaEquipePeriodoUpsertWithWhereUniqueWithoutTipoEscalaInput = {
    where: EscalaEquipePeriodoWhereUniqueInput
    update: XOR<EscalaEquipePeriodoUpdateWithoutTipoEscalaInput, EscalaEquipePeriodoUncheckedUpdateWithoutTipoEscalaInput>
    create: XOR<EscalaEquipePeriodoCreateWithoutTipoEscalaInput, EscalaEquipePeriodoUncheckedCreateWithoutTipoEscalaInput>
  }

  export type EscalaEquipePeriodoUpdateWithWhereUniqueWithoutTipoEscalaInput = {
    where: EscalaEquipePeriodoWhereUniqueInput
    data: XOR<EscalaEquipePeriodoUpdateWithoutTipoEscalaInput, EscalaEquipePeriodoUncheckedUpdateWithoutTipoEscalaInput>
  }

  export type EscalaEquipePeriodoUpdateManyWithWhereWithoutTipoEscalaInput = {
    where: EscalaEquipePeriodoScalarWhereInput
    data: XOR<EscalaEquipePeriodoUpdateManyMutationInput, EscalaEquipePeriodoUncheckedUpdateManyWithoutTipoEscalaInput>
  }

  export type TipoEscalaCreateWithoutCicloPosicoesInput = {
    nome: string
    modoRepeticao: $Enums.ModoRepeticao
    cicloDias?: number | null
    periodicidadeSemanas?: number | null
    eletricistasPorTurma?: number | null
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    SemanaMascaras?: TipoEscalaSemanaMascaraCreateNestedManyWithoutTipoEscalaInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutTipoEscalaInput
  }

  export type TipoEscalaUncheckedCreateWithoutCicloPosicoesInput = {
    id?: number
    nome: string
    modoRepeticao: $Enums.ModoRepeticao
    cicloDias?: number | null
    periodicidadeSemanas?: number | null
    eletricistasPorTurma?: number | null
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    SemanaMascaras?: TipoEscalaSemanaMascaraUncheckedCreateNestedManyWithoutTipoEscalaInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutTipoEscalaInput
  }

  export type TipoEscalaCreateOrConnectWithoutCicloPosicoesInput = {
    where: TipoEscalaWhereUniqueInput
    create: XOR<TipoEscalaCreateWithoutCicloPosicoesInput, TipoEscalaUncheckedCreateWithoutCicloPosicoesInput>
  }

  export type TipoEscalaUpsertWithoutCicloPosicoesInput = {
    update: XOR<TipoEscalaUpdateWithoutCicloPosicoesInput, TipoEscalaUncheckedUpdateWithoutCicloPosicoesInput>
    create: XOR<TipoEscalaCreateWithoutCicloPosicoesInput, TipoEscalaUncheckedCreateWithoutCicloPosicoesInput>
    where?: TipoEscalaWhereInput
  }

  export type TipoEscalaUpdateToOneWithWhereWithoutCicloPosicoesInput = {
    where?: TipoEscalaWhereInput
    data: XOR<TipoEscalaUpdateWithoutCicloPosicoesInput, TipoEscalaUncheckedUpdateWithoutCicloPosicoesInput>
  }

  export type TipoEscalaUpdateWithoutCicloPosicoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    modoRepeticao?: EnumModoRepeticaoFieldUpdateOperationsInput | $Enums.ModoRepeticao
    cicloDias?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidadeSemanas?: NullableIntFieldUpdateOperationsInput | number | null
    eletricistasPorTurma?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    SemanaMascaras?: TipoEscalaSemanaMascaraUpdateManyWithoutTipoEscalaNestedInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutTipoEscalaNestedInput
  }

  export type TipoEscalaUncheckedUpdateWithoutCicloPosicoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    modoRepeticao?: EnumModoRepeticaoFieldUpdateOperationsInput | $Enums.ModoRepeticao
    cicloDias?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidadeSemanas?: NullableIntFieldUpdateOperationsInput | number | null
    eletricistasPorTurma?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    SemanaMascaras?: TipoEscalaSemanaMascaraUncheckedUpdateManyWithoutTipoEscalaNestedInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutTipoEscalaNestedInput
  }

  export type TipoEscalaCreateWithoutSemanaMascarasInput = {
    nome: string
    modoRepeticao: $Enums.ModoRepeticao
    cicloDias?: number | null
    periodicidadeSemanas?: number | null
    eletricistasPorTurma?: number | null
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoCreateNestedManyWithoutTipoEscalaInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutTipoEscalaInput
  }

  export type TipoEscalaUncheckedCreateWithoutSemanaMascarasInput = {
    id?: number
    nome: string
    modoRepeticao: $Enums.ModoRepeticao
    cicloDias?: number | null
    periodicidadeSemanas?: number | null
    eletricistasPorTurma?: number | null
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoUncheckedCreateNestedManyWithoutTipoEscalaInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutTipoEscalaInput
  }

  export type TipoEscalaCreateOrConnectWithoutSemanaMascarasInput = {
    where: TipoEscalaWhereUniqueInput
    create: XOR<TipoEscalaCreateWithoutSemanaMascarasInput, TipoEscalaUncheckedCreateWithoutSemanaMascarasInput>
  }

  export type TipoEscalaUpsertWithoutSemanaMascarasInput = {
    update: XOR<TipoEscalaUpdateWithoutSemanaMascarasInput, TipoEscalaUncheckedUpdateWithoutSemanaMascarasInput>
    create: XOR<TipoEscalaCreateWithoutSemanaMascarasInput, TipoEscalaUncheckedCreateWithoutSemanaMascarasInput>
    where?: TipoEscalaWhereInput
  }

  export type TipoEscalaUpdateToOneWithWhereWithoutSemanaMascarasInput = {
    where?: TipoEscalaWhereInput
    data: XOR<TipoEscalaUpdateWithoutSemanaMascarasInput, TipoEscalaUncheckedUpdateWithoutSemanaMascarasInput>
  }

  export type TipoEscalaUpdateWithoutSemanaMascarasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    modoRepeticao?: EnumModoRepeticaoFieldUpdateOperationsInput | $Enums.ModoRepeticao
    cicloDias?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidadeSemanas?: NullableIntFieldUpdateOperationsInput | number | null
    eletricistasPorTurma?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoUpdateManyWithoutTipoEscalaNestedInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutTipoEscalaNestedInput
  }

  export type TipoEscalaUncheckedUpdateWithoutSemanaMascarasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    modoRepeticao?: EnumModoRepeticaoFieldUpdateOperationsInput | $Enums.ModoRepeticao
    cicloDias?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidadeSemanas?: NullableIntFieldUpdateOperationsInput | number | null
    eletricistasPorTurma?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoUncheckedUpdateManyWithoutTipoEscalaNestedInput
    EscalasEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutTipoEscalaNestedInput
  }

  export type EquipeCreateWithoutEscalaEquipePeriodoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEquipe: TipoEquipeCreateNestedOneWithoutEquipeInput
    contrato: ContratoCreateNestedOneWithoutEquipeInput
    EquipeSupervisor?: EquipeSupervisorCreateNestedManyWithoutEquipeInput
    Turno?: TurnoCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutEquipeInput
  }

  export type EquipeUncheckedCreateWithoutEscalaEquipePeriodoInput = {
    id?: number
    nome: string
    tipoEquipeId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedCreateNestedManyWithoutEquipeInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutEquipeInput
  }

  export type EquipeCreateOrConnectWithoutEscalaEquipePeriodoInput = {
    where: EquipeWhereUniqueInput
    create: XOR<EquipeCreateWithoutEscalaEquipePeriodoInput, EquipeUncheckedCreateWithoutEscalaEquipePeriodoInput>
  }

  export type TipoEscalaCreateWithoutEscalasEquipePeriodoInput = {
    nome: string
    modoRepeticao: $Enums.ModoRepeticao
    cicloDias?: number | null
    periodicidadeSemanas?: number | null
    eletricistasPorTurma?: number | null
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoCreateNestedManyWithoutTipoEscalaInput
    SemanaMascaras?: TipoEscalaSemanaMascaraCreateNestedManyWithoutTipoEscalaInput
  }

  export type TipoEscalaUncheckedCreateWithoutEscalasEquipePeriodoInput = {
    id?: number
    nome: string
    modoRepeticao: $Enums.ModoRepeticao
    cicloDias?: number | null
    periodicidadeSemanas?: number | null
    eletricistasPorTurma?: number | null
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoUncheckedCreateNestedManyWithoutTipoEscalaInput
    SemanaMascaras?: TipoEscalaSemanaMascaraUncheckedCreateNestedManyWithoutTipoEscalaInput
  }

  export type TipoEscalaCreateOrConnectWithoutEscalasEquipePeriodoInput = {
    where: TipoEscalaWhereUniqueInput
    create: XOR<TipoEscalaCreateWithoutEscalasEquipePeriodoInput, TipoEscalaUncheckedCreateWithoutEscalasEquipePeriodoInput>
  }

  export type SlotEscalaCreateWithoutEscalaEquipePeriodoInput = {
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    eletricista: EletricistaCreateNestedOneWithoutSlotEscalaInput
    Coberturas?: EventoCoberturaCreateNestedManyWithoutSlotEscalaInput
  }

  export type SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput = {
    id?: number
    eletricistaId: number
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Coberturas?: EventoCoberturaUncheckedCreateNestedManyWithoutSlotEscalaInput
  }

  export type SlotEscalaCreateOrConnectWithoutEscalaEquipePeriodoInput = {
    where: SlotEscalaWhereUniqueInput
    create: XOR<SlotEscalaCreateWithoutEscalaEquipePeriodoInput, SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput>
  }

  export type SlotEscalaCreateManyEscalaEquipePeriodoInputEnvelope = {
    data: SlotEscalaCreateManyEscalaEquipePeriodoInput | SlotEscalaCreateManyEscalaEquipePeriodoInput[]
    skipDuplicates?: boolean
  }

  export type EquipeUpsertWithoutEscalaEquipePeriodoInput = {
    update: XOR<EquipeUpdateWithoutEscalaEquipePeriodoInput, EquipeUncheckedUpdateWithoutEscalaEquipePeriodoInput>
    create: XOR<EquipeCreateWithoutEscalaEquipePeriodoInput, EquipeUncheckedCreateWithoutEscalaEquipePeriodoInput>
    where?: EquipeWhereInput
  }

  export type EquipeUpdateToOneWithWhereWithoutEscalaEquipePeriodoInput = {
    where?: EquipeWhereInput
    data: XOR<EquipeUpdateWithoutEscalaEquipePeriodoInput, EquipeUncheckedUpdateWithoutEscalaEquipePeriodoInput>
  }

  export type EquipeUpdateWithoutEscalaEquipePeriodoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutEquipeNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEquipeNestedInput
    EquipeSupervisor?: EquipeSupervisorUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateWithoutEscalaEquipePeriodoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
  }

  export type TipoEscalaUpsertWithoutEscalasEquipePeriodoInput = {
    update: XOR<TipoEscalaUpdateWithoutEscalasEquipePeriodoInput, TipoEscalaUncheckedUpdateWithoutEscalasEquipePeriodoInput>
    create: XOR<TipoEscalaCreateWithoutEscalasEquipePeriodoInput, TipoEscalaUncheckedCreateWithoutEscalasEquipePeriodoInput>
    where?: TipoEscalaWhereInput
  }

  export type TipoEscalaUpdateToOneWithWhereWithoutEscalasEquipePeriodoInput = {
    where?: TipoEscalaWhereInput
    data: XOR<TipoEscalaUpdateWithoutEscalasEquipePeriodoInput, TipoEscalaUncheckedUpdateWithoutEscalasEquipePeriodoInput>
  }

  export type TipoEscalaUpdateWithoutEscalasEquipePeriodoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    modoRepeticao?: EnumModoRepeticaoFieldUpdateOperationsInput | $Enums.ModoRepeticao
    cicloDias?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidadeSemanas?: NullableIntFieldUpdateOperationsInput | number | null
    eletricistasPorTurma?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoUpdateManyWithoutTipoEscalaNestedInput
    SemanaMascaras?: TipoEscalaSemanaMascaraUpdateManyWithoutTipoEscalaNestedInput
  }

  export type TipoEscalaUncheckedUpdateWithoutEscalasEquipePeriodoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    modoRepeticao?: EnumModoRepeticaoFieldUpdateOperationsInput | $Enums.ModoRepeticao
    cicloDias?: NullableIntFieldUpdateOperationsInput | number | null
    periodicidadeSemanas?: NullableIntFieldUpdateOperationsInput | number | null
    eletricistasPorTurma?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    CicloPosicoes?: TipoEscalaCicloPosicaoUncheckedUpdateManyWithoutTipoEscalaNestedInput
    SemanaMascaras?: TipoEscalaSemanaMascaraUncheckedUpdateManyWithoutTipoEscalaNestedInput
  }

  export type SlotEscalaUpsertWithWhereUniqueWithoutEscalaEquipePeriodoInput = {
    where: SlotEscalaWhereUniqueInput
    update: XOR<SlotEscalaUpdateWithoutEscalaEquipePeriodoInput, SlotEscalaUncheckedUpdateWithoutEscalaEquipePeriodoInput>
    create: XOR<SlotEscalaCreateWithoutEscalaEquipePeriodoInput, SlotEscalaUncheckedCreateWithoutEscalaEquipePeriodoInput>
  }

  export type SlotEscalaUpdateWithWhereUniqueWithoutEscalaEquipePeriodoInput = {
    where: SlotEscalaWhereUniqueInput
    data: XOR<SlotEscalaUpdateWithoutEscalaEquipePeriodoInput, SlotEscalaUncheckedUpdateWithoutEscalaEquipePeriodoInput>
  }

  export type SlotEscalaUpdateManyWithWhereWithoutEscalaEquipePeriodoInput = {
    where: SlotEscalaScalarWhereInput
    data: XOR<SlotEscalaUpdateManyMutationInput, SlotEscalaUncheckedUpdateManyWithoutEscalaEquipePeriodoInput>
  }

  export type EscalaEquipePeriodoCreateWithoutSlotsInput = {
    periodoInicio: Date | string
    periodoFim: Date | string
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutEscalaEquipePeriodoInput
    tipoEscala: TipoEscalaCreateNestedOneWithoutEscalasEquipePeriodoInput
  }

  export type EscalaEquipePeriodoUncheckedCreateWithoutSlotsInput = {
    id?: number
    equipeId: number
    periodoInicio: Date | string
    periodoFim: Date | string
    tipoEscalaId: number
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EscalaEquipePeriodoCreateOrConnectWithoutSlotsInput = {
    where: EscalaEquipePeriodoWhereUniqueInput
    create: XOR<EscalaEquipePeriodoCreateWithoutSlotsInput, EscalaEquipePeriodoUncheckedCreateWithoutSlotsInput>
  }

  export type EletricistaCreateWithoutSlotEscalaInput = {
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    cargo: CargoCreateNestedOneWithoutEletricistaInput
    contrato: ContratoCreateNestedOneWithoutEletricistaInput
    TurnoEletricistas?: TurnoEletricistaCreateNestedManyWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaCreateNestedManyWithoutEletricistaCobrindoInput
  }

  export type EletricistaUncheckedCreateWithoutSlotEscalaInput = {
    id?: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    cargoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contratoId: number
    TurnoEletricistas?: TurnoEletricistaUncheckedCreateNestedManyWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaUncheckedCreateNestedManyWithoutEletricistaCobrindoInput
  }

  export type EletricistaCreateOrConnectWithoutSlotEscalaInput = {
    where: EletricistaWhereUniqueInput
    create: XOR<EletricistaCreateWithoutSlotEscalaInput, EletricistaUncheckedCreateWithoutSlotEscalaInput>
  }

  export type EventoCoberturaCreateWithoutSlotEscalaInput = {
    tipo: $Enums.EventoCoberturaTipo
    resultado: $Enums.EventoCoberturaResultado
    justificativa?: string | null
    registradoEm?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    eletricistaCobrindo?: EletricistaCreateNestedOneWithoutEventoCoberturaInput
  }

  export type EventoCoberturaUncheckedCreateWithoutSlotEscalaInput = {
    id?: number
    eletricistaCobrindoId?: number | null
    tipo: $Enums.EventoCoberturaTipo
    resultado: $Enums.EventoCoberturaResultado
    justificativa?: string | null
    registradoEm?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EventoCoberturaCreateOrConnectWithoutSlotEscalaInput = {
    where: EventoCoberturaWhereUniqueInput
    create: XOR<EventoCoberturaCreateWithoutSlotEscalaInput, EventoCoberturaUncheckedCreateWithoutSlotEscalaInput>
  }

  export type EventoCoberturaCreateManySlotEscalaInputEnvelope = {
    data: EventoCoberturaCreateManySlotEscalaInput | EventoCoberturaCreateManySlotEscalaInput[]
    skipDuplicates?: boolean
  }

  export type EscalaEquipePeriodoUpsertWithoutSlotsInput = {
    update: XOR<EscalaEquipePeriodoUpdateWithoutSlotsInput, EscalaEquipePeriodoUncheckedUpdateWithoutSlotsInput>
    create: XOR<EscalaEquipePeriodoCreateWithoutSlotsInput, EscalaEquipePeriodoUncheckedCreateWithoutSlotsInput>
    where?: EscalaEquipePeriodoWhereInput
  }

  export type EscalaEquipePeriodoUpdateToOneWithWhereWithoutSlotsInput = {
    where?: EscalaEquipePeriodoWhereInput
    data: XOR<EscalaEquipePeriodoUpdateWithoutSlotsInput, EscalaEquipePeriodoUncheckedUpdateWithoutSlotsInput>
  }

  export type EscalaEquipePeriodoUpdateWithoutSlotsInput = {
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutEscalaEquipePeriodoNestedInput
    tipoEscala?: TipoEscalaUpdateOneRequiredWithoutEscalasEquipePeriodoNestedInput
  }

  export type EscalaEquipePeriodoUncheckedUpdateWithoutSlotsInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoEscalaId?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaUpsertWithoutSlotEscalaInput = {
    update: XOR<EletricistaUpdateWithoutSlotEscalaInput, EletricistaUncheckedUpdateWithoutSlotEscalaInput>
    create: XOR<EletricistaCreateWithoutSlotEscalaInput, EletricistaUncheckedCreateWithoutSlotEscalaInput>
    where?: EletricistaWhereInput
  }

  export type EletricistaUpdateToOneWithWhereWithoutSlotEscalaInput = {
    where?: EletricistaWhereInput
    data: XOR<EletricistaUpdateWithoutSlotEscalaInput, EletricistaUncheckedUpdateWithoutSlotEscalaInput>
  }

  export type EletricistaUpdateWithoutSlotEscalaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: CargoUpdateOneRequiredWithoutEletricistaNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEletricistaNestedInput
    TurnoEletricistas?: TurnoEletricistaUpdateManyWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUpdateManyWithoutEletricistaCobrindoNestedInput
  }

  export type EletricistaUncheckedUpdateWithoutSlotEscalaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contratoId?: IntFieldUpdateOperationsInput | number
    TurnoEletricistas?: TurnoEletricistaUncheckedUpdateManyWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUncheckedUpdateManyWithoutEletricistaCobrindoNestedInput
  }

  export type EventoCoberturaUpsertWithWhereUniqueWithoutSlotEscalaInput = {
    where: EventoCoberturaWhereUniqueInput
    update: XOR<EventoCoberturaUpdateWithoutSlotEscalaInput, EventoCoberturaUncheckedUpdateWithoutSlotEscalaInput>
    create: XOR<EventoCoberturaCreateWithoutSlotEscalaInput, EventoCoberturaUncheckedCreateWithoutSlotEscalaInput>
  }

  export type EventoCoberturaUpdateWithWhereUniqueWithoutSlotEscalaInput = {
    where: EventoCoberturaWhereUniqueInput
    data: XOR<EventoCoberturaUpdateWithoutSlotEscalaInput, EventoCoberturaUncheckedUpdateWithoutSlotEscalaInput>
  }

  export type EventoCoberturaUpdateManyWithWhereWithoutSlotEscalaInput = {
    where: EventoCoberturaScalarWhereInput
    data: XOR<EventoCoberturaUpdateManyMutationInput, EventoCoberturaUncheckedUpdateManyWithoutSlotEscalaInput>
  }

  export type SlotEscalaCreateWithoutCoberturasInput = {
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    escalaEquipePeriodo: EscalaEquipePeriodoCreateNestedOneWithoutSlotsInput
    eletricista: EletricistaCreateNestedOneWithoutSlotEscalaInput
  }

  export type SlotEscalaUncheckedCreateWithoutCoberturasInput = {
    id?: number
    escalaEquipePeriodoId: number
    eletricistaId: number
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type SlotEscalaCreateOrConnectWithoutCoberturasInput = {
    where: SlotEscalaWhereUniqueInput
    create: XOR<SlotEscalaCreateWithoutCoberturasInput, SlotEscalaUncheckedCreateWithoutCoberturasInput>
  }

  export type EletricistaCreateWithoutEventoCoberturaInput = {
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    cargo: CargoCreateNestedOneWithoutEletricistaInput
    contrato: ContratoCreateNestedOneWithoutEletricistaInput
    TurnoEletricistas?: TurnoEletricistaCreateNestedManyWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoCreateNestedManyWithoutEletricistaInput
    SlotEscala?: SlotEscalaCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaUncheckedCreateWithoutEventoCoberturaInput = {
    id?: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    cargoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contratoId: number
    TurnoEletricistas?: TurnoEletricistaUncheckedCreateNestedManyWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutEletricistaInput
    SlotEscala?: SlotEscalaUncheckedCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaCreateOrConnectWithoutEventoCoberturaInput = {
    where: EletricistaWhereUniqueInput
    create: XOR<EletricistaCreateWithoutEventoCoberturaInput, EletricistaUncheckedCreateWithoutEventoCoberturaInput>
  }

  export type SlotEscalaUpsertWithoutCoberturasInput = {
    update: XOR<SlotEscalaUpdateWithoutCoberturasInput, SlotEscalaUncheckedUpdateWithoutCoberturasInput>
    create: XOR<SlotEscalaCreateWithoutCoberturasInput, SlotEscalaUncheckedCreateWithoutCoberturasInput>
    where?: SlotEscalaWhereInput
  }

  export type SlotEscalaUpdateToOneWithWhereWithoutCoberturasInput = {
    where?: SlotEscalaWhereInput
    data: XOR<SlotEscalaUpdateWithoutCoberturasInput, SlotEscalaUncheckedUpdateWithoutCoberturasInput>
  }

  export type SlotEscalaUpdateWithoutCoberturasInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    escalaEquipePeriodo?: EscalaEquipePeriodoUpdateOneRequiredWithoutSlotsNestedInput
    eletricista?: EletricistaUpdateOneRequiredWithoutSlotEscalaNestedInput
  }

  export type SlotEscalaUncheckedUpdateWithoutCoberturasInput = {
    id?: IntFieldUpdateOperationsInput | number
    escalaEquipePeriodoId?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaUpsertWithoutEventoCoberturaInput = {
    update: XOR<EletricistaUpdateWithoutEventoCoberturaInput, EletricistaUncheckedUpdateWithoutEventoCoberturaInput>
    create: XOR<EletricistaCreateWithoutEventoCoberturaInput, EletricistaUncheckedCreateWithoutEventoCoberturaInput>
    where?: EletricistaWhereInput
  }

  export type EletricistaUpdateToOneWithWhereWithoutEventoCoberturaInput = {
    where?: EletricistaWhereInput
    data: XOR<EletricistaUpdateWithoutEventoCoberturaInput, EletricistaUncheckedUpdateWithoutEventoCoberturaInput>
  }

  export type EletricistaUpdateWithoutEventoCoberturaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: CargoUpdateOneRequiredWithoutEletricistaNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEletricistaNestedInput
    TurnoEletricistas?: TurnoEletricistaUpdateManyWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUpdateManyWithoutEletricistaNestedInput
    SlotEscala?: SlotEscalaUpdateManyWithoutEletricistaNestedInput
  }

  export type EletricistaUncheckedUpdateWithoutEventoCoberturaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contratoId?: IntFieldUpdateOperationsInput | number
    TurnoEletricistas?: TurnoEletricistaUncheckedUpdateManyWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedUpdateManyWithoutEletricistaNestedInput
    SlotEscala?: SlotEscalaUncheckedUpdateManyWithoutEletricistaNestedInput
  }

  export type EquipeCreateWithoutEquipeHorarioVigenciaInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEquipe: TipoEquipeCreateNestedOneWithoutEquipeInput
    contrato: ContratoCreateNestedOneWithoutEquipeInput
    EquipeSupervisor?: EquipeSupervisorCreateNestedManyWithoutEquipeInput
    Turno?: TurnoCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutEquipeInput
  }

  export type EquipeUncheckedCreateWithoutEquipeHorarioVigenciaInput = {
    id?: number
    nome: string
    tipoEquipeId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedCreateNestedManyWithoutEquipeInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutEquipeInput
  }

  export type EquipeCreateOrConnectWithoutEquipeHorarioVigenciaInput = {
    where: EquipeWhereUniqueInput
    create: XOR<EquipeCreateWithoutEquipeHorarioVigenciaInput, EquipeUncheckedCreateWithoutEquipeHorarioVigenciaInput>
  }

  export type EquipeUpsertWithoutEquipeHorarioVigenciaInput = {
    update: XOR<EquipeUpdateWithoutEquipeHorarioVigenciaInput, EquipeUncheckedUpdateWithoutEquipeHorarioVigenciaInput>
    create: XOR<EquipeCreateWithoutEquipeHorarioVigenciaInput, EquipeUncheckedCreateWithoutEquipeHorarioVigenciaInput>
    where?: EquipeWhereInput
  }

  export type EquipeUpdateToOneWithWhereWithoutEquipeHorarioVigenciaInput = {
    where?: EquipeWhereInput
    data: XOR<EquipeUpdateWithoutEquipeHorarioVigenciaInput, EquipeUncheckedUpdateWithoutEquipeHorarioVigenciaInput>
  }

  export type EquipeUpdateWithoutEquipeHorarioVigenciaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutEquipeNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEquipeNestedInput
    EquipeSupervisor?: EquipeSupervisorUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateWithoutEquipeHorarioVigenciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    fimTurnoHora?: string | null
    motivo?: string | null
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutEquipeTurnoHistoricoInput
  }

  export type EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput = {
    id?: number
    equipeId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    fimTurnoHora?: string | null
    motivo?: string | null
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeTurnoHistoricoCreateOrConnectWithoutHorarioAberturaCatalogoInput = {
    where: EquipeTurnoHistoricoWhereUniqueInput
    create: XOR<EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput, EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput>
  }

  export type EquipeTurnoHistoricoCreateManyHorarioAberturaCatalogoInputEnvelope = {
    data: EquipeTurnoHistoricoCreateManyHorarioAberturaCatalogoInput | EquipeTurnoHistoricoCreateManyHorarioAberturaCatalogoInput[]
    skipDuplicates?: boolean
  }

  export type EquipeTurnoHistoricoUpsertWithWhereUniqueWithoutHorarioAberturaCatalogoInput = {
    where: EquipeTurnoHistoricoWhereUniqueInput
    update: XOR<EquipeTurnoHistoricoUpdateWithoutHorarioAberturaCatalogoInput, EquipeTurnoHistoricoUncheckedUpdateWithoutHorarioAberturaCatalogoInput>
    create: XOR<EquipeTurnoHistoricoCreateWithoutHorarioAberturaCatalogoInput, EquipeTurnoHistoricoUncheckedCreateWithoutHorarioAberturaCatalogoInput>
  }

  export type EquipeTurnoHistoricoUpdateWithWhereUniqueWithoutHorarioAberturaCatalogoInput = {
    where: EquipeTurnoHistoricoWhereUniqueInput
    data: XOR<EquipeTurnoHistoricoUpdateWithoutHorarioAberturaCatalogoInput, EquipeTurnoHistoricoUncheckedUpdateWithoutHorarioAberturaCatalogoInput>
  }

  export type EquipeTurnoHistoricoUpdateManyWithWhereWithoutHorarioAberturaCatalogoInput = {
    where: EquipeTurnoHistoricoScalarWhereInput
    data: XOR<EquipeTurnoHistoricoUpdateManyMutationInput, EquipeTurnoHistoricoUncheckedUpdateManyWithoutHorarioAberturaCatalogoInput>
  }

  export type EquipeCreateWithoutEquipeTurnoHistoricoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEquipe: TipoEquipeCreateNestedOneWithoutEquipeInput
    contrato: ContratoCreateNestedOneWithoutEquipeInput
    EquipeSupervisor?: EquipeSupervisorCreateNestedManyWithoutEquipeInput
    Turno?: TurnoCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutEquipeInput
  }

  export type EquipeUncheckedCreateWithoutEquipeTurnoHistoricoInput = {
    id?: number
    nome: string
    tipoEquipeId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedCreateNestedManyWithoutEquipeInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutEquipeInput
  }

  export type EquipeCreateOrConnectWithoutEquipeTurnoHistoricoInput = {
    where: EquipeWhereUniqueInput
    create: XOR<EquipeCreateWithoutEquipeTurnoHistoricoInput, EquipeUncheckedCreateWithoutEquipeTurnoHistoricoInput>
  }

  export type HorarioAberturaCatalogoCreateWithoutHistoricosInput = {
    nome: string
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type HorarioAberturaCatalogoUncheckedCreateWithoutHistoricosInput = {
    id?: number
    nome: string
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    ativo?: boolean
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type HorarioAberturaCatalogoCreateOrConnectWithoutHistoricosInput = {
    where: HorarioAberturaCatalogoWhereUniqueInput
    create: XOR<HorarioAberturaCatalogoCreateWithoutHistoricosInput, HorarioAberturaCatalogoUncheckedCreateWithoutHistoricosInput>
  }

  export type EquipeUpsertWithoutEquipeTurnoHistoricoInput = {
    update: XOR<EquipeUpdateWithoutEquipeTurnoHistoricoInput, EquipeUncheckedUpdateWithoutEquipeTurnoHistoricoInput>
    create: XOR<EquipeCreateWithoutEquipeTurnoHistoricoInput, EquipeUncheckedCreateWithoutEquipeTurnoHistoricoInput>
    where?: EquipeWhereInput
  }

  export type EquipeUpdateToOneWithWhereWithoutEquipeTurnoHistoricoInput = {
    where?: EquipeWhereInput
    data: XOR<EquipeUpdateWithoutEquipeTurnoHistoricoInput, EquipeUncheckedUpdateWithoutEquipeTurnoHistoricoInput>
  }

  export type EquipeUpdateWithoutEquipeTurnoHistoricoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutEquipeNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEquipeNestedInput
    EquipeSupervisor?: EquipeSupervisorUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateWithoutEquipeTurnoHistoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
  }

  export type HorarioAberturaCatalogoUpsertWithoutHistoricosInput = {
    update: XOR<HorarioAberturaCatalogoUpdateWithoutHistoricosInput, HorarioAberturaCatalogoUncheckedUpdateWithoutHistoricosInput>
    create: XOR<HorarioAberturaCatalogoCreateWithoutHistoricosInput, HorarioAberturaCatalogoUncheckedCreateWithoutHistoricosInput>
    where?: HorarioAberturaCatalogoWhereInput
  }

  export type HorarioAberturaCatalogoUpdateToOneWithWhereWithoutHistoricosInput = {
    where?: HorarioAberturaCatalogoWhereInput
    data: XOR<HorarioAberturaCatalogoUpdateWithoutHistoricosInput, HorarioAberturaCatalogoUncheckedUpdateWithoutHistoricosInput>
  }

  export type HorarioAberturaCatalogoUpdateWithoutHistoricosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HorarioAberturaCatalogoUncheckedUpdateWithoutHistoricosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContratoCreateWithoutSupervisorInput = {
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoCreateNestedManyWithoutContratoInput
    Eletricista?: EletricistaCreateNestedManyWithoutContratoInput
    Equipe?: EquipeCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoCreateNestedManyWithoutContratoInput
    Base?: BaseCreateNestedManyWithoutContratoInput
  }

  export type ContratoUncheckedCreateWithoutSupervisorInput = {
    id?: number
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Veiculo?: VeiculoUncheckedCreateNestedManyWithoutContratoInput
    Eletricista?: EletricistaUncheckedCreateNestedManyWithoutContratoInput
    Equipe?: EquipeUncheckedCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedCreateNestedManyWithoutContratoInput
    Base?: BaseUncheckedCreateNestedManyWithoutContratoInput
  }

  export type ContratoCreateOrConnectWithoutSupervisorInput = {
    where: ContratoWhereUniqueInput
    create: XOR<ContratoCreateWithoutSupervisorInput, ContratoUncheckedCreateWithoutSupervisorInput>
  }

  export type EquipeSupervisorCreateWithoutSupervisorInput = {
    inicio: Date | string
    fim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutEquipeSupervisorInput
  }

  export type EquipeSupervisorUncheckedCreateWithoutSupervisorInput = {
    id?: number
    equipeId: number
    inicio: Date | string
    fim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeSupervisorCreateOrConnectWithoutSupervisorInput = {
    where: EquipeSupervisorWhereUniqueInput
    create: XOR<EquipeSupervisorCreateWithoutSupervisorInput, EquipeSupervisorUncheckedCreateWithoutSupervisorInput>
  }

  export type EquipeSupervisorCreateManySupervisorInputEnvelope = {
    data: EquipeSupervisorCreateManySupervisorInput | EquipeSupervisorCreateManySupervisorInput[]
    skipDuplicates?: boolean
  }

  export type ContratoUpsertWithoutSupervisorInput = {
    update: XOR<ContratoUpdateWithoutSupervisorInput, ContratoUncheckedUpdateWithoutSupervisorInput>
    create: XOR<ContratoCreateWithoutSupervisorInput, ContratoUncheckedCreateWithoutSupervisorInput>
    where?: ContratoWhereInput
  }

  export type ContratoUpdateToOneWithWhereWithoutSupervisorInput = {
    where?: ContratoWhereInput
    data: XOR<ContratoUpdateWithoutSupervisorInput, ContratoUncheckedUpdateWithoutSupervisorInput>
  }

  export type ContratoUpdateWithoutSupervisorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUpdateManyWithoutContratoNestedInput
    Eletricista?: EletricistaUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUpdateManyWithoutContratoNestedInput
    Base?: BaseUpdateManyWithoutContratoNestedInput
  }

  export type ContratoUncheckedUpdateWithoutSupervisorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Veiculo?: VeiculoUncheckedUpdateManyWithoutContratoNestedInput
    Eletricista?: EletricistaUncheckedUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUncheckedUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedUpdateManyWithoutContratoNestedInput
    Base?: BaseUncheckedUpdateManyWithoutContratoNestedInput
  }

  export type EquipeSupervisorUpsertWithWhereUniqueWithoutSupervisorInput = {
    where: EquipeSupervisorWhereUniqueInput
    update: XOR<EquipeSupervisorUpdateWithoutSupervisorInput, EquipeSupervisorUncheckedUpdateWithoutSupervisorInput>
    create: XOR<EquipeSupervisorCreateWithoutSupervisorInput, EquipeSupervisorUncheckedCreateWithoutSupervisorInput>
  }

  export type EquipeSupervisorUpdateWithWhereUniqueWithoutSupervisorInput = {
    where: EquipeSupervisorWhereUniqueInput
    data: XOR<EquipeSupervisorUpdateWithoutSupervisorInput, EquipeSupervisorUncheckedUpdateWithoutSupervisorInput>
  }

  export type EquipeSupervisorUpdateManyWithWhereWithoutSupervisorInput = {
    where: EquipeSupervisorScalarWhereInput
    data: XOR<EquipeSupervisorUpdateManyMutationInput, EquipeSupervisorUncheckedUpdateManyWithoutSupervisorInput>
  }

  export type VeiculoCreateWithoutTurnoInput = {
    placa: string
    modelo: string
    ano: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoVeiculo: TipoVeiculoCreateNestedOneWithoutVeiculoInput
    contrato: ContratoCreateNestedOneWithoutVeiculoInput
    VeiculoOdometro?: VeiculoOdometroCreateNestedManyWithoutVeiculoInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoUncheckedCreateWithoutTurnoInput = {
    id?: number
    placa: string
    modelo: string
    ano: number
    tipoVeiculoId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    VeiculoOdometro?: VeiculoOdometroUncheckedCreateNestedManyWithoutVeiculoInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoCreateOrConnectWithoutTurnoInput = {
    where: VeiculoWhereUniqueInput
    create: XOR<VeiculoCreateWithoutTurnoInput, VeiculoUncheckedCreateWithoutTurnoInput>
  }

  export type EquipeCreateWithoutTurnoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoEquipe: TipoEquipeCreateNestedOneWithoutEquipeInput
    contrato: ContratoCreateNestedOneWithoutEquipeInput
    EquipeSupervisor?: EquipeSupervisorCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutEquipeInput
  }

  export type EquipeUncheckedCreateWithoutTurnoInput = {
    id?: number
    nome: string
    tipoEquipeId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedCreateNestedManyWithoutEquipeInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedCreateNestedManyWithoutEquipeInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedCreateNestedManyWithoutEquipeInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutEquipeInput
  }

  export type EquipeCreateOrConnectWithoutTurnoInput = {
    where: EquipeWhereUniqueInput
    create: XOR<EquipeCreateWithoutTurnoInput, EquipeUncheckedCreateWithoutTurnoInput>
  }

  export type TurnoEletricistaCreateWithoutTurnoInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    eletricista: EletricistaCreateNestedOneWithoutTurnoEletricistasInput
  }

  export type TurnoEletricistaUncheckedCreateWithoutTurnoInput = {
    id?: number
    eletricistaId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TurnoEletricistaCreateOrConnectWithoutTurnoInput = {
    where: TurnoEletricistaWhereUniqueInput
    create: XOR<TurnoEletricistaCreateWithoutTurnoInput, TurnoEletricistaUncheckedCreateWithoutTurnoInput>
  }

  export type TurnoEletricistaCreateManyTurnoInputEnvelope = {
    data: TurnoEletricistaCreateManyTurnoInput | TurnoEletricistaCreateManyTurnoInput[]
    skipDuplicates?: boolean
  }

  export type VeiculoUpsertWithoutTurnoInput = {
    update: XOR<VeiculoUpdateWithoutTurnoInput, VeiculoUncheckedUpdateWithoutTurnoInput>
    create: XOR<VeiculoCreateWithoutTurnoInput, VeiculoUncheckedCreateWithoutTurnoInput>
    where?: VeiculoWhereInput
  }

  export type VeiculoUpdateToOneWithWhereWithoutTurnoInput = {
    where?: VeiculoWhereInput
    data: XOR<VeiculoUpdateWithoutTurnoInput, VeiculoUncheckedUpdateWithoutTurnoInput>
  }

  export type VeiculoUpdateWithoutTurnoInput = {
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoVeiculo?: TipoVeiculoUpdateOneRequiredWithoutVeiculoNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutVeiculoNestedInput
    VeiculoOdometro?: VeiculoOdometroUpdateManyWithoutVeiculoNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUpdateManyWithoutVeiculoNestedInput
  }

  export type VeiculoUncheckedUpdateWithoutTurnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    VeiculoOdometro?: VeiculoOdometroUncheckedUpdateManyWithoutVeiculoNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedUpdateManyWithoutVeiculoNestedInput
  }

  export type EquipeUpsertWithoutTurnoInput = {
    update: XOR<EquipeUpdateWithoutTurnoInput, EquipeUncheckedUpdateWithoutTurnoInput>
    create: XOR<EquipeCreateWithoutTurnoInput, EquipeUncheckedCreateWithoutTurnoInput>
    where?: EquipeWhereInput
  }

  export type EquipeUpdateToOneWithWhereWithoutTurnoInput = {
    where?: EquipeWhereInput
    data: XOR<EquipeUpdateWithoutTurnoInput, EquipeUncheckedUpdateWithoutTurnoInput>
  }

  export type EquipeUpdateWithoutTurnoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutEquipeNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEquipeNestedInput
    EquipeSupervisor?: EquipeSupervisorUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateWithoutTurnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
  }

  export type TurnoEletricistaUpsertWithWhereUniqueWithoutTurnoInput = {
    where: TurnoEletricistaWhereUniqueInput
    update: XOR<TurnoEletricistaUpdateWithoutTurnoInput, TurnoEletricistaUncheckedUpdateWithoutTurnoInput>
    create: XOR<TurnoEletricistaCreateWithoutTurnoInput, TurnoEletricistaUncheckedCreateWithoutTurnoInput>
  }

  export type TurnoEletricistaUpdateWithWhereUniqueWithoutTurnoInput = {
    where: TurnoEletricistaWhereUniqueInput
    data: XOR<TurnoEletricistaUpdateWithoutTurnoInput, TurnoEletricistaUncheckedUpdateWithoutTurnoInput>
  }

  export type TurnoEletricistaUpdateManyWithWhereWithoutTurnoInput = {
    where: TurnoEletricistaScalarWhereInput
    data: XOR<TurnoEletricistaUpdateManyMutationInput, TurnoEletricistaUncheckedUpdateManyWithoutTurnoInput>
  }

  export type TurnoCreateWithoutTurnoEletricistasInput = {
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    veiculo: VeiculoCreateNestedOneWithoutTurnoInput
    equipe: EquipeCreateNestedOneWithoutTurnoInput
  }

  export type TurnoUncheckedCreateWithoutTurnoEletricistasInput = {
    id?: number
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    veiculoId: number
    equipeId: number
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TurnoCreateOrConnectWithoutTurnoEletricistasInput = {
    where: TurnoWhereUniqueInput
    create: XOR<TurnoCreateWithoutTurnoEletricistasInput, TurnoUncheckedCreateWithoutTurnoEletricistasInput>
  }

  export type EletricistaCreateWithoutTurnoEletricistasInput = {
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    cargo: CargoCreateNestedOneWithoutEletricistaInput
    contrato: ContratoCreateNestedOneWithoutEletricistaInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaCreateNestedManyWithoutEletricistaCobrindoInput
    SlotEscala?: SlotEscalaCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaUncheckedCreateWithoutTurnoEletricistasInput = {
    id?: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    cargoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contratoId: number
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutEletricistaInput
    EventoCobertura?: EventoCoberturaUncheckedCreateNestedManyWithoutEletricistaCobrindoInput
    SlotEscala?: SlotEscalaUncheckedCreateNestedManyWithoutEletricistaInput
  }

  export type EletricistaCreateOrConnectWithoutTurnoEletricistasInput = {
    where: EletricistaWhereUniqueInput
    create: XOR<EletricistaCreateWithoutTurnoEletricistasInput, EletricistaUncheckedCreateWithoutTurnoEletricistasInput>
  }

  export type TurnoUpsertWithoutTurnoEletricistasInput = {
    update: XOR<TurnoUpdateWithoutTurnoEletricistasInput, TurnoUncheckedUpdateWithoutTurnoEletricistasInput>
    create: XOR<TurnoCreateWithoutTurnoEletricistasInput, TurnoUncheckedCreateWithoutTurnoEletricistasInput>
    where?: TurnoWhereInput
  }

  export type TurnoUpdateToOneWithWhereWithoutTurnoEletricistasInput = {
    where?: TurnoWhereInput
    data: XOR<TurnoUpdateWithoutTurnoEletricistasInput, TurnoUncheckedUpdateWithoutTurnoEletricistasInput>
  }

  export type TurnoUpdateWithoutTurnoEletricistasInput = {
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    veiculo?: VeiculoUpdateOneRequiredWithoutTurnoNestedInput
    equipe?: EquipeUpdateOneRequiredWithoutTurnoNestedInput
  }

  export type TurnoUncheckedUpdateWithoutTurnoEletricistasInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veiculoId?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaUpsertWithoutTurnoEletricistasInput = {
    update: XOR<EletricistaUpdateWithoutTurnoEletricistasInput, EletricistaUncheckedUpdateWithoutTurnoEletricistasInput>
    create: XOR<EletricistaCreateWithoutTurnoEletricistasInput, EletricistaUncheckedCreateWithoutTurnoEletricistasInput>
    where?: EletricistaWhereInput
  }

  export type EletricistaUpdateToOneWithWhereWithoutTurnoEletricistasInput = {
    where?: EletricistaWhereInput
    data: XOR<EletricistaUpdateWithoutTurnoEletricistasInput, EletricistaUncheckedUpdateWithoutTurnoEletricistasInput>
  }

  export type EletricistaUpdateWithoutTurnoEletricistasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: CargoUpdateOneRequiredWithoutEletricistaNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUpdateManyWithoutEletricistaCobrindoNestedInput
    SlotEscala?: SlotEscalaUpdateManyWithoutEletricistaNestedInput
  }

  export type EletricistaUncheckedUpdateWithoutTurnoEletricistasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contratoId?: IntFieldUpdateOperationsInput | number
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUncheckedUpdateManyWithoutEletricistaCobrindoNestedInput
    SlotEscala?: SlotEscalaUncheckedUpdateManyWithoutEletricistaNestedInput
  }

  export type VeiculoCreateWithoutVeiculoBaseHistoricoInput = {
    placa: string
    modelo: string
    ano: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoVeiculo: TipoVeiculoCreateNestedOneWithoutVeiculoInput
    contrato: ContratoCreateNestedOneWithoutVeiculoInput
    VeiculoOdometro?: VeiculoOdometroCreateNestedManyWithoutVeiculoInput
    Turno?: TurnoCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoUncheckedCreateWithoutVeiculoBaseHistoricoInput = {
    id?: number
    placa: string
    modelo: string
    ano: number
    tipoVeiculoId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    VeiculoOdometro?: VeiculoOdometroUncheckedCreateNestedManyWithoutVeiculoInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoCreateOrConnectWithoutVeiculoBaseHistoricoInput = {
    where: VeiculoWhereUniqueInput
    create: XOR<VeiculoCreateWithoutVeiculoBaseHistoricoInput, VeiculoUncheckedCreateWithoutVeiculoBaseHistoricoInput>
  }

  export type BaseCreateWithoutVeiculoBaseHistoricoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutBaseInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoCreateNestedManyWithoutBaseInput
    EquipeBaseHistorico?: EquipeBaseHistoricoCreateNestedManyWithoutBaseInput
  }

  export type BaseUncheckedCreateWithoutVeiculoBaseHistoricoInput = {
    id?: number
    nome: string
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedCreateNestedManyWithoutBaseInput
  }

  export type BaseCreateOrConnectWithoutVeiculoBaseHistoricoInput = {
    where: BaseWhereUniqueInput
    create: XOR<BaseCreateWithoutVeiculoBaseHistoricoInput, BaseUncheckedCreateWithoutVeiculoBaseHistoricoInput>
  }

  export type VeiculoUpsertWithoutVeiculoBaseHistoricoInput = {
    update: XOR<VeiculoUpdateWithoutVeiculoBaseHistoricoInput, VeiculoUncheckedUpdateWithoutVeiculoBaseHistoricoInput>
    create: XOR<VeiculoCreateWithoutVeiculoBaseHistoricoInput, VeiculoUncheckedCreateWithoutVeiculoBaseHistoricoInput>
    where?: VeiculoWhereInput
  }

  export type VeiculoUpdateToOneWithWhereWithoutVeiculoBaseHistoricoInput = {
    where?: VeiculoWhereInput
    data: XOR<VeiculoUpdateWithoutVeiculoBaseHistoricoInput, VeiculoUncheckedUpdateWithoutVeiculoBaseHistoricoInput>
  }

  export type VeiculoUpdateWithoutVeiculoBaseHistoricoInput = {
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoVeiculo?: TipoVeiculoUpdateOneRequiredWithoutVeiculoNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutVeiculoNestedInput
    VeiculoOdometro?: VeiculoOdometroUpdateManyWithoutVeiculoNestedInput
    Turno?: TurnoUpdateManyWithoutVeiculoNestedInput
  }

  export type VeiculoUncheckedUpdateWithoutVeiculoBaseHistoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    VeiculoOdometro?: VeiculoOdometroUncheckedUpdateManyWithoutVeiculoNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutVeiculoNestedInput
  }

  export type BaseUpsertWithoutVeiculoBaseHistoricoInput = {
    update: XOR<BaseUpdateWithoutVeiculoBaseHistoricoInput, BaseUncheckedUpdateWithoutVeiculoBaseHistoricoInput>
    create: XOR<BaseCreateWithoutVeiculoBaseHistoricoInput, BaseUncheckedCreateWithoutVeiculoBaseHistoricoInput>
    where?: BaseWhereInput
  }

  export type BaseUpdateToOneWithWhereWithoutVeiculoBaseHistoricoInput = {
    where?: BaseWhereInput
    data: XOR<BaseUpdateWithoutVeiculoBaseHistoricoInput, BaseUncheckedUpdateWithoutVeiculoBaseHistoricoInput>
  }

  export type BaseUpdateWithoutVeiculoBaseHistoricoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutBaseNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUpdateManyWithoutBaseNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutBaseNestedInput
  }

  export type BaseUncheckedUpdateWithoutVeiculoBaseHistoricoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
  }

  export type VeiculoCreateWithoutTipoVeiculoInput = {
    placa: string
    modelo: string
    ano: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contrato: ContratoCreateNestedOneWithoutVeiculoInput
    VeiculoOdometro?: VeiculoOdometroCreateNestedManyWithoutVeiculoInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoCreateNestedManyWithoutVeiculoInput
    Turno?: TurnoCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoUncheckedCreateWithoutTipoVeiculoInput = {
    id?: number
    placa: string
    modelo: string
    ano: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    VeiculoOdometro?: VeiculoOdometroUncheckedCreateNestedManyWithoutVeiculoInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutVeiculoInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoCreateOrConnectWithoutTipoVeiculoInput = {
    where: VeiculoWhereUniqueInput
    create: XOR<VeiculoCreateWithoutTipoVeiculoInput, VeiculoUncheckedCreateWithoutTipoVeiculoInput>
  }

  export type VeiculoCreateManyTipoVeiculoInputEnvelope = {
    data: VeiculoCreateManyTipoVeiculoInput | VeiculoCreateManyTipoVeiculoInput[]
    skipDuplicates?: boolean
  }

  export type ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput = {
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    checklist: ChecklistCreateNestedOneWithoutChecklistTipoVeiculoRelacaoInput
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput = {
    id?: number
    checklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoVeiculoRelacaoCreateOrConnectWithoutTipoVeiculoInput = {
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    create: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput>
  }

  export type ChecklistTipoVeiculoRelacaoCreateManyTipoVeiculoInputEnvelope = {
    data: ChecklistTipoVeiculoRelacaoCreateManyTipoVeiculoInput | ChecklistTipoVeiculoRelacaoCreateManyTipoVeiculoInput[]
    skipDuplicates?: boolean
  }

  export type VeiculoUpsertWithWhereUniqueWithoutTipoVeiculoInput = {
    where: VeiculoWhereUniqueInput
    update: XOR<VeiculoUpdateWithoutTipoVeiculoInput, VeiculoUncheckedUpdateWithoutTipoVeiculoInput>
    create: XOR<VeiculoCreateWithoutTipoVeiculoInput, VeiculoUncheckedCreateWithoutTipoVeiculoInput>
  }

  export type VeiculoUpdateWithWhereUniqueWithoutTipoVeiculoInput = {
    where: VeiculoWhereUniqueInput
    data: XOR<VeiculoUpdateWithoutTipoVeiculoInput, VeiculoUncheckedUpdateWithoutTipoVeiculoInput>
  }

  export type VeiculoUpdateManyWithWhereWithoutTipoVeiculoInput = {
    where: VeiculoScalarWhereInput
    data: XOR<VeiculoUpdateManyMutationInput, VeiculoUncheckedUpdateManyWithoutTipoVeiculoInput>
  }

  export type ChecklistTipoVeiculoRelacaoUpsertWithWhereUniqueWithoutTipoVeiculoInput = {
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    update: XOR<ChecklistTipoVeiculoRelacaoUpdateWithoutTipoVeiculoInput, ChecklistTipoVeiculoRelacaoUncheckedUpdateWithoutTipoVeiculoInput>
    create: XOR<ChecklistTipoVeiculoRelacaoCreateWithoutTipoVeiculoInput, ChecklistTipoVeiculoRelacaoUncheckedCreateWithoutTipoVeiculoInput>
  }

  export type ChecklistTipoVeiculoRelacaoUpdateWithWhereUniqueWithoutTipoVeiculoInput = {
    where: ChecklistTipoVeiculoRelacaoWhereUniqueInput
    data: XOR<ChecklistTipoVeiculoRelacaoUpdateWithoutTipoVeiculoInput, ChecklistTipoVeiculoRelacaoUncheckedUpdateWithoutTipoVeiculoInput>
  }

  export type ChecklistTipoVeiculoRelacaoUpdateManyWithWhereWithoutTipoVeiculoInput = {
    where: ChecklistTipoVeiculoRelacaoScalarWhereInput
    data: XOR<ChecklistTipoVeiculoRelacaoUpdateManyMutationInput, ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutTipoVeiculoInput>
  }

  export type TipoVeiculoCreateWithoutVeiculoInput = {
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoCreateNestedManyWithoutTipoVeiculoInput
  }

  export type TipoVeiculoUncheckedCreateWithoutVeiculoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedCreateNestedManyWithoutTipoVeiculoInput
  }

  export type TipoVeiculoCreateOrConnectWithoutVeiculoInput = {
    where: TipoVeiculoWhereUniqueInput
    create: XOR<TipoVeiculoCreateWithoutVeiculoInput, TipoVeiculoUncheckedCreateWithoutVeiculoInput>
  }

  export type ContratoCreateWithoutVeiculoInput = {
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Eletricista?: EletricistaCreateNestedManyWithoutContratoInput
    Equipe?: EquipeCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoCreateNestedManyWithoutContratoInput
    Base?: BaseCreateNestedManyWithoutContratoInput
  }

  export type ContratoUncheckedCreateWithoutVeiculoInput = {
    id?: number
    nome: string
    numero: string
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    Eletricista?: EletricistaUncheckedCreateNestedManyWithoutContratoInput
    Equipe?: EquipeUncheckedCreateNestedManyWithoutContratoInput
    Supervisor?: SupervisorUncheckedCreateNestedManyWithoutContratoInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedCreateNestedManyWithoutContratoInput
    Base?: BaseUncheckedCreateNestedManyWithoutContratoInput
  }

  export type ContratoCreateOrConnectWithoutVeiculoInput = {
    where: ContratoWhereUniqueInput
    create: XOR<ContratoCreateWithoutVeiculoInput, ContratoUncheckedCreateWithoutVeiculoInput>
  }

  export type VeiculoOdometroCreateWithoutVeiculoInput = {
    valor: number
    data: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoOdometroUncheckedCreateWithoutVeiculoInput = {
    id?: number
    valor: number
    data: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoOdometroCreateOrConnectWithoutVeiculoInput = {
    where: VeiculoOdometroWhereUniqueInput
    create: XOR<VeiculoOdometroCreateWithoutVeiculoInput, VeiculoOdometroUncheckedCreateWithoutVeiculoInput>
  }

  export type VeiculoOdometroCreateManyVeiculoInputEnvelope = {
    data: VeiculoOdometroCreateManyVeiculoInput | VeiculoOdometroCreateManyVeiculoInput[]
    skipDuplicates?: boolean
  }

  export type VeiculoBaseHistoricoCreateWithoutVeiculoInput = {
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    base: BaseCreateNestedOneWithoutVeiculoBaseHistoricoInput
  }

  export type VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput = {
    id?: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoBaseHistoricoCreateOrConnectWithoutVeiculoInput = {
    where: VeiculoBaseHistoricoWhereUniqueInput
    create: XOR<VeiculoBaseHistoricoCreateWithoutVeiculoInput, VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput>
  }

  export type VeiculoBaseHistoricoCreateManyVeiculoInputEnvelope = {
    data: VeiculoBaseHistoricoCreateManyVeiculoInput | VeiculoBaseHistoricoCreateManyVeiculoInput[]
    skipDuplicates?: boolean
  }

  export type TurnoCreateWithoutVeiculoInput = {
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    equipe: EquipeCreateNestedOneWithoutTurnoInput
    TurnoEletricistas?: TurnoEletricistaCreateNestedManyWithoutTurnoInput
  }

  export type TurnoUncheckedCreateWithoutVeiculoInput = {
    id?: number
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    equipeId: number
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    TurnoEletricistas?: TurnoEletricistaUncheckedCreateNestedManyWithoutTurnoInput
  }

  export type TurnoCreateOrConnectWithoutVeiculoInput = {
    where: TurnoWhereUniqueInput
    create: XOR<TurnoCreateWithoutVeiculoInput, TurnoUncheckedCreateWithoutVeiculoInput>
  }

  export type TurnoCreateManyVeiculoInputEnvelope = {
    data: TurnoCreateManyVeiculoInput | TurnoCreateManyVeiculoInput[]
    skipDuplicates?: boolean
  }

  export type TipoVeiculoUpsertWithoutVeiculoInput = {
    update: XOR<TipoVeiculoUpdateWithoutVeiculoInput, TipoVeiculoUncheckedUpdateWithoutVeiculoInput>
    create: XOR<TipoVeiculoCreateWithoutVeiculoInput, TipoVeiculoUncheckedCreateWithoutVeiculoInput>
    where?: TipoVeiculoWhereInput
  }

  export type TipoVeiculoUpdateToOneWithWhereWithoutVeiculoInput = {
    where?: TipoVeiculoWhereInput
    data: XOR<TipoVeiculoUpdateWithoutVeiculoInput, TipoVeiculoUncheckedUpdateWithoutVeiculoInput>
  }

  export type TipoVeiculoUpdateWithoutVeiculoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUpdateManyWithoutTipoVeiculoNestedInput
  }

  export type TipoVeiculoUncheckedUpdateWithoutVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutTipoVeiculoNestedInput
  }

  export type ContratoUpsertWithoutVeiculoInput = {
    update: XOR<ContratoUpdateWithoutVeiculoInput, ContratoUncheckedUpdateWithoutVeiculoInput>
    create: XOR<ContratoCreateWithoutVeiculoInput, ContratoUncheckedCreateWithoutVeiculoInput>
    where?: ContratoWhereInput
  }

  export type ContratoUpdateToOneWithWhereWithoutVeiculoInput = {
    where?: ContratoWhereInput
    data: XOR<ContratoUpdateWithoutVeiculoInput, ContratoUncheckedUpdateWithoutVeiculoInput>
  }

  export type ContratoUpdateWithoutVeiculoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Eletricista?: EletricistaUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUpdateManyWithoutContratoNestedInput
    Base?: BaseUpdateManyWithoutContratoNestedInput
  }

  export type ContratoUncheckedUpdateWithoutVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Eletricista?: EletricistaUncheckedUpdateManyWithoutContratoNestedInput
    Equipe?: EquipeUncheckedUpdateManyWithoutContratoNestedInput
    Supervisor?: SupervisorUncheckedUpdateManyWithoutContratoNestedInput
    MobileContratoPermissao?: MobileContratoPermissaoUncheckedUpdateManyWithoutContratoNestedInput
    Base?: BaseUncheckedUpdateManyWithoutContratoNestedInput
  }

  export type VeiculoOdometroUpsertWithWhereUniqueWithoutVeiculoInput = {
    where: VeiculoOdometroWhereUniqueInput
    update: XOR<VeiculoOdometroUpdateWithoutVeiculoInput, VeiculoOdometroUncheckedUpdateWithoutVeiculoInput>
    create: XOR<VeiculoOdometroCreateWithoutVeiculoInput, VeiculoOdometroUncheckedCreateWithoutVeiculoInput>
  }

  export type VeiculoOdometroUpdateWithWhereUniqueWithoutVeiculoInput = {
    where: VeiculoOdometroWhereUniqueInput
    data: XOR<VeiculoOdometroUpdateWithoutVeiculoInput, VeiculoOdometroUncheckedUpdateWithoutVeiculoInput>
  }

  export type VeiculoOdometroUpdateManyWithWhereWithoutVeiculoInput = {
    where: VeiculoOdometroScalarWhereInput
    data: XOR<VeiculoOdometroUpdateManyMutationInput, VeiculoOdometroUncheckedUpdateManyWithoutVeiculoInput>
  }

  export type VeiculoOdometroScalarWhereInput = {
    AND?: VeiculoOdometroScalarWhereInput | VeiculoOdometroScalarWhereInput[]
    OR?: VeiculoOdometroScalarWhereInput[]
    NOT?: VeiculoOdometroScalarWhereInput | VeiculoOdometroScalarWhereInput[]
    id?: IntFilter<"VeiculoOdometro"> | number
    valor?: IntFilter<"VeiculoOdometro"> | number
    data?: DateTimeFilter<"VeiculoOdometro"> | Date | string
    veiculoId?: IntFilter<"VeiculoOdometro"> | number
    createdAt?: DateTimeFilter<"VeiculoOdometro"> | Date | string
    createdBy?: StringFilter<"VeiculoOdometro"> | string
    updatedAt?: DateTimeNullableFilter<"VeiculoOdometro"> | Date | string | null
    updatedBy?: StringNullableFilter<"VeiculoOdometro"> | string | null
    deletedAt?: DateTimeNullableFilter<"VeiculoOdometro"> | Date | string | null
    deletedBy?: StringNullableFilter<"VeiculoOdometro"> | string | null
  }

  export type VeiculoBaseHistoricoUpsertWithWhereUniqueWithoutVeiculoInput = {
    where: VeiculoBaseHistoricoWhereUniqueInput
    update: XOR<VeiculoBaseHistoricoUpdateWithoutVeiculoInput, VeiculoBaseHistoricoUncheckedUpdateWithoutVeiculoInput>
    create: XOR<VeiculoBaseHistoricoCreateWithoutVeiculoInput, VeiculoBaseHistoricoUncheckedCreateWithoutVeiculoInput>
  }

  export type VeiculoBaseHistoricoUpdateWithWhereUniqueWithoutVeiculoInput = {
    where: VeiculoBaseHistoricoWhereUniqueInput
    data: XOR<VeiculoBaseHistoricoUpdateWithoutVeiculoInput, VeiculoBaseHistoricoUncheckedUpdateWithoutVeiculoInput>
  }

  export type VeiculoBaseHistoricoUpdateManyWithWhereWithoutVeiculoInput = {
    where: VeiculoBaseHistoricoScalarWhereInput
    data: XOR<VeiculoBaseHistoricoUpdateManyMutationInput, VeiculoBaseHistoricoUncheckedUpdateManyWithoutVeiculoInput>
  }

  export type TurnoUpsertWithWhereUniqueWithoutVeiculoInput = {
    where: TurnoWhereUniqueInput
    update: XOR<TurnoUpdateWithoutVeiculoInput, TurnoUncheckedUpdateWithoutVeiculoInput>
    create: XOR<TurnoCreateWithoutVeiculoInput, TurnoUncheckedCreateWithoutVeiculoInput>
  }

  export type TurnoUpdateWithWhereUniqueWithoutVeiculoInput = {
    where: TurnoWhereUniqueInput
    data: XOR<TurnoUpdateWithoutVeiculoInput, TurnoUncheckedUpdateWithoutVeiculoInput>
  }

  export type TurnoUpdateManyWithWhereWithoutVeiculoInput = {
    where: TurnoScalarWhereInput
    data: XOR<TurnoUpdateManyMutationInput, TurnoUncheckedUpdateManyWithoutVeiculoInput>
  }

  export type VeiculoCreateWithoutVeiculoOdometroInput = {
    placa: string
    modelo: string
    ano: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    tipoVeiculo: TipoVeiculoCreateNestedOneWithoutVeiculoInput
    contrato: ContratoCreateNestedOneWithoutVeiculoInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoCreateNestedManyWithoutVeiculoInput
    Turno?: TurnoCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoUncheckedCreateWithoutVeiculoOdometroInput = {
    id?: number
    placa: string
    modelo: string
    ano: number
    tipoVeiculoId: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedCreateNestedManyWithoutVeiculoInput
    Turno?: TurnoUncheckedCreateNestedManyWithoutVeiculoInput
  }

  export type VeiculoCreateOrConnectWithoutVeiculoOdometroInput = {
    where: VeiculoWhereUniqueInput
    create: XOR<VeiculoCreateWithoutVeiculoOdometroInput, VeiculoUncheckedCreateWithoutVeiculoOdometroInput>
  }

  export type VeiculoUpsertWithoutVeiculoOdometroInput = {
    update: XOR<VeiculoUpdateWithoutVeiculoOdometroInput, VeiculoUncheckedUpdateWithoutVeiculoOdometroInput>
    create: XOR<VeiculoCreateWithoutVeiculoOdometroInput, VeiculoUncheckedCreateWithoutVeiculoOdometroInput>
    where?: VeiculoWhereInput
  }

  export type VeiculoUpdateToOneWithWhereWithoutVeiculoOdometroInput = {
    where?: VeiculoWhereInput
    data: XOR<VeiculoUpdateWithoutVeiculoOdometroInput, VeiculoUncheckedUpdateWithoutVeiculoOdometroInput>
  }

  export type VeiculoUpdateWithoutVeiculoOdometroInput = {
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoVeiculo?: TipoVeiculoUpdateOneRequiredWithoutVeiculoNestedInput
    contrato?: ContratoUpdateOneRequiredWithoutVeiculoNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUpdateManyWithoutVeiculoNestedInput
    Turno?: TurnoUpdateManyWithoutVeiculoNestedInput
  }

  export type VeiculoUncheckedUpdateWithoutVeiculoOdometroInput = {
    id?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedUpdateManyWithoutVeiculoNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutVeiculoNestedInput
  }

  export type AprPerguntaRelacaoCreateManyAprInput = {
    id?: number
    aprPerguntaId: number
    ordem?: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprOpcaoRespostaRelacaoCreateManyAprInput = {
    id?: number
    aprOpcaoRespostaId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprTipoAtividadeRelacaoCreateManyAprInput = {
    id?: number
    tipoAtividadeId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprPerguntaRelacaoUpdateWithoutAprInput = {
    ordem?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    aprPergunta?: AprPerguntaUpdateOneRequiredWithoutAprPerguntaRelacaoNestedInput
  }

  export type AprPerguntaRelacaoUncheckedUpdateWithoutAprInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprPerguntaId?: IntFieldUpdateOperationsInput | number
    ordem?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprPerguntaRelacaoUncheckedUpdateManyWithoutAprInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprPerguntaId?: IntFieldUpdateOperationsInput | number
    ordem?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprOpcaoRespostaRelacaoUpdateWithoutAprInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    aprOpcaoResposta?: AprOpcaoRespostaUpdateOneRequiredWithoutAprOpcaoRespostaRelacaoNestedInput
  }

  export type AprOpcaoRespostaRelacaoUncheckedUpdateWithoutAprInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprOpcaoRespostaId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprOpcaoRespostaRelacaoUncheckedUpdateManyWithoutAprInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprOpcaoRespostaId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprTipoAtividadeRelacaoUpdateWithoutAprInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoAtividade?: TipoAtividadeUpdateOneRequiredWithoutAprTipoAtividadeRelacaoNestedInput
  }

  export type AprTipoAtividadeRelacaoUncheckedUpdateWithoutAprInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoAtividadeId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprTipoAtividadeRelacaoUncheckedUpdateManyWithoutAprInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoAtividadeId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprPerguntaRelacaoCreateManyAprPerguntaInput = {
    id?: number
    ordem?: number
    aprId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprPerguntaRelacaoUpdateWithoutAprPerguntaInput = {
    ordem?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    apr?: AprUpdateOneRequiredWithoutAprPerguntaRelacaoNestedInput
  }

  export type AprPerguntaRelacaoUncheckedUpdateWithoutAprPerguntaInput = {
    id?: IntFieldUpdateOperationsInput | number
    ordem?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprPerguntaRelacaoUncheckedUpdateManyWithoutAprPerguntaInput = {
    id?: IntFieldUpdateOperationsInput | number
    ordem?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprOpcaoRespostaRelacaoCreateManyAprOpcaoRespostaInput = {
    id?: number
    aprId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprOpcaoRespostaRelacaoUpdateWithoutAprOpcaoRespostaInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    apr?: AprUpdateOneRequiredWithoutAprOpcaoRespostaRelacaoNestedInput
  }

  export type AprOpcaoRespostaRelacaoUncheckedUpdateWithoutAprOpcaoRespostaInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprOpcaoRespostaRelacaoUncheckedUpdateManyWithoutAprOpcaoRespostaInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprTipoAtividadeRelacaoCreateManyTipoAtividadeInput = {
    id?: number
    aprId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AprTipoAtividadeRelacaoUpdateWithoutTipoAtividadeInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    apr?: AprUpdateOneRequiredWithoutAprTipoAtividadeRelacaoNestedInput
  }

  export type AprTipoAtividadeRelacaoUncheckedUpdateWithoutTipoAtividadeInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AprTipoAtividadeRelacaoUncheckedUpdateManyWithoutTipoAtividadeInput = {
    id?: IntFieldUpdateOperationsInput | number
    aprId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MobileSessionCreateManyMobileUserInput = {
    id?: string
    deviceInfo?: string | null
    lastActive?: Date | string
    createdAt?: Date | string
    expiresAt: Date | string
    ativa?: boolean
  }

  export type MobileTokenCreateManyMobileUserInput = {
    id?: number
    token: string
    refreshToken?: string | null
    refreshTokenExpiresAt?: Date | string | null
    usuarioMobileId: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    revoked?: boolean
  }

  export type MobileContratoPermissaoCreateManyMobileUserInput = {
    id?: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type MobileSessionUpdateWithoutMobileUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableStringFieldUpdateOperationsInput | string | null
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ativa?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MobileSessionUncheckedUpdateWithoutMobileUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableStringFieldUpdateOperationsInput | string | null
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ativa?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MobileSessionUncheckedUpdateManyWithoutMobileUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableStringFieldUpdateOperationsInput | string | null
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ativa?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MobileTokenUpdateWithoutMobileUserInput = {
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioMobileId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MobileTokenUncheckedUpdateWithoutMobileUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioMobileId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MobileTokenUncheckedUpdateManyWithoutMobileUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioMobileId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MobileContratoPermissaoUpdateWithoutMobileUserInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutMobileContratoPermissaoNestedInput
  }

  export type MobileContratoPermissaoUncheckedUpdateWithoutMobileUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MobileContratoPermissaoUncheckedUpdateManyWithoutMobileUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionCreateManyUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type AccountCreateManyUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type RoleUserCreateManyUserInput = {
    id?: number
    roleId: number
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RoleUserUpdateWithoutUserInput = {
    role?: RoleUpdateOneRequiredWithoutRoleUserNestedInput
  }

  export type RoleUserUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type RoleUserUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type RoleUserCreateManyRoleInput = {
    id?: number
    userId: number
  }

  export type RoleUserUpdateWithoutRoleInput = {
    user?: UserUpdateOneRequiredWithoutRoleUserNestedInput
  }

  export type RoleUserUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type RoleUserUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type EletricistaBaseHistoricoCreateManyBaseInput = {
    id?: number
    eletricistaId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoBaseHistoricoCreateManyBaseInput = {
    id?: number
    veiculoId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeBaseHistoricoCreateManyBaseInput = {
    id?: number
    equipeId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EletricistaBaseHistoricoUpdateWithoutBaseInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    eletricista?: EletricistaUpdateOneRequiredWithoutEletricistaBaseHistoricoNestedInput
  }

  export type EletricistaBaseHistoricoUncheckedUpdateWithoutBaseInput = {
    id?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaBaseHistoricoUncheckedUpdateManyWithoutBaseInput = {
    id?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoBaseHistoricoUpdateWithoutBaseInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    veiculo?: VeiculoUpdateOneRequiredWithoutVeiculoBaseHistoricoNestedInput
  }

  export type VeiculoBaseHistoricoUncheckedUpdateWithoutBaseInput = {
    id?: IntFieldUpdateOperationsInput | number
    veiculoId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoBaseHistoricoUncheckedUpdateManyWithoutBaseInput = {
    id?: IntFieldUpdateOperationsInput | number
    veiculoId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeBaseHistoricoUpdateWithoutBaseInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutEquipeBaseHistoricoNestedInput
  }

  export type EquipeBaseHistoricoUncheckedUpdateWithoutBaseInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeBaseHistoricoUncheckedUpdateManyWithoutBaseInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistCreateManyTipoChecklistInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoEquipeRelacaoCreateManyTipoChecklistInput = {
    id?: number
    checklistId: number
    tipoEquipeId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistUpdateWithoutTipoChecklistInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUpdateManyWithoutChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUpdateManyWithoutChecklistNestedInput
  }

  export type ChecklistUncheckedUpdateWithoutTipoChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ChecklistPerguntaRelacao?: ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistOpcaoRespostaRelacao?: ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistTipoVeiculoRelacao?: ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
    ChecklistTipoEquipeRelacao?: ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutChecklistNestedInput
  }

  export type ChecklistUncheckedUpdateManyWithoutTipoChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoEquipeRelacaoUpdateWithoutTipoChecklistInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklist?: ChecklistUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateWithoutTipoChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutTipoChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistPerguntaRelacaoCreateManyChecklistInput = {
    id?: number
    checklistPerguntaId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistOpcaoRespostaRelacaoCreateManyChecklistInput = {
    id?: number
    checklistOpcaoRespostaId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoVeiculoRelacaoCreateManyChecklistInput = {
    id?: number
    tipoVeiculoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoEquipeRelacaoCreateManyChecklistInput = {
    id?: number
    tipoEquipeId: number
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistPerguntaRelacaoUpdateWithoutChecklistInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklistPergunta?: ChecklistPerguntaUpdateOneRequiredWithoutChecklistPerguntaRelacaoNestedInput
  }

  export type ChecklistPerguntaRelacaoUncheckedUpdateWithoutChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistPerguntaId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistPerguntaId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistOpcaoRespostaRelacaoUpdateWithoutChecklistInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklistOpcaoResposta?: ChecklistOpcaoRespostaUpdateOneRequiredWithoutChecklistOpcaoRespostaRelacaoNestedInput
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedUpdateWithoutChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistOpcaoRespostaId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistOpcaoRespostaId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoVeiculoRelacaoUpdateWithoutChecklistInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoVeiculo?: TipoVeiculoUpdateOneRequiredWithoutChecklistTipoVeiculoRelacaoNestedInput
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedUpdateWithoutChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoEquipeRelacaoUpdateWithoutChecklistInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput
    tipoChecklist?: TipoChecklistUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateWithoutChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutChecklistInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistPerguntaRelacaoCreateManyChecklistPerguntaInput = {
    id?: number
    checklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistPerguntaRelacaoUpdateWithoutChecklistPerguntaInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklist?: ChecklistUpdateOneRequiredWithoutChecklistPerguntaRelacaoNestedInput
  }

  export type ChecklistPerguntaRelacaoUncheckedUpdateWithoutChecklistPerguntaInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistPerguntaRelacaoUncheckedUpdateManyWithoutChecklistPerguntaInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistOpcaoRespostaRelacaoCreateManyChecklistOpcaoRespostaInput = {
    id?: number
    checklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistOpcaoRespostaRelacaoUpdateWithoutChecklistOpcaoRespostaInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklist?: ChecklistUpdateOneRequiredWithoutChecklistOpcaoRespostaRelacaoNestedInput
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedUpdateWithoutChecklistOpcaoRespostaInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistOpcaoRespostaRelacaoUncheckedUpdateManyWithoutChecklistOpcaoRespostaInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoCreateManyContratoInput = {
    id?: number
    placa: string
    modelo: string
    ano: number
    tipoVeiculoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EletricistaCreateManyContratoInput = {
    id?: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    cargoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeCreateManyContratoInput = {
    id?: number
    nome: string
    tipoEquipeId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type SupervisorCreateManyContratoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type MobileContratoPermissaoCreateManyContratoInput = {
    id?: number
    mobileUserId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type BaseCreateManyContratoInput = {
    id?: number
    nome: string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoUpdateWithoutContratoInput = {
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoVeiculo?: TipoVeiculoUpdateOneRequiredWithoutVeiculoNestedInput
    VeiculoOdometro?: VeiculoOdometroUpdateManyWithoutVeiculoNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUpdateManyWithoutVeiculoNestedInput
    Turno?: TurnoUpdateManyWithoutVeiculoNestedInput
  }

  export type VeiculoUncheckedUpdateWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    VeiculoOdometro?: VeiculoOdometroUncheckedUpdateManyWithoutVeiculoNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedUpdateManyWithoutVeiculoNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutVeiculoNestedInput
  }

  export type VeiculoUncheckedUpdateManyWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    tipoVeiculoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaUpdateWithoutContratoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cargo?: CargoUpdateOneRequiredWithoutEletricistaNestedInput
    TurnoEletricistas?: TurnoEletricistaUpdateManyWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUpdateManyWithoutEletricistaCobrindoNestedInput
    SlotEscala?: SlotEscalaUpdateManyWithoutEletricistaNestedInput
  }

  export type EletricistaUncheckedUpdateWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    TurnoEletricistas?: TurnoEletricistaUncheckedUpdateManyWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUncheckedUpdateManyWithoutEletricistaCobrindoNestedInput
    SlotEscala?: SlotEscalaUncheckedUpdateManyWithoutEletricistaNestedInput
  }

  export type EletricistaUncheckedUpdateManyWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeUpdateWithoutContratoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEquipe?: TipoEquipeUpdateOneRequiredWithoutEquipeNestedInput
    EquipeSupervisor?: EquipeSupervisorUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateManyWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipoEquipeId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupervisorUpdateWithoutContratoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUpdateManyWithoutSupervisorNestedInput
  }

  export type SupervisorUncheckedUpdateWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedUpdateManyWithoutSupervisorNestedInput
  }

  export type SupervisorUncheckedUpdateManyWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MobileContratoPermissaoUpdateWithoutContratoInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    mobileUser?: MobileUserUpdateOneRequiredWithoutMobileContratoPermissaoNestedInput
  }

  export type MobileContratoPermissaoUncheckedUpdateWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    mobileUserId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MobileContratoPermissaoUncheckedUpdateManyWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    mobileUserId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BaseUpdateWithoutContratoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUpdateManyWithoutBaseNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUpdateManyWithoutBaseNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutBaseNestedInput
  }

  export type BaseUncheckedUpdateWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutBaseNestedInput
  }

  export type BaseUncheckedUpdateManyWithoutContratoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TurnoEletricistaCreateManyEletricistaInput = {
    id?: number
    turnoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EletricistaBaseHistoricoCreateManyEletricistaInput = {
    id?: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EventoCoberturaCreateManyEletricistaCobrindoInput = {
    id?: number
    slotEscalaId: number
    tipo: $Enums.EventoCoberturaTipo
    resultado: $Enums.EventoCoberturaResultado
    justificativa?: string | null
    registradoEm?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type SlotEscalaCreateManyEletricistaInput = {
    id?: number
    escalaEquipePeriodoId: number
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TurnoEletricistaUpdateWithoutEletricistaInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    turno?: TurnoUpdateOneRequiredWithoutTurnoEletricistasNestedInput
  }

  export type TurnoEletricistaUncheckedUpdateWithoutEletricistaInput = {
    id?: IntFieldUpdateOperationsInput | number
    turnoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TurnoEletricistaUncheckedUpdateManyWithoutEletricistaInput = {
    id?: IntFieldUpdateOperationsInput | number
    turnoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaBaseHistoricoUpdateWithoutEletricistaInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    base?: BaseUpdateOneRequiredWithoutEletricistaBaseHistoricoNestedInput
  }

  export type EletricistaBaseHistoricoUncheckedUpdateWithoutEletricistaInput = {
    id?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaBaseHistoricoUncheckedUpdateManyWithoutEletricistaInput = {
    id?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventoCoberturaUpdateWithoutEletricistaCobrindoInput = {
    tipo?: EnumEventoCoberturaTipoFieldUpdateOperationsInput | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFieldUpdateOperationsInput | $Enums.EventoCoberturaResultado
    justificativa?: NullableStringFieldUpdateOperationsInput | string | null
    registradoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    slotEscala?: SlotEscalaUpdateOneRequiredWithoutCoberturasNestedInput
  }

  export type EventoCoberturaUncheckedUpdateWithoutEletricistaCobrindoInput = {
    id?: IntFieldUpdateOperationsInput | number
    slotEscalaId?: IntFieldUpdateOperationsInput | number
    tipo?: EnumEventoCoberturaTipoFieldUpdateOperationsInput | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFieldUpdateOperationsInput | $Enums.EventoCoberturaResultado
    justificativa?: NullableStringFieldUpdateOperationsInput | string | null
    registradoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventoCoberturaUncheckedUpdateManyWithoutEletricistaCobrindoInput = {
    id?: IntFieldUpdateOperationsInput | number
    slotEscalaId?: IntFieldUpdateOperationsInput | number
    tipo?: EnumEventoCoberturaTipoFieldUpdateOperationsInput | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFieldUpdateOperationsInput | $Enums.EventoCoberturaResultado
    justificativa?: NullableStringFieldUpdateOperationsInput | string | null
    registradoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SlotEscalaUpdateWithoutEletricistaInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    escalaEquipePeriodo?: EscalaEquipePeriodoUpdateOneRequiredWithoutSlotsNestedInput
    Coberturas?: EventoCoberturaUpdateManyWithoutSlotEscalaNestedInput
  }

  export type SlotEscalaUncheckedUpdateWithoutEletricistaInput = {
    id?: IntFieldUpdateOperationsInput | number
    escalaEquipePeriodoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Coberturas?: EventoCoberturaUncheckedUpdateManyWithoutSlotEscalaNestedInput
  }

  export type SlotEscalaUncheckedUpdateManyWithoutEletricistaInput = {
    id?: IntFieldUpdateOperationsInput | number
    escalaEquipePeriodoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EletricistaCreateManyCargoInput = {
    id?: number
    nome: string
    matricula: string
    telefone: string
    estado: string
    admissao?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    contratoId: number
  }

  export type EletricistaUpdateWithoutCargoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutEletricistaNestedInput
    TurnoEletricistas?: TurnoEletricistaUpdateManyWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUpdateManyWithoutEletricistaCobrindoNestedInput
    SlotEscala?: SlotEscalaUpdateManyWithoutEletricistaNestedInput
  }

  export type EletricistaUncheckedUpdateWithoutCargoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contratoId?: IntFieldUpdateOperationsInput | number
    TurnoEletricistas?: TurnoEletricistaUncheckedUpdateManyWithoutEletricistaNestedInput
    EletricistaBaseHistorico?: EletricistaBaseHistoricoUncheckedUpdateManyWithoutEletricistaNestedInput
    EventoCobertura?: EventoCoberturaUncheckedUpdateManyWithoutEletricistaCobrindoNestedInput
    SlotEscala?: SlotEscalaUncheckedUpdateManyWithoutEletricistaNestedInput
  }

  export type EletricistaUncheckedUpdateManyWithoutCargoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    admissao?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contratoId?: IntFieldUpdateOperationsInput | number
  }

  export type EquipeCreateManyTipoEquipeInput = {
    id?: number
    nome: string
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoEquipeRelacaoCreateManyTipoEquipeInput = {
    id?: number
    checklistId: number
    tipoChecklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeUpdateWithoutTipoEquipeInput = {
    nome?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutEquipeNestedInput
    EquipeSupervisor?: EquipeSupervisorUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateWithoutTipoEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipeSupervisor?: EquipeSupervisorUncheckedUpdateManyWithoutEquipeNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutEquipeNestedInput
    EscalaEquipePeriodo?: EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeHorarioVigencia?: EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeTurnoHistorico?: EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
    EquipeBaseHistorico?: EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeNestedInput
  }

  export type EquipeUncheckedUpdateManyWithoutTipoEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoEquipeRelacaoUpdateWithoutTipoEquipeInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklist?: ChecklistUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput
    tipoChecklist?: TipoChecklistUpdateOneRequiredWithoutChecklistTipoEquipeRelacaoNestedInput
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateWithoutTipoEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoEquipeRelacaoUncheckedUpdateManyWithoutTipoEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    tipoChecklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeSupervisorCreateManyEquipeInput = {
    id?: number
    supervisorId: number
    inicio: Date | string
    fim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TurnoCreateManyEquipeInput = {
    id?: number
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    veiculoId: number
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EscalaEquipePeriodoCreateManyEquipeInput = {
    id?: number
    periodoInicio: Date | string
    periodoFim: Date | string
    tipoEscalaId: number
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeHorarioVigenciaCreateManyEquipeInput = {
    id?: number
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    vigenciaInicio: Date | string
    vigenciaFim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeTurnoHistoricoCreateManyEquipeInput = {
    id?: number
    horarioAberturaCatalogoId?: number | null
    dataInicio: Date | string
    dataFim?: Date | string | null
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    fimTurnoHora?: string | null
    motivo?: string | null
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeBaseHistoricoCreateManyEquipeInput = {
    id?: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeSupervisorUpdateWithoutEquipeInput = {
    inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    supervisor?: SupervisorUpdateOneRequiredWithoutEquipeSupervisorNestedInput
  }

  export type EquipeSupervisorUncheckedUpdateWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    supervisorId?: IntFieldUpdateOperationsInput | number
    inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeSupervisorUncheckedUpdateManyWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    supervisorId?: IntFieldUpdateOperationsInput | number
    inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TurnoUpdateWithoutEquipeInput = {
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    veiculo?: VeiculoUpdateOneRequiredWithoutTurnoNestedInput
    TurnoEletricistas?: TurnoEletricistaUpdateManyWithoutTurnoNestedInput
  }

  export type TurnoUncheckedUpdateWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veiculoId?: IntFieldUpdateOperationsInput | number
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    TurnoEletricistas?: TurnoEletricistaUncheckedUpdateManyWithoutTurnoNestedInput
  }

  export type TurnoUncheckedUpdateManyWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veiculoId?: IntFieldUpdateOperationsInput | number
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EscalaEquipePeriodoUpdateWithoutEquipeInput = {
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    tipoEscala?: TipoEscalaUpdateOneRequiredWithoutEscalasEquipePeriodoNestedInput
    Slots?: SlotEscalaUpdateManyWithoutEscalaEquipePeriodoNestedInput
  }

  export type EscalaEquipePeriodoUncheckedUpdateWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoEscalaId?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Slots?: SlotEscalaUncheckedUpdateManyWithoutEscalaEquipePeriodoNestedInput
  }

  export type EscalaEquipePeriodoUncheckedUpdateManyWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoEscalaId?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeHorarioVigenciaUpdateWithoutEquipeInput = {
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    vigenciaFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeHorarioVigenciaUncheckedUpdateWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    vigenciaFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeHorarioVigenciaUncheckedUpdateManyWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    vigenciaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    vigenciaFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeTurnoHistoricoUpdateWithoutEquipeInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    horarioAberturaCatalogo?: HorarioAberturaCatalogoUpdateOneWithoutHistoricosNestedInput
  }

  export type EquipeTurnoHistoricoUncheckedUpdateWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    horarioAberturaCatalogoId?: NullableIntFieldUpdateOperationsInput | number | null
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeTurnoHistoricoUncheckedUpdateManyWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    horarioAberturaCatalogoId?: NullableIntFieldUpdateOperationsInput | number | null
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeBaseHistoricoUpdateWithoutEquipeInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    base?: BaseUpdateOneRequiredWithoutEquipeBaseHistoricoNestedInput
  }

  export type EquipeBaseHistoricoUncheckedUpdateWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeBaseHistoricoUncheckedUpdateManyWithoutEquipeInput = {
    id?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaCicloPosicaoCreateManyTipoEscalaInput = {
    id?: number
    posicao: number
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaSemanaMascaraCreateManyTipoEscalaInput = {
    id?: number
    semanaIndex: number
    dia: $Enums.DiaSemana
    status: $Enums.StatusTrabalho
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EscalaEquipePeriodoCreateManyTipoEscalaInput = {
    id?: number
    equipeId: number
    periodoInicio: Date | string
    periodoFim: Date | string
    status?: $Enums.StatusEscalaEquipePeriodo
    versao?: number
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TipoEscalaCicloPosicaoUpdateWithoutTipoEscalaInput = {
    posicao?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaCicloPosicaoUncheckedUpdateWithoutTipoEscalaInput = {
    id?: IntFieldUpdateOperationsInput | number
    posicao?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaCicloPosicaoUncheckedUpdateManyWithoutTipoEscalaInput = {
    id?: IntFieldUpdateOperationsInput | number
    posicao?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaSemanaMascaraUpdateWithoutTipoEscalaInput = {
    semanaIndex?: IntFieldUpdateOperationsInput | number
    dia?: EnumDiaSemanaFieldUpdateOperationsInput | $Enums.DiaSemana
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaSemanaMascaraUncheckedUpdateWithoutTipoEscalaInput = {
    id?: IntFieldUpdateOperationsInput | number
    semanaIndex?: IntFieldUpdateOperationsInput | number
    dia?: EnumDiaSemanaFieldUpdateOperationsInput | $Enums.DiaSemana
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipoEscalaSemanaMascaraUncheckedUpdateManyWithoutTipoEscalaInput = {
    id?: IntFieldUpdateOperationsInput | number
    semanaIndex?: IntFieldUpdateOperationsInput | number
    dia?: EnumDiaSemanaFieldUpdateOperationsInput | $Enums.DiaSemana
    status?: EnumStatusTrabalhoFieldUpdateOperationsInput | $Enums.StatusTrabalho
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EscalaEquipePeriodoUpdateWithoutTipoEscalaInput = {
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutEscalaEquipePeriodoNestedInput
    Slots?: SlotEscalaUpdateManyWithoutEscalaEquipePeriodoNestedInput
  }

  export type EscalaEquipePeriodoUncheckedUpdateWithoutTipoEscalaInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Slots?: SlotEscalaUncheckedUpdateManyWithoutEscalaEquipePeriodoNestedInput
  }

  export type EscalaEquipePeriodoUncheckedUpdateManyWithoutTipoEscalaInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    periodoInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoFim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusEscalaEquipePeriodoFieldUpdateOperationsInput | $Enums.StatusEscalaEquipePeriodo
    versao?: IntFieldUpdateOperationsInput | number
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SlotEscalaCreateManyEscalaEquipePeriodoInput = {
    id?: number
    eletricistaId: number
    data: Date | string
    estado: $Enums.EstadoSlot
    inicioPrevisto?: string | null
    fimPrevisto?: string | null
    anotacoesDia?: string | null
    origem?: $Enums.OrigemAtribuicao
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type SlotEscalaUpdateWithoutEscalaEquipePeriodoInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    eletricista?: EletricistaUpdateOneRequiredWithoutSlotEscalaNestedInput
    Coberturas?: EventoCoberturaUpdateManyWithoutSlotEscalaNestedInput
  }

  export type SlotEscalaUncheckedUpdateWithoutEscalaEquipePeriodoInput = {
    id?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    Coberturas?: EventoCoberturaUncheckedUpdateManyWithoutSlotEscalaNestedInput
  }

  export type SlotEscalaUncheckedUpdateManyWithoutEscalaEquipePeriodoInput = {
    id?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoSlotFieldUpdateOperationsInput | $Enums.EstadoSlot
    inicioPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    fimPrevisto?: NullableStringFieldUpdateOperationsInput | string | null
    anotacoesDia?: NullableStringFieldUpdateOperationsInput | string | null
    origem?: EnumOrigemAtribuicaoFieldUpdateOperationsInput | $Enums.OrigemAtribuicao
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventoCoberturaCreateManySlotEscalaInput = {
    id?: number
    eletricistaCobrindoId?: number | null
    tipo: $Enums.EventoCoberturaTipo
    resultado: $Enums.EventoCoberturaResultado
    justificativa?: string | null
    registradoEm?: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EventoCoberturaUpdateWithoutSlotEscalaInput = {
    tipo?: EnumEventoCoberturaTipoFieldUpdateOperationsInput | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFieldUpdateOperationsInput | $Enums.EventoCoberturaResultado
    justificativa?: NullableStringFieldUpdateOperationsInput | string | null
    registradoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    eletricistaCobrindo?: EletricistaUpdateOneWithoutEventoCoberturaNestedInput
  }

  export type EventoCoberturaUncheckedUpdateWithoutSlotEscalaInput = {
    id?: IntFieldUpdateOperationsInput | number
    eletricistaCobrindoId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumEventoCoberturaTipoFieldUpdateOperationsInput | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFieldUpdateOperationsInput | $Enums.EventoCoberturaResultado
    justificativa?: NullableStringFieldUpdateOperationsInput | string | null
    registradoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventoCoberturaUncheckedUpdateManyWithoutSlotEscalaInput = {
    id?: IntFieldUpdateOperationsInput | number
    eletricistaCobrindoId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumEventoCoberturaTipoFieldUpdateOperationsInput | $Enums.EventoCoberturaTipo
    resultado?: EnumEventoCoberturaResultadoFieldUpdateOperationsInput | $Enums.EventoCoberturaResultado
    justificativa?: NullableStringFieldUpdateOperationsInput | string | null
    registradoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeTurnoHistoricoCreateManyHorarioAberturaCatalogoInput = {
    id?: number
    equipeId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    inicioTurnoHora: string
    duracaoHoras: Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras: Decimal | DecimalJsLike | number | string
    fimTurnoHora?: string | null
    motivo?: string | null
    observacoes?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeTurnoHistoricoUpdateWithoutHorarioAberturaCatalogoInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutEquipeTurnoHistoricoNestedInput
  }

  export type EquipeTurnoHistoricoUncheckedUpdateWithoutHorarioAberturaCatalogoInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeTurnoHistoricoUncheckedUpdateManyWithoutHorarioAberturaCatalogoInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inicioTurnoHora?: StringFieldUpdateOperationsInput | string
    duracaoHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    duracaoIntervaloHoras?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fimTurnoHora?: NullableStringFieldUpdateOperationsInput | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeSupervisorCreateManySupervisorInput = {
    id?: number
    equipeId: number
    inicio: Date | string
    fim?: Date | string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type EquipeSupervisorUpdateWithoutSupervisorInput = {
    inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutEquipeSupervisorNestedInput
  }

  export type EquipeSupervisorUncheckedUpdateWithoutSupervisorInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipeSupervisorUncheckedUpdateManyWithoutSupervisorInput = {
    id?: IntFieldUpdateOperationsInput | number
    equipeId?: IntFieldUpdateOperationsInput | number
    inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TurnoEletricistaCreateManyTurnoInput = {
    id?: number
    eletricistaId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TurnoEletricistaUpdateWithoutTurnoInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    eletricista?: EletricistaUpdateOneRequiredWithoutTurnoEletricistasNestedInput
  }

  export type TurnoEletricistaUncheckedUpdateWithoutTurnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TurnoEletricistaUncheckedUpdateManyWithoutTurnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    eletricistaId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoCreateManyTipoVeiculoInput = {
    id?: number
    placa: string
    modelo: string
    ano: number
    contratoId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ChecklistTipoVeiculoRelacaoCreateManyTipoVeiculoInput = {
    id?: number
    checklistId: number
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoUpdateWithoutTipoVeiculoInput = {
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contrato?: ContratoUpdateOneRequiredWithoutVeiculoNestedInput
    VeiculoOdometro?: VeiculoOdometroUpdateManyWithoutVeiculoNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUpdateManyWithoutVeiculoNestedInput
    Turno?: TurnoUpdateManyWithoutVeiculoNestedInput
  }

  export type VeiculoUncheckedUpdateWithoutTipoVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    VeiculoOdometro?: VeiculoOdometroUncheckedUpdateManyWithoutVeiculoNestedInput
    VeiculoBaseHistorico?: VeiculoBaseHistoricoUncheckedUpdateManyWithoutVeiculoNestedInput
    Turno?: TurnoUncheckedUpdateManyWithoutVeiculoNestedInput
  }

  export type VeiculoUncheckedUpdateManyWithoutTipoVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    contratoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoVeiculoRelacaoUpdateWithoutTipoVeiculoInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    checklist?: ChecklistUpdateOneRequiredWithoutChecklistTipoVeiculoRelacaoNestedInput
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedUpdateWithoutTipoVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChecklistTipoVeiculoRelacaoUncheckedUpdateManyWithoutTipoVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    checklistId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoOdometroCreateManyVeiculoInput = {
    id?: number
    valor: number
    data: Date | string
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoBaseHistoricoCreateManyVeiculoInput = {
    id?: number
    baseId: number
    dataInicio: Date | string
    dataFim?: Date | string | null
    motivo?: string | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type TurnoCreateManyVeiculoInput = {
    id?: number
    dataSolicitacao: Date | string
    dataInicio: Date | string
    dataFim?: Date | string | null
    equipeId: number
    dispositivo: string
    kmInicio: number
    KmFim?: number | null
    createdAt?: Date | string
    createdBy: string
    updatedAt?: Date | string | null
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type VeiculoOdometroUpdateWithoutVeiculoInput = {
    valor?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoOdometroUncheckedUpdateWithoutVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    valor?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoOdometroUncheckedUpdateManyWithoutVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    valor?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoBaseHistoricoUpdateWithoutVeiculoInput = {
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    base?: BaseUpdateOneRequiredWithoutVeiculoBaseHistoricoNestedInput
  }

  export type VeiculoBaseHistoricoUncheckedUpdateWithoutVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VeiculoBaseHistoricoUncheckedUpdateManyWithoutVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    baseId?: IntFieldUpdateOperationsInput | number
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TurnoUpdateWithoutVeiculoInput = {
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipe?: EquipeUpdateOneRequiredWithoutTurnoNestedInput
    TurnoEletricistas?: TurnoEletricistaUpdateManyWithoutTurnoNestedInput
  }

  export type TurnoUncheckedUpdateWithoutVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    equipeId?: IntFieldUpdateOperationsInput | number
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    TurnoEletricistas?: TurnoEletricistaUncheckedUpdateManyWithoutTurnoNestedInput
  }

  export type TurnoUncheckedUpdateManyWithoutVeiculoInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataSolicitacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    equipeId?: IntFieldUpdateOperationsInput | number
    dispositivo?: StringFieldUpdateOperationsInput | string
    kmInicio?: IntFieldUpdateOperationsInput | number
    KmFim?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}